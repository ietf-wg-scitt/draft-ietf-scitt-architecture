{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-09T00:42:41.822421+00:00",
  "repo": "ietf-wg-scitt/draft-ietf-scitt-architecture",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "terminology",
      "description": "",
      "color": "1d76db"
    },
    {
      "name": "Registration Policy",
      "description": "",
      "color": "181CD4"
    },
    {
      "name": "receipts",
      "description": "",
      "color": "C2E0C6"
    },
    {
      "name": "multiple-instances",
      "description": "Issues related to replicas of an instance, or promoting across different instances",
      "color": "D4C5F9"
    },
    {
      "name": "RBAC-ABAC",
      "description": "Role (or Attribute) Based Access Control Issues",
      "color": "E99695"
    },
    {
      "name": "APIs",
      "description": "API related issues",
      "color": "6AE636"
    },
    {
      "name": "has-pr",
      "description": "",
      "color": "5816EC"
    },
    {
      "name": "pending-close",
      "description": "Pending closure with no recent activity",
      "color": "fbca04"
    },
    {
      "name": "ready-for-pr",
      "description": "",
      "color": "07D118"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOIvmHss5ev0gQ",
      "title": "Add CODEOWNERS file for visibility of maintainership",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/4",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-02-17T16:09:43Z",
      "updatedAt": "2023-10-23T23:25:50Z",
      "closedAt": "2023-10-23T23:25:50Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Clsoing as IETF drafts use the authors to track",
          "createdAt": "2023-10-23T23:25:50Z",
          "updatedAt": "2023-10-23T23:25:50Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOIvmHss5ev4Yz",
      "title": "Cull through previous draft issues",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/5",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Which issues from https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues should be carried forward?",
      "createdAt": "2023-02-17T16:19:00Z",
      "updatedAt": "2023-02-27T16:04:22Z",
      "closedAt": "2023-02-27T16:04:22Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed, as complete",
          "createdAt": "2023-02-27T16:04:22Z",
          "updatedAt": "2023-02-27T16:04:22Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOIvmHss5e8RUk",
      "title": "make errors relating to aasvg, binread, and kramdown-rfc",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/6",
      "state": "CLOSED",
      "author": "nealmcb",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "When I run `make` to build the document as instructed, I get lots of new tools installed (in a local `lib/.venv/` directory), culminating in this output:\r\n```\r\n[...]\r\nInstalling collected packages: webencodings, wcwidth, sortedcontainers, iddiff, charset-normalizer, appdirs, urllib3, toml, six, rfc-tidy, pyyaml, pycountry, markupsafe, lxml, intervaltree, idna, configargparse, certifi, requests, python-dateutil, pyang, jinja2, html5lib, google-i18n-address, archive-repo, xml2rfc, svgcheck\r\nSuccessfully installed appdirs-1.4.4 archive-repo-0.0.2 certifi-2022.12.7 charset-normalizer-3.0.1 configargparse-1.5.3 google-i18n-address-2.5.2 html5lib-1.1 iddiff-0.4.3 idna-3.4 intervaltree-3.1.0 jinja2-3.1.2 lxml-4.9.2 markupsafe-2.1.2 pyang-2.5.3 pycountry-22.3.5 python-dateutil-2.8.2 pyyaml-6.0 requests-2.28.2 rfc-tidy-0.1.1 six-1.16.0 sortedcontainers-2.4.0 svgcheck-0.7.1 toml-0.10.2 urllib3-1.26.14 wcwidth-0.2.6 webencodings-0.5.1 xml2rfc-3.16.0\r\ntouch /srv/s/ietf/draft-ietf-scitt-architecture/lib/.venv/bin/.initialized-with-Makefile.venv\r\ncat draft-ietf-scitt-architecture.md  | kramdown-rfc --v3 | lib/trace.sh draft-ietf-scitt-architecture.xml -s venue /srv/s/ietf/draft-ietf-scitt-architecture/lib/.venv/bin/python lib/add-note.py | lib/trace.sh draft-ietf-scitt-architecture.xml -s v2v3 /srv/s/ietf/draft-ietf-scitt-architecture/lib/.venv/bin/xml2rfc -q -s 'Setting consensus=\"true\" for IETF STD document' --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/home/neal/.cache/xml2rfc --v2v3 /dev/stdin -o /dev/stdout >draft-ietf-scitt-architecture.xml\r\nlib/trace.sh: line 14: exec: kramdown-rfc: not found\r\nError: Unable to parse the XML document: /dev/stdin\r\nmake: *** [lib/main.mk:72: draft-ietf-scitt-architecture.xml] Error 1\r\nmake: *** Deleting file 'draft-ietf-scitt-architecture.xml'\r\n```\r\n\r\nSo I looked at the setup doc: [i\\-d\\-template/SETUP\\.md at main \u00b7 martinthomson/i\\-d\\-template \u00b7 GitHub](https://github.com/martinthomson/i-d-template/blob/main/doc/SETUP.md)\r\n\r\nIt wasn't quite clear how to install bundler, but this seems to have worked on Ubuntu 20.04:\r\n\r\n`sudo apt install ruby-bundler`\r\n\r\nAfter running `make` again, I got an error with these interesting lines:\r\n\r\n```\r\n/srv/s/ietf/draft-ietf-scitt-architecture/lib/.gems/ruby/2.7.0/gems/kramdown-rfc2629-1.6.23/lib/kramdown-rfc2629.rb:463:in `binread': No such file or directory @ rb_sysopen - /home/neal/.cache/xml2rfc/kdrfc-1_6_23-svg_tool_process-f6af3c66d015d02c71df638c578665ec07ac4bde.cache (Errno::ENOENT)\r\n...\r\n/usr/lib/ruby/2.7.0/open3.rb:213:in `spawn': No such file or directory - aasvg (Errno::ENOENT)\r\n```\r\n\r\nAny hints on what else is needed?",
      "createdAt": "2023-02-21T05:55:22Z",
      "updatedAt": "2023-03-09T19:09:22Z",
      "closedAt": "2023-03-09T19:09:22Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@nealmcb, this looks to be fixed with several edits. Please re-open if you find new issues.",
          "createdAt": "2023-03-09T19:09:22Z",
          "updatedAt": "2023-03-09T19:09:22Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOIvmHss5e_acF",
      "title": "Terminology: Registry & Transparency Service ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/7",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/38\r\n\r\nThe architecture I-D, and other docs use Registry and Transparency Service (TS) interchangeably. \r\n\r\nThis issue is about consistent naming, and what we should use for an implementation that hosts the SCITT standards.  \r\nAs we've discussed various terms, I'm pasting a \"thousand words\" to highlight conceptual components.\r\n\r\n![image](https://user-images.githubusercontent.com/7647382/202588667-782e7227-ac9b-49f5-b740-0a2a27fd807d.png)\r\n\r\nHow do we finish this sentence:  \r\n*The user will submit a signed statement/claim (see issue #34) to the ___*\r\n\r\n1. The thing we're trying to name here, which is an implementation of a service.\r\n2. The **eNotary** component that evaluates the Registration Policy (3) before proceeding\r\n3. The **Registration Policy**, as the gatekeeper for what may be submitted to the ledger.\r\n4. The **eNotary** counter signing key/service\r\n5. The **ledger**, where statements/claims are persisted\r\n6. The ledger of a ___ (1) may be implemented through various \"ledger databases\", such as [Azure CCF](https://azure.microsoft.com/en-us/products/azure-confidential-ledger/), [QLDB](https://aws.amazon.com/qldb/), [Trillian](https://github.com/google/trillian)\r\n\r\nThis issue is to discuss what we call (1)\r\nPlease \"vote\" with a comment, representing a number, and any supporting thoughts:\r\n\r\n1. Transparency Service (with no acronym)\r\n2. Registry\r\n3. SCITT Implementation\r\n4. Transparency Service (TS as a acronym)\r\n5. _write in your own_",
      "createdAt": "2023-02-21T15:30:00Z",
      "updatedAt": "2023-09-05T23:31:27Z",
      "closedAt": "2023-09-05T23:31:27Z",
      "comments": [
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "4. Transparency Service (TS as a acronym)\r\n\r\nPlease look at the existing terminology section before proposing global substitutions. ",
          "createdAt": "2023-02-27T16:10:49Z",
          "updatedAt": "2023-02-27T16:10:49Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The substitution of TS to Transparency Services was due to comments that highlighted a possible confusion with Timestamp that might be not intuitive to the generic reader.\r\n\r\nMaybe let us split that decision out to the list and then fix this with a %s/foo/bar/g?",
          "createdAt": "2023-02-27T16:17:56Z",
          "updatedAt": "2023-02-27T16:18:28Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO a \"Transparency Service\" operates a SCITT Registry that contains authenticated statements expressing trust in an artifact. A SCITT Registry may employ multiple technologies to provide its services, i.e. blockchain ledger, relational database, evidence locker, REST API to query the Registry for statements, API's to submit new statements and evidence, etc. The operator of a Transparency Service serves as the Registry Gatekeeper to ensure the integrity of the Registry.",
          "createdAt": "2023-02-27T21:41:20Z",
          "updatedAt": "2023-02-27T21:43:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding a link to a higher level overview @raylutz \r\n assembled: https://docs.google.com/document/d/1qYljgugcraiamGjrhldQ1ZEoa4i_TkM3tzBg8yNzE_E/edit#",
          "createdAt": "2023-03-06T16:35:08Z",
          "updatedAt": "2023-03-06T16:35:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "#16 mostly converges on Transparency Service. However, #8 is also open as additional discussions commence.\r\nI'm leaving open to keep discussions with all the history, including updates to @raylutz's doc.",
          "createdAt": "2023-03-10T01:46:07Z",
          "updatedAt": "2023-03-10T01:46:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Assigning to @raylutz for confirmation and update. ",
          "createdAt": "2023-06-05T15:20:57Z",
          "updatedAt": "2023-06-05T15:20:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, due to inactivity and #16  and #8 cover open topics. ",
          "createdAt": "2023-09-05T23:31:27Z",
          "updatedAt": "2023-09-05T23:31:27Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOIvmHss5e_b-V",
      "title": "Converge Claim and Statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/8",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copying over: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/34\r\n\r\nAt IETF-115, discussions involved:\r\n\r\n- Leverage existing IETF and/or W3C definitions and terms, or at least not conflict and cause confusion with existing terms.\r\n- Minimize the concept count\r\n\r\n### Existing Standards Terminology\r\n\r\n- [IETF: Remote Attestation Procedures Architecture (RATS)](https://www.ietf.org/archive/id/draft-ietf-rats-architecture-22.html#name-artifacts)\r\n- [IETF: SCITT Architecture](https://ietf-scitt.github.io/draft-birkholz-scitt-architecture/draft-birkholz-scitt-architecture.html#name-terminology)\r\n- [IETF: RFC7519](https://www.ietf.org/archive/id/draft-ietf-rats-architecture-22.html#RFC7519)\r\n\r\n### Proposal\r\n\r\nClaim conflicts with RATS and W3C\r\n\r\nComparison of terms across orgs as the object changes state:\r\n![](https://hackmd.io/_uploads/SklGkMSBs.png)\r\n\r\nInstead of transitioning from `statement` to `claim` to `transparent claim`, what if we used `statement` as the base concept:\r\n- Statement --> Signed Statment --> Transparent Statement",
      "createdAt": "2023-02-21T15:34:14Z",
      "updatedAt": "2023-10-23T23:26:14Z",
      "closedAt": "2023-10-23T23:26:14Z",
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO, A \"Transparency Service\" has an operator (entity) that serves as a Gatekeeper to ensure integrity of the Registry and maintain a high availability service to ensure access to the Registry data via defined API's. ",
          "createdAt": "2023-02-27T21:46:07Z",
          "updatedAt": "2023-02-27T21:46:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "While reviewing the architecture terminology, we are considering various terms for information being placed on SCITT. What are the terms as the submission changes state? \r\n\r\nThe current [architecture document](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-architecture-overview) uses:\r\n- Statement\r\n- Claim\r\n- Transparent Claim\r\n\r\nTo converge on the terminology, please provide your suggestion for each stage. By the end of the week: (March 3, 2023), we'll consolidate the options and put it up for vote.",
          "createdAt": "2023-02-28T16:21:54Z",
          "updatedAt": "2023-02-28T16:21:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "- Statement\r\n- Signed Statement\r\n- Transparent Statement",
          "createdAt": "2023-02-28T16:22:42Z",
          "updatedAt": "2023-02-28T16:22:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "As a potentially more palatable alternative:\r\n\r\n* Assertion\r\n* Signed Statement\r\n* Transparent Statement",
          "createdAt": "2023-02-28T16:33:11Z",
          "updatedAt": "2023-02-28T16:33:11Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Entries in REA's SAG-CTR are called a \"Declaration\";\r\n \r\n> a formal or explicit statement or announcement.\r\n> \"they issued a declaration at the close of the talks\"\r\n> \r\nThere are different types of declarations, in SAG-CTR i.e. \"Trusted Software\", \"Trusted Artifact\", \"SAGScore\" (TM) etc.",
          "createdAt": "2023-02-28T16:38:56Z",
          "updatedAt": "2023-02-28T16:43:11Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe the current architecture had **4** different notions: Statement, Claim, Signed Claim, and Transparent Claim.\r\nAs we often discussed, I think the terminology in the architecture should clearly distinguish between the notion of opaque payloads (previously known as statements) from \"things with headers\" which are consistently signed, made transparent, and communicated between SCITT parties. I care about it because in almost all use cases, headers matter a lot. \r\nMy proposed revised names for these 4 notions are: \r\n- Document (Assertion is fine too)\r\n- Statement (The document in an envelope with selected headers)\r\n- Signed Statement (Adding the issuer signature)\r\n- Transparent Statement (Adding the receipt to the Signed Statement).  \r\n",
          "createdAt": "2023-02-28T16:48:37Z",
          "updatedAt": "2023-02-28T16:51:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "What do folks think about @fournet latest suggestion?\r\n1. It accounts for users creating a thing (a `document`), \r\n2. they prepare it to be submitted (`statement`: becomes a cose payload with the surrounding information, such as a from/to on an envelope)\r\n3. it's signed by the issuer (`signed statement`)\r\n4. It's submitted to the transparency service and accepted as a result of any registration policies (`transparent statement`)\r\n\r\nPersonally, what I like about: it takes a generic document (`SBOM`, `VEX`, `scan result`, `artifact x meets foo conformance policy`, ...) and then uses the same noun (statement) with adjectives (`signed`, `transparent`) as it travels through the SCITT workflow.",
          "createdAt": "2023-03-02T18:47:30Z",
          "updatedAt": "2023-03-02T18:50:07Z"
        },
        {
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think introducing a term for the envelope without its signature (\"statement\" above) is confusing, simply because this piece does not exist as such (it's not something you can easily point to or even write to a file, or hash, etc.). And because of that, the transition would in practice be document -> signed statement, which is confusing. \r\n\r\nI think statement -> signed statement makes sense, even though it's a bit cumbersome and a single word for the latter would be nicer (thinking of APIs etc.). In practice, I think that's where it ends, and whether receipts from one or more TS exist (and are bundled in some way) and whether verifiers therefore consider the signed statement as more or less transparent is a policy decision I think. ",
          "createdAt": "2023-03-02T19:18:39Z",
          "updatedAt": "2023-03-02T19:18:39Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "Agree with Maik. I prefer statement -> signed statement. For describing to lay audiences (which I do with some frequency) there are fewer concepts which makes it easier for a) the presenter to describe and b) the audience to understand.",
          "createdAt": "2023-03-06T16:10:04Z",
          "updatedAt": "2023-03-06T16:10:04Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/commit/f73a68d938d2c20d20f321a3f3e07e7ef6a4719a hopefully addresses the core issues of most parties as a step forward to rough consensus.\r\n\r\n> Agree with Maik. I prefer statement -> signed statement. For describing to lay audiences (which I do with some frequency) there are fewer concepts which makes it easier for a) the presenter to describe and b) the audience to understand.\r\n\r\nFortunately, the current proposal still uses these terms \ud83d\ude0c\r\n",
          "createdAt": "2023-03-06T16:29:42Z",
          "updatedAt": "2023-03-06T16:29:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I was going to close this as #16 converges on Statement. \r\nHowever, there seems some additional discussions are happening. I'm leaving this open to assure we're capturing the history of ideas.",
          "createdAt": "2023-03-10T01:42:37Z",
          "updatedAt": "2023-03-10T01:42:37Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm deferring to 117 so we can use the current #16 terminology as a common baseline for 116 discussions and slides.",
          "createdAt": "2023-03-10T01:43:17Z",
          "updatedAt": "2023-03-10T01:43:17Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "@SteveLasker asked me to post this issue here rather than in the separate issue #20 that I had created (which has now been closed)\r\n\r\n----------------------------\r\nIn describing to lay audiences, I have found it easier to use the term 'registered statement' rather than 'transparent statement'. It reduces the number of concepts needed for understanding. Here is the workflow description I have been using:\r\n\r\nUser creates a statement\r\nUser signs a statement\r\nUser registers a statement on a transparency registry. Prior to registration, the statement is evaluated against registration policy.\r\nUser receives a receipt of registration\r\nUser shares a registered statement with interested parties\r\nAuditors and others query the transparency registry to get a history of registered statements\r\n\r\nSee related comment on Issue https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16\r\nSee related comment on Issue https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/20",
          "createdAt": "2023-03-13T22:59:19Z",
          "updatedAt": "2023-03-13T22:59:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed",
          "createdAt": "2023-10-23T23:26:14Z",
          "updatedAt": "2023-10-23T23:26:14Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOIvmHss5e_dxR",
      "title": "Change term 'artifact'",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/9",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copying over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/42\r\n\r\nThe architecture document currently defines `artifact` as the \"physical or non-physical item that is moving along the supply chain\". In other forums, different terms are used, for example: `supplied good`, `product`, `asset`.",
      "createdAt": "2023-02-21T15:38:27Z",
      "updatedAt": "2023-09-05T23:33:43Z",
      "closedAt": "2023-09-05T23:33:43Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding some other names, to consider:\r\n- Asset",
          "createdAt": "2023-02-21T18:42:21Z",
          "updatedAt": "2023-02-21T18:42:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Another good discussion, but I don't see us landing consensus before the 116 deadline, or rather is this the highest priority?\r\nDeferring to 117",
          "createdAt": "2023-03-10T01:44:37Z",
          "updatedAt": "2023-03-10T01:44:37Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing due to inactivity",
          "createdAt": "2023-09-05T23:33:43Z",
          "updatedAt": "2023-09-05T23:33:43Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOIvmHss5e_fzJ",
      "title": "Mapping SLSA and SCITT terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/10",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Within the terminology of https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/29#issuecomment-1384320432, @joshuagl brought up some good questions of SLSA terminology.\r\nThis issue is specific to SLSA mappings\r\n\r\n",
      "createdAt": "2023-02-21T15:44:01Z",
      "updatedAt": "2023-09-05T23:35:20Z",
      "closedAt": "2023-09-05T23:35:20Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@joshuagl, can you make a proposal?\r\nDeferring to 117",
          "createdAt": "2023-03-10T01:40:51Z",
          "updatedAt": "2023-03-10T01:40:51Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing due to inactivity. @joshuagl, please re-open if you'd like to make a proposal. ",
          "createdAt": "2023-09-05T23:35:20Z",
          "updatedAt": "2023-09-05T23:35:20Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOIvmHss5e_g6q",
      "title": "Refine Definition of Feed",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/11",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/36\r\n\r\nA feed is a great base for how we can create a series of statements for different artifacts, getting freshness for a receipt/or VEX report.\r\nThe current definition likely needs to expand a bit to account for:\r\n- What are the versions of a specific artifact\r\n- What are all the statements for a version of an artifact\r\n- What is the latest statement for a specific `contentType` of a specific versioned `artifact`: (eg: what's the latest ~~`SBOM`~~ `application/spdx+json` or  `application/vnd.cyclonedx+json` for the `net-monitor:v1` software?\r\n- If the `contentType` is a referenced [statement by reference](#35), which stores SBOMs, Scan Reports, how do we drill into each if they all use the same payload `contentType` of satementByReference?\r\n",
      "createdAt": "2023-02-21T15:46:59Z",
      "updatedAt": "2023-10-20T18:06:54Z",
      "closedAt": "2023-10-20T18:06:54Z",
      "comments": [
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "I'm not sure if \"feed\" represents the right concept, when it seems to me that the API to the registry will need to offer the ability to query records for specific orgs-products-models-releases, and collect all the relevant records, which likely include a number of ledger entries to various related artifacts.  With that said, can imagine also the notion of a different API which would provide a feed of updates to the registry, esp. to allow a mirrored version or to perhaps aggregate from several source registries.",
          "createdAt": "2023-03-08T00:52:40Z",
          "updatedAt": "2023-03-08T00:52:40Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm not sure if \"feed\" represents the right concept, when it seems to me that the API to the registry will need to offer the ability to query records for specific orgs-products-models-releases, and collect all the relevant records, which likely include a number of ledger entries to various related artifacts. With that said, can imagine also the notion of a different API which would provide a feed of updates to the registry, esp. to allow a mirrored version or to perhaps aggregate from several source registries.\r\n\r\nThis is a good point and one possible improvement that was already brought up at the previous IETF meeting is to enable some structure in the feed header. For instance, using an array of strings would capture many of the common patterns (such as product > model > release), and allow some advanced functions in the API (such as prefix-based querying). Another approach would be to allow each issuer to structure their feed using arbitrary CBOR representations; while this captures many more complex usages (e.g. packages for different Linux distributions, binaries for different architectures) it becomes harder for the transparency service to understand what constitutes related claims (it requires interpretation of the feed format), and thus, harder to define auditing APIs.",
          "createdAt": "2023-03-08T09:59:08Z",
          "updatedAt": "2023-03-08T09:59:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@ad-l, I've got the notes on feeds and I've been working on a proposal. Would you like to collaborate on it?\r\n\r\nDeferring to 117 for prioritization, but a great discussion as many things will be built upon feeds.",
          "createdAt": "2023-03-10T01:39:44Z",
          "updatedAt": "2023-03-10T01:39:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A note from the [SCITT call on 9/24/2023](https://datatracker.ietf.org/meeting/interim-2023-scitt-34/session/scitt)\r\nWe'll be iterating on this a bit more, to create some use cases and examples for how feeds help producers and consumers benefit from SCITT.",
          "createdAt": "2023-09-25T18:01:49Z",
          "updatedAt": "2023-09-25T18:01:49Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "See: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/0383ec2b5a23f11d1a42800aebbe38368e12376d/draft-ietf-scitt-architecture.md?plain=1#L188\r\n\r\n```\r\nFeed: \r\n\r\n: an identifier chosen by the Issuer for the Artifact.\r\nFor every Issuer and Feed, the Registry on a Transparency Service contains a sequence of Signed Statements about the same Artifact.\r\nIn COSE, Feed is a dedicated header attribute in the protected header of the Envelope.\r\n```\r\n\r\nThere are several problems with this definition.\r\n\r\n1. It conflates using aggregations over an header parameter, with the header parameter.\r\n2. It confuses how the TS uses the attribute with how the `iss` uses the attribute (same problem as above).\r\n\r\nSuggested changes:\r\n\r\n\r\n```\r\nFeed Identifier:\r\n\r\n: A feed identifier is chosen be the issuer who secured the signed statement.\r\nFeed identifier MUST NOT be present in unprotected headers.\r\nFeed identifier is registered in CWT Claims Registry as Tag TBD (Requested assignment 42).\r\n\r\nFeed Resource:\r\n\r\n: A feed resource is made available by a transparency service, \r\nand exposed via the SCITT API <ref scrapi>.\r\nTransparency services MAY leverage the feed identifier \r\nused by the issuer to construct the identifier for feed resources on the transparency service.\r\n\r\n```\r\n\r\nRegistration policies only apply to the feed identifier, they do not apply to the feed resource.\r\n\r\nSee https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/pull/2 regarding the Transparency Service exposing the Feed Resource.",
          "createdAt": "2023-09-26T14:39:10Z",
          "updatedAt": "2023-09-26T14:44:28Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOIvmHss5e_hiw",
      "title": "Considering the impact of claim semantics on policy layer",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/12",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Registration Policy"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/26\r\n\r\nWhen specific and detailed claims are provided an advanced policy might be applied.\r\n\r\nIf only shallow / simple claims are provided, there is not much of an opportunity to apply advanced policies.",
      "createdAt": "2023-02-21T15:48:42Z",
      "updatedAt": "2023-10-23T23:26:45Z",
      "closedAt": "2023-10-23T23:26:45Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117",
          "createdAt": "2023-03-10T01:37:19Z",
          "updatedAt": "2023-03-10T01:37:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 118",
          "createdAt": "2023-09-05T23:41:55Z",
          "updatedAt": "2023-09-05T23:41:55Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale",
          "createdAt": "2023-10-23T23:26:45Z",
          "updatedAt": "2023-10-23T23:26:45Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOIvmHss5e_jL3",
      "title": "Add a sequence diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/13",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/27\r\n\r\n##  Compound User Story / Sequence Diagram\r\n\r\nAs a consumer, I want to understand if I should trust an artifact\r\nAs a producer, I want to be assured that the integrity of my artifacts has been reviewed by a trusted 3rd party.\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    participant Issuer\r\n    participant Notary\r\n    Note left of Issuer: I take responsibility for the artifacts I produce\r\n    Issuer ->> Notary: These are the policies I am committed to meeting\r\n    Issuer ->> Notary: I stand by my claims about my artifact\r\n    loop Claims Check\r\n        Notary ->> Notary: Review relevant claims and policies\r\n    end\r\n    Notary ->> Issuer: Here is my endorsement and receipt\r\n    Consumer->>Notary: Is this artifact safe to use?\r\n    loop Endorsement Check\r\n        Notary->>Notary: Review relevant claims and endorsements\r\n    end\r\n     Notary ->> Consumer: You can trust this artifact, the endorsement is still valid\r\n     Note right of Consumer: I have confidence in the artifacts I consume\r\n```\r\n",
      "createdAt": "2023-02-21T15:53:11Z",
      "updatedAt": "2023-12-12T15:40:52Z",
      "closedAt": "2023-12-12T15:40:51Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This would be a great addition. @OR13, is this something you think you could do for 116? As more folks get connected with SCITT, it might help get started. \r\nI'll opportunistically assign 116 for now, but if you don't feel it's realistic, please just reassign 117 ",
          "createdAt": "2023-03-10T01:36:02Z",
          "updatedAt": "2023-03-10T01:36:23Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "What is the action? \n\nTo produce ASCII art from the mermaid? \n\nOpen a PR on the architecture with the ASCII art?",
          "createdAt": "2023-03-10T01:37:53Z",
          "updatedAt": "2023-03-10T01:37:53Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "ASCII Art seems to be the standard for the IETF Specs. @hannestschofenig, what do you think about mermaid?\r\n\r\nShould this go in the architecture or the new API draft? Or, maybe the http://scitt.io/ site?\r\n\r\nI think it would be a great addition, but you're bringing up a good tooling point.",
          "createdAt": "2023-03-10T02:01:18Z",
          "updatedAt": "2023-03-10T02:01:18Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "- related issue: https://github.com/mermaidjs/mermaid-live-editor/issues/36",
          "createdAt": "2023-03-10T22:37:43Z",
          "updatedAt": "2023-03-10T22:37:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @OR13. I do wonder if it's possible to generate an SVG, similar to [aasvg](https://github.com/martinthomson/aasvg) Was your thought that mermaid could output to aasvg?",
          "createdAt": "2023-03-10T23:33:36Z",
          "updatedAt": "2023-03-10T23:33:36Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "It is possible to generate svg from mermaid, the problem is that svg does work for ASCII version of RFC, so ASCII art is preferred.",
          "createdAt": "2023-03-11T01:26:32Z",
          "updatedAt": "2023-03-11T01:26:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Still interesting, bumped to 119",
          "createdAt": "2023-10-23T23:27:21Z",
          "updatedAt": "2023-10-23T23:27:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 commits to having a mermaid diagram by our next meeting, or close the issue :)\r\nThe challenge is the mermaid doesn't support ASCII Art. Mermaid will allow us to work more quickly\r\nPublish as HTML for draft 05.",
          "createdAt": "2023-11-28T15:39:19Z",
          "updatedAt": "2023-11-28T15:39:19Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Re #132 I am willing to take this up and do it with aasvg if my other PR in the i-d-template project if that would be helpful.",
          "createdAt": "2023-12-02T18:49:36Z",
          "updatedAt": "2023-12-02T18:49:36Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Cost-benefit call - until IETF docs can support a mermaid-like drawing, we'll punt this one. ",
          "createdAt": "2023-12-12T15:40:51Z",
          "updatedAt": "2023-12-12T15:40:51Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOIvmHss5e_kHn",
      "title": "Registry Access Scenarios (RBAC)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/14",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "RBAC-ABAC"
      ],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/25\r\n\r\n### Case 0 \r\n\r\n- Public Read\r\n- Private Write\r\n\r\n### Case 1\r\n\r\n- Private Read\r\n- Private Write\r\n\r\n\r\nWhen holding an endorsement, one might be be able to verify directly in a public read, or rely on an auditor in the case of a private read scenario.\r\n",
      "createdAt": "2023-02-21T15:55:50Z",
      "updatedAt": "2023-10-23T23:27:55Z",
      "closedAt": "2023-10-23T23:27:54Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "RBAC definition is a great topic, but deferring from 116 at this point for focus.",
          "createdAt": "2023-03-10T01:33:16Z",
          "updatedAt": "2023-03-10T01:33:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "RBAC has been discussed is implementation specific. \r\nClosing\r\n",
          "createdAt": "2023-10-23T23:27:54Z",
          "updatedAt": "2023-10-23T23:27:54Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOIvmHss5fBbAw",
      "title": "Global Terminology Overhaul & Some Text Issues",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/15",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Payload and Statement seem to be used intermixed in the text. I tried to disambiguate the via \"Statement payload\". If that does not work, please provide a counter proposal.\r\n\r\nThe term Claim sometimes seem to have meant Signed Statement and sometimes Transparent Statement. Using our interim terminology, that became a selection process for me. Please check, if I made the correct choice in all occurrences (sometimes I had to guess the intent).\r\n\r\nConsistent Capitalization was a mess. I hope I fixed most of that. Please check.\r\n\r\nThere is still no consistent use of \"Registry\" vs. \"log\" vs. \"ledger\" vs. \"Transparency Service\", I think. Please check.\r\n\r\nPlease check every use of the term \"Evidence\" and if an alternative expression could be used.\r\n\r\nPlease check every occurrence of the term \"guarantee\" or \"proof\" and if an alternative expression could be used.\r\n\r\nPrivacy Considerations and Security Considerations texts require significant improvement.",
      "createdAt": "2023-02-21T23:03:09Z",
      "updatedAt": "2023-03-09T15:44:11Z",
      "closedAt": "2023-03-09T15:44:11Z",
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Here is my opinion:\r\nRegistry refers to the facilities used to store and retrieve \"Authenticated Statement Data\" that has been submitted to a \"Transparency Service\" \"operator\". A Registry contains specific \"Statements\" which the Transparency service supports, as documented in their registration policies document. A Registry may employ different technologies needed to carry out its function to store and retrieve \"Statements\" that are permitted in the Registry, per the registration policies defined by the Transparency Service operator. The operator of a Transparency Service serves the role of Gatekeeper to ensure the integrity of the Registry data and services provided to access the Registry data. A Statement is contained in a message \"Payload\" exchanged between a Transparency Service API function and other parties, i.e. consumer inquiries and Notary submissions.",
          "createdAt": "2023-02-27T21:58:30Z",
          "updatedAt": "2023-02-27T22:01:54Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "It would help to be able to read the document given the changes proposed here. But due to the make errors documented in #6 I haven't yet succeeded in doing so. Does the build infrastructure automatically build documents for other branches? Or can someone else build and publish the document based on this branch?",
          "createdAt": "2023-03-06T04:11:46Z",
          "updatedAt": "2023-03-06T04:11:46Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Editor's version build via github actions for #16 is located here: https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/core-terms/draft-ietf-scitt-architecture.html",
          "createdAt": "2023-03-06T17:05:15Z",
          "updatedAt": "2023-03-06T17:05:15Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOIvmHss5fEmZl",
      "title": "Define error codes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/17",
      "state": "CLOSED",
      "author": "letmaik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "From https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/3#discussion_r1114223387.\r\n\r\nMore error codes should be defined.",
      "createdAt": "2023-02-22T12:43:22Z",
      "updatedAt": "2023-10-23T23:28:44Z",
      "closedAt": "2023-10-23T23:28:44Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@letmaik, with the focus to pull the API into another draft, should we close this, or transfer? ",
          "createdAt": "2023-03-10T01:32:20Z",
          "updatedAt": "2023-03-10T01:32:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as this is likely part of [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/)",
          "createdAt": "2023-10-23T23:28:44Z",
          "updatedAt": "2023-10-23T23:28:44Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOIvmHss5fdHKX",
      "title": "Statement by reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/18",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "Copied over from: https://github.com/ietf-scitt/draft-birkholz-scitt-architecture/issues/35\r\n\r\nAt IETF 115 there were discussions on having some kind of standard way to deal with statements by reference. Here are also the two relevant slides from https://datatracker.ietf.org/doc/slides-115-scitt-combined-scitt-presentations/:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2023-02-27T15:59:38Z",
      "updatedAt": "2024-02-12T17:41:23Z",
      "closedAt": "2024-02-12T17:41:23Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Reluctantly moving beyond 116. We do have some new work for clarifying statement types, but it won't be ready for 116 proper. \r\n\r\nIf someone has bandwidth to focus upon for the 116 hackathon, please grab this. In lieu of that, I'm differing for now. ",
          "createdAt": "2023-03-10T01:31:38Z",
          "updatedAt": "2023-03-10T01:31:38Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Statement by reference is still assumed through discussions, but not yet captured in the specs. Moving to 119",
          "createdAt": "2023-10-23T23:29:31Z",
          "updatedAt": "2023-10-23T23:29:31Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "https://github.com/OR13/draft-steele-cose-hash-envelope",
          "createdAt": "2023-11-28T15:41:00Z",
          "updatedAt": "2023-11-28T15:41:00Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "^ work in progress, will need to got to COSE WG, its an \"attached payload\" where the payload is a hash and the header has hash specific meta data.",
          "createdAt": "2023-11-28T15:41:48Z",
          "updatedAt": "2023-11-28T15:41:48Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Noting that I believe supporting detached payloads, with a hash, is important to the first submission of the Architecture document. ",
          "createdAt": "2024-01-06T00:51:08Z",
          "updatedAt": "2024-01-06T00:51:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in the appendix of draft 05",
          "createdAt": "2024-02-12T17:41:23Z",
          "updatedAt": "2024-02-12T17:41:23Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOIvmHss5fj1KR",
      "title": "Review Registration Policy",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/19",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l",
        "fournet"
      ],
      "labels": [
        "Registration Policy"
      ],
      "body": "Discussion on the functionality of the registration policy, as defined in the architecture.",
      "createdAt": "2023-02-28T14:55:21Z",
      "updatedAt": "2023-12-05T17:24:43Z",
      "closedAt": "2023-12-05T17:24:43Z",
      "comments": [
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "\"Registration Policy\" describes the constraints imposed on who can submit signed statements and what metadata is required. The metadata AKA \"Artifact Properties\" is used for accessing the signed statements regarding data artifacts. There are two levels of properties: a) a base level which provides the licensee/owner, semantic label of the item, version, and category. The date submitted is calculated by the log manager. Category is used to determine the extended properties set. For example, for software use case, the base level would have Licensee:\"Company ABC\", ProductName:\"Widget package XYZ\", Version: \"2.1.3\", PropertiesCategory:\"sw\". In the extended set, we have properties such as a enumeration of possible artifact types, such SBOM, OCI container, binary, etc. \r\n\r\nThen, the registration policy includes 2 aspects. a) which property fields are completed so the item can be later accessed and b) whether the submitter is authorized to submit the item based on evaluating the signature on the submitted item.\r\n\r\nThe minimum metadata for each artifact must be specified in the base architecture, even if in some registration policies, no metadata is required. The extended metadata must be defined for the sw use case.\r\n\r\nThe signed statements that exist in the append only log must include both the base properties and optional (use-case specific) properties, these should be protected by any signatures, and they should not be encrypted nor considered part of the artifact.\r\n",
          "createdAt": "2023-06-25T16:09:39Z",
          "updatedAt": "2023-06-25T16:23:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Active for 118 on-site discussion, and inclusion for 119",
          "createdAt": "2023-10-23T23:29:59Z",
          "updatedAt": "2023-10-23T23:29:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Need input from @fournet and @ad-l if we want/need to maintain sequence number in `reg_info` or this becomes implementation specific. \r\nTriage in the next editors meeting",
          "createdAt": "2023-11-28T15:49:12Z",
          "updatedAt": "2023-11-28T15:49:12Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Discussion on moving properties of `reg_info` into defined properties/keys of `CWT_Claims`, or remove `reg_info` and leaving implementation-specific properties in `CWT_Claims` to be used.",
          "createdAt": "2023-11-28T15:51:33Z",
          "updatedAt": "2023-11-28T15:51:33Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOIvmHss5gE3ct",
      "title": "Terminology: 'Transparent Statement' -> 'Registered Statement'",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/20",
      "state": "CLOSED",
      "author": "kaywilliams",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "duplicate"
      ],
      "body": "In describing to lay audiences, I have found it easier to use the term 'registered statement' rather than 'transparent statement'. It reduces the number of concepts needed for understanding. Here is the workflow description I have been using:\r\n\r\nUser creates a statement\r\nUser signs a statement\r\nUser registers a statement on a transparency registry. Prior to registration, the statement is evaluated against registration policy.\r\nUser receives a receipt of registration\r\nUser shares a registered statement with interested parties\r\nAuditors and others query the transparency registry to get a history of registered statements\r\n\r\nSee related comment on Issue #16 ",
      "createdAt": "2023-03-06T17:22:44Z",
      "updatedAt": "2023-03-13T23:00:21Z",
      "closedAt": "2023-03-10T01:29:45Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @kaywilliams. As the list of issues is growing, do you mind converging this discussion in #8?",
          "createdAt": "2023-03-08T22:34:17Z",
          "updatedAt": "2023-03-08T22:34:17Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "I don't mind, but please note that Henk did ask me to create a separate issue. So, perhaps we check with him first?",
          "createdAt": "2023-03-08T22:36:44Z",
          "updatedAt": "2023-03-08T22:36:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, any reason to keep this separate from #8?",
          "createdAt": "2023-03-08T22:38:01Z",
          "updatedAt": "2023-03-08T22:38:01Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolving as a dupe of the #8 discussion and closing just to centralize common discussions. \r\n@kaywilliams, please review and copy your points to that issue. Also, please note the currently merged updates which use Statement.  \r\n",
          "createdAt": "2023-03-10T01:29:45Z",
          "updatedAt": "2023-03-10T01:29:45Z"
        },
        {
          "author": "kaywilliams",
          "authorAssociation": "NONE",
          "body": "Added comment to #8",
          "createdAt": "2023-03-13T23:00:20Z",
          "updatedAt": "2023-03-13T23:00:20Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOIvmHss5gFHY7",
      "title": "Support auditing of multiple replicas of a given Transparency Service, like in CT",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/21",
      "state": "CLOSED",
      "author": "nealmcb",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "> Unlike CT, where independent auditors are responsible for enforcing the consistency of multiple independent instances of the same global Registry, each Transparency Service is required to guarantee the consistency of its own Registry (for instance, through the use of a consensus algorithm between replicas of the Registry), but assume no consistency between different Transparency Services\r\n\r\nThe sentence _Unlike CT,..._ takes away an important aspect of any transparency service, and negates the overall notion that we are trying to generalize CT.\r\n\r\nInstead, we should note that any given TS will be well served by having replicas and auditors which confirm that relying parties can choose any replica they want.",
      "createdAt": "2023-03-06T18:04:01Z",
      "updatedAt": "2024-02-12T17:42:21Z",
      "closedAt": "2024-02-12T17:42:21Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring multiple instance discussions to post 116.",
          "createdAt": "2023-03-10T01:27:27Z",
          "updatedAt": "2023-03-10T01:27:27Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Linking to #79 ",
          "createdAt": "2023-10-23T23:31:32Z",
          "updatedAt": "2023-10-23T23:31:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "With no new info, proposing to close this issue on Jan 16, 2024\r\n",
          "createdAt": "2024-01-06T00:52:57Z",
          "updatedAt": "2024-01-06T00:52:57Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOIvmHss5gLwUY",
      "title": "Incorporate cose-merkle-tree-proofs replacing SCITT Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/22",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "fournet"
      ],
      "labels": [],
      "body": "[cose-merkle-tree-proofs](https://github.com/ietf-scitt/cose-merkle-tree-proofs)",
      "createdAt": "2023-03-07T15:30:58Z",
      "updatedAt": "2023-09-05T23:39:58Z",
      "closedAt": "2023-09-05T23:39:57Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "As we're working to complete [draft-steele-cose-merkle-tree-proofs](https://github.com/ietf-scitt/draft-steele-cose-merkle-tree-proofs) for 116, I'm assigning to 116",
          "createdAt": "2023-03-10T01:21:11Z",
          "updatedAt": "2023-03-10T01:21:11Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "See #68 for a proposed implementation",
          "createdAt": "2023-05-09T12:38:36Z",
          "updatedAt": "2023-05-09T12:38:36Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as #68 has been merged",
          "createdAt": "2023-09-05T23:39:57Z",
          "updatedAt": "2023-09-05T23:39:57Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOIvmHss5gLx5_",
      "title": "Clarification: Notarization is not the process of creating a signed statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/23",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [
        "terminology"
      ],
      "body": "              I don't love this language.\r\n\r\nI think notarizing applies to making a \"Signed Statement\" a \"Transparent Statement\"... but this sentence seems to imply notarization is part of the process of creating a \"Signed Statement\", which seems wrong.\r\n\r\n_Originally posted by @OR13 in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1126710441_\r\n            ",
      "createdAt": "2023-03-07T15:34:29Z",
      "updatedAt": "2023-10-23T23:34:30Z",
      "closedAt": "2023-10-23T23:34:30Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande, is it realistic to get some clarification in by this Friday so we can review and merge by Monday?\r\n",
          "createdAt": "2023-03-10T01:26:42Z",
          "updatedAt": "2023-03-10T01:26:42Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "For context, I think this is the _language_ in question:\r\n\r\n> If trust can be put into the operations that record Signed Statements (i.e., a believable notarization function) in a secure, append-only Registry via online operations, the same trust can be put into a corresponding Receipt that is the resulting documentation of these online operations issued by the Transparency Services and that can be validated in offline operations.\r\n",
          "createdAt": "2023-03-10T14:25:37Z",
          "updatedAt": "2023-03-10T14:25:37Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "^ yes, that is it.\r\n\r\nI prefer something closer to:\r\n\r\n> The issuer of a signed statement should been authenticated, and trusted to make the statements according to a registration policy for the transparency service. The issuer of a receipt for a transparent signed statement  (i.e., a believable notarization function), when trusted as a notary facilitates offline verification ... etc...\r\n\r\n\r\n",
          "createdAt": "2023-03-10T16:59:29Z",
          "updatedAt": "2023-03-10T16:59:29Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale. If the [current draft](https://datatracker.ietf.org/doc/draft-ietf-scitt-architecture/) doesn't reflect the needs, please open a new issue, and/or PR",
          "createdAt": "2023-10-23T23:34:30Z",
          "updatedAt": "2023-10-23T23:34:30Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOIvmHss5gLzx-",
      "title": "Clarification: add notarization",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/24",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "terminology"
      ],
      "body": "              I think the concept of \"notarization\" needs to go here... or it needs to not be used anywhere.\r\n\r\n_Originally posted by @OR13 in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1126712923_\r\n            ",
      "createdAt": "2023-03-07T15:39:14Z",
      "updatedAt": "2023-10-23T23:35:57Z",
      "closedAt": "2023-10-23T23:35:56Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, is this a quick item for 116?  ",
          "createdAt": "2023-03-10T01:19:13Z",
          "updatedAt": "2023-03-10T01:19:13Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Possibly, what role do we assign the \"issuer\" of a transparent statement.\n\nHow do we distinguish issuing a transparent statement, from issuing a signed statement.\n\nWhat policies apply to transparent statements vs signed statements?\n\nDo we think the word notary is useful?\n\nIs the notary the name for identity that signs a transparent statement?\n\n\n\n",
          "createdAt": "2023-03-10T01:22:33Z",
          "updatedAt": "2023-03-10T01:22:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Roles is a good loaded word. \r\nSome thoughts:\r\n\r\n- A signed statement is signed by the issuer, external to the Transparency Service. \r\n- After the registration policy has been completed, the signed statement gets notarized and becomes a transparent statement.\r\n- It's the process of completing the registration policy which implies being notarized.\r\n- As we start to define how a SCITT Transparency Service would be configured, it does seem like the identity of the notarization process would be a Notary.",
          "createdAt": "2023-03-10T02:05:50Z",
          "updatedAt": "2023-03-10T02:05:50Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "I'm a fan of the recommendation to use the term registered statement rather than transparent statement. If we adopt that, it would seem clearer to use the term registrar rather than overloading the term notary in a way that seems novel to me. Are there examples in other areas where different notaries follow different registration policies?",
          "createdAt": "2023-03-10T13:56:56Z",
          "updatedAt": "2023-03-10T13:56:56Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, and the current draft has been updated quite a bit.\r\nPlease re-open if new text is needed.",
          "createdAt": "2023-10-23T23:35:57Z",
          "updatedAt": "2023-10-23T23:35:57Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOIvmHss5gL1VT",
      "title": "Clarification: \"DID Key Manifest\" to another term",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/25",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "terminology"
      ],
      "body": "              I suggest maybe not using the words \"DID Key Manifest\"... \r\n\r\nMaybe \"Public Key Identifier\" or \"VerificationMethod\".\r\n\r\n_Originally posted by @OR13 in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1126717438_\r\n            ",
      "createdAt": "2023-03-07T15:42:18Z",
      "updatedAt": "2023-09-10T19:01:59Z",
      "closedAt": "2023-09-10T19:01:59Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117 as it's a good clarification as we dig deeper into registration policy, but doesn't seem a priority for 116",
          "createdAt": "2023-03-10T01:17:41Z",
          "updatedAt": "2023-03-10T01:17:41Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 do you want to take another look at this? Or shall we close due to inactivity? ",
          "createdAt": "2023-09-05T23:47:08Z",
          "updatedAt": "2023-09-05T23:47:08Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "The latest PR has several related corrections, I can't say if additional changes are needed but I am fine closing this issue ",
          "createdAt": "2023-09-05T23:49:46Z",
          "updatedAt": "2023-09-05T23:49:46Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOIvmHss5gL6MW",
      "title": "Break up paragraphs to single lines per sentence.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/26",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [],
      "body": "              This is a long sentence, maybe break it up into multiple 80 character lines?\r\nA policy could be 'unrecognized', 'unparsable', or 'not implemented'. Does 'unknown' imply all of these?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123556851_\r\n            ",
      "createdAt": "2023-03-07T15:53:51Z",
      "updatedAt": "2023-03-09T19:04:19Z",
      "closedAt": "2023-03-09T19:04:19Z",
      "comments": []
    },
    {
      "number": 27,
      "id": "I_kwDOIvmHss5gMC9H",
      "title": "Clarification: cannot delete or alter earlier Signed Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/27",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              > cannot delete or alter earlier Signed Statements about certain Artifacts\r\n\r\ndrop \"about certain Artifacts\". It makes it seem like they could delete or alter Signed Statements about certain *other* Artifacts. But they can't delete or alter any earlier Signed Statements about anything.\r\n\r\n_Originally posted by @nealmcb in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1125888615_\r\n            ",
      "createdAt": "2023-03-07T16:14:28Z",
      "updatedAt": "2023-10-23T23:39:08Z",
      "closedAt": "2023-10-23T23:39:08Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Good clarification, but deferring to 117",
          "createdAt": "2023-03-10T01:08:13Z",
          "updatedAt": "2023-03-10T01:08:13Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as updates have been completed: [Line 173](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L173)\r\n> Multiple Issuers may Register additional Signed Statements about the same Artifact, but they cannot delete or alter Signed Statements previously added to the Append-only Log.\r\n",
          "createdAt": "2023-10-23T23:39:08Z",
          "updatedAt": "2023-10-23T23:39:08Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOIvmHss5gMEQ7",
      "title": "Clarification: CT and TS generalization, replicas and auditors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/28",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology",
        "multiple-instances"
      ],
      "body": "              The sentence *Unlike CT,...* takes away an important aspect of any transparency service, and negates the overall notion that we are trying to generalize CT.\r\n\r\nInstead, we should note that any given TS will be well served by having replicas and auditors which confirm that relying parties can choose any replica they want.\r\n\r\n_Originally posted by @nealmcb in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1125894980_\r\n            ",
      "createdAt": "2023-03-07T16:17:57Z",
      "updatedAt": "2023-10-24T00:03:33Z",
      "closedAt": "2023-10-24T00:03:32Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring replicas and reliability to post 116",
          "createdAt": "2023-03-10T01:06:01Z",
          "updatedAt": "2023-03-10T01:06:01Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale",
          "createdAt": "2023-10-24T00:03:32Z",
          "updatedAt": "2023-10-24T00:03:32Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOIvmHss5gMFqH",
      "title": "Clarification: need and trust references",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/29",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              I'd take out \"need to\" in both definitions.\r\n\r\nFor the end of the second one I'd get rid of the tricky and unnecessary word *trust* by substituting this:\r\n=> that access, validate, and evaluate the reliability of authentic Statements\r\n\r\n_Originally posted by @nealmcb in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1125902807_\r\n            ",
      "createdAt": "2023-03-07T16:21:37Z",
      "updatedAt": "2023-09-05T23:50:07Z",
      "closedAt": "2023-09-05T23:50:06Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing due to inactivity, and merger of #16. Please re-open or create a new issue/pr if needed.",
          "createdAt": "2023-09-05T23:50:06Z",
          "updatedAt": "2023-09-05T23:50:06Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOIvmHss5gMcOA",
      "title": "Clarification: SHOULD | MUST verify the ledger is consistent with a previously issued receipt",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/30",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Why is this a SHOULD and not MUST?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123536590_\r\n            ",
      "createdAt": "2023-03-07T17:13:04Z",
      "updatedAt": "2023-03-10T01:02:48Z",
      "closedAt": "2023-03-10T01:02:48Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as I've re-read the comment from @nedmsmith and I think this is now covered.\r\nNed, if you feel otherwise, please re-open.",
          "createdAt": "2023-03-10T01:02:48Z",
          "updatedAt": "2023-03-10T01:02:48Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOIvmHss5gMcrm",
      "title": "Clarification: how does the Transparency Service ensure determinism?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/31",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "duplicate"
      ],
      "body": "              how does the TS ensure determinism?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123538125_\r\n            ",
      "createdAt": "2023-03-07T17:14:27Z",
      "updatedAt": "2023-03-09T17:26:19Z",
      "closedAt": "2023-03-09T17:26:19Z",
      "comments": [
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Duplicate of #35",
          "createdAt": "2023-03-09T16:17:54Z",
          "updatedAt": "2023-03-09T16:17:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nealmcb, for helping reduce the total number of issues ",
          "createdAt": "2023-03-09T17:26:19Z",
          "updatedAt": "2023-03-09T17:26:19Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDOIvmHss5gMgg1",
      "title": "Clarification: Requirements for SCITT implementations to build a suitable Transparency Service",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/32",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Of course a compromised TS could do all sorts of malicious things. If the previous line / paragraph stated the 4 (or more?) bullet points below in terms of how a TS is supposed to behave. It might be easier to understand what requirements implementers must address in order to build a suitable TS?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123612216_\r\n            ",
      "createdAt": "2023-03-07T17:23:15Z",
      "updatedAt": "2023-10-23T23:37:20Z",
      "closedAt": "2023-10-23T23:37:20Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This is similar to #37 where we may want to clarify what's in the spec, vs. a decision for an implementation.\r\nAssigning to post 116\r\n",
          "createdAt": "2023-03-10T00:59:59Z",
          "updatedAt": "2023-03-10T00:59:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Updates have been merged. Please re-open with new updates if needed.",
          "createdAt": "2023-10-23T23:37:20Z",
          "updatedAt": "2023-10-23T23:37:20Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOIvmHss5gMiIO",
      "title": "Clarification: References to multiple Transparency Servies",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/33",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "              Does this work if the TS cluster is behind a load balancer?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123564059_\r\n            ",
      "createdAt": "2023-03-07T17:27:16Z",
      "updatedAt": "2023-10-24T00:04:04Z",
      "closedAt": "2023-10-24T00:04:04Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Linking to #42, but also a good topic for client verification (verifiers).\r\nDeferring to 117 to provide time for discussion.",
          "createdAt": "2023-03-09T23:32:33Z",
          "updatedAt": "2023-03-09T23:32:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with references to Federation added. ",
          "createdAt": "2023-10-24T00:04:04Z",
          "updatedAt": "2023-10-24T00:04:04Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "I_kwDOIvmHss5gMjDr",
      "title": "Clarification: Reference to \"Local\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/34",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              please break up long sentences into shorter lines.\r\n\r\nThe term 'local' is subjective and contextual. If used, it needs to be defined.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123565919_\r\n            ",
      "createdAt": "2023-03-07T17:29:25Z",
      "updatedAt": "2023-10-24T00:03:15Z",
      "closedAt": "2023-10-24T00:03:15Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "line breaks complete (#44)\r\n\r\nLocality, verification and registration policies are likely great topics for 117",
          "createdAt": "2023-03-09T23:30:37Z",
          "updatedAt": "2023-03-09T23:30:37Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOIvmHss5gMkV0",
      "title": "Clarification: How does a Transparency Service ensure determinism?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/35",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              how does the TS ensure determinism?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123538125_\r\n            ",
      "createdAt": "2023-03-07T17:32:38Z",
      "updatedAt": "2023-10-24T00:02:38Z",
      "closedAt": "2023-10-24T00:02:37Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117 as I suspect this will take a lot of discussions that won't land by 116.",
          "createdAt": "2023-03-09T23:28:45Z",
          "updatedAt": "2023-03-09T23:28:45Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "Potentially related, hashing claims for use as entry IDs: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79#issuecomment-1767445443",
          "createdAt": "2023-10-18T03:21:33Z",
          "updatedAt": "2023-10-18T03:21:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with the link to #79 as a possible updated tracking item.\r\nPlease re-open if needed, with additional context. ",
          "createdAt": "2023-10-24T00:02:37Z",
          "updatedAt": "2023-10-24T00:02:37Z"
        }
      ]
    },
    {
      "number": 36,
      "id": "I_kwDOIvmHss5gMlbf",
      "title": "Clarification: Describe the properties of a DID resolution",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/36",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              It might be better to describe the properties of manifests that are desired instead of or in addition to simply requiring 'manifests' - which is ambiguous.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123542029_\r\n            ",
      "createdAt": "2023-03-07T17:35:25Z",
      "updatedAt": "2023-10-23T23:44:22Z",
      "closedAt": "2023-10-23T23:44:22Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117, as we dig into more details of the registration policy.",
          "createdAt": "2023-03-09T23:27:33Z",
          "updatedAt": "2023-03-09T23:27:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with updates to CTW Claims (#108) added ",
          "createdAt": "2023-10-23T23:44:22Z",
          "updatedAt": "2023-10-23T23:44:22Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOIvmHss5gMm2j",
      "title": "Clarification: SHOULD | MUST document governance procedure details.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/37",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "Clarify what level of detail MUST or SHOULD be captured by a SCITT instance? \r\n\r\n              Why is this a SHOULD and not MUST? Otherwise it is an untrustworthy TS.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123544646_\r\n            ",
      "createdAt": "2023-03-07T17:39:12Z",
      "updatedAt": "2023-10-23T23:36:44Z",
      "closedAt": "2023-10-23T23:36:44Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring what would be in the spec as MUST, vs. what SHOULD. \r\nIt seems there's some clarity around what the spec requires, vs. a good, better, best implementation would do. It's possible some SCITT Transparency Services may have lighter weight infrastructure, but there should be some core capabilities that make a SCITT Transparency Service reliable.",
          "createdAt": "2023-03-09T23:26:26Z",
          "updatedAt": "2023-03-09T23:26:26Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A number of changes have been applied. Please open new issues/prs with specific references if further is needed. ",
          "createdAt": "2023-10-23T23:36:44Z",
          "updatedAt": "2023-10-23T23:36:44Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "I_kwDOIvmHss5gMoy0",
      "title": "Clarification: Ordering of entities, determinism, verifiable",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/38",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              This requires more explanation. Sounds dubious.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123539145_\r\n            ",
      "createdAt": "2023-03-07T17:44:29Z",
      "updatedAt": "2023-10-24T00:01:26Z",
      "closedAt": "2023-10-24T00:01:25Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117 to provide time for clarification",
          "createdAt": "2023-03-09T23:24:07Z",
          "updatedAt": "2023-03-09T23:24:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Believe this was resolved in #107, here: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R497\r\n",
          "createdAt": "2023-10-24T00:01:25Z",
          "updatedAt": "2023-10-24T00:01:25Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOIvmHss5gMqhT",
      "title": "Clarification: Define consumer",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/39",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "From a terminology perspective, \"consumer\" can mean:\r\n- End users that \"consume\" software, akin to a consumer of purchased good and services\r\n- Anyone interacting with a SCITT Transparency Service - akin to publishers and consumers of a SCITT Transparency service\r\n\r\nSuggestion for tracking: add \"Consumer\" to the [Terminology](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-terminology) section\r\n\r\n              'consumer' might not be the best term. Does it mean ingress or someone engaging in commerce?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123549835_\r\n            ",
      "createdAt": "2023-03-07T17:49:05Z",
      "updatedAt": "2023-10-23T23:58:01Z",
      "closedAt": "2023-10-23T23:58:00Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The header under terminology has been added. It now needs the details.\r\nAdding to 116, as this may be small enough to agree a Consumer is someone that interacts with a SCITT Transparency Service. If it takes a lot of discussion, I'd suggest defering to 117",
          "createdAt": "2023-03-09T23:22:29Z",
          "updatedAt": "2023-03-09T23:22:41Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Yes, simply define as one who interacts with a SCITT service.",
          "createdAt": "2023-03-10T13:52:22Z",
          "updatedAt": "2023-03-10T13:52:22Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "There are references in the doc, as is. Deferring to 117, to create stability for 116.",
          "createdAt": "2023-03-13T16:56:18Z",
          "updatedAt": "2023-03-13T16:56:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed\r\n",
          "createdAt": "2023-10-23T23:58:00Z",
          "updatedAt": "2023-10-23T23:58:00Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOIvmHss5gMrqp",
      "title": "Clarification: Use of COSE is mandatory, SHOULD | MUST",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/40",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Since the use of COSE is mandatory, shouldn't this be MUST?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123554033_\r\n            ",
      "createdAt": "2023-03-07T17:52:21Z",
      "updatedAt": "2023-03-10T10:19:25Z",
      "closedAt": "2023-03-10T10:19:24Z",
      "comments": []
    },
    {
      "number": 41,
      "id": "I_kwDOIvmHss5gMy9A",
      "title": "Clarification: Details for what verifiers should offer as options to share receipts.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/41",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "receipts"
      ],
      "body": "              The different available options should be described.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123568871_\r\n            ",
      "createdAt": "2023-03-07T18:12:59Z",
      "updatedAt": "2023-11-28T15:57:02Z",
      "closedAt": "2023-11-28T15:57:02Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Details about receipts are starting to shape up, but likely wont have all clarity by 116.\r\nDeferring to 117",
          "createdAt": "2023-03-09T23:17:39Z",
          "updatedAt": "2023-03-09T23:17:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale from previous updates.",
          "createdAt": "2023-11-28T15:57:02Z",
          "updatedAt": "2023-11-28T15:57:02Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOIvmHss5gM1QP",
      "title": "Clarification: Multiple SCITT Instances and trust between them",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/42",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "multiple-instances"
      ],
      "body": "There will be multiple instances of SCITT Transparency services, run by different organizations. Multiples will likely exist for private software, where internal information is maintained for compliance and auditing, while public instances will provide the public info. \r\nThe suggestion here is to remove the reference to multiple SCITT Transparency Services trusting each other, as it's accepted that different instances will have different registration policies and neither have to trust the other, rather the consumer has to decide what's applicable to them.\r\n\r\n              If they have different governance, organization trust, and otherwise don't trust each other what is the basis for allowing them to interoperate? This seems very dubious and possibly should be called out as conditions for NOT interoperating.\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123571906_\r\n            ",
      "createdAt": "2023-03-07T18:20:25Z",
      "updatedAt": "2023-10-23T23:59:04Z",
      "closedAt": "2023-10-23T23:59:03Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117",
          "createdAt": "2023-03-09T23:16:53Z",
          "updatedAt": "2023-03-09T23:16:53Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A [Federation](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-04.html#name-federation) section was added. ",
          "createdAt": "2023-10-23T23:59:03Z",
          "updatedAt": "2023-10-23T23:59:03Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOIvmHss5gcInY",
      "title": "Clarification: What options exist for registration policies that don't get published on the ledger?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/45",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "Registration Policy",
        "RBAC-ABAC"
      ],
      "body": "              Maybe it would be better if the information owner is expected to apply privacy protections before contributing a Statement?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123624264_\r\n            ",
      "createdAt": "2023-03-09T20:59:51Z",
      "updatedAt": "2023-12-05T15:49:10Z",
      "closedAt": "2023-12-05T15:49:09Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The architecture states: \r\n> The Transparency Service is trusted with the confidentiality of the Signed Statements presented for registration. Some Transparency Services may publish every Transparent Statement in their logs, to facilitate their dissemination and auditing. Others may just return Receipts to clients that present Singed Statements for registration, and disclose the ledger only to auditors trusted with the confidentiality of its contents.\r\n\r\nThe above portion has a number of questions that we should clarify:\r\n\r\n> Some Transparency Services may publish every Transparent Statement in their logs.\r\n\r\nIf the Registration Policy denies a statement from being registered, is it written to the diagnostics log? The Architecture uses log and ledger interchangeably. #54 consolidates log and ledger, leaving log to represent a diagnostics log.\r\n\r\n> Others may just return Receipts to clients that present Singed Statements for registration, and disclose the ledger only to auditors trusted with the confidentiality of its contents.\r\n\r\nThis line refers to entries written to the ledger, which may have restricted access. While the architecture doc refers to \"access\" in multiple places, and while I personally don't believe the spec should define the details of Role Based Access Control (RBAC), the topic comes up enough that we should likely define a section for RBAC, that leaves the details to the implementation. #49\r\n\r\n@nedmsmith brings up a question about privacy:\r\n\r\n>   Maybe it would be better if the information owner is expected to apply privacy protections before contributing a Statement?\r\n\r\nCan you clarify a bit? Is this a binary question of transparent or opaque? Or, are you suggesting some more granular privacy protection?",
          "createdAt": "2023-03-09T21:39:32Z",
          "updatedAt": "2023-03-09T23:15:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117, giving time for registration policy details. \r\n#54 is triaged to 116, while #49 is set to 117",
          "createdAt": "2023-03-09T23:16:37Z",
          "updatedAt": "2023-03-09T23:16:37Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Moving 119, as we'll hopefully be discussing Registration Policies at 118, and incorporating in 119",
          "createdAt": "2023-10-23T23:45:20Z",
          "updatedAt": "2023-10-23T23:45:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "At 118, we've decided a registration policy will exist as a Feed, implemented through the `CWT_Claims subject`, however we have not yet documented that discussion. ",
          "createdAt": "2023-11-28T15:58:17Z",
          "updatedAt": "2023-11-28T15:58:17Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as all registration policies must be referenced by the receipt. See: [Mandatory references to policy feeds in receipts #136](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/136) for remaining actions",
          "createdAt": "2023-12-05T15:49:09Z",
          "updatedAt": "2023-12-05T15:49:09Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOIvmHss5gcLto",
      "title": "Consolidate Log and Ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/46",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "terminology"
      ],
      "body": "The architecture terminology refers to:\r\n\r\n**Registry:** the verifiable append-only data structure that stores Signed Statements in a Transparency Service often referred to by the **synonym log or ledger**. \r\n\r\nTo minimize concept counts, and avoid confusion with diagnostic logs, shall we use Ledger as the persistent form of the Transparency Service?",
      "createdAt": "2023-03-09T21:09:40Z",
      "updatedAt": "2023-05-01T23:58:44Z",
      "closedAt": "2023-05-01T23:58:44Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am not sure, that we are in a place to declare a winner. Maybe there is a chance to resolve this issue on the Monday meeting. I am not overly optimistic as more important changes are in the cue.",
          "createdAt": "2023-03-09T22:13:09Z",
          "updatedAt": "2023-03-09T22:13:09Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. Log wasn't used very much, and while I understand the use of \"log\" for the persistence of statements, @nedmsmith highlighted a section that made me wonder if we were tossing failed registration into a diagnostics log, or placed on a RBAC enabled ledger.\r\n\r\nTo your point, I left this open as it warrants discussion.",
          "createdAt": "2023-03-09T22:20:39Z",
          "updatedAt": "2023-03-09T22:20:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, in lieu of #60 ",
          "createdAt": "2023-05-01T23:58:43Z",
          "updatedAt": "2023-05-01T23:58:43Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "I_kwDOIvmHss5gcSim",
      "title": "Add RBAC Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/49",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "receipts",
        "RBAC-ABAC"
      ],
      "body": "The architecture doc refers to \"access\" in multiple places, and while I personally don't believe the spec should define the details of Role Based Access Control (RBAC), the topic comes up enough that we should likely define a section for RBAC, that leaves the details to the implementation. \r\n\r\nThis is to track an update that:\r\n\r\n- [ ] Captures a section for Role Based Access Control (RBAC), that defines the need, where feeds and possibly some contentTypes may be restricted to permissions assigned to a group\r\n- [ ] Leaves the details to an implementation\r\n- [ ] Defines the behavior if a consumer presents a receipt from the ledger, but the user doesn't have read-level access to the entry. SHOULD/MUST the Transparency Service acknowledges the receipt? Is that disclosure? ",
      "createdAt": "2023-03-09T21:37:12Z",
      "updatedAt": "2023-11-28T16:15:10Z",
      "closedAt": "2023-11-28T16:15:09Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring to 117",
          "createdAt": "2023-03-09T23:14:30Z",
          "updatedAt": "2023-03-09T23:14:30Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Keeping as it revolves around Receipt validation, which should be clarified in the spec.",
          "createdAt": "2023-10-23T23:46:34Z",
          "updatedAt": "2023-10-23T23:46:34Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as we've discussed RBAC/ABAC is an implementation detail, and difficult to open the topic and not complete. ",
          "createdAt": "2023-11-28T16:15:09Z",
          "updatedAt": "2023-11-28T16:15:09Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOIvmHss5gcl57",
      "title": "Clarification: The registration policy should do revocation checking of identities.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/55",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Registration Policy"
      ],
      "body": "              It might scale better if the TSs request revocation status updates such as OCSP [RFC2560].\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123634020_\r\n            ",
      "createdAt": "2023-03-09T22:58:37Z",
      "updatedAt": "2023-10-23T23:57:14Z",
      "closedAt": "2023-10-23T23:57:14Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think we'll have time to land this for 116. Assigning to 117, giving time for discussion and clarity as we dig into the details of the registration policies.",
          "createdAt": "2023-03-09T23:14:07Z",
          "updatedAt": "2023-03-09T23:14:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale and belief the current doc addresses the original issue.\r\nPlease open new issues/prs with specific pointers if needed",
          "createdAt": "2023-10-23T23:57:14Z",
          "updatedAt": "2023-10-23T23:57:14Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOIvmHss5gc4m8",
      "title": "Document rationale for COSE vs DSSE etc.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/57",
      "state": "CLOSED",
      "author": "nealmcb",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Re: #40:\r\n\r\nThe [SCITT charter](https://datatracker.ietf.org/wg/scitt/about/) says:\r\n> reuse existing work from IETF WGs such as COSE and RATS, as appropriate,\r\n\r\nThe words \"as appropriate\" suggest to me that we should have some discussion of the pros and cons of mandating COSE, and address alternatives.\r\n\r\nIn particular, there is already deployment experience with the closely-related effort [Sigstore](https://www.sigstore.dev/) which uses [DSSE: Dead Simple Signing Envelope](https://github.com/secure-systems-lab/dsse). Some googling will surface a comparison of [Signature Formats. Envelopes and Wrappers and Formats, Oh My! by Dan Lorenc](https://dlorenc.medium.com/signature-formats-9b7b2a127473) which recommends DSSE over the family of JOSE standards, which includes COSE to some extent, though COSE is not covered in that article.\r\n\r\nI think we'd should try to promote interoperability with Sigstore.\r\n\r\nIs there some background info somewhere on advantages of mandating COSE?",
      "createdAt": "2023-03-10T00:41:23Z",
      "updatedAt": "2023-09-12T00:00:10Z",
      "closedAt": "2023-09-04T15:20:15Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nealmcb,\r\nHere's some background that was in the comment on #16:\r\n\r\n-------\r\n\r\nThanks, @nealmcb. COSE is intrinsic to SCITT as an extensible means to capture headers and payload in a consistent/standards-based format. The evaluation was captured here: [Digital Artifact Signing Envelope Format Comparison](https://docs.google.com/document/d/18YVGA4mq45wfUkWrAqWkymzdHRcXxlwINKXnEp86L0w/edit#heading=h.3v6vw85pjg5e)\r\nAs a result, sigstore/rekor added support through a [draft](https://github.com/sigstore/rekor/pull/731) then [subsequent merged PR](https://github.com/sigstore/rekor/pull/867) ",
          "createdAt": "2023-03-10T01:49:25Z",
          "updatedAt": "2023-03-10T01:49:25Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Thank you @SteveLasker, that document is very helpful. What is the status and plan for the document, which is undated, marked as a \"Draft\", and has a note that it had been perhaps 1/3 reviewed as of a 2022-03-16 meeting.\r\n\r\nI'll note that Dan Lorenc and Laurent Simon have a number of critiques from last year which I find insightful, and which have not been addressed yet.\r\nThough, as you note, it was also Dan who signed off on supporting COSE in Sigstore's Rekor last June.... ",
          "createdAt": "2023-03-13T00:51:09Z",
          "updatedAt": "2023-03-13T00:51:09Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "body": "Neal, comparing an industry standard to arbitrary proprietary proposals seems to be a never ending game.  The current implementation of DSSE by SigStore as a starting point seems to be a weak reason to not use COSE.  From a technology point of view hoping the words Simple equals simple is not always true.  The future needs and extensibility of this space begs for mechanisms that pre-exist in COSE.  Having the IETF entertain a different signing serialization format pushes for it to be within the IETF.  Which COSE is.  I want to push back that before entertaining DSSE or something else bringing it to the IETF is the place to start.\r\n\r\nAsking if we should use S/MIME does meet that requirement listed above but picking one is a fair goal.  The COSE format is required for IOT devices and is built with all the knowledge of where S-MIME (and other formats) struggled, leads to it being top contender.  If you want to make a case why it is NOT a great choice, then please take pen to paper and make a case. \r\n\r\nIf the argument is that COSE is frozen and thus cannot be extended, that has been proven false in the current meetings.  The working groups have been very thoughtful and accepting of requirements such as Merkle proof receipts. \r\n\r\nIf the argument is that we should support more than one, we really need to have you explain your reasoning.",
          "createdAt": "2023-03-29T02:53:14Z",
          "updatedAt": "2023-03-29T02:53:14Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Building on IETF standards ensures widely available tooling and an expert community that can provide reviews, and support for profiles and extensions.\r\n\r\nThere is also an IETF procedural detail on citing envelope formats that are not RFCs or of an equivalent maturity level.\r\n\r\nI don't think we should support an envelope format other than COSE. \r\n\r\n",
          "createdAt": "2023-03-29T07:18:29Z",
          "updatedAt": "2023-03-29T07:18:29Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing the issue since there are not further actions.",
          "createdAt": "2023-09-04T15:20:15Z",
          "updatedAt": "2023-09-04T15:20:15Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "I appreciate the discussion here to date - it is helpful! And I don't mean to detract from SCITT progress, or question the decision to build on IETF signature format standards\r\n\r\nBut I still see value in getting more clarity on the technical tradeoffs between COSE and DSSE, as the current title of this issue reflects.\r\n\r\nA comment above describes DSSE as \"proprietary\". It may not be under change control of a recognized standards-making body, but it is [licenced via Apache License 2.0](https://github.com/secure-systems-lab/dsse/blob/master/LICENSE) and thus quite open and not proprietary.\r\n\r\nI note that the draft discussion document at [Digital Artifact Signing Envelope Format Comparison](https://docs.google.com/document/d/18YVGA4mq45wfUkWrAqWkymzdHRcXxlwINKXnEp86L0w/) still has lots of unresolved issues.\r\n\r\nI'll also note that I've added a similar comment to DSSE at [Document rationale for DSSE vs COSE etc](https://github.com/secure-systems-lab/dsse/issues/62).\r\n\r\nIn my mind, ideally the discussion document would end up published in a cleaned-up, if not fully agreed-upon form.\r\n\r\nIf nothing else, perhaps future web searches will more easily surface one of these documents, leading to useful insights.\r\n\r\nIf there is any hope that some folks may continue to engage on those fronts, I'd request that this issue be reopened, to help encourage that.",
          "createdAt": "2023-09-04T20:59:19Z",
          "updatedAt": "2023-09-04T20:59:19Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I closed this issue because I do not see a need to add text comparing a proprietary technology with standardized technology. If there is a decision in SCITT then it is about whehter to use JSON or CBOR (with the corresponding security wrappers). \r\n\r\nAs far as I know there is no ongoing work in the IETF to standardize DSSE. ",
          "createdAt": "2023-09-06T09:14:44Z",
          "updatedAt": "2023-09-06T09:14:44Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Again, I think it is very misleading to describe DSSE as \"proprietary\". No one has exclusive rights to use it. From everything I see, it is an open spec designed by recognized experts and used by e.g. sigstore and in-toto, which are themselves managed by the Linux Foundation. The documents are [licenced via Apache License 2.0](https://github.com/secure-systems-lab/dsse/blob/master/LICENSE), making the whole thing more open from my standpoint than e.g. ISO standards.\r\n\r\nIt's ok for SCITT and IETF to decide to stick to formats they have better change control over. But I hope others take up the task of an inclusive technical comparison of the relevant signature envelope formats.",
          "createdAt": "2023-09-12T00:00:10Z",
          "updatedAt": "2023-09-12T00:00:10Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOIvmHss5gdLEq",
      "title": "Clarification: Honest reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/58",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "              use of 'honest' seems out of place. Is this describing TS operational integrity requirements such as ACID?\r\n\r\n_Originally posted by @nedmsmith in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16#discussion_r1123609959_\r\n            ",
      "createdAt": "2023-03-10T02:27:03Z",
      "updatedAt": "2023-10-23T23:56:34Z",
      "closedAt": "2023-10-23T23:56:34Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith, would you like to make a suggestion/PR?",
          "createdAt": "2023-05-02T00:00:52Z",
          "updatedAt": "2023-05-02T00:00:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Ping to @nedmsmith for a suggestion",
          "createdAt": "2023-09-05T23:58:11Z",
          "updatedAt": "2023-09-05T23:58:11Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, and belief the latest doc covers the original concern.\r\nPlease open new issues/prs with specific pointers if needed",
          "createdAt": "2023-10-23T23:56:34Z",
          "updatedAt": "2023-10-23T23:56:34Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "I_kwDOIvmHss5h0XKR",
      "title": "using media types for errors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/62",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "`application/problem+json` vs `application/json`\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/60#discussion_r1148486103\r\n\r\nWhy?\r\n\r\nAre there any references for this design choice I can review?",
      "createdAt": "2023-03-26T22:20:37Z",
      "updatedAt": "2023-12-05T15:38:53Z",
      "closedAt": "2023-12-05T15:38:52Z",
      "comments": [
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "Running into this issue in https://github.com/scitt-community/scitt-api-emulator/pull/27 as well.  Would be great to return an object in addition to or instead of a string. Or allow for other properties which would be fully content-typeable to a custom response object within the error response on claim insert failure.\r\n\r\nLack of this prevents an automated conversation to resolve issues with claim insertion. Human readable strings are great, but ideally a human doesn't even get involved and machines can auto remediate issues due to detailed failure reasoning. This way the a human readable string might only be needed after a failed machine driven insert conversation (more than one call response).\r\n\r\nFor example  if the identity is an OIDC token with an invalid subject, the policy error could say what the subject and or other fields should contain or be set to.\r\n\r\n- References\r\n  - https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#example-requiring-a-reusable-workflow\r\n  - https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/using-openid-connect-with-reusable-workflows\r\n  - https://github.com/sigstore/fulcio/issues/305) mentions wanting `job_workflow_ref,repository_id,repository_owner_id` to effectively pin auth to a known workflow. Ideally this expands to attestable stacks, where stack is logged in SCITT, i.e. secure boot (example: [ChromeOS: Attesting Device Mode](https://www.chromium.org/developers/design-documents/tpm-usage/#attesting-device-mode)) and TEEs. A policy engine could require that a notary signed from an attested setup.\r\n    - `gh oidc-sub set --repo org/repo --subs \"job_workflow_ref,repository_id,repository_owner_id\"`\r\n  - `job_workflow_sha` may also be helpful for pinning to a release",
          "createdAt": "2023-04-27T21:17:15Z",
          "updatedAt": "2023-09-14T20:59:06Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Should this move to [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/)",
          "createdAt": "2023-10-23T23:49:42Z",
          "updatedAt": "2023-10-23T23:49:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, with a link to the copied issue in SCRAPI: [using media types for errors #4](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/issues/4)",
          "createdAt": "2023-12-05T15:38:52Z",
          "updatedAt": "2023-12-05T15:38:52Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOIvmHss5h87XY",
      "title": "Add the URL examples from IETF 116 slides",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/63",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@fournet add your DID URL examples here, then let us argue over their parameters, and work towards a pull request to the architecuture.",
      "createdAt": "2023-03-28T07:25:29Z",
      "updatedAt": "2023-06-05T15:47:27Z",
      "closedAt": "2023-06-05T15:47:27Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "here are some examples from the scitt.xyz prototype:\r\n\r\n- https://ts.example/urn:ietf:params:trans:inclusion:rfc9162_sha256:2:e7f16481e965db422b1d7dadf5c7f205ad6600445f5f9404a76cc85caab81688\r\n\r\n- https://ts.example/urn:ietf:params:trans:consistency:rfc9162_sha256:2:e7f16481e965db422b1d7dadf5c7f205ad6600445f5f9404a76cc85caab81688\r\n\r\nBoth of these are URLs than contain URNs",
          "createdAt": "2023-06-05T15:46:15Z",
          "updatedAt": "2023-06-05T15:46:15Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as a dupe of #66 ",
          "createdAt": "2023-06-05T15:47:27Z",
          "updatedAt": "2023-06-05T15:47:27Z"
        }
      ]
    },
    {
      "number": 65,
      "id": "I_kwDOIvmHss5iQqXQ",
      "title": "Issuer identity and key transparency",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/65",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Consider the case where an issuer of a signed statement has used a decentralized identifier method such as `did:web`.\r\n\r\nSimilar to OIDC, this issuer identity may rotate keys, and we want to know which keys were authoritative at the time of the evaluation of the registration policy.\r\n\r\nThis can be accomplished by having the transparency service leverage its own log to record a \"self notarized did resolution result\".\r\n\r\nHere is an example:\r\n\r\n#### Issuer Signed Statement\r\n\r\n{ iss: did:web:issuer.example, kid: key-0, ctyp: application/vnd.sbom+json } { ...sbom.json }\r\n\r\n#### Notarized Issuer Decentralized Identity Document\r\n\r\n{ iss: did:web:transparency.example, kid: key-1, ctyp: ***application/did+json*** } { ...did.json  }\r\n\r\nexample did document:\r\n\r\n```json\r\n{\r\n  \"@context\": [\r\n    \"https://www.w3.org/ns/did/v1\",\r\n    \"https://w3id.org/security/suites/jws-2020/v1\"\r\n  ],\r\n  \"id\": \"did:web:issuer.example\",\r\n  \"verificationMethod\": [\r\n    {\r\n      \"id\": \"#assertion-key\",\r\n      \"type\": \"JsonWebKey2020\",\r\n      \"controller\": \"did:web:issuer.example\",\r\n      \"publicKeyJwk\": {\r\n        \"kty\": \"EC\",\r\n        \"crv\": \"P-256\",\r\n        \"x\": \"SWlPDkBj-70Ys9Bm3sXw8rycgnfREDrYZIOYX-zegB0\",\r\n        \"y\": \"zYBAHi-xaSyrxy-QhnsrqrgzrLVO60NJUh3tcEwtp0g\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": \"#authentication-key\",\r\n      \"type\": \"JsonWebKey2020\",\r\n      \"controller\": \"did:web:issuer.example\",\r\n      \"publicKeyJwk\": {\r\n        \"kid\": \"did:passkey:W29iamVjdCBBcnJheUJ1ZmZlcl0=\",\r\n        \"kty\": \"EC\",\r\n        \"crv\": \"P-256\",\r\n        \"x\": \"xNk9EZmfryirhVUVsD7lhX6QnRN4C8L-aWBePDODA3I\",\r\n        \"y\": \"LfRm9DlSNtJ0-7vy8UJsIqimAawi04h9gnz66srwxzM\",\r\n        \"key_ops\": [\r\n          \"verify\"\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"assertionMethod\": [\r\n    \"did:web:issuer.example#assertion-key\"\r\n  ],\r\n  \"authentication\": [\r\n    \"did:web:issuer.example#authentication-key\"\r\n  ]\r\n}\r\n```",
      "createdAt": "2023-03-31T01:36:26Z",
      "updatedAt": "2023-12-05T16:29:06Z",
      "closedAt": "2023-12-05T15:53:53Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This use case also enables the transparency to provide confidence that a given issuer keys are authoritative, and therefore clients of such a service no longer need to contact the web origin used by the issuer.\r\n\r\nThis provides some privacy benefits, since no network log will be created during verification when a suitably fresh receipt for a did document is present.\r\n\r\nThe same \"offline verification benefits\" for \"signed statements\" now apply to \"offline access to issuer key material\".",
          "createdAt": "2023-03-31T01:40:21Z",
          "updatedAt": "2023-03-31T01:40:21Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I like the general ideal. This is particularly useful with did:web; in fact we implemented something similar in our CCF-based SCITT prototype.\r\n\r\nAn interesting question is how to record this information. It could be in a separate  statement (shared by all statements signed with the resulting key) and/or as an additional registration-time header (possibly referring to a prior resolution statement if we have them). In our prototype, we used a separate enclave to fetch the DID document to sign and attest its correct resolution at the time of registration in a CCF transaction (but not in a custom statement). ",
          "createdAt": "2023-05-16T14:05:50Z",
          "updatedAt": "2023-05-16T14:05:50Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as we've copied to [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/issues/5)",
          "createdAt": "2023-12-05T15:53:53Z",
          "updatedAt": "2023-12-05T16:29:06Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "I_kwDOIvmHss5kVZhk",
      "title": "Policy Identifiers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/66",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology",
        "receipts"
      ],
      "body": "Purpose of this issue is to disambiguate.\r\n\r\n### Policy\r\n\r\nA file that decides on registration,  (OPA /  REGO / JSON SCHEMA / CDDL, etc...)\r\n\r\n### Content ID for Policy\r\n\r\nA content identifier, such as `urn:sha256:digest(file)`, where file is a Policy.\r\n\r\n### Proposed Policy\r\n\r\nThis is a signed statement, where the statement is a Policy or a Content ID for a Policy\r\n\r\n(Registration policies apply to this object, sorta meta / recursive).\r\n\r\n### Transparent Policy\r\n\r\nA Proposed Policy with a receipt.\r\n\r\nThis is the same as a Transparent Statement for a content type that is a Policy or a Policy Content ID.\r\n\r\nWe think there is utility in defining a URN scheme for this, something like:\r\n\r\nurn + location of transparency service + identifiers for statement or identifiers for policy.\r\n\r\nFor example:\r\n\r\n- `did:web:transparency.example/policy/hash` -> resolves to a policy file\r\n- `did:web:transparency.example/statement-hashes/hash` -> resolves to a signed statement\r\n- `did:web:transparency.example/transparent-statement/hash` -> resolves to a transparent statement\r\n\r\n^ or some combined identifier built form combinations of these.\r\n\r\nIf you don't want DIDs, you can replace `did:web` with `urn:scitt`.",
      "createdAt": "2023-04-25T14:52:31Z",
      "updatedAt": "2023-12-12T15:46:12Z",
      "closedAt": "2023-12-12T15:46:12Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed dupe: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/63#issuecomment-1577047310",
          "createdAt": "2023-06-05T15:47:12Z",
          "updatedAt": "2023-06-05T15:47:12Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "I_kwDOIvmHss5k4dAF",
      "title": "Do we need dedicated section on SCITT requirements for append-only log?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/67",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "terminology"
      ],
      "body": "Maybe the term \"append-only log\" is self-descriptive and technology-agnostic enough by itself or maybe a set of examples is helpful.",
      "createdAt": "2023-05-02T14:20:29Z",
      "updatedAt": "2023-10-23T23:55:14Z",
      "closedAt": "2023-10-23T23:55:14Z",
      "comments": [
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "Examples could help, as long as we are not too demanding on implementations (notably on their need to commit & persist statements before issuing receipts, on serializability, on replication). This was controversial in several discussions so far. ",
          "createdAt": "2023-05-16T13:56:59Z",
          "updatedAt": "2023-05-16T13:56:59Z"
        },
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "I believe there is some functionality that is required that is not encompassed by the notion of an append only log:\r\n1. Ability to somehow tag and group items, perhaps to simulate the ability to add to an existing set of entries. For example, incremental cryptographic data as a larger data set is being built, or another example is test data that is applied later.\r\n\r\n2. Ability to submit just cryptographic data to the log, while storing the data elsewhere.\r\n\r\nThat said, it may also go too far. The idea of an append-only log is perhaps only one possible implementation that can securely store the statements and provide receipts.",
          "createdAt": "2023-05-22T15:00:58Z",
          "updatedAt": "2023-05-22T15:10:04Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, and belief we've captured this. \r\nPlease open new Issues/PRs with new new specific needs",
          "createdAt": "2023-10-23T23:55:14Z",
          "updatedAt": "2023-10-23T23:55:14Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOIvmHss5magEo",
      "title": "URLs for Transparent Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/69",
      "state": "CLOSED",
      "author": "fournet",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "terminology"
      ],
      "body": "This issue summarizes discussions so far on references between transparent statements---see also slide 22 at the last IETF SCITT session. I am using \"reference\" below but identifier or URL may be better.  \r\n  \r\n**Motivation:** We need a standard way to refer to previously-registered statements. In particular, references to transparent statements may be included in new statements (in headers or payloads or receipts) to point, for example, to a policy statement, to some keying information, to a prior statement it replaces on a given stream, or to statements for artifacts it depends on in the supply chain. \r\n- Using a reference instead of a full transparent statement (or a full receipt) is more efficient (compact, enabling sharing/caching of common statements) and more transparent (everyone benefits from reviews/audits of common statements).\r\n- A reference to a transparent statement is more informative than a reference to its signed statement or its payload.\r\n- References enable federation and advanced registration policies. \r\n \r\n**Goals:**\r\n1. Given a transparent statement, we can compute its reference.\r\n2. Given a reference, we can discover its TS and transparent statement.\r\n3. A reference commits to a unique transparent statement.\r\n \r\n**Syntax:** references include both a locator and a commitment. Concretely, we may use DID URLs of the form \r\n \r\n`did:web:ts.software.org/42&digest=4ce2320130450...` \r\n \r\nwhere `42` is the serial registration index in the log of this TS and `digest` is the SHA256 hash of the transparent statement. \r\n\r\nWe may provide a more compact format by making the DID optional for local references within a TS, and making the digest optional when the transparent statement is attached.  \r\n\r\nWe may even just use the raw digest `4ce2320130450` as an opaque identifier (since the hash already authenticates the locator) and separately deal with locators.  \r\n \r\n**Discoverability** The TS, or an auxiliary database of transparent claims, may support transparent-statement lookups given their reference. This auxiliary lookup service is not a requirement (random access is hard to guarantee) and it need not be trusted (since clients can easily verify the receipt of the resulting transparent statement against their reference). Alternatively, a transparent statement may be distributed together with supporting transparent statements it refers to. This facilitates offline verification and auditing but is more verbose. Or it may include auxiliary headers to help retrieve the supporting statements from any other location.   \r\n\r\n**Open issues:**\r\n- A TS may produce multiple receipts for the same registered statement, hence multiple commitments with different digests. We could simply ignore the problem, and assume the \u201cprimary\u201d receipt is the first one produced by the TS. We could also provide flexibility, using something of the form \r\n  \r\n  `did:web:ts.software.org/42&registered=SHA256(signed statement)&digest=SHA256(receipt)`\r\n- Do we need different formats for different implementations? For example, we may use `digest-sha256=...` for agility; we also argued about a TS federating multiple logs, in which case we may need more than a serial registration index.\r\n \r\n",
      "createdAt": "2023-05-20T16:41:19Z",
      "updatedAt": "2024-01-02T15:59:39Z",
      "closedAt": "2024-01-02T15:53:00Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "NEW (during WG discussion):\r\n\r\n* Use of DID in the scope of the Internet seems fine at first glance. A SCITT specific URI scheme also seems like a good route (based on comments from Hannes)\r\n* The duty to provide the content at the location the reference points to (maybe after resolving it) is a burden of the issuer, yes?\r\n* A solution specified should take into account historical analog data (that you cannot point at directly via resolved URL), (based on comments from Charlie). In cases of historical data that was previously not online available, there might be an issuer that vouches for having registered the corresponding statement after transforming analog statements into a digital representations and then making them available?\r\n\r\nOLD (I really missed the topic here, nvm):\r\n\r\nThe [SCITT architecture](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html) highlight in [Section 1](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-1):\r\n\r\n> A Statements payload content MAY be encrypted and opaque to the Transparency Services, if so desired: however the metadata MUST be transparent in order to warrant trust for later processing.\r\n\r\nFollowing this language, this type of reference would be a... `non-opaque` statement. `A statement that MUST be transparent and that has a well-known (standardized CBOR) structure`, maybe?.",
          "createdAt": "2023-05-22T15:10:24Z",
          "updatedAt": "2023-05-26T14:42:48Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Take a look at:\r\n\r\n- https://docs.ipfs.tech/concepts/content-addressing/\r\n- https://ipld.io/\r\n\r\nLots on inspiration there... see also:\r\n\r\n- https://datatracker.ietf.org/doc/draft-multiformats-multibase/",
          "createdAt": "2023-05-25T17:27:09Z",
          "updatedAt": "2023-05-25T17:27:09Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> * https://datatracker.ietf.org/doc/draft-multiformats-multibase/\r\n\r\n???  What is the point of this specification?\r\nMinimizing interoperability while maximizing complexity?",
          "createdAt": "2023-05-26T14:49:04Z",
          "updatedAt": "2023-05-26T14:49:04Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@cabo string encodings for this table: https://github.com/multiformats/multicodec/blob/master/table.csv\r\n\r\nnotice the hash functions, public keys, and other \"binary types\", they get a byte prefix that is uvarint, and then they get a byte prefix for base encoding, such as base64url, base64, base32, base16, base2, base8, base32hex, base32z, base58btc, base58flickr, base64pad.... and of course my favorite: base256emoji\r\n\r\n",
          "createdAt": "2023-06-02T14:00:46Z",
          "updatedAt": "2023-06-02T14:00:46Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I am removing myself from this issue, I don't believe it is actionable.\r\n\r\nA simpler and more direct issue should be raised.\r\n\r\nThe new issue, should describe spec text suggestions only.\r\n\r\nFor example:\r\n\r\n1. the spec SHALL include an example\r\n2. the spec SHALL include a specific syntax for indentifiers\r\n3. the spec SHALL address first order and second order receipts.\r\n4. the spec SHALL address multiple receipts for a single statement, and show unique URLs / identifiers for each.",
          "createdAt": "2024-01-02T15:48:57Z",
          "updatedAt": "2024-01-02T15:59:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this issue as it's a bit dated as the terminology has evolved a bit, and we've had subsequent PRs to clarify portions.\r\n@fournet, please open new issues to the remaining gaps. ",
          "createdAt": "2024-01-02T15:53:01Z",
          "updatedAt": "2024-01-02T15:53:01Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOIvmHss5oJGeE",
      "title": "Add package.json for aasvg",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/70",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "Consider adding `package.json` for this repository so that people are able to use this without having `aasvg` locally installed.\r\n\r\nSee https://github.com/martinthomson/i-d-template/blob/main/doc/TOOLS.md#installing-dependencies-for-ci",
      "createdAt": "2023-06-08T07:03:31Z",
      "updatedAt": "2023-10-23T23:54:28Z",
      "closedAt": "2023-10-23T23:54:27Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, this seems like a good suggestion. Any additional context as you're our \"build master\" with viz across multiple IETF drafts.",
          "createdAt": "2023-09-06T00:09:16Z",
          "updatedAt": "2023-09-06T00:09:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing as stale.",
          "createdAt": "2023-10-23T23:54:27Z",
          "updatedAt": "2023-10-23T23:54:27Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "I_kwDOIvmHss5q_F07",
      "title": "Federation part 1",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "multiple-instances"
      ],
      "body": "This issue tracks initial work to be completed regarding profiling of COSE to support federation for SCITT.\r\n\r\n\r\nSome initial topics that still need to be addressed:\r\n\r\n- How do transparency services discovery each other?\r\n- How do they know if their policies are compatible?\r\n- How do they know if they support the same issuers? \r\n- How do they know if they support the same artifact types?\r\n- How is issuer privacy impacted by federation? ",
      "createdAt": "2023-07-08T12:39:47Z",
      "updatedAt": "2024-02-16T00:03:20Z",
      "closedAt": "2024-02-16T00:03:20Z",
      "comments": [
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "What are folks thoughts on making entry IDs hashes of claims? This would make it easy to manage state because claims and receipts are content addressable. The side effect is one can no longer register the same claim twice under a different entry ID. I wasn't able to find if the SCITT arch doc explicitly defined expected behavior there.\r\n\r\nExample of what this might look like within the SCITT API Emulator: https://github.com/scitt-community/scitt-api-emulator/commit/9c54f9c542f042954e4d02b291ea4856327223be\r\n\r\n```\r\n127.0.0.1 - - [17/Oct/2023 18:08:08] \"POST /entries HTTP/1.1\" 201 -\r\n127.0.0.1 - - [17/Oct/2023 18:08:08] \"GET /entries/sha384:76303a87c3ff728578d1e941ec4422193367e31fd37ab178257536cba79724d6411c457cd3c47654975dc924ff023666/receipt HTTP/1.1\" 200 -\r\n```",
          "createdAt": "2023-10-18T01:16:27Z",
          "updatedAt": "2023-10-18T01:17:12Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "In your original comment, you mentioned a default hash algorithm and implementation.\r\n\r\n>The side effect is one can no longer register the same claim twice under a different entry ID.\r\n\r\nDoes this goes for entries under different hash algorithms and implementations, are those count as \"the same\" one entry ID?",
          "createdAt": "2023-10-18T01:47:01Z",
          "updatedAt": "2023-10-18T01:47:01Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "At least as I was playing with it in that emulator pull request it the hash algorithm used you be part of the entry ID (similar to container image format reference by sha256 format). It the entry hash algorithm could also be part of the service parameters. If log A and log B had different entry id hash algorithms federation would involve an index or mapping so that federation mechanics don't end up re-inserting a claim which already exists Example: Log A federates Claim A1 to Log B. Log B inserts claim A1 as B1, federates event to Log A which inserts claims as A2. If entries were content addressable it would be fast to determine and A2 is in fact A1 and does not need to be re-inserted. If they aren't the same then a mapping transmitted with the federation event would include the known entry IDs within each log or something.",
          "createdAt": "2023-10-18T03:31:24Z",
          "updatedAt": "2023-10-18T03:31:24Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "Related SCRAPI section: https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/blob/b0ee171a26d634a8f54eb46779dcd023ccdf2a63/draft-birkholz-scitt-scrapi.md#discovering-federation\r\n\r\nSome options for Federation:\r\n\r\n- https://www.w3.org/TR/activitypub/\r\n  - Pros\r\n    - Existing Adoption\r\n  - Cons\r\n    - Not sure if built with confidentiality as first thing in mind, not sure if this matters if the point is transparency\r\n- [WireFederation_0_0_4.pdf](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/files/13273496/WireFederation_0_0_4.pdf)\r\n  - Pros\r\n    - IETF Adjacent?\r\n  - Cons\r\n    - Pre-v1\r\n- https://github.com/decentralized-identity/decentralized-web-node\r\n  - Pros\r\n    - \"Web5\" ecosystem\r\n  - Cons\r\n    - They decided to go with a non-browser native approach, requires an extension\r\n    - Heavily influenced by $$$\r\n- https://openfl.readthedocs.io/en/latest/source/openfl/communication.html - https://github.com/securefederatedai/openfl/blob/develop/docs/overview.what_is_intel_federated_learning.rst\r\n  - Pros\r\n    - Feeds right into ML\r\n  - Cons\r\n    - TODO\r\n\r\nIt could be interesting for SCITT services to declare federation protocols they support via exported service parameters. Different instances my have different threat models and require different levels of assurance around CIA properties of federation protocols.\r\n\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/96#issuecomment-1817770016\r\n\r\n```yaml\r\nfederation:\r\n- protocol: activitypub\r\n  # Actor to follow to receive events for any statement (subject `*`)\r\n  everything: allsubjects\r\n```\r\n\r\n- How do transparency services discover each other?\r\n  - Enable multiple options for discovery\r\n  - For services an instance federates with they can choose if they want to be exported as options\r\n    - See notes later on privacy and subsequent federations policy\r\n\r\n- How do they know if their policies are compatible?\r\n  - At the IETF 118 hackathon we discussed labeled property graphs\r\n\r\n- How do they know if they support the same issuers?\r\n  - Policy graph traversal / policy analysis\r\n\r\n- How do they know if they support the same artifact types?\r\n  - Policy graph traversal / policy analysis\r\n\r\n- How is issuer privacy impacted by federation?\r\n  - Depends on selected federation protocol\r\n    - Additional policy in place around federation\r\n      - Levels of assurance in execution of subsequent federations policy\r\n        - TEE, etc.\r\n  - Depends on deployment context",
          "createdAt": "2023-11-06T23:19:17Z",
          "updatedAt": "2023-11-20T16:06:35Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for a thorough summary, @pdxjohnny. On the IETF side I am not sure exchanging was intended to mean federation, but in the pub/sub context ROLIE way be partially or wholly useful.\r\n\r\nhttps://datatracker.ietf.org/doc/rfc8322/",
          "createdAt": "2023-11-21T17:22:12Z",
          "updatedAt": "2023-11-21T17:22:12Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Suggestion is to remove the federation section",
          "createdAt": "2024-02-12T17:39:48Z",
          "updatedAt": "2024-02-12T17:39:48Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "I_kwDOIvmHss5rGFHB",
      "title": "Add issue describing relative DID URLs",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/81",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "based on https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/78/files#r1256894727\r\n\r\nspecifically the JSON and JSON-LD processing of the fragment part...",
      "createdAt": "2023-07-10T13:15:16Z",
      "updatedAt": "2023-09-10T19:01:40Z",
      "closedAt": "2023-09-10T19:01:40Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, does #78 cover this issue?",
          "createdAt": "2023-09-06T00:06:54Z",
          "updatedAt": "2023-09-06T00:06:54Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I think we can close this one.",
          "createdAt": "2023-09-06T00:10:09Z",
          "updatedAt": "2023-09-06T00:10:09Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "I_kwDOIvmHss5rHgV7",
      "title": "Add references to SBOM technologies",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/83",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "The architecture draft lists a number of different SBOM technologies. References need to be added and acronymous expanded.\r\nYogesh volunteered to deal with this issue.",
      "createdAt": "2023-07-10T16:34:26Z",
      "updatedAt": "2023-10-23T20:15:31Z",
      "closedAt": "2023-10-23T20:15:30Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig I will work on this on return from my holidays...",
          "createdAt": "2023-08-18T15:04:45Z",
          "updatedAt": "2023-08-18T15:04:45Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "ping",
          "createdAt": "2023-10-23T15:20:44Z",
          "updatedAt": "2023-10-23T15:20:44Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "ack: shall we attempt this today?",
          "createdAt": "2023-10-23T15:22:49Z",
          "updatedAt": "2023-10-23T15:22:49Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "I_kwDOIvmHss5rHkvN",
      "title": "Requesting that existing software supply chain practice used in digital signatures be supported by SCITT",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/84",
      "state": "CLOSED",
      "author": "rjb4standards",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As I mentioned during today's call. SCITT is entering into a large, established software supply chain corpus that uses common practices for digital signature verification, including PGP keys and X.509 digital certificates containing public keys. \r\nSCITT adoption of these existing practices will enable seamless adoption of SCITT. Failure to support existing software supply chain practices for digital signatures could prove to be a barrier to SCITT adoption.\r\n\r\nRecommendation: Include support for current software supply chain digital signature practices within the SCITT Architecture.",
      "createdAt": "2023-07-10T16:45:36Z",
      "updatedAt": "2023-07-10T17:15:16Z",
      "closedAt": "2023-07-10T16:49:39Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards here is how you would apply the same text we have for DIDs with COSE to DIDs with PGP:\r\n\r\n*somewhere in your PGP signature meta data*, you would put:\r\n\r\n`did:example:123#key-42` ... and it would need to `dereference` to :\r\n\r\n```\r\n-----BEGIN PGP PUBLIC KEY BLOCK-----\r\nVersion: OpenPGP.js v4.10.9\r\nComment: https://openpgpjs.org\r\nnxjMEYASIXxYJKwYBBAHaRw8BAQdAiEDH3eDo954hWbnf5srnHwL6WfTKXEwu\r\n....\r\n-----END PGP PUBLIC KEY BLOCK-----\r\n```\r\n\r\nThen anyone holding your `PGP Signed Message` would resolve the DID URL to get the key that verifiers the signature.\r\n\r\nInstead of emailing someone your PGP key, you could email them the DID URL that they can use to dereference it.\r\n\r\nThis is similar to how you could send me your PGP key, or you could send me:\r\n\r\nhttps://github.com/rjb4standards.gpg\r\n\r\nA DID URL is just an identifier for a key, that people know how to resolve to the key.\r\n\r\nAnother example: https://github.com/or13.gpg\r\n\r\nHowever, even if you have a PGP key, you will struggle to use it to verify anything other than PGP signatures.",
          "createdAt": "2023-07-10T16:56:31Z",
          "updatedAt": "2023-07-10T16:56:57Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "BTW, here is a CLI that already supports what I am saying: https://github.com/OR13/lds-pgp2021/\r\n\r\nBut it applies to a data format that we don't use in SCITT, \r\ncalled W3C Verifiable Credentials.... \r\nWe also don't use PGP Signatures in SCITT... \r\nbut you could \ud83d\ude87 tunnel \ud83d\ude87 a PGP signature through a cose sign 1 signature as follows:\r\n\r\n\r\n### Signed Statement Protected Header\r\n\r\n```\r\n{\r\n  alg: ES384\r\n  kid: did:example:123#key-42\r\n  content_type: application/pgp-signature\r\n}\r\n```\r\n\r\n### Signed Statement Protected Payload\r\n\r\n```\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQEzBAABCAAdFiEET9QBfWGI/5tPBymeAv7M1jBvKZwFAmAE1TkACgkQAv7M1jBv\r\n....\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n",
          "createdAt": "2023-07-10T17:02:53Z",
          "updatedAt": "2023-07-10T17:04:31Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "That looks reasonable Orie. \r\n\r\n \r\n\r\nDo you also have an example for X.509 cert support?\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Orie Steele ***@***.***> \r\nSent: Monday, July 10, 2023 12:57 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Requesting that existing software supply chain practice used in digital signatures be supported by SCITT (Issue #84)\r\n\r\n \r\n\r\n@rjb4standards <https://github.com/rjb4standards>  here is how you would apply the same text we have for DIDs with COSE to DIDs with PGP:\r\n\r\nsomewhere in your PGP signature meta data, you would put:\r\n\r\ndid:example:123#key-42 ... and it would need to dereference to :\r\n\r\n-----BEGIN PGP PUBLIC KEY BLOCK-----\r\nVersion: OpenPGP.js v4.10.9\r\nComment: https://openpgpjs.org\r\nnxjMEYASIXxYJKwYBBAHaRw8BAQdAiEDH3eDo954hWbnf5srnHwL6WfTKXEwu\r\n....\r\n-----END PGP PUBLIC KEY BLOCK-----\r\n\r\nThen anyone holding your PGP Signed Message would resolve the DID to get the key that verifiers the signature.\r\n\r\nInstead of emailing someone your PGP key, you could email them the DID URL that they can use to dereference it.\r\n\r\nThis is similar to how you could send me your PGP key, or you could send me:\r\n\r\nhttps://github.com/rjb4standards.gpg\r\n\r\nA DID URL is just an identifier for a key, that people know how to resolve to the key.\r\n\r\nAnother example: https://github.com/or13.gpg\r\n\r\nHowever, even if you have a PGP key, you will struggle to use it to verify anything other than PGP signatures.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/84#issuecomment-1629357095> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NEUZESIYBZTORTTM3DXPQX4VANCNFSM6AAAAAA2EZVHRU> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2023-07-10T17:05:21Z",
          "updatedAt": "2023-07-10T17:05:21Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "You can also do the same with W3C Verifiable Credentials:\r\n\r\n\r\n### Signed Statement Protected Header\r\n\r\n```\r\n{\r\n  alg: ES384\r\n  kid: did:example:123#key-42\r\n  content_type: application/vc+ld+jwt\r\n}\r\n```\r\n\r\n### Signed Statement Protected Payload\r\n\r\n```\r\neyJhbGciOiJFUzM4NCIsInR5cCI6InZjK2xkK2p3dCIsImlzcyI6ImRpZDp3ZWI6Y29udG9zby5\r\nleGFtcGxlIiwiaWF0IjoxNjg4MTU1NDg2fQ.eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5\r\nvcmcvbnMvY3JlZGVudGlhbHMvdjIiLCJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbH\r\nMvZXhhbXBsZXMvdjIiXSwiaWQiOiJodHRwczovL2NvbnRvc28uZXhhbXBsZS9jcmVkZW50aWFsc\r\ny8zNTMyNzI1NSIsInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJLWUNFeGFtcGxlIl0s\r\nImlzc3VlciI6ImRpZDp3ZWI6Y29udG9zby5leGFtcGxlIiwidmFsaWRGcm9tIjoiMjAxOS0wNS0\r\nyNVQwMzoxMDoxNi45OTJaIiwidmFsaWRVbnRpbCI6IjIwMjctMDUtMjVUMDM6MTA6MTYuOTkyWi\r\nIsImNyZWRlbnRpYWxTY2hlbWEiOnsiaWQiOiJodHRwczovL2NvbnRvc28uZXhhbXBsZS9iYWZ5Y\r\nmVpZ2R5ci4uLmxxYWJmM29jbGd0cXk1NWZiemRpIiwidHlwZSI6Ikpzb25TY2hlbWEifSwiY3Jl\r\nZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6ZXhhbXBsZToxMjMxNTg4IiwidHlwZSI6IlBlcnN\r\nvbiJ9fQ.Mc6KqMurMIl2XfqY9_4abKvBJszOHEz4wQhHckwbVnkcb2cI1OH7JCu-YL9PK9-5_CA\r\n4egZZoM6yOr7FyOtOCHQFFaK-GNmtCAz-ydJGd6827u28B4pAbyk6ceJjmVWL\r\n```\r\n\r\n",
          "createdAt": "2023-07-10T17:05:59Z",
          "updatedAt": "2023-07-10T17:05:59Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards I'm not really an expert on JOSE or COSE x509, \r\n\r\nSee: https://datatracker.ietf.org/doc/html/rfc9360#name-x509-cose-header-parameters\r\n\r\nBut I think something like this would solve it:\r\n\r\n### Signed Statement Protected Header\r\n\r\n```\r\n{\r\n  alg: ES384\r\n  x5chain: ....\r\n  x5t: ....\r\n  x5u: ...\r\n  content_type: application/spdx+json\r\n}\r\n```\r\n\r\n### Signed Statement Protected Payload\r\n\r\n```\r\n.... \r\n```\r\n\r\n`kid` and `iss` are not meaningful to x509... or are they?... thats what would need to be documented.",
          "createdAt": "2023-07-10T17:09:00Z",
          "updatedAt": "2023-07-10T17:09:40Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I\u2019ve provided an X.509 example to consider:\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Orie Steele ***@***.***> \r\nSent: Monday, July 10, 2023 1:09 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Requesting that existing software supply chain practice used in digital signatures be supported by SCITT (Issue #84)\r\n\r\n \r\n\r\n@rjb4standards <https://github.com/rjb4standards>  I'm not really an expert on JOSE or COSE x509,\r\n\r\nSee: https://datatracker.ietf.org/doc/html/rfc9360#name-x509-cose-header-parameters\r\n\r\nBut I think something like this would solve it:\r\n\r\n\r\nSigned Statement Protected Header\r\n\r\n{\r\n  alg: ES384\r\n  x5chain: ....\r\n  x5t: ....\r\n  x5u: ...\r\n  content_type: application/spdx+json\r\n}\r\n\r\nSigned Statement Protected Payload\r\n\r\n.... \r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/84#issuecomment-1629376319> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NDOVHKG7LN7IDJ5SVLXPQZLPANCNFSM6AAAAAA2EZVHRU> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2023-07-10T17:15:16Z",
          "updatedAt": "2023-07-10T17:15:16Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "I_kwDOIvmHss5rhJwe",
      "title": "REST API Thoughts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/86",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "APIs"
      ],
      "body": "## Key From Message\r\n\r\nPOST key.trans.scitt/resolve/verification-key\r\n{ ... prefer detached siganture }\r\n---content-type application/jwt            --> application/jwk+json\r\n---content-type application/cwt            --> application/cose-key\r\n---content-type application/pgp-signature  --> application/pgp-keys\r\n---content-type application/vc+ld+json     --> application/did+ld+json\r\n---content-type application/vc+json        --> application/did+json\r\n---content-type application/vc+sd-jwt      --> application/did+json\r\n---content-type application/vc+sd-jwt      --> application/jwk+json\r\n\r\n... cache public key locally indexed by meta data (iss, kid) ...\r\n\r\n... verify offline from cache\r\n\r\n## Feed ( Assertion Keys ) From Verified Messages\r\n\r\nGET key.trans.scitt/ {iss}   /verification-keys \r\n  -> feed of all public keys witnessed verifying signed statements for \"iss\" or \"kid\" ...\r\n\r\nDo we want these? https://www.w3.org/TR/did-core/#verification-relationships\r\n\r\n## Feed ( Artifact Statements ) From Verified Messages\r\n\r\nGET key.trans.scitt/ {iss}   /gtin/01/9506000134352\r\n  -> feed of all related signed statements from \"iss\" or \"kid\" ...\r\n\r\nGeneric feed URL structure:\r\n\r\n{iss} / {topic}\r\n      ? {filters} \r\n      # {client-hint}\r\n\r\ndid:example:123/gtin/01/9506000134352?origin-country=US#product-name\r\n\r\nGeneric values for iss:\r\n\r\nDomain: example.com\r\nDID: did:example:123\r\n... ?",
      "createdAt": "2023-07-13T22:34:20Z",
      "updatedAt": "2023-10-24T00:04:38Z",
      "closedAt": "2023-10-24T00:04:38Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Related to `vc` or `vc+ld+jwt`... https://openid.net/specs/openid-connect-userinfo-vc-1_0.html#name-userinfo-vc-verification",
          "createdAt": "2023-07-14T14:29:31Z",
          "updatedAt": "2023-07-14T14:29:31Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Should this move to [SCRAPI](https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/)",
          "createdAt": "2023-10-23T23:51:23Z",
          "updatedAt": "2023-10-24T00:04:23Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing. Please reactivate, or open in SCRAPI",
          "createdAt": "2023-10-24T00:04:38Z",
          "updatedAt": "2023-10-24T00:04:38Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "I_kwDOIvmHss5rlelm",
      "title": "Document key discovery for OIDC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/87",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@Sakurann mentioned we should reference more, and repeat or \"redefine\" less.... I agree.\r\n\r\nWe can possibly refer to this: \r\n\r\n- https://openid.net/specs/openid-connect-userinfo-vc-1_0.html#name-userinfo-vc-verification",
      "createdAt": "2023-07-14T14:32:30Z",
      "updatedAt": "2023-12-05T16:34:36Z",
      "closedAt": "2023-12-05T16:07:36Z",
      "comments": [
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "How do we see OIDC working with SCITT other than for auth? I'm having trouble understanding how we could use a token as the issuer of a claim. It seems like that would immediately leak the token upon insertion to the log.\r\n\r\nEdit:\r\n\r\n```console\r\n$ scitt-emulator client create-claim --issuer did:web:token.actions.githubusercontent.com --content-type application/json --payload '{\"sun\": \"yellow\"}' --out claim.cose\r\n```",
          "createdAt": "2023-09-12T16:23:21Z",
          "updatedAt": "2023-11-04T09:57:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Moved to https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/issues/6 in SCRAPI",
          "createdAt": "2023-12-05T16:07:09Z",
          "updatedAt": "2023-12-05T16:34:36Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDOIvmHss5uQH-2",
      "title": "Harmonize Terms \"Auditor\", \"Consumer\" and \"Verifier\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/89",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "fournet"
      ],
      "labels": [
        "terminology"
      ],
      "body": "I think it would be better to use one common term for these roles since they are currently not well defined. For the specification work it does not matter whether an auditor, consumer or a verifier checks the append-only log.\r\n\r\nUsing only one term simplifies the document.",
      "createdAt": "2023-08-14T12:53:17Z",
      "updatedAt": "2023-10-23T23:03:49Z",
      "closedAt": "2023-10-23T23:03:48Z",
      "comments": [
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "We build on [RFC 9162 - Certificate Transparency Version 2.0](https://datatracker.ietf.org/doc/html/rfc9162) (CT) in various ways. CT defines the roles of \"monitor\" and \"auditor\":\r\n\r\n*   Monitors watch logs to check for correct behavior, for certificates of interest, or for both. For example, a monitor may be configured to report on all certificates that apply to a specific domain name when fetching new entries for consistency validation.\r\n\r\n* Auditing ensures that the current published state of a log is reachable from previously published states that are known to be good and that the promises made by the log, in the form of SCTs, have been kept. Audits are performed by monitors or TLS clients.\r\n\r\nI'm not up-to-date, but it would seem useful to define how the ecosystem can gain confidence that SCITT transparency logs are following the append-only rules, perhaps via similar roles as used in CT. Such client use cases may well have some different requirements for various aspects of the architecture or APIs, than what I'll call \"relying parties\" who are concerned with verifying a specific claim.",
          "createdAt": "2023-08-21T15:42:09Z",
          "updatedAt": "2023-08-21T15:42:09Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, as the current 04 draft moved to Auditor and Verifier. \r\nThere's additional debate, but this appears to be complete as those terms were adopted (per the title)",
          "createdAt": "2023-10-23T23:03:48Z",
          "updatedAt": "2023-10-23T23:03:48Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "I_kwDOIvmHss5uQIpv",
      "title": "Harmonize terms \"issuer\" and \"client\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/90",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "The terminology section introduces the term \"issuer\" and it is a core role throughout the document. However, late in the spec the term \"client\" is then also introduced and it is not clear what the relationship between the issuer and the client is.\r\n\r\nI would recommend to only use issuer through the whole document.",
      "createdAt": "2023-08-14T12:54:59Z",
      "updatedAt": "2023-10-23T23:52:32Z",
      "closedAt": "2023-10-23T23:52:31Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved with #118",
          "createdAt": "2023-10-23T23:52:31Z",
          "updatedAt": "2023-10-23T23:52:31Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "I_kwDOIvmHss5uQMTL",
      "title": "The use of \"SHOULD\" throughout the spec",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/91",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [
        "terminology"
      ],
      "body": "The specification uses the RFC 2119 \"SHOULD\" all over the place. A SHOULD needs to come with a description of when the developer should follow it and when it is not appropriate. Too many SHOULDs do not help with interoperability.\r\n\r\nAlso, check the use of normative language: Is it possible to create a test case that will help to improve interoperability?\r\n\r\nFor example, in the following sentence the use of the SHOULD is not useful:\r\n\r\n\"\r\nIssuers SHOULD use consistent decentralized identifiers for all their Statements about Artifacts, to simplify authorization by Verifiers and auditing.\r\n\"\r\n\r\nThe reader might ask themselves:\r\n\r\n* When should I use \"inconsistent decentralized identifiers\"?\r\n* What is a consistent decentralized identifier?\r\n\r\nHere is another sentence:\r\n\r\n\"\r\nIssuers MAY choose the DID method they prefer, but with no guarantee that all Transparency Services will be able to register their Signed Statements. To facilitate interoperability, all Transparency Service implementations SHOULD support the did:web method [[DID-WEB](https://w3c-ccg.github.io/did-method-web/)].\r\n\"\r\n\r\nWhy is there a SHOULD in this sentence instead of a MUST? If you want to accomplish interoperability you have to put a MUST there.\r\n",
      "createdAt": "2023-08-14T13:04:02Z",
      "updatedAt": "2023-09-19T14:51:46Z",
      "closedAt": "2023-09-19T14:51:45Z",
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "See #95 ",
          "createdAt": "2023-08-29T13:53:29Z",
          "updatedAt": "2023-08-29T13:53:29Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "I_kwDOIvmHss5uQNz8",
      "title": "Formatting of Section 5.1.1.1.1. Comment on OIDC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/92",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "The formatting of that section is a nightmare. It makes me wonder whether it makes more sense to just illustrate an incomplete example. For example:\r\n\r\n```\r\n{\r\n   \"keys\":[\r\n      {\r\n         \"alg\":\"RS256\",\r\n         \"kty\":\"RSA\",\r\n         \"use\":\"sig\",\r\n         \"n\":\"wW9...4zw\",\r\n         \"e\":\"AQAB\",\r\n         \"kid\":\"NTBG..U5OA\",\r\n         \"x5t\":\"NTBG..U5OA\",\r\n         \"x5c\":[\r\n            \"MII...g3R+\"\r\n         ]\r\n      },\r\n      {\r\n         \"alg\":\"RS256\",\r\n         \"kty\":\"RSA\",\r\n         \"use\":\"sig\",\r\n         \"n\":\"ylg...DWw\",\r\n         \"e\":\"AQAB\",\r\n         \"kid\":\"aMI...9ln\",\r\n         \"x5t\":\"-xcT...Tbs\",\r\n         \"x5c\":[\r\n            \"MII...FZdA==\"\r\n         ]\r\n      }\r\n   ]\r\n}\r\n```",
      "createdAt": "2023-08-14T13:07:41Z",
      "updatedAt": "2023-10-23T23:53:43Z",
      "closedAt": "2023-10-23T23:53:42Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved as fixed.",
          "createdAt": "2023-10-23T23:53:42Z",
          "updatedAt": "2023-10-23T23:53:42Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "I_kwDOIvmHss5uQPMe",
      "title": "Terminology: signed statement vs. envelope",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/93",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Section 6.1 describes the CDDL of the signed statement and calls it envelope. Why don't you call it signed statement?",
      "createdAt": "2023-08-14T13:11:14Z",
      "updatedAt": "2023-10-23T23:52:08Z",
      "closedAt": "2023-10-23T23:52:08Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed this in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/94",
          "createdAt": "2023-09-04T15:01:43Z",
          "updatedAt": "2023-09-04T15:01:43Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOIvmHss5wzzdy",
      "title": "Discovery of service parameters",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/96",
      "state": "CLOSED",
      "author": "johnandersen777",
      "authorAssociation": "NONE",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [],
      "body": "Knowledge of SCITT's tree algorithm and parameters for that tree algorithm are required for a client to verify receipts. It seems like we need to have an endpoint to enable discovery of those parameters.",
      "createdAt": "2023-09-12T14:18:47Z",
      "updatedAt": "2024-02-12T17:40:24Z",
      "closedAt": "2024-02-12T17:40:24Z",
      "comments": [
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "Nevermind the client code just need to get the tree alg from the receipt.",
          "createdAt": "2023-09-12T15:27:38Z",
          "updatedAt": "2023-09-12T15:27:38Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "Related: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79#issuecomment-1767570492",
          "createdAt": "2023-10-18T03:31:38Z",
          "updatedAt": "2023-10-18T03:31:38Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "After discussion this weekend with Steven and Cedric we talked about needing an endpoint for service parameter discovery. This also appears necessary for federation.",
          "createdAt": "2023-11-06T09:06:22Z",
          "updatedAt": "2023-11-06T09:07:13Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "The document currently states:\r\n\r\n> The Transparency Service provides an endpoint that returns the Transparent Statement that describes its current configuration.\"\r\n>\r\n> The Transparency Service records its configuration in the Append-Only Log using Transparent Statements with distinguished media type `application/scitt-configuration`.\r\n>\r\n> From: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/930a0cd38a92dd6079bda2ed3c675019ee9b0aa3/draft-ietf-scitt-architecture.md#configuration\r\n\r\nPining based on #126 discussion comments: @fournet, @SteveLasker: I read this to mean the endpoint is a subject/feed, what is that subject/feed? Is it the issuer `did:web:` combined with the mentioned media type? How should we register these so that they are discoverable in a consistent way?",
          "createdAt": "2023-11-19T07:10:55Z",
          "updatedAt": "2023-11-19T07:10:55Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Queue to move to the SCRAPI repo ",
          "createdAt": "2023-12-12T15:48:40Z",
          "updatedAt": "2023-12-12T15:48:40Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "I_kwDOIvmHss5xb9FT",
      "title": "Using only qualified \"Issuers\" for clarity",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/97",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "We should consider to use \"Statement Issuer\" and \"Receipt Issuer\" consistently instead of allowing for using stand-alone \"issuer\" - for better clarity.\r\nBase on Orie's comment: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/95/files#r1308908322",
      "createdAt": "2023-09-19T14:43:02Z",
      "updatedAt": "2023-10-23T23:40:46Z",
      "closedAt": "2023-10-23T23:40:45Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "cross linking other issues with context:\r\n\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/65\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/8\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/23\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/97",
          "createdAt": "2023-09-19T15:42:29Z",
          "updatedAt": "2023-09-19T15:42:29Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest the following changes to the architecture:\r\n\r\n1. Revise \"issuer\" in terminology, and align it to \"iss\".\r\n2. Add \"Statement Issuer\" and \"Receipt Issuer\" to terminology, and clarify that they both rely on `iss`, and reflect the identifier of the entity making statements about artifacts and the entity making those statements transparent (aka the transparency service).\r\n3. Clarify that `iss` MUST be a DID.\r\n4. Clarify that `kid` MUST be a relative DID URL which `iss` as the base.",
          "createdAt": "2023-09-19T15:52:20Z",
          "updatedAt": "2023-09-19T15:52:20Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "1. Why is it important to align to \"iss\"? \r\n2. For now we use \"Transparency Service\" instead of \"Receipt Issuer\". Are you suggesting we merge the two? Otherwise where do we need to explicitly write \"Receipt Issuer\" in SCITT? Also, should \"Statement Issuer\" not be \"Signed Statement Issuer\" if it is fully qualified? In general the statement (e.g. the SBOM) is produced  by some of the party before being endorsed by the Issuer. \r\n3. Ok\r\n4. Does it apply both to statement signatures and receipts? ",
          "createdAt": "2023-09-19T17:54:35Z",
          "updatedAt": "2023-09-19T18:09:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale. Please reopen if need for the current draft",
          "createdAt": "2023-10-23T23:40:45Z",
          "updatedAt": "2023-10-23T23:40:45Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "I_kwDOIvmHss5xb9H1",
      "title": "Better address implementation requirements of DID methods",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
      "state": "CLOSED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [],
      "body": "Current text is ambiguous about what TS must support vs what implementations of SCITT must implement. ",
      "createdAt": "2023-09-19T14:43:08Z",
      "updatedAt": "2023-10-23T23:41:24Z",
      "closedAt": "2023-10-23T23:41:24Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as stale, with updates for SHOULD, MUST applied",
          "createdAt": "2023-10-23T23:41:24Z",
          "updatedAt": "2023-10-23T23:41:24Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "I_kwDOIvmHss5xb-m2",
      "title": "Adjust language in PR",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/99",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "terminology"
      ],
      "body": "I don't love the language we added in:\r\n\r\n> If an issuer uses multiple DIDs (for instance, because their clients support different resolution methods), they MUST ensure that statements signed under each DID are consistent.\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/95#discussion_r1308967013\r\n\r\nI said:\r\n\r\n> The verifier is interested in the authenticity of the issuer of the transparent statement and signed statement... The verifier trusts the TS to vet the issuer of the signed statement... the verifier benefits from the transparency service, if they can't trust the TS, there is no reason to do SCITT.\r\n\r\n",
      "createdAt": "2023-09-19T14:46:20Z",
      "updatedAt": "2023-10-24T00:01:19Z",
      "closedAt": "2023-10-24T00:01:19Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest we remove the MUST here, and just say that verifiers are required to trust all issuer keys associated with issuer identifiers, in order to perform their role.",
          "createdAt": "2023-09-19T14:59:13Z",
          "updatedAt": "2023-09-19T14:59:13Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, I just saw this. Can you this to a PR, and maybe update the Title of this issue?",
          "createdAt": "2023-10-23T23:01:04Z",
          "updatedAt": "2023-10-23T23:01:04Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the whole section on DIDs needs to be reworked.\n\nAlso the VCWG is currently trying to generalize the concept of DIDs to controller documents... And I'm starting to feel that perhaps it's better to remove references to them entirely.",
          "createdAt": "2023-10-23T23:05:34Z",
          "updatedAt": "2023-10-23T23:05:34Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, with the request to open a specific issue to DIDs, or build on #117 or #36 ",
          "createdAt": "2023-10-23T23:43:32Z",
          "updatedAt": "2023-10-23T23:43:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Accidental re-open for the wrong issue",
          "createdAt": "2023-10-24T00:01:19Z",
          "updatedAt": "2023-10-24T00:01:19Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "I_kwDOIvmHss5xcA7c",
      "title": "Review all COSE parameters and normalize text and integers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/100",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "All our text references should look like:\r\n\r\n![Screen Shot 2023-09-19 at 9 51 01 AM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/fc7507bc-dd37-4e8c-b68e-a5d5c65270ba)\r\n",
      "createdAt": "2023-09-19T14:51:19Z",
      "updatedAt": "2023-12-12T15:49:40Z",
      "closedAt": "2023-12-12T15:49:39Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Will align the text, before we cut the draft for 118",
          "createdAt": "2023-09-19T14:56:49Z",
          "updatedAt": "2023-09-19T14:56:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Missed this one, although we did get some updates. in for 118",
          "createdAt": "2023-10-23T23:47:21Z",
          "updatedAt": "2023-10-23T23:47:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as subsequent PRs are adopting the formating ",
          "createdAt": "2023-12-12T15:49:39Z",
          "updatedAt": "2023-12-12T15:49:39Z"
        }
      ]
    },
    {
      "number": 102,
      "id": "I_kwDOIvmHss5xgoJV",
      "title": "Add client in terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/102",
      "state": "CLOSED",
      "author": "nikosft",
      "authorAssociation": "NONE",
      "assignees": [
        "aj-stein-nist",
        "mwiseman-byid"
      ],
      "labels": [
        "terminology"
      ],
      "body": "In section 5.2.3.3 `client` appears out of the blue. It is not clear what a `client` is. ",
      "createdAt": "2023-09-20T07:46:53Z",
      "updatedAt": "2024-02-20T15:13:18Z",
      "closedAt": "2024-02-20T15:13:18Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi, @nikosft \r\nI'm looking for the reference to 5.2.3.3 in https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html and other versions. \r\nI don't see where that section exists.\r\nAre you referring to a reference where a client is calls the Transparency Service APIs?\r\nOr, as there a mention of \"client, synonymous with consumer, verifier, etc?\r\n",
          "createdAt": "2023-10-23T22:59:49Z",
          "updatedAt": "2023-10-23T22:59:49Z"
        },
        {
          "author": "nikosft",
          "authorAssociation": "NONE",
          "body": "E.g., \r\n\r\n> a Transparency Service MAY additionally support verifiability of client authentication and access control\r\n\r\nIs the client the issuer itself? A piece of software that the issuer uses (e.g., a la OAuth2 client)? Does it refer to any role (issuer, verifier, auditor)? IMHO the text should be more specific, e.g., Certificate Transparency RFC explicitly mentions `TLS client`\r\n",
          "createdAt": "2023-10-24T07:38:59Z",
          "updatedAt": "2023-10-24T07:38:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @nikosft \r\nThe above text is from Draft 04: [5.2.3.3. ](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-04.html#section-5.2.3.3)[Replayability and Auditing](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-04.html#name-replayability-and-auditing)\r\n\r\nI've labeled it for terminology clarification. ",
          "createdAt": "2023-10-24T13:48:16Z",
          "updatedAt": "2023-10-24T13:48:16Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "In that vein, I would support clarifying it with a \"an Issue or Verifier's Transparency Service API client\" in the applicable areas of the draft. Would that be more helpful or does it not reduce ambiguity?",
          "createdAt": "2023-11-21T17:59:17Z",
          "updatedAt": "2023-11-21T17:59:17Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Just an update, I plan to send a PR with proposed changes this week.",
          "createdAt": "2023-12-18T16:43:50Z",
          "updatedAt": "2023-12-18T16:43:50Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "From the architecture/editors meeting\r\nDifferentiating:\r\n- **Issuer** who signs the statement (The identity of the software component - Wabbit Networks)\r\n- **Client** who initiates the registration operation, which encompasses RBAC which is not part of the spec, beyond being authenticated (the build system's identity for access control. The build system has a role to perform operations) - possibly refer to OAuth's definition of client\r\n- **Verifier** who evaluates a statement. The verifier cares about the issuer, to know it was signed by a particular issuer. The audit of a supply chain will check the identities involved in the operations.",
          "createdAt": "2023-12-19T15:39:25Z",
          "updatedAt": "2023-12-19T15:39:25Z"
        },
        {
          "author": "mwiseman-byid",
          "authorAssociation": "NONE",
          "body": "AJ and I will review this\r\n",
          "createdAt": "2023-12-19T15:43:12Z",
          "updatedAt": "2023-12-19T15:43:12Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "@mwiseman-byid and I met today to discuss a recap of the authors/editorial meeting (sorry I missed) and how we need to think about 1) a better alternative name and 2) provide a rationale to why we need to have 1, terminology change or not (part of that is the subject of this issue and pending work that should come up in #120 for the latter).\r\n\r\nFor 1, Monty and I are leaning towards agent for now, but we need to brainstorm on adjusted architecture to reflect 2 and \"the way\" and how it relates to requested edits for the relying party issue in #120.\r\n\r\nWe will post in progress work and continue to collaborate and sync, updating the WG via mailing list when it is ready for review and feedback across the WG. More to follow.",
          "createdAt": "2023-12-19T17:06:15Z",
          "updatedAt": "2023-12-20T23:38:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @aj-stein-nist, @mwiseman-byid for the focused discussion.  ",
          "createdAt": "2023-12-19T23:15:54Z",
          "updatedAt": "2023-12-19T23:15:54Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "OK, my work on #120 also led me to be confused and think maybe we have meant agent/client when we said verifier. I made some strawman diagrams to discuss this WG members in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120#issuecomment-1865318043.\r\n\r\n/cc @mwiseman-byid ",
          "createdAt": "2023-12-21T00:39:34Z",
          "updatedAt": "2023-12-21T00:39:34Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "OK, it seems we are converging in a direction on #120 around verifier and relying party. The diagram based on author feedback demonstrates that with #156 likely updates to the spec forthcoming if that is approved. It turns out, not surprisingly, we need both verifier and relying party. The latter, if tweak terminology, could more clearly refer to client and resolve this issue as well.\r\n\r\nGiven that, and how it relates to here, I would argue that relying party is the correct substitute for client and this could be closed as a duplicate or modified accordingly to address that.\r\n\r\nThis change would be in line with with the RATS specification *iff* we distinguish between Verifier Owner/Verifier (person entity/logical system for that entity) and Relying Party Owner/Relying Party (person entity/logical system for that entity) and ironically [current I-D version 2.x of the OAuth AuthZ Framework](https://datatracker.ietf.org/doc/draft-ietf-oauth-v2-1/https://datatracker.ietf.org/doc/draft-ietf-oauth-v2-1/), various OAuth WG drafts (even if it seems not formally defined), and [the OpenID Connect Specification](https://openid.net/specs/openid-connect-core-1_0.html#Terminology). \r\n\r\nIt was unclear in previous discussion with authors if this is preferable or required, but it nicely aligns with small tactical changes to the diagram in #156 and relevant spec alignment in terminology and explanations.",
          "createdAt": "2024-01-10T17:38:17Z",
          "updatedAt": "2024-01-10T17:38:17Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Still active. @aj-stein-nist, do you have time to complete this item? ",
          "createdAt": "2024-02-12T17:46:24Z",
          "updatedAt": "2024-02-12T17:46:24Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I had presented on this topic and we had agreed some key revisions had to take place before we could decide to make adjustments. Are we at that point?\r\n\r\nAdditionally, the alignment with RATS and other specs: is this necessary or not? There are some open questions that are not covered, re https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/102#issuecomment-1885309749. I guess I will take it to the list.",
          "createdAt": "2024-02-12T19:10:14Z",
          "updatedAt": "2024-02-12T19:10:14Z"
        }
      ]
    },
    {
      "number": 103,
      "id": "I_kwDOIvmHss5yEQGq",
      "title": "Refine Definition of Reg_Info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/103",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\nReg_Info = {\r\n  ? \"register_by\": uint .within (~time),\r\n  ? \"sequence_no\": uint,\r\n  ? \"issuance_ts\": uint .within (~time),\r\n  ? \"no_replay\": null,\r\n  * tstr => any\r\n}\r\n```\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/0383ec2b5a23f11d1a42800aebbe38368e12376d/draft-ietf-scitt-architecture.md?plain=1#L670\r\n\r\nIMO these are parameters on the issuer's view of the feed identifier.\r\n\r\nsequence number is meaningless unless you know what topic you are trying to order.",
      "createdAt": "2023-09-26T15:00:22Z",
      "updatedAt": "2023-12-12T15:52:59Z",
      "closedAt": "2023-12-12T15:52:59Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd prefer to eliminate `Reg_Info` if possible, to keep the scitt envelopes as simple as possible, and to reuse related work, such as:\r\n\r\n- https://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/\r\n- https://datatracker.ietf.org/doc/draft-ietf-rats-eat/12/\r\n\r\nConsider the following alternative to:\r\n\r\n```\r\n\r\n1 => alg // ES384\r\n\r\n3 => content type \r\n// application/xml \r\n// application/json\r\n// application/cbor\r\n\r\n3 => kid \r\n// NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs  \r\n// urn:ietf:params:oauth:jwk-thumbprint:sha-256:NzbLsXh8uDCcd-6MNwXF4W_7noWXFZAfHkxZsRGC9Xs\r\n// 42\r\n      \r\n13 => CWT_Claims = {\r\n\r\n  1 => iss, \r\n  // example.com\r\n  // did:example:123\r\n  // urn:uuid:9a652678-4616-475d-af12-aca21cfbe06d\r\n  // fooBar\r\n\r\n  2 => sub, \r\n  // pkg:docker/customer/dockerimage@sha256:244fd47e07d1004f0aed9c?repository_url=gcr.io\r\n  // https://example.org/01/ { gtin } { ? exp }\r\n  // 5bdd1802-b0d9-4c27-b86c-8df099ef377e\r\n  // LibreOffice\r\n  // liber_office\r\n\r\n  3 => aud\r\n  // transparency.vendor1.example\r\n  // transparency.vendor2.example\r\n  // 8be80f34-4cc1-4e2b-a27e-79459c6bba11\r\n  // transparency.regulator3.example\r\n  \r\n  5 => nbf\r\n  // unix timestamp (not a secure timestamp)\r\n  \r\n  6 => iat\r\n  // unix timestamp (not a secure timestamp)\r\n  \r\n  257 => [sueids](https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat-12#name-semi-permanent-ueids-sueids)\r\n  \r\n  \r\n  ...\r\n  \r\n  393 => Reg_Info // all the scitt fields we need that are not already defined better, by other WGs...\r\n  \r\n```",
          "createdAt": "2023-10-09T17:41:59Z",
          "updatedAt": "2023-10-09T17:43:43Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "\"subject\" is already used by many other standards:\r\n\r\n- https://w3c.github.io/vc-data-model/#credential-subject\r\n- https://pages.nist.gov/800-63-3/sp800-63-3.html\r\n\r\nAnd probably others.... \r\n\r\nThe dictionary definition of subject:\r\n\r\ne\r\n(1)\r\n: the term of a logical proposition that denotes the entity of which something is affirmed or denied\r\nalso : the entity denoted\r\n(2)\r\n: a word or word group denoting that of which something is predicated\r\n\r\n- https://www.merriam-webster.com/dictionary/subject\r\n\r\nIn plan english \"Statements are about Artifacts.... Artifacts are the subject of statements\".\r\n\r\n\"Software ABC, has Vulnerabilities XYZ\"\r\n\r\n\"Software ABC\" is the \"subject\"\r\n\r\n\"Vulnerabilities XYZ\" is the \"predicate\" (and its value is true).\r\n\r\n\"Software ABC, does not have Vulnerabilities XYZ\"\r\n\r\n\"Vulnerabilities XYZ\" is the \"predicate\" (and its value is false).\r\n\r\n\"Software ABC\" is still the subject...\r\n\r\n... etc...",
          "createdAt": "2023-10-09T18:08:11Z",
          "updatedAt": "2023-10-09T18:26:34Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "to furnish something essential to the development, sustenance, maintenance, or operation of...\r\n\r\nb\r\n: to supply (material to be operated on) to a machine\r\nc\r\n(1)\r\n: to insert and deposit (something) repeatedly or continuously\r\n(2)\r\n: to insert and deposit something into (something)\r\n\r\n- https://www.merriam-webster.com/dictionary/feed\r\n\r\nA feed is what you put into or get out of a transparency service... feeds are \"about subjects\", which are identified via \"sub\".\r\n\r\nThe input feed is the set of all signed statements accepted or rejected by a transparency service\r\n\r\nThe output feed is the set of all signed statements for which a receipt exists because a registration policy has been met.\r\n\r\nThis is what a feed looks like in factorio (input is iron ore and coal, output is steel plates):\r\n\r\n![862972621_preview_Belt Smelter 3](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/92ce71f2-7b7b-4180-987c-7f02097825b1)\r\n\r\nThe subject of each input might be \"iron ore\", \"hematite\", \"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=50818\", or \"chebi:50818\"...\r\n\r\nThe subject of each output might be \"steel plate 123\", \"ASTM709 Plate 456\", or \"urn:epc:tag:sgtin-96:1.7332402.026591.1234567890\" ... \r\n\r\nCWT Claims can also be present in the protected headers of receipts.\r\n\r\nThe \"logical grouping of all elements\", is not the same as \"the structured identifier chosen by an issuer to identify an element of a set\".",
          "createdAt": "2023-10-09T18:43:47Z",
          "updatedAt": "2023-10-09T18:45:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing as resolved with #135",
          "createdAt": "2023-12-12T15:52:59Z",
          "updatedAt": "2023-12-12T15:52:59Z"
        }
      ]
    },
    {
      "number": 109,
      "id": "I_kwDOIvmHss5zYAoV",
      "title": "Adjust CDDL for Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/109",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\n~~~~ cddl\r\nclaim-label = int / text\r\n\r\n; https://www.iana.org/assignments/cwt\r\nclaims = {\r\n  &(iss: 1) => tstr \r\n  ; https://software.vendor or \r\n  ; did:web:software.vendor\r\n  &(sub: 2) => tstr \r\n  ; https://software.vendor or \r\n  ; did:web:software.vendor\r\n  ; https://software.vendor/products/456 or \r\n  ; did:web:software.vendor:products:456 or \r\n  ; did:web:software.vendor/products/456 or \r\n  ; urn:epc:tag:sgtin-96:1.7332402.026591.1234567890\r\n  * claim-label => any\r\n}\r\n\r\nstatement-protected-header-map = {\r\n  &(alg-id: 1) => int\r\n  &(content-type: 3) => tstr\r\n  &(issuer-key-id: 4) => bstr\r\n  &(issuer-claims: 13) => claims\r\n  * cose-label => cose-value\r\n}\r\n\r\nreceipt-protected-header-map = {\r\n  &(alg-id: 1) => int\r\n  &(issuer-key-id: 4) => bstr\r\n  &(issuer-claims: 13) => claims\r\n  * cose-label => cose-value\r\n}\r\n\r\n~~~~\r\n```",
      "createdAt": "2023-10-10T15:43:17Z",
      "updatedAt": "2023-12-12T15:54:28Z",
      "closedAt": "2023-12-12T15:54:27Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": ":sparkles:Beautiful:sparkles: Header definitions.\r\n\r\nIs `&(issuer-claims: 13) => claims` intended to be mandatory or optional? It could be empty, for example.\r\n\r\n",
          "createdAt": "2023-10-10T15:57:28Z",
          "updatedAt": "2023-10-10T15:57:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "https://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/\r\n\r\nAFAIK, it can be optional, and it can be empty.\r\n\r\nSCITT can make it required, and make it non empty.\r\n\r\nI would recommend doing that... reasoning:\r\n\r\n`iss` is mandatory, and so the minimum issuer claims includes the issuer's chosen identifier for itself.\r\n\r\nhence tag 13 would always be present and inside of it tag 1 would always be present:\r\n\r\nhttps://www.iana.org/assignments/cwt/cwt.xhtml",
          "createdAt": "2023-10-10T16:04:42Z",
          "updatedAt": "2023-10-10T16:04:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "If there is always a member present in `claims` we could even model that in the data definition, explicitly.",
          "createdAt": "2023-10-10T16:09:25Z",
          "updatedAt": "2023-10-10T16:09:25Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I updated the example to include mandatory `iss` and `sub`... and added examples in comments",
          "createdAt": "2023-10-10T16:14:59Z",
          "updatedAt": "2023-10-10T16:14:59Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Ready for transplant into PR, I think",
          "createdAt": "2023-10-10T16:55:40Z",
          "updatedAt": "2023-10-10T16:55:40Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing as stale with addition work to be done",
          "createdAt": "2023-12-12T15:54:27Z",
          "updatedAt": "2023-12-12T15:54:27Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "I_kwDOIvmHss50EEbV",
      "title": "Registration Info might need some rewording",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/112",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "For the next submission deadline, Reg_Info needs more detail to convey it's purpose. Maybe... it may even need a new name, as Reg_Info might not be limited to key/value pairs about registration policy?",
      "createdAt": "2023-10-17T11:45:27Z",
      "updatedAt": "2023-10-18T15:20:05Z",
      "closedAt": "2023-10-18T15:20:05Z",
      "comments": []
    },
    {
      "number": 116,
      "id": "I_kwDOIvmHss50hYBT",
      "title": "Add non-equivocation to terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/116",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Define the term non-equivocation formally as it relates to this architecture document, per https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107#discussion_r1367393803.\r\n            ",
      "createdAt": "2023-10-20T19:26:50Z",
      "updatedAt": "2023-12-05T15:08:43Z",
      "closedAt": "2023-12-05T15:08:43Z",
      "comments": []
    },
    {
      "number": 117,
      "id": "I_kwDOIvmHss50hpJA",
      "title": "Remap did to cwt_claims iss",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/117",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR #108 converged issuer and feed into the CTW_Claims iss and sub. \r\nThe doc needs a scrub to remap these properties\r\n",
      "createdAt": "2023-10-20T20:30:57Z",
      "updatedAt": "2023-12-12T15:53:48Z",
      "closedAt": "2023-12-12T15:53:47Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as getting resolved with #139 ",
          "createdAt": "2023-12-12T15:53:48Z",
          "updatedAt": "2023-12-12T15:53:48Z"
        }
      ]
    },
    {
      "number": 120,
      "id": "I_kwDOIvmHss50rAoh",
      "title": "Consider clarifying \"Verifier\" and \"Relying Party\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist",
        "mwiseman-byid"
      ],
      "labels": [
        "terminology",
        "has-pr"
      ],
      "body": "As discussed on today's call.\r\n\r\nFolks expressed concern that \"Verifier\" was not friendly enough to \"Consumers or Relying Parties\", that are supposed to process receipts.\r\n\r\n------\r\nEditors Update:\r\nWe can choose to:\r\n- [ ] Accept #205 \r\n- [ ] Accept #210\r\n- [ ] Close both PRs and this issue, and keep the doc with Client and Verifier\r\n",
      "createdAt": "2023-10-23T15:22:39Z",
      "updatedAt": "2024-02-29T22:54:00Z",
      "closedAt": "2024-02-29T22:53:59Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@mwiseman-byid wanted to take a look for a proposal",
          "createdAt": "2023-12-12T16:02:47Z",
          "updatedAt": "2023-12-12T16:02:47Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Just an update, I plan to send a PR with proposed changes this week. @mwiseman-byid, shall we sync up in the comments or out of band elsewhere?",
          "createdAt": "2023-12-18T16:48:33Z",
          "updatedAt": "2023-12-18T16:48:33Z"
        },
        {
          "author": "mwiseman-byid",
          "authorAssociation": "NONE",
          "body": "A.J.\r\n\r\nYes, let\u2019s get together and work out a proposal. I\u2019m booked today but\r\ntomorrow is open except for 07:00-08:00 and 14:00-15:00 PST (10:00-11:00\r\nand 17:00-18:00 EST)\r\n\r\n\r\n\r\nMonty\r\n\r\n\r\n\r\n*From:* A.J. Stein ***@***.***>\r\n*Sent:* Monday, December 18, 2023 10:49\r\n*To:* ietf-wg-scitt/draft-ietf-scitt-architecture <\r\n***@***.***>\r\n*Cc:* Monty Wiseman ***@***.***>; Mention <\r\n***@***.***>\r\n*Subject:* Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Consider\r\nreplacing \"Verifier\" with \"Relying Party\" (Issue #120)\r\n\r\n\r\n\r\nJust an update, I plan to send a PR with proposed changes this week.\r\n@mwiseman-byid <https://github.com/mwiseman-byid>, shall we sync up in the\r\ncomments or out of band elsewhere?\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub\r\n<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120#issuecomment-1861029077>,\r\nor unsubscribe\r\n<https://github.com/notifications/unsubscribe-auth/AYBDCU5Q4UK2ZM4P4NVU4Z3YKBXWZAVCNFSM6AAAAAA6MIII6KVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRRGAZDSMBXG4>\r\n.\r\nYou are receiving this because you were mentioned.Message ID: <\r\n***@***.***\r\n>\r\n",
          "createdAt": "2023-12-18T16:56:46Z",
          "updatedAt": "2023-12-18T16:56:46Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry, @mwiseman-byid I had to dig a bit to find your email in my inbox from the mailing lists but I found it. Invite sent. I think we can make quick progress and draft a PR tomorrow. ",
          "createdAt": "2023-12-18T18:13:51Z",
          "updatedAt": "2023-12-18T18:13:51Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Met with @mwiseman-byid and we discussed perspectives and work on this in the near-term, summarized with https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/102#issuecomment-1863163215. More to follow.",
          "createdAt": "2023-12-19T17:07:00Z",
          "updatedAt": "2023-12-19T17:07:00Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding some more notes to plot out the work, Monty and I discussed aligning the diagram with the separate/distinct RATS architecture, but the separate call out of a distinct Relying Party role and how it pertains to agent was discussed when we met, per discussion I missed in today's author/editor meeting. For my future reference, I need to re-review the doc, as well as compare/contrast [the architecture diagram in Section 3](https://www.rfc-editor.org/rfc/rfc9334.html#name-architectural-overview),",
          "createdAt": "2023-12-19T19:27:02Z",
          "updatedAt": "2023-12-19T19:27:02Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "# Background\r\n\r\nSo I did not make as much tangible progress today and have spent a lot of time thinking and reading as I re-read this SCITT Architecture draft and related WG drafts (RATS, OAuth) where Relying Party is defined. So, before I spend a significant effort in drawing this with aasvg, I would like to quickly highlight the gaps in my understanding via Mermaid so I can quickly iterate. I have tried reading the mailing list but it not 100% clear where the dichotomy between Auditor and Verifier occurred, but they seem overlapping and redundant *to me* unless Verifier is, in fact, some non-person entity, like the software doing the verification itself (so this goes to what should we rename client to in #102, separate of this), but does that not in fact mean Auditor is the Relying Party of sorts? It seems Auditor is just giving a specific name to a general kind of consumer and that is not what a Verifier is.\r\n\r\nSo on that note, this is the current version of the SVG diagram in Mermaid (\ud83e\udd1e I hope I got this right, I cannot just have labels like \"Issuer\" on the left-hand side so I use subgraphs to box those and not do something clever with dotted lines and cause more problems).\r\n\r\n# Current State\r\n\r\n```mermaid\r\nflowchart TD\r\n  \r\n  A([Artifact])\r\n  S([Statement])\r\n  E([Envelope])\r\n  SS([Signed Statement])\r\n  R([Receipt])\r\n  DIDKM[DID Key Manifest]\r\n  TServ[Transparency Service]\r\n  R([Receipt])\r\n  TStat([Transparent Statement])\r\n  VTStat[/Verify Transparent Statement/]\r\n  RLog[/Replay Log/]\r\n  CR[/Collect Receipts/]\r\n  subgraph Issuer\r\n  A-->S\r\n  S-->SS\r\n  E-->SS\r\n  end\r\n  subgraph Transparency Service\r\n  DIDKM--COSE Signing-->SS\r\n  DIDKM--Decentralized Identifier-->E\r\n  SS-->TServ\r\n  TServ-->R\r\n  R-->TStat\r\n  end\r\n  subgraph Verifier\r\n  TStat-->VTStat\r\n  DIDKM-->VTStat\r\n  end\r\n  subgraph Auditor\r\n  TStat-->CR\r\n  TServ-->RLog\r\n  end\r\n```\r\n\r\n(Source: https://gist.github.com/aj-stein-nist/c4630d197608350f738a6d9fea058efc)\r\n\r\n# Edit 1: Change Auditor to Relying Party\r\n\r\nIt would seem we really need to change the diagram and the terminology to get rid of Auditor altogether, so first, we would move to this.\r\n\r\n```mermaid\r\nflowchart TD\r\n  \r\n  A([Artifact])\r\n  S([Statement])\r\n  E([Envelope])\r\n  SS([Signed Statement])\r\n  R([Receipt])\r\n  DIDKM[DID Key Manifest]\r\n  TServ[Transparency Service]\r\n  RP[Relying Party]\r\n  R([Receipt])\r\n  V[Verifier]\r\n  TStat([Transparent Statement])\r\n  VTStat[/Verify Transparent Statement/]\r\n  RLog[/Replay Log/]\r\n  CR[/Collect Receipts/]\r\n  subgraph Issuer\r\n  A-->S\r\n  S-->SS\r\n  E-->SS\r\n  end\r\n  subgraph Transparency Service\r\n  DIDKM--COSE Signing-->SS\r\n  DIDKM--Decentralized Identifier-->E\r\n  SS-->TServ\r\n  TServ-->R\r\n  R-->TStat\r\n  end\r\n  subgraph Verifier Owner\r\n  TStat-->VTStat-->V\r\n  DIDKM-->VTStat-->V\r\n  end\r\n  subgraph Relying Party Owner\r\n  TStat-->CR-->RP\r\n  TServ-->RLog-->RP\r\n  end\r\n```\r\n\r\n(Source: https://gist.github.com/aj-stein-nist/c5bf7d5e3675e5149c897453fe5b1b6e)\r\n\r\n# Questions and Confusion\r\n\r\n1. I was going to do a subsequent edit, but at this point I will have to ask the group: what is a verifier doing that is different from a relying party owner with a relying party? Could you separate one from the other? (Don't you need to replay the log to verify the sequence of statements?) For reference, there is so much overlap with [the RATS Architecture terminology and diagram](https://datatracker.ietf.org/doc/html/rfc9334#dataflow) I think we need to either add compare statements to terminology and touch up the current state diagram to disambiguate the use of these terms. Screenshot below.\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/94922603/ffd60b0b-35dd-4e63-b7dd-addc7d7e3df4)\r\n\r\n2. So would that mean, if they are in fact separate, Edit 2 incrementing after Edit 1 to reflect my understanding would be ... this?\r\n\r\n```mermaid\r\nflowchart TD\r\n  \r\n  A([Artifact])\r\n  S([Statement])\r\n  E([Envelope])\r\n  SS([Signed Statement])\r\n  R([Receipt])\r\n  DIDKM[DID Key Manifest]\r\n  TServ[Transparency Service]\r\n  RP[Relying Party]\r\n  R([Receipt])\r\n  V[Verifier]\r\n  TStat([Transparent Statement])\r\n  VTStat[/Verify Transparent Statement/]\r\n  RLog[/Replay Log/]\r\n  CR[/Collect Receipts/]\r\n  subgraph Issuer\r\n  A-->S\r\n  S-->SS\r\n  E-->SS\r\n  end\r\n  subgraph Transparency Service\r\n  DIDKM--COSE Signing-->SS\r\n  DIDKM--Decentralized Identifier-->E\r\n  SS-->TServ\r\n  TServ-->R\r\n  R-->TStat\r\n  end\r\n  subgraph Verifier Owner\r\n  TStat-->VTStat-->V\r\n  DIDKM-->VTStat-->V\r\n  end\r\n  subgraph Relying Party Owner\r\n  TStat-->CR-->RP\r\n  TServ-->RLog-->RP\r\n  RP-->V\r\n  end\r\n```\r\n\r\n(Source: https://gist.github.com/aj-stein-nist/89a5068e10da05193d531762bf75ba67)\r\n\r\n\r\n3. If we start to think this way, do we consider the software (client/agent/what have you) used by the Issuer to be distinct? Similar but with one of two functionalities (an agent/client/what have you can be for Issuers to get receipts of signed statements *or* a verifier that reads all of them)?\r\n\r\n/cc @mwiseman-byid I am not sure this update at the end of the day reflects our discussion, but I feel like I lost the thread of what we discussed and seemed concrete in discussion. Translating it into diagram and wording updates has left me scratching my head.\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2023-12-21T00:37:18Z",
          "updatedAt": "2023-12-21T00:37:41Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "```mermaid\r\n\r\nflowchart \r\n    \r\nRP\r\nVerifier\r\n\r\nRP -- has or is a --> Verifier\r\n```",
          "createdAt": "2024-01-05T19:43:12Z",
          "updatedAt": "2024-01-05T19:43:12Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "And just for the sake of dissing RATs...\r\n\r\n![Screenshot 2024-01-05 at 1 44 42\u202fPM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/0c44b29c-0d8c-4aa1-a378-e31545e48a6f)\r\n\r\n\r\nIMO this is reversed... to rely on something you must trust a verifier or be a verifier.\r\n\r\nI think what they mean is for the relying party to depend on a verifier, but what it looks like is that a verifier sits in front of an RP.",
          "createdAt": "2024-01-05T19:45:25Z",
          "updatedAt": "2024-01-05T19:46:29Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> unless Verifier is, in fact, some non-person entity\r\n\r\nA verifier can be a person or automation that was configured by a person. \r\n\r\nThis is likely a great conversation for the [next SCITT Meeting on Jan 8, 2024](https://datatracker.ietf.org/doc/agenda-interim-2024-scitt-01-scitt-01/)\r\n\r\n@aj-stein-nist would you be able to lead that discussion with @mwiseman-byid?",
          "createdAt": "2024-01-06T00:28:00Z",
          "updatedAt": "2024-01-06T00:28:00Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> ```mermaid\r\n> \r\n> flowchart \r\n>     \r\n> RP\r\n> Verifier\r\n> \r\n> RP -- has or is a --> Verifier\r\n> ```\r\n\r\nhm... if we are talking RATS an entity can take on both the Roles of Verifier and Relying Party at the same time (rendering the creation and conveyance of Attestation Results moot)",
          "createdAt": "2024-01-08T16:27:25Z",
          "updatedAt": "2024-01-08T16:27:25Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "It seems #156 now obsoletes the diagrams in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120#issuecomment-1865318043 and review in a previous meeting reflecting improvements and viable changes based upon answers to the questions posed in strawman diagrams in that comment.",
          "createdAt": "2024-01-10T17:20:29Z",
          "updatedAt": "2024-01-10T17:20:29Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Also of not my updates to the potential (and beneficial) overlap and possible alignment between relying party and client per https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/102#issuecomment-1885309749.",
          "createdAt": "2024-01-10T17:39:56Z",
          "updatedAt": "2024-01-10T17:39:56Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Ping @aj-stein-nist, @mwiseman-byid ",
          "createdAt": "2024-02-12T17:48:06Z",
          "updatedAt": "2024-02-12T17:48:06Z"
        }
      ]
    },
    {
      "number": 124,
      "id": "I_kwDOIvmHss507r-i",
      "title": "Transparent Statement Recursion",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/124",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\nstatement -> receipt\r\nstatement + receipt => transparent statement^1\r\ntransparent statement -> receipt\r\ntransparent statement + receipt => transparent statement^2\r\n...\r\n```\r\n\r\nThere are cases where you want to drop all unprotected data from the signed statement before the registration policy will be applied, and cases where you really want to preserve those unprotected data elements so that the registration policy can be applied.\r\n\r\nWe need to describe transparent statement inception in detail and comment on its correct usage (and its nonsensical usage).\r\n",
      "createdAt": "2023-10-25T16:26:36Z",
      "updatedAt": "2024-02-12T17:44:43Z",
      "closedAt": "2024-02-12T17:44:42Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "we use code like this, to pull the receipts from the transparent statement, and then we assume that the entry will always have an empty map as its unprotected header... thats not a great assumption, based on the current draft text.\r\n\r\n```ts\r\nexport const getEntryReceipts = ({ transparentStatement }: RequestEntryReceipts) => {\r\n  const decoded = cbor.decode(transparentStatement)\r\n  let unprotectedHeader = decoded.value[1]\r\n  if (!(unprotectedHeader instanceof Map)) {\r\n    unprotectedHeader = new Map()\r\n  }\r\n  const receipts = unprotectedHeader.get(tags.scitt_receipt) || []\r\n  decoded.value[1] = new Map()\r\n  const entry = cbor.encode(decoded)\r\n  return { entry, receipts }\r\n}\r\n```",
          "createdAt": "2023-10-25T16:33:00Z",
          "updatedAt": "2023-10-25T16:33:00Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> We need to describe transparent statement inception in detail and comment on its correct usage (and its nonsensical usage).\r\n\r\nSo how does this happen in the architecture document, is it not an implementation detail? I have become cautious with systems that have unbounded recursion and want sensible limits on \"depth.\" Is that something 1) the group is accepting of 2) even we agree upon it belongs in the architecture doc and not somewhere else?",
          "createdAt": "2023-11-14T22:57:11Z",
          "updatedAt": "2023-11-14T22:57:11Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue is also related the concept of binding the registration policy to the signed statement... You might set the registration policy as an unprotected header property before adding the signed statement to the log... You will encounter a similar issue.\n\nThe problem with unprotected headers, is that they are not protected, so they can contain extra data, such as receipts or registration policies... And a transparency service can strip that stuff out, or inject it, before adding the signed statement to the log.... Tampering with the unprotected header doesn't break the signature, but it does break the inclusion proofs, because it breaks the hash of the entry.",
          "createdAt": "2023-11-16T01:38:33Z",
          "updatedAt": "2023-11-16T01:38:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> This issue is also related the concept of binding the registration policy to the signed statement... You might set the registration policy as an unprotected header property before adding the signed statement to the log... You will encounter a similar issue.\r\n\r\nSee: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/136#issuecomment-1879466796",
          "createdAt": "2024-01-06T00:59:36Z",
          "updatedAt": "2024-01-06T00:59:36Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as covered in most recent draft 05",
          "createdAt": "2024-02-12T17:44:42Z",
          "updatedAt": "2024-02-12T17:44:42Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOIvmHss508dzY",
      "title": "x5c or x5u or both?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/125",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For signed statements and receipts.",
      "createdAt": "2023-10-25T18:37:30Z",
      "updatedAt": "2024-02-12T17:52:36Z",
      "closedAt": "2024-02-12T17:52:36Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "We settled with x5t (the humor is not lost on me). Any objections? Otherwise we can close.",
          "createdAt": "2024-01-30T14:18:56Z",
          "updatedAt": "2024-01-30T14:18:56Z"
        }
      ]
    },
    {
      "number": 127,
      "id": "I_kwDOIvmHss51-2CK",
      "title": "Registration and Config statements MUST specify ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/127",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "[Line 635](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/126/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R635) in PR #126 indicates: \r\n\r\n> The configuration `reg_info` SHOULD include a secure version number and a timestamp.\r\n\r\nAs these values are considered critical to the stability of the Transparency Service, I made the [comment \"To avoid rollbacks, we SHOULD likely make this a MUST, specific to configuration.\"](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/126/files#r1382909297)\r\n\r\nThis issue tracks the proposed change",
      "createdAt": "2023-11-06T15:16:45Z",
      "updatedAt": "2023-12-12T16:45:59Z",
      "closedAt": "2023-12-12T16:45:59Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "If we take this proposed change, which one is it?\r\n\r\n> The configuration `reg_info` MUST include a secure version number and a timestamp.\r\n\r\nor\r\n\r\n> The configuration `reg_info` MUST include a secure version number or timestamp.\r\n\r\nI do not really know what a \"secure version number\" could be (do we mean incrementing sequence number?), but just switching SHOULD to MUST and requiring both seems like it could be tedious for the implementer, confusing for a TS Service API client consumer. Barring any guidance, which one is the primary one in the presence of both?",
          "createdAt": "2023-11-22T14:31:42Z",
          "updatedAt": "2023-11-22T14:31:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved with #135 ",
          "createdAt": "2023-12-12T16:45:59Z",
          "updatedAt": "2023-12-12T16:45:59Z"
        }
      ]
    },
    {
      "number": 128,
      "id": "I_kwDOIvmHss52yv6N",
      "title": "Update Diagrams",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/128",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It would be nice to show that a single signed statement can have multiple receipts.... and elaborate on what \"transparent statement\" means when multiple receipts are present.\r\n\r\n```mermaid\r\nflowchart\r\n    transparency_service_1(Transparency Service 1)\r\n    transparency_service_2(Transparency Service 2)\r\n    transparent_statement(transparent statement) \r\n\r\n    signed_statement[signed statement]\r\n\r\n    signed_statement --> transparency_service_1\r\n    signed_statement --> transparency_service_2\r\n    transparency_service_1 --> receipt_1{{receipt 1}}\r\n    transparency_service_2 --> receipt_2{{receipt 2}}\r\n    signed_statement -.-> transparent_statement\r\n    receipt_1 --> transparent_statement\r\n    receipt_2 --> transparent_statement\r\n```\r\n\r\nIt would be nice to show that a single transparent statements can be split out into a single signed statement and at least 1 receipt.\r\n\r\n```mermaid\r\nflowchart\r\n    transparent_statement(transparent statement) \r\n    transparent_statement --> signed_statement(signed statement)\r\n    transparent_statement --> receipt_1{{receipt 1}}\r\n    transparent_statement --> receipt_2{{receipt 2}}\r\n    transparent_statement --> receipt_3{{receipt 3}}\r\n```",
      "createdAt": "2023-11-14T15:44:56Z",
      "updatedAt": "2024-02-12T17:43:12Z",
      "closedAt": "2024-02-12T17:43:12Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Here is a markdown snippet that could be modified to clarify multiple receipts:\r\n\r\n```\r\n~~~~aasvg\r\n      Dependencies        Malicious 3rd-party package or version\r\n           |\r\n           |\r\n     +-----+-----+\r\n     |           |\r\n     |   Code    |        Compromise source control\r\n     |           |\r\n     +-----+-----+\r\n           |\r\n     +-----+-----+\r\n     |           |        Malicious plug-ins;\r\n     |  Commit   |        Malicious commit\r\n     |           |\r\n     +-----+-----+\r\n           |\r\n     +-----+-----+\r\n     |           |        Modify build tasks or build environment;\r\n     |   Build   |        Poison build agent/compiler;\r\n     |           |        Tamper with build cache\r\n     +-----+-----+\r\n           |\r\n     +-----+-----+\r\n     |           |        Compromise test tools;\r\n     |    Test   |        Falsification of test results\r\n     |           |\r\n     +-----+-----+\r\n           |\r\n     +-----+-----+\r\n     |           |        Use bad package;\r\n     |  Package  |        Compromise package repository\r\n     |           |\r\n     +-----+-----+\r\n           |\r\n     +-----+-----+\r\n     |           |        Modify release tasks;\r\n     |  Release  |        Modify build drop prior to release\r\n     |           |\r\n     +-----+-----+\r\n           |\r\n     +-----+-----+\r\n     |           |\r\n     |  Deploy   |        Tamper with versioning and update process\r\n     |           |\r\n     +-----------+\r\n~~~~\r\n{: #lifecycle-threats title=\"Example Lifecycle Threats\"}\r\n```",
          "createdAt": "2023-11-15T22:02:04Z",
          "updatedAt": "2023-11-15T22:02:04Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "But we have to turn it into a positive case (multiple receipts confirming the same artifacts) not the negative (not so happy path) case, yes? This is is easy, I can add.\r\n\r\n> Here is a markdown snippet that could be modified to clarify multiple receipts:\r\n> ...\r\n",
          "createdAt": "2023-11-16T02:42:40Z",
          "updatedAt": "2023-11-16T02:42:40Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "This still need to be done (with `aasvg`)? I will pick this up by end of week or soon thereafter when I am back from leave.",
          "createdAt": "2023-12-07T02:23:42Z",
          "updatedAt": "2023-12-07T02:23:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "pinging for inclusion or cutting.",
          "createdAt": "2024-01-06T01:03:04Z",
          "updatedAt": "2024-01-06T01:03:04Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "I_kwDOIvmHss54yZmy",
      "title": "Mandatory references to policy feeds in receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/136",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Should the policy be committed to in the registration of the signed statement?\r\n\r\nShould the policy be committed to in the issuance of the receipt?\r\n\r\nDoes the commitment need to be in the ledger, or simply in the protected header?",
      "createdAt": "2023-12-05T15:28:26Z",
      "updatedAt": "2024-02-12T17:43:44Z",
      "closedAt": "2024-02-12T17:43:44Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "related issue: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/66",
          "createdAt": "2023-12-05T15:46:54Z",
          "updatedAt": "2023-12-05T15:46:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Including the expected policy in the signed statement would require the issuer to know which policy is in effect when they register the statement. While somewhat good to know, it would require the issuer (or the client initiating the workflow) to query the transparency service before registration. This would be an extra call, and check. It would also create a potential race condition or DOS, as the policy could be continually changed, keeping new statements from being registered. \r\n\r\nWhen the receipt is issued, knowing the registration policy that was applied makes the receipt more valuable. A verifier could decide to accept a receipt for an artifact if the policy is current. A verifier could decide a newer policy invalidates a previous receipt.\r\n\r\nLikewise, I'd suggest the ledger should know reflect the policy that was applied at the time of registration. This could be in the unprotected header, as an auditor could correlate the time the statement was registered with the time the policy was in effect. This means you don't lose any security guarantees for the registration policy not being included in the protected header. ",
          "createdAt": "2024-01-06T00:49:40Z",
          "updatedAt": "2024-01-06T00:49:40Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "I_kwDOIvmHss54ymRb",
      "title": "Issuer identity and key transparency",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/137",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied to the wrong repo \ud83d\ude1e ",
      "createdAt": "2023-12-05T15:53:39Z",
      "updatedAt": "2023-12-05T16:16:12Z",
      "closedAt": "2023-12-05T16:16:12Z",
      "comments": []
    },
    {
      "number": 138,
      "id": "I_kwDOIvmHss54ytNn",
      "title": " Document key discovery for OIDC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/138",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Copied to the wrong repo \ud83d\ude1e ",
      "createdAt": "2023-12-05T16:06:40Z",
      "updatedAt": "2023-12-05T16:35:06Z",
      "closedAt": "2023-12-05T16:35:06Z",
      "comments": []
    },
    {
      "number": 148,
      "id": "I_kwDOIvmHss57P_zZ",
      "title": "What's blocking the architecture?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/148",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This issue is a living description of the references that block the architecture from becoming an RFC.\r\n\r\n```mermaid\r\nflowchart \r\n    \r\nsubgraph COSE\r\n    cometre[draft-ietf-cose-merkle-tree-proofs]\r\n    hash-envelope{{draft-steele-cose-hash-envelope}}\r\nend\r\n\r\nsubgraph SCITT\r\n    architecture[draft-ietf-scitt-architecture]\r\n    scrapi{{draft-birkholz-scitt-scrapi}}\r\n    cometre-ccf{{draft-birkholz-cose-cometre-ccf-profile}}\r\nend\r\n\r\nscrapi --> architecture\r\narchitecture -->  cometre\r\narchitecture --> hash-envelope\r\ncometre-ccf --> cometre\r\n```\r\n\r\nCurrently, the `draft-ietf-scitt-architecture` is blocked by `draft-ietf-cose-merkle-tree-proofs`.\r\n\r\n`draft-steele-cose-hash-envelope` is not blocking anything because it is just a special kind of signed statement, its possible it might block `draft-birkholz-scitt-scrapi` in the future.\r\n\r\n`draft-birkholz-cose-cometre-ccf-profile` is blocked by `draft-ietf-cose-merkle-tree-proofs`\r\n\r\nI recommend helping `draft-ietf-cose-merkle-tree-proofs` close out so the architecture can be published.\r\n\r\nI would then make `draft-birkholz-scitt-scrapi` adopted by SCITT, and make it be blocked by the architecture.\r\n\r\n\r\n",
      "createdAt": "2024-01-05T17:50:36Z",
      "updatedAt": "2024-03-15T23:12:41Z",
      "closedAt": "2024-02-12T17:46:55Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @OR13\r\nWhile I believe `draft-steele-cose-hash-envelope` is important to support, it's not clear it needs to be in the architecture, although it's currently tied to the identity discussion. #145\r\n\r\nWith #149 complete, we can now invert SCRAPI to be dependent on the Architecture.\r\n\r\n```mermaid\r\nflowchart \r\n    \r\nsubgraph COSE\r\n    cometre[draft-ietf-cose-merkle-tree-proofs]\r\n    hash-envelope{{draft-steele-cose-hash-envelope}}\r\nend\r\n\r\nsubgraph SCITT\r\n    scrapi{{draft-birkholz-scitt-scrapi}}\r\n    architecture[draft-ietf-scitt-architecture]\r\n    cometre-ccf{{draft-birkholz-cose-cometre-ccf-profile}}\r\nend\r\n\r\nscrapi --> architecture\r\narchitecture -->  cometre\r\narchitecture --> hash-envelope\r\ncometre-ccf --> cometre\r\n```\r\n",
          "createdAt": "2024-01-06T01:12:19Z",
          "updatedAt": "2024-01-06T01:12:19Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I updated the issue description diagram to reflect the current state.\r\n\r\nIf folks like I can add blockers to the architecture based on major open issues next, so we can see how \"identifiers\" and \"configuration\" are related to finishing the architecture.",
          "createdAt": "2024-01-08T14:37:53Z",
          "updatedAt": "2024-01-08T14:37:53Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> If folks like I can add blockers to the architecture based on major open issues next, so we can see how \"identifiers\" and \"configuration\" are related to finishing the architecture.\r\n\r\nTracking the blockers is goodness. I've added #151 as one of the blockers. ",
          "createdAt": "2024-01-08T15:37:39Z",
          "updatedAt": "2024-01-08T15:37:51Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> If folks like I can add blockers to the architecture based on major open issues next, so we can see how \"identifiers\" and \"configuration\" are related to finishing the architecture.\r\n\r\nMy individual summary of potential content/decision blockers (in contrast to reference blockers) as far as I am aware of them. Some of them might already have consensus, but it is not reflected, I think:\r\n\r\n* Text on identity document use in SCITT. My assumption is: agnostic expositional text and at least one example how to use x.509 wrt Signed Statements and Receipts\r\n* Text on statement identification. My assumption is that we need at least abstract exopsitional text. I am not sure, if this can/will be part of the first iteration of the architecture document.\r\n* Meaning of subject tstr composition (formerly known as feed). My assumption is: could only providing the tstr in the CDDL definition of the Signed Statement structure and define the semantics of the tstr out-of-scope of the first SCITT Arch. Is that feasible?",
          "createdAt": "2024-01-08T15:41:39Z",
          "updatedAt": "2024-01-16T15:26:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved the loose ends",
          "createdAt": "2024-02-12T17:46:55Z",
          "updatedAt": "2024-02-12T17:46:55Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "How did we resolve loose ends on dependent drafts where the RFCs aren't past WGLC in other WGs?",
          "createdAt": "2024-03-15T23:12:39Z",
          "updatedAt": "2024-03-15T23:12:39Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "I_kwDOIvmHss57R4sg",
      "title": "Complete Configuration/Registration Policy/Receipt Inclusion",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/151",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Recent versions of the draft include [references to configuration and registration policies being included in append-only log](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-configuration). This brings up questions on what's used to identify an entry, which would represent the configuration an/or registration policy.\r\n\r\nSee:\r\n- #124 \r\n- #136\r\n- #145\r\n\r\nThe [draft says](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-5.2.2-2):\r\n> The registration policy for statements with the media type suffix (+<format> is implementation-specific. \r\n\r\nShould the inclusion of configuration & registration policy details be part of the architecture, or the entire topic be implementation-specific? ",
      "createdAt": "2024-01-06T01:56:08Z",
      "updatedAt": "2024-02-12T17:52:25Z",
      "closedAt": "2024-02-12T17:52:25Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> Should the inclusion of configuration & registration policy details be part of the architecture\r\n\r\nNo\r\n> or the entire topic be implementation-specific?\r\n\r\nAlso no, but moving to another I-D",
          "createdAt": "2024-01-30T14:06:44Z",
          "updatedAt": "2024-01-30T14:06:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as resolved in 05",
          "createdAt": "2024-02-12T17:52:25Z",
          "updatedAt": "2024-02-12T17:52:25Z"
        }
      ]
    },
    {
      "number": 154,
      "id": "I_kwDOIvmHss57ilU7",
      "title": "Registration Information data in Protected Header needs to be consistent",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/154",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Registration_Info is defined in the protected header is not aligned properly to \r\nStatement Registration Information (Statement_Registration_info) mentioned in the document!",
      "createdAt": "2024-01-09T15:56:28Z",
      "updatedAt": "2024-02-12T17:51:59Z",
      "closedAt": "2024-02-12T17:51:59Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I read this again, and it seems the intention is to include unsecured data in the unprotected header.\r\n\r\nPer the changes in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/145\r\n\r\nThat information will not be included in the identifier, and I would like to see use cases for it, or to see it removed.",
          "createdAt": "2024-01-09T20:11:26Z",
          "updatedAt": "2024-01-09T20:11:26Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The rough consensus seems to lean towards removing statement identifiers out-of-scope of the core SCITT architecture. Are there any objections to that wrt this issue?",
          "createdAt": "2024-01-30T14:05:29Z",
          "updatedAt": "2024-01-30T14:05:29Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in 05",
          "createdAt": "2024-02-12T17:51:59Z",
          "updatedAt": "2024-02-12T17:51:59Z"
        }
      ]
    },
    {
      "number": 155,
      "id": "I_kwDOIvmHss57ilds",
      "title": "Signed statement identifier should be hash",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/155",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per authors meeting today: update the architecture such that the content identifier of the SCITT receipt for SCITT signed statement shall be the hash of the to-be-signed bytes as defined by COSE specification.",
      "createdAt": "2024-01-09T15:56:47Z",
      "updatedAt": "2024-02-12T17:51:27Z",
      "closedAt": "2024-02-12T17:51:27Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding a bit more clarity. \r\nThe hash shall be of the protected header and payload. The unprotected header is stripped to assure consistency",
          "createdAt": "2024-01-09T22:25:58Z",
          "updatedAt": "2024-01-09T22:25:58Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "How much is this issue related to #167?",
          "createdAt": "2024-01-30T14:03:53Z",
          "updatedAt": "2024-01-30T14:03:53Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved in 05",
          "createdAt": "2024-02-12T17:51:27Z",
          "updatedAt": "2024-02-12T17:51:27Z"
        }
      ]
    },
    {
      "number": 158,
      "id": "I_kwDOIvmHss57orr2",
      "title": "Scope of Introduction",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/158",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "In 24f63ee8cfc2b99b937dd236cca3c886fd1218f9, the Introduction start to include normative language. Maybe it is better to move that to a follow-up section?",
      "createdAt": "2024-01-10T12:23:50Z",
      "updatedAt": "2024-02-12T17:45:07Z",
      "closedAt": "2024-02-12T17:45:06Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Stale",
          "createdAt": "2024-02-12T17:45:06Z",
          "updatedAt": "2024-02-12T17:45:06Z"
        }
      ]
    },
    {
      "number": 159,
      "id": "I_kwDOIvmHss57ovnG",
      "title": "Normative Language on Registration Policy",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/159",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Currently in 24f63ee8cfc2b99b937dd236cca3c886fd1218f9, the Introduction includes normative language about Registration Policies.\r\n\r\n> Each service MAY enforce its own Registration Policies for authorizing entities to register their Signed Statements to the Append-only Log.\r\n\r\nIndependent of where this normative language goes in the end, I'd assume that a MAY is too weak? The minimal required registration policy - from my individual point of view - seems to be the authorization of the Issuer that is the \"Transparency Services Owner\" to register new Signed Statements. Does that sound right? (in essence that roughly resembles a \"key before signatures\" approach to ensure that a transparency service retains the capability to register Signed Statements).\r\n\r\nIf there always must be a Minimum of an initial Registration Policy (and be it part of bootstrapping a TS with its first statement that then must be a policy including a key), does this normative language not require a MUST?\r\n\r\nWhat does the group think. Am I missing something obvious here? ",
      "createdAt": "2024-01-10T12:32:11Z",
      "updatedAt": "2024-02-12T17:49:51Z",
      "closedAt": "2024-02-12T17:49:50Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The current rough consensus seems to lean towards putting Registration Policies out-of-scope of the core SCITT Architecture (with the exception of the \"key before signature\" concept). If there is no objection in the next days, I'll start a PR after #163 is resolved.",
          "createdAt": "2024-01-30T14:00:46Z",
          "updatedAt": "2024-01-30T14:00:46Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed in 05. Need specific, new issues.",
          "createdAt": "2024-02-12T17:49:50Z",
          "updatedAt": "2024-02-12T17:49:50Z"
        }
      ]
    },
    {
      "number": 160,
      "id": "I_kwDOIvmHss57pzMV",
      "title": "New Examples for new section \"Support for Multiple Statements\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/160",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [
        "OR13",
        "henkbirkholz"
      ],
      "labels": [],
      "body": "Looking at https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/153/, I think a that some more diverse examples later that show how multiple statements about one Artifact using the same sub Claim can have different semantics than multiple statements about one Artifact using different sub Claims - including illustrating text when one choice can be used an when the other & pros and cons.",
      "createdAt": "2024-01-10T14:57:14Z",
      "updatedAt": "2024-02-12T17:45:49Z",
      "closedAt": "2024-02-12T17:45:49Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Covered above",
          "createdAt": "2024-02-12T17:45:49Z",
          "updatedAt": "2024-02-12T17:45:49Z"
        }
      ]
    },
    {
      "number": 162,
      "id": "I_kwDOIvmHss58YAbe",
      "title": "Align `iss` with `x5t` guidance with OAUTH draft",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/162",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://datatracker.ietf.org/doc/html/draft-ietf-oauth-sd-jwt-vc-01#section-3.5",
      "createdAt": "2024-01-17T17:41:08Z",
      "updatedAt": "2024-02-12T17:49:09Z",
      "closedAt": "2024-02-12T17:49:09Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "PR please? \u263a\ufe0f",
          "createdAt": "2024-01-30T13:57:23Z",
          "updatedAt": "2024-01-30T13:57:23Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Complete in 05",
          "createdAt": "2024-02-12T17:49:09Z",
          "updatedAt": "2024-02-12T17:49:09Z"
        }
      ]
    },
    {
      "number": 166,
      "id": "I_kwDOIvmHss58h1A9",
      "title": "Resolve Section 5.1 and 6 as the titles appear duplicative",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/166",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "[5.1 Signed Statement Issuance and Registration](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-signed-statement-issuance-a) appears as duplicative of [6 Signed Statement Issuance, Registration, and Verification](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-signed-statement-issuance-r)\r\n\r\nAre these meant to separate signing, registration and verification?",
      "createdAt": "2024-01-18T23:15:23Z",
      "updatedAt": "2024-02-12T17:48:36Z",
      "closedAt": "2024-02-12T17:48:36Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "We'll work through Section 5 asap and then resolve naming.",
          "createdAt": "2024-01-30T13:56:13Z",
          "updatedAt": "2024-01-30T13:56:13Z"
        }
      ]
    },
    {
      "number": 170,
      "id": "I_kwDOIvmHss58kb_V",
      "title": "Are multiple (potential conflicting) identifiers for identity documents in Signed Statements & would that pose a problem?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/170",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Do we need to talk about that in the Security Considerations?",
      "createdAt": "2024-01-19T08:21:48Z",
      "updatedAt": "2024-02-12T17:47:33Z",
      "closedAt": "2024-02-12T17:47:33Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Latest language in 05 addresses this",
          "createdAt": "2024-02-12T17:47:33Z",
          "updatedAt": "2024-02-12T17:47:33Z"
        }
      ]
    },
    {
      "number": 178,
      "id": "I_kwDOIvmHss5-IV0j",
      "title": "Converge Media Type, Content Type, Payload Type",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/178",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [],
      "body": "The doc uses the three interchangeably\r\nIs there a preferred reference to be consistent?",
      "createdAt": "2024-02-03T01:50:51Z",
      "updatedAt": "2024-02-12T17:53:32Z",
      "closedAt": "2024-02-12T17:53:32Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "https://www.rfc-editor.org/rfc/rfc6838 is about Media Type. And then references payload and content type. \r\nI've been through this confusion before, where Media Type is the definition of a type of identifier. The challenge becomes when using that type of identifier for different parts of a document. \r\n- When does the media type refer to the envelope itself? \r\n- When does the media type refer to a property (aka payload)?",
          "createdAt": "2024-02-03T02:05:55Z",
          "updatedAt": "2024-02-03T02:05:55Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't understand the question.\n\n`cose-sign1.cbor` is of content type `application/cbor` and `application/cose` .\n\nIt is generally a good idea to use a more specific media type.\n\nThe payload of a cose-sign1 can have a media type, such as `application/cose` or `application/json`.\n\n",
          "createdAt": "2024-02-07T22:21:51Z",
          "updatedAt": "2024-02-07T22:23:24Z"
        }
      ]
    },
    {
      "number": 180,
      "id": "I_kwDOIvmHss5-bfXH",
      "title": "Define Consumer or Remove it",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/180",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-06T15:59:07Z",
      "updatedAt": "2024-02-09T00:19:22Z",
      "closedAt": "2024-02-09T00:19:22Z",
      "comments": []
    },
    {
      "number": 183,
      "id": "I_kwDOIvmHss5-zva3",
      "title": "Are signed statements returned from a TS or only Receipts?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/183",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Our implementation only returns receipts, because our log only stores hashes, you would need to call a different adjacent service to get the \"original contents\"... other implementations may have co-located these APIs and might support delivering more than \"receipts\" from a TS.\r\n\r\nBased on \r\n\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179/files#r1484545650\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179/files#r1483686978",
      "createdAt": "2024-02-09T16:39:52Z",
      "updatedAt": "2024-02-12T17:54:20Z",
      "closedAt": "2024-02-12T17:54:19Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as resolved in 05, returns receipts",
          "createdAt": "2024-02-12T17:54:19Z",
          "updatedAt": "2024-02-12T17:54:19Z"
        }
      ]
    },
    {
      "number": 184,
      "id": "I_kwDOIvmHss5-zxqV",
      "title": "make this an editor comment",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/184",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              make this an editor comment\r\n\r\n_Originally posted by @ad-l in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484498187_\r\n            ",
      "createdAt": "2024-02-09T16:45:46Z",
      "updatedAt": "2024-02-12T17:53:48Z",
      "closedAt": "2024-02-12T17:53:48Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "To be completed!",
          "createdAt": "2024-02-09T16:45:55Z",
          "updatedAt": "2024-02-09T16:45:55Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as resolved in 05",
          "createdAt": "2024-02-12T17:53:48Z",
          "updatedAt": "2024-02-12T17:53:48Z"
        }
      ]
    },
    {
      "number": 185,
      "id": "I_kwDOIvmHss5-zzzw",
      "title": "Does it mean that unprotected headers are now also included in the receipt's signed information? This significantly complicates the interpretation of the resulting receipts by verifiers. I also don't think it should be discussed in the terminology.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/185",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "fournet"
      ],
      "labels": [],
      "body": "              Does it mean that unprotected headers are now also included in the receipt's signed information? This significantly complicates the interpretation of the resulting receipts by verifiers. I also don't think it should be discussed in the terminology.\r\n\r\n_Originally posted by @fournet in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484534857_\r\n            ",
      "createdAt": "2024-02-09T16:51:17Z",
      "updatedAt": "2024-02-26T19:33:30Z",
      "closedAt": "2024-02-26T19:33:30Z",
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This is controversial statement: ",
          "createdAt": "2024-02-09T16:51:33Z",
          "updatedAt": "2024-02-09T16:51:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Notes taken from editors' meeting.\r\n@fournet, can you please update the title and describe the next steps. ",
          "createdAt": "2024-02-12T18:02:41Z",
          "updatedAt": "2024-02-12T18:02:41Z"
        },
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I propose we cut this sentence.",
          "createdAt": "2024-02-13T14:41:03Z",
          "updatedAt": "2024-02-13T14:41:03Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as  this sentance has already been removed. ",
          "createdAt": "2024-02-26T19:33:30Z",
          "updatedAt": "2024-02-26T19:33:30Z"
        }
      ]
    },
    {
      "number": 186,
      "id": "I_kwDOIvmHss5-z4x3",
      "title": "Authorization of the issuer is missing!",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/186",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "so the authorization of the Issuer and of the Transparency Service by the Verifier of the Receipt are generally independent\r\n\r\n_Originally posted by @yogeshbdeshpande in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484586471_\r\n            ",
      "createdAt": "2024-02-09T17:04:03Z",
      "updatedAt": "2024-02-20T22:19:21Z",
      "closedAt": "2024-02-20T22:19:21Z",
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "See also #200",
          "createdAt": "2024-02-13T13:30:05Z",
          "updatedAt": "2024-02-13T13:30:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved by #197 ",
          "createdAt": "2024-02-20T22:19:21Z",
          "updatedAt": "2024-02-20T22:19:21Z"
        }
      ]
    },
    {
      "number": 187,
      "id": "I_kwDOIvmHss5-z-b0",
      "title": "But at least their intended security properties are? If this is out of scope of SCITT then at least the COMETRE document must be much more specific about the minimum security properties of verifiable data structures.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/187",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [],
      "body": "              But at least their intended security properties are? If this is out of scope of SCITT then at least the COMETRE document must be much more specific about the minimum security properties of verifiable data structures.\r\n\r\n_Originally posted by @ad-l in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484523409_\r\n\r\nAddress comment from Cedric\r\n            ",
      "createdAt": "2024-02-09T17:19:56Z",
      "updatedAt": "2024-02-13T13:29:36Z",
      "closedAt": "2024-02-13T13:29:36Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@ad-l can you trim this title down to something actionable and propose a PR for changes?",
          "createdAt": "2024-02-12T22:38:49Z",
          "updatedAt": "2024-02-12T22:38:49Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "This is explained in more detail in #199 ",
          "createdAt": "2024-02-13T13:29:36Z",
          "updatedAt": "2024-02-13T13:29:36Z"
        }
      ]
    },
    {
      "number": 188,
      "id": "I_kwDOIvmHss5-z_IN",
      "title": "That is a big TODO and since x5t is now mandatory it needs to be specified before this PR can be merged",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/188",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [],
      "body": "              That is a big TODO and since x5t is now mandatory it needs to be specified before this PR can be merged\r\n\r\n_Originally posted by @ad-l in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484526507_\r\n            ",
      "createdAt": "2024-02-09T17:22:06Z",
      "updatedAt": "2024-02-13T13:27:29Z",
      "closedAt": "2024-02-13T13:27:29Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Is it in fact the case that `x5t` use is mandatory in the draft spec and this issue is to track follow-on edits? Or is this issue to confirm whether or not that is the case and adjust accordingly?",
          "createdAt": "2024-02-12T19:08:10Z",
          "updatedAt": "2024-02-12T19:08:10Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "This is detailed in #200 ",
          "createdAt": "2024-02-13T13:27:29Z",
          "updatedAt": "2024-02-13T13:27:29Z"
        }
      ]
    },
    {
      "number": 189,
      "id": "I_kwDOIvmHss5-0BHs",
      "title": "Discuss the possible issue on Client not the same as Issuer",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/189",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker",
        "yogeshbdeshpande"
      ],
      "labels": [],
      "body": "              Discuss the possible issue on this issue!\r\n\r\n_Originally posted by @yogeshbdeshpande in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484610979_\r\n            ",
      "createdAt": "2024-02-09T17:27:39Z",
      "updatedAt": "2024-02-20T22:20:07Z",
      "closedAt": "2024-02-20T22:20:06Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Please propose a PR. ",
          "createdAt": "2024-02-12T17:59:11Z",
          "updatedAt": "2024-02-12T17:59:11Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I realized @yogeshbdeshpande is OOF this week, so I submitted #197 ",
          "createdAt": "2024-02-13T04:05:20Z",
          "updatedAt": "2024-02-13T04:05:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "resolved by #197",
          "createdAt": "2024-02-20T22:20:06Z",
          "updatedAt": "2024-02-20T22:20:06Z"
        }
      ]
    },
    {
      "number": 190,
      "id": "I_kwDOIvmHss5-0CNb",
      "title": "Revisit Validation section for clarity after refactoring PR",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/190",
      "state": "CLOSED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "yogeshbdeshpande"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "              Revisit ### Validation {#validation} section fully: After refactor\r\n\r\n_Originally posted by @yogeshbdeshpande in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179#discussion_r1484614307_\r\n            ",
      "createdAt": "2024-02-09T17:31:03Z",
      "updatedAt": "2024-02-27T15:31:13Z",
      "closedAt": "2024-02-27T15:31:13Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Please propose a new PR. ",
          "createdAt": "2024-02-12T17:59:39Z",
          "updatedAt": "2024-02-12T17:59:39Z"
        }
      ]
    },
    {
      "number": 192,
      "id": "I_kwDOIvmHss5-1xDa",
      "title": "Resolve inconsistencies with what's stored and returned in the Append-only Log",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/192",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Registration referred to persisting and returning a transparent statement. The latest doc (Feb 9, 2024) starts to focus on storing and returning receipts, keeping the signed statements separable and possibly stored in associated data structures. A Transparent Statement is not something directly in the Append-only Log. However, the architecture has remnants that may not be completely agreed upon. \r\n\r\nFor example:\r\n> Register the Signed Statement to the append-only log\r\n> \r\n> Return the Transparent Statement, which includes the Receipt Details about generating Receipts are described in [Section 6.4](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#Receipt).\r\n\r\nand\r\n\r\n> Some jurisdictions have a Right to be Forgotten. However, once a Signed Statement is inserted into the Append-only Log maintained by a Transparency Service, it cannot be removed from the Log.\r\n\r\nand\r\n\r\n> [7.2.3. ](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/192#section-7.2.3)[Confidentiality and Privacy](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/192#name-confidentiality-and-privacy)\r\nAccording to Zero Trust Principles any location in a network is never trusted. All contents exchanged between actors is protected using secure authenticated channels (e.g., TLS) but may not exclude network traffic analysis.\r\n> \r\n> The Transparency Service is trusted with the confidentiality of the Signed Statements presented for Registration. Some Transparency Services may publish every Signed Statement in their logs, to facilitate their dissemination and auditing.\r\n",
      "createdAt": "2024-02-10T01:02:35Z",
      "updatedAt": "2024-02-12T18:00:17Z",
      "closedAt": "2024-02-12T18:00:16Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Transparent statements can go on a log, if they are COSE sign 1 and they are accepted by a registration policy.\n\nSaying anything other than that will likely require, nontrivial adjustments to our definitions.",
          "createdAt": "2024-02-10T15:40:25Z",
          "updatedAt": "2024-02-10T15:40:25Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as resolved in 05 (receipts)",
          "createdAt": "2024-02-12T18:00:16Z",
          "updatedAt": "2024-02-12T18:00:16Z"
        }
      ]
    },
    {
      "number": 199,
      "id": "I_kwDOIvmHss5_F5hA",
      "title": "Restore log consistency & append-only requirements in architecture (4.1.3)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/199",
      "state": "CLOSED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l",
        "fournet"
      ],
      "labels": [
        "pending-close",
        "ready-for-pr"
      ],
      "body": "After the refactor, the only remaining normative text about the append-only log (4.1.3) states:\r\n\r\n> The security properties of the Append-only Log are determined by the choice of the verifiable data structure used to produce Receipts.\r\n> [...]\r\n> Specific verifiable data structures, such those describes in [[RFC9162](https://www.rfc-editor.org/rfc/rfc9162)] and [[I-D.draft-steele-cose-merkle-tree-proofs](https://datatracker.ietf.org/doc/html/draft-steele-cose-merkle-tree-proofs-01)] are out of scope for this document.\r\n\r\nThere are currently no requirements for verifiable data structures used for the ledger, so indeed it is possible to define and implement a ledger that is non consistent. In fact even though it is called an \"append-only ledger\" there is no normative requirement in the architecture or in COMETRE that the verifiable data structure is append-only. This is also incompatible with the definition of transparency in section 3 that states:\r\n\r\n> Transparency is implemented by providing a consistent, append-only, cryptographically verifiable, publicly available record of entries.\r\n\r\nGiven that auditable consistency is part of the definition of transparency, the security properties of acceptable verifiable data structures should be specified:\r\n- either in the architecture document itself, as it was before version 05\r\n- or, as a requirement for defining new verifiable data structures in I-D.draft-steele-cose-merkle-tree-proofs\r\n",
      "createdAt": "2024-02-13T12:48:27Z",
      "updatedAt": "2024-03-01T20:43:54Z",
      "closedAt": "2024-03-01T20:43:54Z",
      "comments": [
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe this is a core requirement that should be clearly stated in the SCITT architecture (even if its implementation is delegated to other specs such as COMETRE). Without it, I find it hard to argue about its security and transparency benefits. ",
          "createdAt": "2024-02-13T12:53:59Z",
          "updatedAt": "2024-02-13T12:53:59Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "We discussed this issue on the call.\r\n\r\nWe determined that there should be a pull request raised, which states:\r\n\r\nSCITT Receipts MUST support inclusion proofs, and MAY support consistency proofs.\r\n\r\nSCITT does not require a specific verifiable data structure.\r\n\r\nIt is RECOMMENDED that verifiable data structures used for SCITT Receipts receive public cryptographic review on CFRG or similar.",
          "createdAt": "2024-02-27T15:57:09Z",
          "updatedAt": "2024-02-27T15:57:09Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue will be closed if no PR is raised by Friday.",
          "createdAt": "2024-02-27T15:59:12Z",
          "updatedAt": "2024-02-27T15:59:12Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> It is RECOMMENDED that verifiable data structures used for SCITT Receipts receive public cryptographic review on CFRG or similar.\r\n\r\nJust to be clear because I was unable to attend the call: this is a procedural point and will not be explicitly written into the draft with a PR? I assume not, but I thought it was worth clearing up.",
          "createdAt": "2024-02-27T16:43:20Z",
          "updatedAt": "2024-02-27T16:43:20Z"
        }
      ]
    },
    {
      "number": 200,
      "id": "I_kwDOIvmHss5_GJQM",
      "title": "Auditable/verifiable issuer authentication",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/200",
      "state": "CLOSED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [
        "pending-close",
        "ready-for-pr"
      ],
      "body": "Since the refactor and the shift to X.509-based claim signature, the authentication of issuers is no longer auditable - i.e. it is no longer possible for verifiers and auditors to re-validate the claim signature and issuer authentication performed by a TS at registration, which massively increases the trust in the TS (which may now try to register forged claims with plausible deniability - by claiming the TS lost the issuer's certificate used at registration even if none existed). \r\n\r\nPart of the issue is that claims use x5t instead of x5c. This means there is no mechanism for auditors to obtain the certificate chain used to sign a claim from the TS at registration. Even if x5c was used instead of x5t, only the leaf certificate is required to appear in x5c. Reconstructing the full issuer certificate chain requires at least the TS configuration to link to the configured root CAs used by the TS. Since roots and intermediate certificates expire (or can be updated, as is often the case with PKIX root programs from Mozilla, Google and Microsoft), it is not possible to assume that verifiers can just store the root configuration with the TS's certificate.\r\n\r\nThere are further issues with issuer authentication:\r\n>When x5t is present, iss MUST be a string with a value between 1 and 8192 characters in length that fits the regular expression of a distinguished name.\r\n\r\nThis is not well-specified without a reference to such a regular expression. Is this supposed to mean RFC4514 string representation of a distinguished name? The language of RFC4514 doesn't appear to be regular (it is context free), so this must be clarified.\r\n\r\nThere is also no requirement for the issuer's serialized distinguished name to be produced from the claim's X.509 leaf subject. A malicious issuer can put a different issuer's serialized distinguished name in the iss field and is likely to confuse a verifier who cannot detect the mismatch since issuer authentication is not auditable. This makes iss essentially useless for verifiers, and it may be preferable to set iss to nil if x5t/x5c is used.",
      "createdAt": "2024-02-13T13:23:34Z",
      "updatedAt": "2024-03-04T15:40:37Z",
      "closedAt": "2024-03-04T15:40:37Z",
      "comments": [
        {
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "body": "I propose we require in the architecture that the full certificate chain used to identify the issuer and verify its signature at the time of registration be authenticated by the TS via the resulting receipt. \r\n- Given a transparent statement (and possibly auxiliary transparent statement from the TS log recording root and intermediate certificates) verifiers must be able to retrieve and review the full certificate chain.\r\n- This clearly separates PKI issues (delegated to certificate issuance) and the evidence required to keep them transparent and auditable. \r\n- The text included a a way to implement this requirement based on transparent configuration statements, which I found useful but may be too detailed/prescriptive for the architecture. ",
          "createdAt": "2024-02-13T13:37:21Z",
          "updatedAt": "2024-02-13T13:37:21Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think its in the spirit of COSE to include the full cert chain in a protected header.\r\n\r\nA thumbprint to a certificate that is in a chain is more concise.",
          "createdAt": "2024-02-15T20:51:39Z",
          "updatedAt": "2024-02-15T20:51:39Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue will be closed if no PR is raised by Friday.",
          "createdAt": "2024-02-27T15:59:27Z",
          "updatedAt": "2024-02-27T15:59:27Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with #213 ",
          "createdAt": "2024-03-04T15:40:37Z",
          "updatedAt": "2024-03-04T15:40:37Z"
        }
      ]
    },
    {
      "number": 206,
      "id": "I_kwDOIvmHss6Ac0ME",
      "title": "Consumer is a capitalized term but not defined",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/206",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "As part of #120, I would like to consider the removal of Consumer and consumer from this specification if we are not going to define it. It is a generalized term and I would rather expend work group time on trying to tailor an appropriate custom definition of it.\r\n\r\nI will likely post this issue to the mailing list and cross-reference that thread here and leave this issue for review for a week to solicit feedback.\r\n\r\nRelated mailing list thread: https://mailarchive.ietf.org/arch/msg/scitt/yTaAi3l-q2TZVLNH4Wp36rR232Q/.",
      "createdAt": "2024-02-26T20:13:54Z",
      "updatedAt": "2024-02-27T15:21:27Z",
      "closedAt": "2024-02-27T15:21:27Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I do think Producer and Consumer is a good generic concept, with more clearly defined roles as Relying Party, Verifier, and Auditor, however, I'd support replacing Consumer with Relying Party or Verifier. ",
          "createdAt": "2024-02-27T04:20:23Z",
          "updatedAt": "2024-02-27T04:20:23Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I do think Producer and Consumer is a good generic concept\r\n\r\nBut we do not define them nor cite references that do. From a formality and procedures perspective in IETF, is that OK?\r\n\r\n> I'd support replacing Consumer with Relying Party or Verifier.\r\n\r\nThanks for the feedback. \r\n\r\n",
          "createdAt": "2024-02-27T04:40:21Z",
          "updatedAt": "2024-02-27T04:40:21Z"
        }
      ]
    },
    {
      "number": 214,
      "id": "I_kwDOIvmHss6BLB5M",
      "title": "Security Assurances to Auditors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/214",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is ongoing discussion regarding what properties are assured for auditors, based on normative requirements in the specification:\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/28wIM5UhewqFm0sPIVpHpQ2-DwM/\r\n\r\nWe need to be more precise regarding what \"auditable\" means.\r\n\r\nDoes it ONLY mean that a merkle tree can be reconstructed?\r\n\r\nor does it mean that a merkle tree can be reconstructed AND the policies included in it can be confirmed to have been applied based on the content of the log. (does it enable use cases where signatures MUST be verified).",
      "createdAt": "2024-03-04T15:43:13Z",
      "updatedAt": "2024-03-05T16:03:17Z",
      "closedAt": "2024-03-05T16:03:16Z",
      "comments": [
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "Probably the notion can be split into several different levels.\r\n\r\n1. Internal consistency \"review\" -- That would relate to checking that the tree is consistent at least to some extent. A review may not check the entire tree for consistency, but it may have to. Checking consistency of the entire tree would still be at this  level.\r\n\r\n2. Artifact consistency -- without understand the data, check that the hash is still generated when applied with any specified salt and that it matches what is in the tree.\r\n\r\n3. External consistency -- Checking back to source information like trust anchors to verify all signatures are correct, etc. Probably this level is required for it to be called an audit, but it would also require the lower levels.\r\n\r\nMaybe this is helpful.\r\n",
          "createdAt": "2024-03-04T16:13:28Z",
          "updatedAt": "2024-03-04T16:14:21Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "The current stance of the architecture document (after #213) is that the minimum policy (checking the statement's signature and authenticating the issuer) has to be fully auditable based on the log and/or the receipt, barring some exceptional circumstances.\r\n\r\nI am in favour of extending the same requirement to the rest of the registration policy - an auditor should be able to check based on the log + receipt that the TS applied the registration policy correctly. However, there are some known challenges related to this; it is likely that some policies will be stateful (which may be OK if the state is pulled from the log), but some TS may perform side effects such as HTTP requests to evaluate policies which makes the auditing more complicated unless a lot more ad hoc information is added to the log.\r\n\r\nI think our high level goal is to facilitate interoperability of auditing, i.e. an auditor should be able to verify the registration of a transparent statement regardless of which implementation the TS on which it was registered is using. This may be realistically achievable for the signature validation, but hard for arbitrary stateful registration policies unless we put additional constraints, such as requiring that all extra inputs of a registration policy and state mutations must rely on the log, and no other state. This would certainly be very constraining for implementers and many would probably give up on using auditable registration policies altogether.",
          "createdAt": "2024-03-04T16:14:10Z",
          "updatedAt": "2024-03-04T16:14:10Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Is auditability really such a binary concept ? Is it possible to frame auditable registration with more nuance: For example: \"is autidable with the public key material in the log\", \"is auditable assuming the retention policy of this external source\" and so on.\r\n\r\nBoiling that down in spirit: The TS is required to make it clear _how_ auditable the log & receipts are, and precisely what it offers. Rather than have the arch only work for a very rigid constraints, which might be pretty challenging to agree on anyway.\r\n",
          "createdAt": "2024-03-04T17:10:34Z",
          "updatedAt": "2024-03-04T17:10:34Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "On the call today, there was consensus that draft text for auditors is good enough.\r\n\r\nI propose closing this issue.",
          "createdAt": "2024-03-05T15:51:09Z",
          "updatedAt": "2024-03-05T15:51:09Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed in the Architecture Editors call, and believe the document is auditable and we can close this issue.",
          "createdAt": "2024-03-05T15:54:51Z",
          "updatedAt": "2024-03-05T15:54:51Z"
        },
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "I believe the architecture provides a viable basis for auditing that can be expanded as needed in the future. Okay to close.",
          "createdAt": "2024-03-05T15:59:47Z",
          "updatedAt": "2024-03-05T15:59:47Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm closing this based on the feedback and discussion.",
          "createdAt": "2024-03-05T16:03:16Z",
          "updatedAt": "2024-03-05T16:03:16Z"
        }
      ]
    },
    {
      "number": 216,
      "id": "I_kwDOIvmHss6Bc0F6",
      "title": "Relying Party definition is repeated",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/216",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "In the terminology section, Relying Party is described twice",
      "createdAt": "2024-03-06T15:40:22Z",
      "updatedAt": "2024-03-12T18:56:02Z",
      "closedAt": "2024-03-12T18:56:02Z",
      "comments": []
    },
    {
      "number": 221,
      "id": "I_kwDOIvmHss6CnRxH",
      "title": "Should we add Registered Signed Statement to the terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/221",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "terminology",
        "has-pr"
      ],
      "body": "The TS stores Signed Statements. When we started SCITT, I believe several folks had the position that TS would create and store Transparent Statements. \r\nAs of draft 06, a Transparent Statement is assembled on the client, outside the scope of the TS. Yet, we still refer to Transparent Statements. \r\nShould we add a term called Registered Signed Statement, which differentiates a Signed Statement that hasn't yet been registered, and a Signed Statement that has been registered, but isn't Transparent as the TS doesn't staple the receipt to the Signed Statement?",
      "createdAt": "2024-03-18T06:24:43Z",
      "updatedAt": "2024-04-29T15:03:35Z",
      "closedAt": "2024-04-29T15:03:35Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> As of draft 06, a Transparent Statement is assembled on the client, outside the scope of the TS. Yet, we still refer to Transparent Statements.\r\n\r\nThis change was intentional and explicitly stated in 06?\r\n\r\n",
          "createdAt": "2024-03-18T15:35:46Z",
          "updatedAt": "2024-03-18T15:35:46Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": ">This change was intentional and explicitly stated in 06?\r\n\r\nCorrect, we did clarify a Transparent Statement is assembled outside the Transparency Service, or more specifically, outside the SCITT API/Architecture. \r\nAn implementation could assemble them. \r\nHowever, reading and writing new docs, it's become difficult to describe a signed statement that's been registered. See: https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/5/commits/6a81982412e1eb8c87545f25def8311c8beee013\r\n\r\nIf others agree, proposal would be to add Registered Signed Statement in the terminology and other relevant places in the doc.",
          "createdAt": "2024-03-19T06:15:05Z",
          "updatedAt": "2024-03-19T06:15:05Z"
        },
        {
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "body": "Sounds like a good change",
          "createdAt": "2024-03-20T11:42:03Z",
          "updatedAt": "2024-03-20T11:42:03Z"
        },
        {
          "author": "raylutz",
          "authorAssociation": "NONE",
          "body": "I would prefer to see that the format of the final registered signed statement be defined because it appears that this will be likely something that is published along with an artifact in many use cases.",
          "createdAt": "2024-03-22T00:09:48Z",
          "updatedAt": "2024-03-22T00:09:48Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Consider re-wording a transparent statement as a state that comes after registration and the append-only log. Not just when it's stapled to the signed statement ",
          "createdAt": "2024-04-09T14:20:33Z",
          "updatedAt": "2024-04-09T14:20:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as the group felt we didn't need another definition. ",
          "createdAt": "2024-04-29T15:03:35Z",
          "updatedAt": "2024-04-29T15:03:35Z"
        }
      ]
    },
    {
      "number": 222,
      "id": "I_kwDOIvmHss6CyHR8",
      "title": "Clarify if/when X5Chain should be included",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/222",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ad-l"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "At the IETF 119 Hackathon, it became confusing when/if `33 x5chain` should be added to the protected header, the unprotected header, or not at all.\r\n\r\nWhile adding the x5chain to the statement can help discoverability, it expands the CBOR content, which is intended to be as small as possible.\r\nPlacing x5Chain in the protected header also means it's included in the signature, which really adds no value.\r\nAlternatives are to place it in the unprotected header, which isn't signed and could be stripped, but typically isn't in practice, so it still adds bloat.\r\n\r\nLastly, the spec speaks to different options: `x5t` (34), `x5chain`(33) or `kid`(4) \r\n[Line: 404](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L404) says:\r\n> During registration, a Transparency Service MUST, at a minimum, authenticate the Issuer of the Signed Statement by validating the CBOR signature and checking the identity of the issuer against one of its currently configured trust anchors, using the `x5t` (34), `x5chain`(33) or `kid`(4) protected headers of the Signed Statement as hints.\r\n> For instance, in order to authenticate X.509 Signed Statements, the Transparency Service MUST build and validate a complete certificate chain from the Issuer's certificate identified by `x5t`, to one of the root certificates most recently registered as a trust anchor of the Transparency Service.\r\n\r\nProposal would be to:\r\n1. Move x5Chain to the unprotected header\r\n1. Remove x5Chain\r\n1. Update the samples to show the different combinations. The [current sample](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L523) shows all as options, which has confused implementers.",
      "createdAt": "2024-03-19T06:51:45Z",
      "updatedAt": "2024-05-21T15:30:29Z",
      "closedAt": "2024-05-21T15:30:29Z",
      "comments": [
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If an X.509 certificate is used as the identity document of the Issuer, then it's reasonable to require the thumbprint of the end-entity certificate to be included in the protected header. Additionally, the x5chain can optionally be included in the unprotected header. This approach has several benefits:\r\n\r\n1. If there is an alternate discovery mechanism for X.509-based identity documents, the `x5t` value can be used to retrieve such documents. Given the existence of this alternate discovery mechanism, the chain included in the unprotected header can be removed to reduce the amount of (unnecessary) data in the Transparency Service.\r\n2. If there is no such discovery mechanism, the presence of the x5chain in the unprotected header provides the necessary information to relying parties to validate the signature on the Statement.\r\n3. RFC 9360 requires that information regarding the end-entity certificate for the identity be integrity-protected. Including the `x5t` in the protected header accomplishes this. However, there is no requirement for the `x5chain` to be protected, so it can be included in the unprotected header.",
          "createdAt": "2024-03-27T18:42:02Z",
          "updatedAt": "2024-03-27T18:42:02Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz says `x5chain` is not to be recommended.",
          "createdAt": "2024-04-05T16:03:16Z",
          "updatedAt": "2024-04-05T16:03:16Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Okay. @OR13 made sure I reply \u263a\ufe0f Seems to have worked out.\r\n\r\nOne looking from a specific angle could glean two potential drawbacks here: \"carrying the weight of `x5chain` can be a.) a burden (size) and b.) can make you lazy (cause it may cause over time something to the extend of... \"maybe it may be okay to just trust the `x5chain` content? Probably? Maybe? No other checks?.... ah, what could possible go wrong\")",
          "createdAt": "2024-04-05T17:33:57Z",
          "updatedAt": "2024-04-05T17:36:37Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Having commented that. I would advice to just make it optional and elaborate about semantics and usage scenarios in English text (especially if the location of `x5chain` implies different usage scenarios or slightly different semantics).",
          "createdAt": "2024-04-05T17:37:06Z",
          "updatedAt": "2024-04-05T17:37:06Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "@CBonnell, yes (if I read this correctly, who knows). If you mean: \"May be included optionally in either protected or unprotected header\", I am okay. Actually, I would also not explicitly disallow putting them in both headers. Policy can figure that one out.",
          "createdAt": "2024-04-05T17:41:26Z",
          "updatedAt": "2024-04-05T17:41:26Z"
        },
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@henkbirkholz, my concrete suggestion:\r\n1. `x5t` in the protected header: MUST if an X.509 certificate is the Identity Document\r\n2. `x5chain` in the *unprotected* header: MAY\r\n3. `x5chain` in the *protected* header: SHOULD NOT for the reasons you outlined in the comment [above](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/222#issuecomment-2040311441)\r\n\r\nAs you mentioned, policy can profile these MAYs and SHOULD NOTs to stronger RFC 2119 words if needed.",
          "createdAt": "2024-04-05T18:06:25Z",
          "updatedAt": "2024-04-05T18:12:34Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@ad-l to respond, keeping the `x5t` in the protected header, and when x5chain is maintained in the unprotected header.",
          "createdAt": "2024-04-09T15:02:41Z",
          "updatedAt": "2024-04-09T15:02:41Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "The point of `x5chain` is to make the full identity of the issuer verifiable by relying parties. Transparency services are allowed to alter any unprotected header, so verifiers and auditors MUST NOT rely on any unprotected `x5chain` header to identify issuers, as a malicious transparency service can always substitute a partial chain with another one on a different root (it is even possible to do so while preserving the `x5t` of the leaf certificate and the AKI/SKI of all intermediates, by extending the chain at the root).\r\n\r\nThe policy for issuers is that if they intend their identity to be verifiable by auditors and verifiers, then they should include `x5chain`  in the protected headers. If only `x5t` is included then the configuration of the TS at the time of registration is trusted to identify the issuer (this is explained in the auditability of registration section).\r\n\r\nVerifiers and auditors MUST ignore unprotected `x5chain` headers. TS may use unprotected `x5chain` as a hint to reconstruct the issuer chain but MUST validate the `x5t`.\r\n\r\nI hope that clarifies the intent of how `x5chain` should be used, now we can discuss how these can be made explicit in the architecture",
          "createdAt": "2024-04-09T16:10:27Z",
          "updatedAt": "2024-04-09T16:10:27Z"
        },
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My understanding is that any verifier or auditor will need to perform certification path validation and not solely rely on the presence of `x5t` or `x5chain` in either the unprotected or protected header. RFC 9360, section 2 says:\r\n\r\n> Parties that intend to rely on the assertions made by a certificate obtained from any of these methods still need to validate it. This validation can be done according to the PKIX rules specified in [[RFC5280](https://datatracker.ietf.org/doc/html/rfc5280)] or by using a different trust structure, such as a trusted certificate distributor for self-signed certificates. The PKIX validation includes matching against the trust anchors configured for the application. These rules apply when the validation succeeds in a single step as well as when certificate chains need to be built. If the application cannot establish trust in the certificate, the public key contained in the certificate cannot be used for cryptographic operations.\r\n\r\nPerhaps this can be stated again in the current document to reduce potential ambiguity, but I think this validation will prevent any substitution attacks/fake chains presented by malicious transparency services.",
          "createdAt": "2024-04-10T16:59:10Z",
          "updatedAt": "2024-04-10T16:59:10Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz Some security consideration text for unprotected x5chain\r\n\r\n>Auditors should be aware that the certificate chain information carried in un unprotected `x5chain` header can be tampered by a malicious transparency service, which may replace the intermediate certificates and connect to an unexpected root.\r\n> This can allow malicious TS to forge claims that look genuine except for the wrong trust anchor.\r\n>In addition to performing chain validation in accordance with PKIX rules specified in [RFC5280], auditors should explicitly verify the root certificates are genuine.\r\n",
          "createdAt": "2024-05-14T13:44:08Z",
          "updatedAt": "2024-05-14T13:44:53Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "lgtm! Now we still have to consolidate the x5t & x5chain text in the body. (might massage the text a little bit when transplanting)",
          "createdAt": "2024-05-14T13:56:08Z",
          "updatedAt": "2024-05-14T13:56:08Z"
        }
      ]
    },
    {
      "number": 223,
      "id": "I_kwDOIvmHss6DNwIQ",
      "title": "Add common usage of terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/223",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Justin suggested adding an appendix section to disambiguage common usage of terms, such as Issuer, Verifier, Attestation and Assertion.",
      "createdAt": "2024-03-21T23:59:52Z",
      "updatedAt": "2024-04-17T17:40:28Z",
      "closedAt": "2024-04-17T17:40:27Z",
      "comments": []
    },
    {
      "number": 224,
      "id": "I_kwDOIvmHss6EJnDp",
      "title": "DNS Name Compatible Receipt Identifiers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/224",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Consider:\r\n\r\n```\r\nurn:ietf:params:scitt:receipt:sha-256:base64url:5i6UeRzg1...qnGmr1o\r\n```\r\n\r\nWhile this provides string name that works ok for HTTP APIs, this name is not acceptable in many other APIs, due to its use of multiple cases and the colon character.\r\n\r\nConsider a CSR which wishes to obtain a certificate with a SAN, where the SAN can encode a fully qualified receipt.\r\n\r\nPossible syntax:\r\n\r\n```\r\nreceipt-{lowercase(base64url(sha256(signed-statement)))}.transparency.service.example\r\nreceipt-{lowercase(hex(sha256(signed-statement)))}.transparency.service.example\r\n```\r\n\r\n`receipt` could be shortened.\r\n\r\nNames can't start with numbers, cant include special characters, etc...\r\n\r\nIn the same way that URN authority moves left to right, DNS name authority moves right to left... right?\r\n\r\nThere would be issues with case collisions, perhaps base16 lowercase is a better choice.\r\n\r\nThere are restrictions on the max length of SANs, we would want to check those.\r\n \r\nIs this an abuse of SAN? \r\n\r\nBeing \"name\" lookup compatible with DNS seems worth considering.\r\n",
      "createdAt": "2024-03-31T18:00:02Z",
      "updatedAt": "2024-07-02T14:17:21Z",
      "closedAt": "2024-07-02T14:17:21Z",
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not fully sure I'm following, but I think I'm leaning towards the 'abuse of SAN' answer. \r\n\r\nDo I understand that you want to somehow encode an (Issuer?) identity (or some statement about an identity ... and yes I've deliberately avoided the word 'claim' here) into a SCITT Signed Statement, then get a SCITT Receipt for that and then put the whole Receipt in the SubjectAltName field so that the identity coms ready-loaded with some kind of provenance/authenticity measure in it?",
          "createdAt": "2024-04-01T11:03:06Z",
          "updatedAt": "2024-04-01T11:03:06Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "For `sub` and `iss`, the value `example.com` is an acceptable value, and an acceptable SAN.\r\n\r\nAnd yes, long story short, I am wondering about where Receipts might be provided by reference in CSRs... similar to how Let's Encrypt certificates contain references to SCTs, and support SANs.\r\n\r\n\r\n",
          "createdAt": "2024-04-01T18:34:05Z",
          "updatedAt": "2024-04-01T23:14:42Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://wiki.mozilla.org/Security/Binary_Transparency for an example of this",
          "createdAt": "2024-04-05T15:33:46Z",
          "updatedAt": "2024-04-05T15:33:46Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> See https://wiki.mozilla.org/Security/Binary_Transparency for an example of this\r\n\r\nThanks for finding this, I was searching email and Slack and could not find what software/group used this is when you posted but I swore I had seen it. There it is!",
          "createdAt": "2024-04-05T15:44:05Z",
          "updatedAt": "2024-04-05T15:44:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed on the call, deferring at this point.",
          "createdAt": "2024-07-02T14:17:21Z",
          "updatedAt": "2024-07-02T14:17:21Z"
        }
      ]
    },
    {
      "number": 226,
      "id": "I_kwDOIvmHss6E6F6s",
      "title": "Update receipts header parameter references",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/226",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "Assuming https://github.com/cose-wg/draft-ietf-cose-merkle-tree-proofs/pull/18 is merged, that document will register everything that is needed for SCITT Receipts (a profile of COSE Receipts).\r\n\r\nThere is clean up work to do in the architecture.\r\n\r\n- Remove the editorial notes regarding 394.\r\n- Review IANA considerations (AFAIK, 394 was never requested for registration in the document, despite the editor notes).",
      "createdAt": "2024-04-07T15:32:43Z",
      "updatedAt": "2024-07-08T14:34:38Z",
      "closedAt": "2024-07-08T14:34:37Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I've merged the PR, but we need to publish a new version to the data tracker.\r\n\r\nIdeally other authors (of COSE Receipts / COMETRE) will do an editorial pass, and then push a new version to the data tracker.",
          "createdAt": "2024-05-07T18:12:27Z",
          "updatedAt": "2024-05-07T18:12:55Z"
        }
      ]
    },
    {
      "number": 228,
      "id": "I_kwDOIvmHss6FIqKM",
      "title": "Automate summarizing issues and PRs to the SCITT mailing list",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/228",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Vote with +1 for automating this, making the changes more visible to folks tracking the mailing list",
      "createdAt": "2024-04-09T14:52:22Z",
      "updatedAt": "2024-05-07T14:15:51Z",
      "closedAt": "2024-05-07T14:15:51Z",
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1",
          "createdAt": "2024-04-09T14:53:27Z",
          "updatedAt": "2024-04-09T14:53:27Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I haven't heard back from those in the know but I may just try [to mimic the code recommended to Steve by others in the Slack](https://github.com/ietf-github-services/issue-summary) accordingly. I guess I have to figure out which email credentials I can use to send it for this GH org, but that will come later.\r\n\r\n",
          "createdAt": "2024-04-19T14:21:29Z",
          "updatedAt": "2024-04-19T14:21:29Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @aj-stein-nist for taking this up. ",
          "createdAt": "2024-04-19T18:05:57Z",
          "updatedAt": "2024-04-19T18:05:57Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Apologies for the delay. I did receive an email on how to set this up over the last week. Will open the PR in the relevant IETF tools repo and close this issue accordingly once merged (Steve, it wasn't the one referenced in IETF Slack like I had thought).",
          "createdAt": "2024-04-29T13:17:04Z",
          "updatedAt": "2024-04-29T13:17:04Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Apologies for the delay, see the upstream PR in the relevant IETF services repo linked below.\r\n\r\nhttps://github.com/ietf-github-services/activity-summary/pull/69",
          "createdAt": "2024-05-07T02:50:12Z",
          "updatedAt": "2024-05-07T02:50:12Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @aj-stein-nist ",
          "createdAt": "2024-05-07T14:15:51Z",
          "updatedAt": "2024-05-07T14:15:51Z"
        }
      ]
    },
    {
      "number": 232,
      "id": "I_kwDOIvmHss6FkgZI",
      "title": "Add section for refreshing receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/232",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "has-pr"
      ],
      "body": "from [scitt alias feedback](https://mailarchive.ietf.org/arch/msg/scitt/O3nkTYsEqYzA-DF1wVW-Q7cpJn4/):\r\n> 3)\tThere is a bit of a misunderstanding generated by stating that receipts don\u2019t expire, which later on is a line that requests for a refreshed receipt can be supported.  The logical receipt is intended to never expire and based on the protected content in the ledger\u2019s log a new receipt can be generated at any time.   This gives us an avenue to bridge a world from today to post quantum cryptography based counter signatures that is important.  We need to clear up these two points.\r\n",
      "createdAt": "2024-04-12T21:21:34Z",
      "updatedAt": "2024-07-08T16:32:08Z",
      "closedAt": "2024-07-08T16:32:08Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Tagging @roywill",
          "createdAt": "2024-05-07T14:40:24Z",
          "updatedAt": "2024-05-07T14:40:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@Roywill, we'll close this in a week and can reconsider with a PR.",
          "createdAt": "2024-06-18T14:19:38Z",
          "updatedAt": "2024-06-18T14:19:38Z"
        }
      ]
    },
    {
      "number": 234,
      "id": "I_kwDOIvmHss6FlGwl",
      "title": "Resolve Note: deferral to CWT claims ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/234",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "Resolve Section [4.3. Transparent Statements](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-06.html#section-4.3-5):\r\n> **Editor's Note**: The WG is discussing if existing CWT claims might better support these design principles.\r\n",
      "createdAt": "2024-04-12T23:07:07Z",
      "updatedAt": "2024-05-21T14:13:54Z",
      "closedAt": "2024-05-21T14:13:53Z",
      "comments": []
    },
    {
      "number": 236,
      "id": "I_kwDOIvmHss6F88S1",
      "title": "Clarify MUST/SHOULD within the Registration Policy",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/236",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```suggestion\r\nTransparency Services SHOULD ensure that for any Signed Statement they register, enough information is made available to Auditors (either in the Append-only Log and retrievable through audit APIs, or included in the Receipt) to reproduce the Registration checks that were defined by the Registration Policies at the time of Registration.\r\n```\r\n\r\nIf not, I expect a cross-linked PR to explicate all the registration policy specification that was removed in the past (for lack of alignment and ambiguity and generalities) and explicate it all. The WG considered this not ideal in previous editorial review, so I assume this alternative approach is unlikely. So I would change it to SHOULD.\r\n\r\n_Originally posted by @aj-stein-nist in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/231#discussion_r1567490916_",
      "createdAt": "2024-04-17T04:27:53Z",
      "updatedAt": "2024-07-06T16:36:39Z",
      "closedAt": "2024-07-06T16:27:36Z",
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "@aj-stein-nist we discussed this in the editor meeting. The current requirement on auditability of registration is a compromise between introducing explicit mechanisms (such as explicit claims for registration policies and trust anchors) and being so under-specified that the architecture doesn't meet any security guarantee for verifiers.\r\n\r\nThe fragile consensus we have reached is that auditability of registration is required but how it is achieved it entirely implementation specific. If we relax this MUST into a SHOULD, then we are expected to explain under which circumstances it is acceptable for an implementation to ignore this requirement.\r\n\r\nI would prefer if we could give suggestions instead on how implementations are expected to meet this requirement. For instance, we could say that implementations may register their policies as claims and record certificate chains in the x5chain header, but make it a recommendation that allows implementers to do something else",
          "createdAt": "2024-05-07T14:57:57Z",
          "updatedAt": "2024-05-07T14:57:57Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I can commiserate with your point in generality, but you cannot practically have a MUST requirement you don't define if you want this go to RFC. I do not think it will not get only my attention; it will definitely hold up review from ADs and others (I'd expect).\n\nMUST with no detail is not implementable. I think I have repeated this a few times but I will reiterate in writing quite bluntly because it seems the problem here is being missed.\n\nAs an alternative, I'd recommend we say 1) edit the draft in near term to say SHOULD in the interim (until long-term steps that follow at step 4); 2) scope work for a registration policy profile mechanism in charter or other WG review; 3) build a notional minimally viable registration policy profile that is agreeable to standardization and be demonstrable; and 4) after step 3 has sufficiently advanced in long term agreement and meaningful consensus, *then* adjust the SHOULD back to MUST long-term and require registration after 1-3 are completed. Again this final edit will be contingent on this group is comfortable with the first or first N profiles. I don't see any other way.\n\nLet me know what you think. The current status quo, to me, reflects a \"let perfect be the enemy of good\" philosophy with an odd compromise in a detail we can't define *yet*, but I would like to know if other authors and the larger WG members agree.",
          "createdAt": "2024-05-07T15:28:58Z",
          "updatedAt": "2024-05-07T15:28:58Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "@aj-stein-nist do you mean this draft can make RFC status with a SHOULD, but that it specifically notes a future move to MUST based on a *seperate* initiative to hammer out this point ?\r\n\r\n`3) build a notional minimally viable registration policy profile that is agreeable to standardization and be demonstrable; and`\r\n\r\nThe implication is that it would stay a SHOULD until, and unless, that happens. Personally, I think that approach decouples the question of \"what is good\" for registration policies in a useful way. But maybe that is not what you meant ?\r\n\r\nEssentially, I just don't personally believe we know enough about \"auditability\" in general to make good choices right now.",
          "createdAt": "2024-05-14T14:26:54Z",
          "updatedAt": "2024-05-14T14:28:55Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> @aj-stein-nist do you mean this draft can make RFC status with a SHOULD, but that it specifically notes a future move to MUST based on a _seperate_ initiative to hammer out this point ?\r\n\r\nCorrect. When I say profile, I mean creating a separate draft with a profile, one way to specifically demonstrate a registration policy, others *could* use to follow that SHOULD in the architecture. One profile could be made, if others have differing views two or more could be made. But only after at least *one* profile made and evaluated could the architecture have an update to change SHOULD to MUST. ",
          "createdAt": "2024-05-14T14:31:26Z",
          "updatedAt": "2024-05-14T14:31:26Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "This sounds very practical to me. Thanks!",
          "createdAt": "2024-05-14T14:41:52Z",
          "updatedAt": "2024-05-14T14:41:52Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO, the Transparency Service registration policy MUST state the type of payloads that are acceptable along with specific requirements and/or constraints. Here is an example of a policy where anything goes:\r\n\r\n\"This Transparency Service Registry will accept any type of payload with no specific requirements or constraints.\"\r\n\r\nPolicy Requirements/Constraints SHOULD specify maximum payload size, acceptable payload content types (mime type), acceptable payload content materials i.e. SBOMs, ",
          "createdAt": "2024-05-19T11:28:47Z",
          "updatedAt": "2024-05-19T11:35:55Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> IMO, the Transparency Service registration policy MUST state the type of payloads that are acceptable along with specific requirements and/or constraints. Here is an example of a policy where anything goes:\r\n\r\nAs this pertains to my position on this issue, we cannot agree to the type of payloads or their type. Even \"a policy anything goes\" side steps the type. I stand by recommendation in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/236#issuecomment-2098721464. If we only say you must have a policy where, at a minimum, anything goes, that is what we encourage. Implementers will implement only that. That is what we shall get.\r\n\r\n@rjb4standards, do you have an anything goes registration policy in practice or something else?",
          "createdAt": "2024-05-21T15:43:59Z",
          "updatedAt": "2024-05-21T15:43:59Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Email MIME payloads are a good example of anything goes.",
          "createdAt": "2024-05-21T16:42:35Z",
          "updatedAt": "2024-05-21T16:42:35Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> Email MIME payloads are a good example of anything goes.\r\n\r\nThanks for that example. MIME payloads are informative. Let's consider [the different MIME transfer encodings](https://www.iana.org/assignments/transfer-encodings/transfer-encodings.txt), we have plain text, 7-bit, 8-bit, binary, quoted, and base64. Of those there can be a variety of payloads in a payload with their own type.\r\n\r\nAnything goes: let's say we use `text/plain` per one of *several* layered RFCs [per the IANA media type registry](https://www.iana.org/assignments/media-types/media-types.xhtml) is completely free form. That is a media type with guidelines, but I can write anything in there at all. How will it help Verifier and Auditor tools in architecture understand the policy *programmatically*? How will clients know how to facilitate Issuers' making Signed Statements? \r\n\r\nYou could say it'll just be plain text, but you will still need to explain the structure. Same with JSON (just that, very loose structure) and CWT (more structured with caveats), but you need definitions of anything goes.\r\n\r\nI would say anything goes *for programmatic usage of a TS* is interesting to me but others have explained in the mailing list and other venues that is impractical or undesired. So how would this be used in practice? A key design principle, given authentication requirements prohibiting anonymous Statement creation and issuance in the draft, contradict, even if not practical. Am I misunderstanding a key design decision?",
          "createdAt": "2024-05-21T18:04:43Z",
          "updatedAt": "2024-05-21T18:04:43Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "AJ, consider a scenario where an entity is providing \"evidence locker\" services, which can be presented in court. The party operating the evidence locker service doesn't need to know what the evidence payload contains, or what format is is provided in, but they must be able to produce and present the original evidence data, whatever it may be. \r\nREA does this today in order to satisfy US SEC regulations to prove that cybersecurity controls are in place and functioning regularly within a company, just in case the data needs to be presented in court.. This is all part of our \"Trust Registry\" offering called SAG-CTR. ",
          "createdAt": "2024-05-21T18:19:55Z",
          "updatedAt": "2024-05-21T18:21:12Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I think your replies convey part of my confusion. Your description describes an application that \"wraps\" or contains a SCITT Transparency Service (you talk about SAG-CTR and Trust Registry Concept). That may be an interesting application, but it extends the core requirements and architecture philosophy of a SCITT Transparency service. It is an application with a TS store, not a pure TS. Is that correct? It seems we are confusing both of these concepts, perhaps you can clarify if I am understanding correctly.\r\n\r\nTo that point, let me say I want to build a pluggable TS client, perhaps to perform an Auditor role. I want to be able to read the TS inside your SAG-CTR app via API conforming to WG specs (we will presume you offer this feature to clients, it's already been decided for this hypothetical scenario). Via the API, I find one or more registered Transparent Statements and there are server records that indicate two different registry policies over the course of time, how would I interact with your SAG-CTR Trust Registry) *in a conformant way with draft standard in this I-D*? It would be exceedingly difficult, or perhaps  not possible, without writing custom code to understand each successive change in the free-form text registration policy? Should I just email you or your support engineer to know how I interpret words or phrases in that free-form text registration policy when it is ambiguous and I need to write code for that?\r\n\r\nI ask because it seems for your application, built on top of spec-conformant TS, why have a registration policy at all? Again, I am talking about *programmatic access* for client operations to *register* the payload. I know talking about the content of any other payload itself is different, and I completely understand the context you presented here for your application layer.",
          "createdAt": "2024-05-21T18:32:19Z",
          "updatedAt": "2024-05-21T18:32:19Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Fair question AJ.\r\n\r\nThe SAG-CTR Trust Registry provides client with two main services:\r\n1. Evidence locker (anything goes), but it currently only works with SAG-PM evidence data today, but can support any type of evidence artifacts\r\n2. Registry of Trust Scores where software consumers can check the trust score for a specific product; this requires a well known payload. Trusted parties upload SAG-PM evidence data containing a SAGScore and other information, which the Gatekeep examines before registering a product in the \"Trust Registry\", kind of like a Registry of Deeds. [I demonstrated this risk sharing info service to NASA and the DOE ](https://github.com/rjb4standards/Presentations/raw/master/NASA-Presentation-ICT_SCRM%20(003)-GEORGE-V3.pptx) as a means to share risk assessment scores related to the CISA Secure Attestation Form collection and risk assessment processing that begins in June. ",
          "createdAt": "2024-05-21T18:43:00Z",
          "updatedAt": "2024-05-21T18:43:00Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "OK, so re scenario 2, since that application layers on top of the SCITT Architecture more closely than one, how would we account for this scenario, what would I or others do?\r\n\r\n> Via the API, I find one or more registered Transparent Statements and there are server records that indicate two different registry policies over the course of time, how would I interact with your SAG-CTR Trust Registry) in a conformant way with draft standard in this I-D?",
          "createdAt": "2024-05-21T18:54:32Z",
          "updatedAt": "2024-05-21T18:54:32Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "AJ, IMO, the SCITT architecture can easily support both use cases presented. \r\n\r\nWe demonstrated how SCITT can be used for discovery of key artifacts during the 117 Hackathon using an FDA use case, including Trust Scores stored in a SCITT Trust Registry. A VRF was uploaded into the Trust Registry, which contains links to all required artifacts to perform a risk assessment. A software vendor simply provides a link to the VRF in the Trust Registry, just how [Jon and I demonstrated this use case during the Hackathon](https://energycentral.com/c/iu/international-trust-registry-demonstration-success) .\r\n\r\nREA will identify the SAG-CTR Trust Registry with two SCITT registration policies - one for evidence data preservation and the other to post trust scores. IMO, SCITT supports both of these use case scenarios.",
          "createdAt": "2024-05-21T19:07:07Z",
          "updatedAt": "2024-05-21T19:07:07Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> AJ, IMO, the SCITT architecture can easily support both use cases presented.\r\n\r\nI would disagree that it should long-term, even if it can today (and largely to make the draft convenient for review in my opinion). I think we are getting caught in the weeds regarding two use cases for a specific application that layer *on top of* a notional SCITT Transparency Service, but we are not addressing the key concern in this GitHub issue with ones of those two use cases through the question I asked. I will come back to that. To reiterate: it is not effective to support a mandatory MUST requirement on a registration policy that is, essentially, not a policy with any consistency or reason that we understand as human operators, but not computers (e.g. anything goes). If we want that, change the qualifier to SHOULD, at least for now, as we are requiring something we cannot define beyond \"well I have something, it can be whatever.\" That does not befit a RFC. Long term, it appears we are building a system for programmatic access and automation with no ability to bootstrap clients to read or write to the Ledger.\r\n\r\n> We demonstrated how SCITT can be used for discovery of key artifacts during the 117 Hackathon using an FDA use case,\r\n\r\nRest assured, I was in attendance at 117 during the Hackathon and I have not forgotten your demonstration of a use case, but the architecture I-D has changed over time (as we approach 120) and the lack of consensus and changes around the registration policy was one of the key issues at 117 and subsequent IETF meetings up until now. I hope others will chime in.\r\n\r\n> REA will identify the SAG-CTR Trust Registry with two SCITT registration policies - one for evidence data preservation and the other to post trust scores. IMO, SCITT supports both of these use case scenarios.\r\n\r\nSo regarding use case 1, what would the actual registration policy in plain text contain verbatim? I am going to copy-paste [the current edtior draft's section on registration policy](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-registration-policies). If anything goes is the default, can it be a `text/plain` document with no content to *imply* that? Would it say `NO` or `no` or `NONE` or `None`? Even this baseline I can think of a few ways to encode it, all less than ideal if not \"empty\" content in an media type, and that is only those that I can think of. We MUST have something (as it stands, I oppose that for being logically inconsistent) but cannot even agree on that without some amount of discussion. So this further motivates my belief that we need profiling.\r\n\r\n[4.1.1. ](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-4.1.1)[Registration Policies](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-registration-policies)\r\n\r\n> Registration Policies refer to additional checks over and above the Mandatory Registration Checks that are performed before a Signed Statement is accepted to be registered to the Append-only Log.\r\n>\r\n> Transparency Services MUST maintain Registration Policies.\r\n>\r\n> Transparency Services MUST also maintain a list of trust anchors, which SHOULD be used by Relying Parties to authenticate Issuers, and which MAY be included in a registration policy statement. For instance, a trust anchor could be an X.509 root certificate, the discovery URL of an OpenID Connect identity provider, or any other COSE compatible PKI trust anchor.\r\n>\r\n> Registration Policies and trust anchors MUST be made transparent and available to all Relying Parties of the Transparency Service by registering them as Signed Statements on the Append-only Log, and distributing the associated Receipts.\r\n>\r\n> This specification leaves implementation, encoding and documentation of Registration Policies and trust anchors to the operator of the Transparency Service.\r\n\r\nAgain, registration policy at this time is not actionable. I appreciate the context from your product solutions *on top of* a possibly conformant TS, but it further supports my impression that we cannot.",
          "createdAt": "2024-05-22T14:11:55Z",
          "updatedAt": "2024-05-22T14:11:55Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "REA supports the current Registration Policy language contained in section 4.1.1 and encourages others to support this description of the Registration Policy, which empowers the TS operator to decide what type of payloads they will register.\r\n\r\nREA's SCITT Trust Registry implementation, SAG-CTR, will be fully compliant with the SCITT protocol, when the SCITT specifications are compete and approved using the IETF consensus process. REA is a fully committed supporter of SCITT, from the beginning, and will remain so as radical transparency practices continue to be adopted and a trust anchor capability evolves. \r\nIn the mean time, REA will continue to operate and improve its SAG-CTR Trust Registry conceptual implementation of SCITT to provide the radical transparency consumers need in the software supply chain.\r\nHoping to see everyone at the CISA ICT_SCRM Task Force conference on June 12 where C-SCRM implementation topics will be discussed: \r\nhttps://www.cisa.gov/news-events/events/innovations-ict-supply-chain-risk-management-conference\r\n",
          "createdAt": "2024-05-22T14:57:52Z",
          "updatedAt": "2024-05-22T15:06:04Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> REA supports the current Registration Policy language contained in section 4.1.1 and encourages others to support this description of the Registration Policy, which empowers the TS operator to decide what type of payloads they will register.\r\n\r\nThis is a GitHub issue regarding a concern and an interest in changing it. It seems we are talking in circles, I will interpret your feedback to me you are in favor of SHOULD. As it stands, your current position on the I-D and your implementation conflict with the very intent of the MUST in question in the issue.\r\n\r\n> Hoping to see everyone at the CISA ICT_SCRM Task Force conference on June 12 where C-SCRM implementation topics will be discussed: https://www.cisa.gov/news-events/events/innovations-ict-supply-chain-risk-management-conference\r\n\r\nI do not see how that is immediately relevant to the IETF specification in general or this issue in particular, but I will be in attendance. I was under the impression the mechanics of a SCITT Transparency Service implementation are far in the weeds, but if not, that is exciting and I look forward even more to attendance.\r\n",
          "createdAt": "2024-05-22T15:09:07Z",
          "updatedAt": "2024-05-22T15:10:36Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "See you on June 12.\r\n\r\nI will reiterate my position on this matter:\r\n\"REA supports the current Registration Policy language contained in section 4.1.1 and encourages others to support this description of the Registration Policy, which empowers the TS operator to decide what type of payloads they will register.\"",
          "createdAt": "2024-05-22T15:22:52Z",
          "updatedAt": "2024-05-22T15:23:47Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "There's a lot of great discussion here for various points:\r\n- Some Transparency Services will operate with generic use cases. The Evidence Locker is an interesting one where there's effectively no content type filtering. Generic for content type, but specific to a legal arena, for a set of constrained users that would have Access Rights to the instance. The discussions on registration policies have been more specific to the indentity (issuer), but it's a good example of open types.\r\n- Many Transparency Services will be alongside other storage solutions ([SCITT.io scenarios](https://scitt.io/scenarios/extending-existing-services.html)) as SCITT is not a storage service, rather a means to record Who said What about an Artifact, recorded at a specific time. The \"What\" could be an SBOM about a binary. \r\n- What the doc does focus on is the issuer validation, to assure the issuer is a valid identity, in a valid format. For instance, some Transparency Services may only accept issuers from 1 or a few roots. It's not scoped to support rando identities, or even very valid identities that don't pertain to it's scenario. Imagine a Content Authenticity service that records C2PA metadata. Maybe it doesn't support code-signing certs, and requires other EKUs.\r\n\r\nBack to the registration policies and policy language. There are no clear winners for policy languages, even for specific domains. What the spec says is a Transparency Service must provide the details of the registration policy. It should be in the docs, and we might even add a discovery API to SCRAPI. By allowing different Transparency Services to support different registration policy languages, we allow the ecosystems to grow, and adopt ones that become a well-known for that industry or horizontal.\r\n\r\nConsider different CA's that have different policies for what types of entities they'll issue keys. You may trust some more than others, because of their strict policies. For instance, 3 years of business records, while others may accept anything that's sent to them. Buying tickets through TicketMaster has more trust than buying tickets on craigslist. Both are valid, and both have enough info to trust them for what they are. ",
          "createdAt": "2024-05-23T00:04:40Z",
          "updatedAt": "2024-05-23T00:04:40Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Editors call notes:\r\n\r\n1. There are two categories of auditors. One for verifying an individual registration, to walk what registration policy was applied. \r\n1. Auditors for verifying the consistency of the log.\r\n\r\nWe refer to MUST, relating to the registration policy, but we no longer have a property reflecting the registration policy that refers to another signed/registered statement. \r\n\r\nAction points:\r\n- [ ] Clarify different auditors\r\n- [ ] Reconcile a registration policy must be verifiable by an auditor, but haven't defined where to find the registration policy.",
          "createdAt": "2024-06-18T15:00:54Z",
          "updatedAt": "2024-06-18T15:00:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as this issue has been covered by #249",
          "createdAt": "2024-07-06T16:27:36Z",
          "updatedAt": "2024-07-06T16:27:36Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Just a heads up you can close it but I will request it be reopened at 120 and discuss on the mailing list.\n\nAs the person who reported the issue, it has not been resolved to my satisfaction here.",
          "createdAt": "2024-07-06T16:29:36Z",
          "updatedAt": "2024-07-06T16:29:36Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with AJ, \r\nI think we need to provide greater clarity regarding roles performed:\r\nVerification on inbound submission to confirm adherence to registration policies is performed by the  __________ role.\r\nVerification that registered content in the log is performed by the ____________ role.\r\n\r\nIMO, they both can't be called Auditor. I believe Auditor is appropriate for Verification that registered content in the log is consistent with SCITT standards and Registration Policies. \r\n\r\n",
          "createdAt": "2024-07-06T16:36:37Z",
          "updatedAt": "2024-07-06T16:36:37Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "I_kwDOIvmHss6GpUfi",
      "title": "Register unsigned artifacts?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/238",
      "state": "CLOSED",
      "author": "raylutz",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Recent CISA/NIST work creates a self-attestation for software, which is not signed. This can't be easily submitted to SCITT without prior signing, but it is a gap in the current capabilities at most orgs creating a digital signature. Need to either find a way for orgs to easily sign the artifact, allow unsigned artifacts in SCITT, or ??\r\n\r\n\r\nhttps://www.cisa.gov/resources-tools/resources/repository-software-attestations-and-artifacts-rsaa-user-guide\r\n\r\nhttps://www.cisa.gov/sites/default/files/2024-03/CISA_RSAA_User_Guide_18_March_2024.pdf\r\n\r\nand they use this self-attestation form:\r\nhttps://www.cisa.gov/sites/default/files/2024-03/Self-Attestation-Common-Form-03082024-FINAL.pdf\r\n",
      "createdAt": "2024-04-23T14:07:09Z",
      "updatedAt": "2024-05-07T14:51:41Z",
      "closedAt": "2024-05-07T14:51:41Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @raylutz,\r\nThis was discussed as part of SCRAPI, where a Transparency Service could implement signing on-behalf of the user, based on their identity to the service. This would be consistent with the architecture, where the statement is signed. It's just a matter of whether it's signed on ingress to the service, before being registered on SCITT. \r\nSuggest moving this to [SCRAPI](https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi).",
          "createdAt": "2024-04-29T15:19:22Z",
          "updatedAt": "2024-04-29T15:19:22Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing to discuss in SCRAPI",
          "createdAt": "2024-05-07T14:51:41Z",
          "updatedAt": "2024-05-07T14:51:41Z"
        }
      ]
    },
    {
      "number": 243,
      "id": "I_kwDOIvmHss6JFsCT",
      "title": "After introduction of a term in the Terminology Section corresponding terms are not capitalized consequently",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/243",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "has-pr"
      ],
      "body": "This needs an editorial run through, when we get to zero open PRs in the next meeting.",
      "createdAt": "2024-05-16T10:14:53Z",
      "updatedAt": "2024-07-02T14:12:47Z",
      "closedAt": "2024-07-02T14:12:47Z",
      "comments": []
    },
    {
      "number": 244,
      "id": "I_kwDOIvmHss6JlhE9",
      "title": "Make CDDL definitions separate files and import to draft",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/244",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "As an implementer, in order to directly use the CDDL definition(s) without having to extract the definitions with custom code or copy-pasting, I would like if the source code and tools in this repository to define the CDDL definitions as discrete files and import them the Kramdown RFC mechanisms, so my code can you the CDDL directly without those steps.\r\n\r\nSee `{::include ...}` directives from other sample drafts, [such as the current CBOR EDN Literals I-D](https://github.com/cbor-wg/edn-literal/blob/a5f3cb1f115f9d5adae812e3f38a0451f233c4a3/draft-ietf-cbor-edn-literals.md).",
      "createdAt": "2024-05-21T13:26:49Z",
      "updatedAt": "2024-07-02T01:46:52Z",
      "closedAt": "2024-07-02T01:46:51Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "If others do not object and/or would find this useful, I am voluteering to open a PR to make this change later this week.",
          "createdAt": "2024-05-21T13:27:24Z",
          "updatedAt": "2024-05-21T13:27:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@aj-stein-nist, there's a comment of concern we're not at this point of complexity, but we're open to viewing a PR to try this change. \r\n",
          "createdAt": "2024-05-21T14:48:38Z",
          "updatedAt": "2024-05-21T14:48:38Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> @aj-stein-nist, there's a comment of concern we're not at this point of complexity, but we're open to viewing a PR to try this change.\r\n\r\nOK, good thing it was not complex. https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/247 is ready for review.",
          "createdAt": "2024-06-28T04:51:50Z",
          "updatedAt": "2024-06-28T04:51:50Z"
        }
      ]
    },
    {
      "number": 252,
      "id": "I_kwDOIvmHss6OYyo8",
      "title": "Please consider defining a \"Gatekeeper\" Role with a Transparency Service operation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/252",
      "state": "CLOSED",
      "author": "rjb4standards",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pending-close"
      ],
      "body": "A Gatekeeper role is needed to ensure that only verified materials, based on registration policy criteria, are placed into a Transparency Service Registry and Log.",
      "createdAt": "2024-07-03T15:01:06Z",
      "updatedAt": "2024-08-01T16:50:17Z",
      "closedAt": "2024-08-01T16:50:17Z",
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue posted.",
          "createdAt": "2024-07-03T15:01:42Z",
          "updatedAt": "2024-07-03T15:01:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @rjb4standards\r\nWhat you're describing is a [registration policy](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-06.html#name-registration-policies), which the Transparency Services Registration/Notary would enforce.  \r\nIs there some additional info needed?",
          "createdAt": "2024-07-06T16:25:51Z",
          "updatedAt": "2024-07-06T16:25:51Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Steve, a registration policy is the basis upon which trust is established. The registration policy must make clear that a high integrity and thorough vetting process is enforced before any material is allowed into the registry and any rejections are recorded, outside of the transparency service log along with justification. That's how BCG views and implements the SAG-CTR registration policy. Proper registrations are recorded in the registry and improper requests are rejected and documented. This provides a complete view of the Transparency Service process for accepting/rejecting signed receipts, based on registration policy criteria.",
          "createdAt": "2024-07-07T16:35:25Z",
          "updatedAt": "2024-07-07T16:35:25Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "It's important to distinguish the functions performed by each \"Auditor Role\".\r\nDuring signed statement processing the role is required to enforce registration policies, ensuring that only proper materials are being recorded in the Registry and improper filings are being properly rejected. This Auditor Role has the authority to approve changes/additions to the Registry Log.  ( I refer to this as the Gatekeeper role)\r\n\r\nAfter statements are validated against registration policies and data is placed in the Registry, on the Log, the Auditor Role is to verify that registration policies are being properly applied and notify proper authorities when there are violations. This Auditor Role has no authority to make changes/additions to the Registry Log. \r\n",
          "createdAt": "2024-07-08T14:49:27Z",
          "updatedAt": "2024-07-08T14:55:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @rjb4standards,\r\nThere are few main points I'm seeing here:\r\n\r\n- Definition of the entity that defines Registration Policies\r\n- Elements that are implementation-specific. An instance of a Transparency Service will be a \"Trust Registry\" for its defined scope (Financial, Gaming, Emergency Management, M5 Screws, ...)\r\n- What is captured for rejections? This is a very interesting point as \"Transparency\" for what's rejected could be just as important as what's accepted. It's been vaguely discussed, but no content in the Architecture or SCRAPI address this, yet.\r\n\r\nI'd suggest bringing this up in one of the next meetings, and/or provide a PR to address the rejection of signed statements scenario.",
          "createdAt": "2024-07-08T15:13:20Z",
          "updatedAt": "2024-07-08T15:13:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards,\r\nThe issue as titled, does reflect the registration portion of the spec. I'd like to close this Issue, as titled, and ask you open a new issue, or start a new discussion about capturing the denied registration. It might almost be obvious we need ledger entries to capture declines. There's a line of DOS type flooding attacks, but seems there's something we should take as an output. ",
          "createdAt": "2024-07-09T00:01:35Z",
          "updatedAt": "2024-07-09T00:01:35Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "It's not just rejections that need to be captured in order to have a \"closed loop\" process. Ideally, each request to register a signed statement needs to be tracked and the status recorded in order to conduct a proper audit against the \"registered\" signed statements in the log to verify that the log and the \"tracker process\" match. Rejected requests would appear in the tracker as rejected. Accepted requests would appear as approved.\r\n\r\nThis would produce a high integrity, closed loop process, needed for a trustworthy, auditable registration service. Integrity of the registry is key to its success.\r\n\r\nClose this issue if you are compelled to do so and I can open a new issue later to address this matter.",
          "createdAt": "2024-07-09T10:22:34Z",
          "updatedAt": "2024-07-09T10:23:46Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "- **Accepted Registrations**: The accepted are captured as they are registered. I believe we've covered that from an Architecture, and a product can implement that.\r\n- **Rejected Registrations**: These are not currently covered in the architecture and could be covered by a product, but I do see the value in specifying rejections should be captured. I think that's the most actionable thing from this discussion that I'd personally encourage and support a PR for. That said, I don't think this issue as titled and initially discussed fit that, which is why I'm suggesting creating an Issue/PR specific to rejected registrations. I also encourage others to comment.\r\n",
          "createdAt": "2024-07-09T15:05:57Z",
          "updatedAt": "2024-07-09T15:05:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing per the discussion above. ",
          "createdAt": "2024-08-01T16:50:16Z",
          "updatedAt": "2024-08-01T16:50:16Z"
        }
      ]
    },
    {
      "number": 262,
      "id": "I_kwDOIvmHss6QTVHk",
      "title": "SCITT: very loose federation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/262",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\r\n> The SCITT architecture consists of a very loose federation of Transparency Services...\r\n\r\nIn what sense is SCITT a \"very loose\" federation or even a federation? ",
      "createdAt": "2024-07-20T17:27:56Z",
      "updatedAt": "2024-07-30T14:57:43Z",
      "closedAt": "2024-07-30T14:57:42Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Can you make this a PR?",
          "createdAt": "2024-07-30T14:57:42Z",
          "updatedAt": "2024-07-30T14:57:42Z"
        }
      ]
    },
    {
      "number": 263,
      "id": "I_kwDOIvmHss6QTVTd",
      "title": "CT: Signed Certificate Timestamps are checked by Relying Parties",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/263",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "> [Signed Certificate Timestamps are checked by Relying Parties](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/268-figure-1-description/draft-ietf-scitt-architecture.md?plain=1#L319)\r\n\r\nI would argue that in CT Auditors are checking more than Signed Certificate Timestamps\r\n",
      "createdAt": "2024-07-20T17:29:27Z",
      "updatedAt": "2024-10-01T16:29:11Z",
      "closedAt": "2024-10-01T16:29:11Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig there is a lot of detail there and I am not sure how far you/others want to go, but I decided to keep it simple and I propose adding slightly more detail in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/301. I am sure you and others will let me know if that is too little (I doubt/hope it is not too much.)",
          "createdAt": "2024-08-07T04:43:07Z",
          "updatedAt": "2024-08-07T04:43:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig, thanks for the issue. \r\nDid you have an intent for what to scope? Reading the [current content of this section](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/268-figure-1-description/draft-ietf-scitt-architecture.md?plain=1#L313), it implies a unique focus on x.509, rather than x.509 is one example of identity types that are supported.\r\n\r\n> SCITT is a generalization of Certificate Transparency (CT) {{-CT}}, which can be interpreted as a transparency architecture for the supply chain of X.509 certificates.\r\nConsidering CT in terms of SCITT:\r\n>\r\n> - CAs (Issuers) sign the ASN.1 DER encoded tbsCertificate structure to produce an X.509 certificate (Signed Statements)\r\n> - CAs submit the certificates to one or more CT logs (Transparency Services)\r\n> - CT logs produce Signed Certificate Timestamps (Transparent Statements)\r\n> - Signed Certificate Timestamps are checked by Relying Parties\r\n> - The Append-only Log can be checked by Auditors\r\n\r\nI'd suggest we limit the focus on x.509, and focus on the generalization that an issuer signs the protected header, which includes producing a timestamped signed statement and a timestamped receipt.\r\n",
          "createdAt": "2024-09-30T23:40:33Z",
          "updatedAt": "2024-09-30T23:40:33Z"
        }
      ]
    },
    {
      "number": 264,
      "id": "I_kwDOIvmHss6QTVaY",
      "title": "\"Agility\" Parameter",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/264",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\r\n>   In order to accommodate as many Transparency Service implementations\r\n   as possible, this document only specifies the format of Signed\r\n   Statements (which must be used by all Issuers) and a very thin\r\n   wrapper format for Receipts, which specifies the Transparency Service\r\n   identity and the **agility parameters** for the Signed Inclusion Proofs.\r\n\r\nWhat is an agility parameter?",
      "createdAt": "2024-07-20T17:30:44Z",
      "updatedAt": "2024-07-30T14:58:08Z",
      "closedAt": "2024-07-30T14:58:08Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "If this reflects the latest text, please make a PR.",
          "createdAt": "2024-07-30T14:58:08Z",
          "updatedAt": "2024-07-30T14:58:08Z"
        }
      ]
    },
    {
      "number": 268,
      "id": "I_kwDOIvmHss6QTWxC",
      "title": "Figure 1 needs a description",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/268",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "Figure 1 needs to be explained and referenced in the text.\r\nThe arrows in the figure need to be explained\r\nThe figure shows two different boxes and the semantic needs to be explained\r\n",
      "createdAt": "2024-07-20T17:46:37Z",
      "updatedAt": "2024-10-08T14:25:59Z",
      "closedAt": "2024-10-01T14:46:58Z",
      "comments": []
    },
    {
      "number": 269,
      "id": "I_kwDOIvmHss6QTWza",
      "title": "Clarification of \"certain supply chain scenarios\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/269",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": ">  An x5chain with a leaf certificate that corresponds to the\r\n   x5t value MAY be included in the unprotected header in support of\r\n   certain supply chain scenarios.\r\n",
      "createdAt": "2024-07-20T17:47:11Z",
      "updatedAt": "2024-08-06T14:38:36Z",
      "closedAt": "2024-08-06T14:38:36Z",
      "comments": []
    },
    {
      "number": 270,
      "id": "I_kwDOIvmHss6QTW4e",
      "title": "Role of Trust Anchors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/270",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "has-pr"
      ],
      "body": "_Editors note: updated with a link to the referenced text:_ \r\n\r\n>    [Transparency Services MUST also maintain a list of trust anchors, which SHOULD be used by Relying Parties to authenticate Issuers, and which MAY be included in a Registration Policy statement.](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/268-figure-1-description/draft-ietf-scitt-architecture.md?plain=1#L407)\r\n\r\nI don't understand the SHOULD.\r\n\r\nYou have to be in possession of trust anchors to verify a digital signature. It is not an optional feature.",
      "createdAt": "2024-07-20T17:48:13Z",
      "updatedAt": "2024-10-08T15:03:30Z",
      "closedAt": "2024-10-08T15:03:30Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't understand the SHOULD.\r\n> \r\n> You have to be in possession of trust anchors to verify a digital signature. It is not an optional feature.\r\n\r\nIt would seem this is correct contingent on your interpretation of [the requirements of TS registration steps, especially](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-registration), particularly points 2 and 3, so good point.",
          "createdAt": "2024-07-21T13:10:27Z",
          "updatedAt": "2024-07-21T13:10:27Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "It's not the use of the anchor in verifying that is optional. It is the use of issuer verification as a gate to registration that is the problem. \r\n\r\nFor ts implementations that naturaly have RBAC at the edge, the \"spam\" problem is not really a problem.\r\n\r\nStatements about statements seem to me to be a better way to deal with use cases where strong issuer verification is necessary. Registration time checks can only ever be \"point in time\"",
          "createdAt": "2024-07-21T17:21:21Z",
          "updatedAt": "2024-07-21T17:21:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "My read of the Issue and the current state of the document is:\r\n\r\n- This section is under [Registration Policies](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/268-figure-1-description/draft-ietf-scitt-architecture.md?plain=1#L401), which implies the MUST refers to enabling the registration process. Currently, a registration can not be completed unless the issuer is verified, which can't occur without trust anchors.\r\nThe SHOULD refers to verifiers which are not part of the Registration Policy. I think their inclusion in this section is confusing. \r\n\r\nSee #304 for a proposal.",
          "createdAt": "2024-10-01T00:09:22Z",
          "updatedAt": "2024-10-01T00:09:22Z"
        }
      ]
    },
    {
      "number": 273,
      "id": "I_kwDOIvmHss6QTX8Q",
      "title": "Regular Expression distinguished name",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/273",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": ">    When x5t is present, iss MUST be a string with a value between 1 and\r\n   8192 characters in length that fits the regular expression of a\r\n   distinguished name.\r\n\r\n\r\nWhat is the \"regular expression of a  distinguished name\"?\r\n\r\n",
      "createdAt": "2024-07-20T18:01:12Z",
      "updatedAt": "2024-09-17T14:49:49Z",
      "closedAt": "2024-09-17T14:49:49Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I do understand the intent, but it would seem that distinguished name is not clearly going to have a specific reference we can use. That reference sets aside the regex requirement. I understand the need but there is some assorted LDAP RFCs and other attempts, but none seem to be the right kind of reference, even if about distinguished names in X.509.\r\n\r\nI am going to propose we go back to what we know and then put forward my understanding and interpretation of the requirement, that we want a StringOrURI like the underlying CWT requires, perhaps with added length requirements?",
          "createdAt": "2024-08-06T19:52:38Z",
          "updatedAt": "2024-08-06T19:52:38Z"
        }
      ]
    },
    {
      "number": 275,
      "id": "I_kwDOIvmHss6QTYIM",
      "title": "resolved key manifest",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/275",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": ">  Issuers MAY use different signing keys (identified by kid in the\r\n   resolved key manifest) for different Artifacts, or sign all Signed\r\n   Statements under the same key.\r\n\r\n\r\nWhat does \"resolved key manifest\" mean?",
      "createdAt": "2024-07-20T18:03:29Z",
      "updatedAt": "2024-09-03T23:36:51Z",
      "closedAt": "2024-09-03T23:36:51Z",
      "comments": []
    },
    {
      "number": 276,
      "id": "I_kwDOIvmHss6QTYVt",
      "title": "Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/276",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "robinbryce"
      ],
      "labels": [
        "pending-close",
        "ready-for-pr"
      ],
      "body": "When the draft talks about receipts does it refers only to inclusion proofs. Can we still talk about receipts, if other proof types are supported by an implementation that those are still called Receipts?\r\n",
      "createdAt": "2024-07-20T18:06:06Z",
      "updatedAt": "2024-10-15T15:01:27Z",
      "closedAt": "2024-10-15T15:01:27Z",
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it is meant to refer to this: https://datatracker.ietf.org/doc/draft-ietf-cose-merkle-tree-proofs/ at least as an example. And this defines receipts of inclusion and receipts of consistency",
          "createdAt": "2024-07-21T17:24:31Z",
          "updatedAt": "2024-07-21T17:24:31Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we get a suggestion or PR for next steps?",
          "createdAt": "2024-10-01T00:54:28Z",
          "updatedAt": "2024-10-01T00:54:28Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm inclined to *reduce* the entry in Definitions to just the head line from \"Definition of transparency\" which says just - \"Receipts demonstrate inclusion of Signed Statements in the Append-only Log of a Transparency Service\". The particulars of how \"inclusion is demonstrated\" is very log specific. I'll put together a small diff and see how that looks",
          "createdAt": "2024-10-08T15:29:10Z",
          "updatedAt": "2024-10-08T15:29:10Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "ah also, quite far down, where the draft describes \"append only\", it does introduce\r\n\r\n\"In addition to Receipts, some verifiable data structures might support additional proof types, such as proofs of consistency, or proofs of non inclusion\"\r\n\r\nI think a small amount of fore shadowing or re-arangement will do the trick",
          "createdAt": "2024-10-08T15:34:19Z",
          "updatedAt": "2024-10-08T15:34:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @robinbryce\r\nA PR would be great to review to formalize the discussion  ",
          "createdAt": "2024-10-08T19:20:01Z",
          "updatedAt": "2024-10-08T19:20:01Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "PR added, but I think it warants some discussion regarding possible tension with the hard requirement for COSE-Receipts",
          "createdAt": "2024-10-15T10:14:05Z",
          "updatedAt": "2024-10-15T10:14:05Z"
        }
      ]
    },
    {
      "number": 277,
      "id": "I_kwDOIvmHss6QTYrX",
      "title": "CDDL Definition of Signed Statements and Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/277",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": ">    Everything that is optional in the following CDDL definition can\r\n   potentially be discovered out of band and Registration Policies are\r\n   not assured on the presence of these optional fields.\r\n\r\n\r\nI do not understand what you want to say with the second part of the sentence.\r\n\r\nEven the first part of the sentence do not convey any real meaning.\r\n\r\n\r\n",
      "createdAt": "2024-07-20T18:09:22Z",
      "updatedAt": "2024-09-03T23:35:55Z",
      "closedAt": "2024-09-03T23:35:55Z",
      "comments": []
    },
    {
      "number": 279,
      "id": "I_kwDOIvmHss6QTY-j",
      "title": "Registration",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/279",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "The three steps from Section 4.3 on Registration are essentially the same. To verify the signature you have to retrieve the issuer credentials and you have to do item 4.\r\n\r\n\r\n   2.  *Issuer Verification:* The Transparency Service MUST\r\n       syntactically validate the Issuer's identity Claims, which may be\r\n       different than the Client identity.\r\n\r\n   3.  *Signature verification:* The Transparency Service MUST verify\r\n       the signature of the Signed Statement, as described in [RFC9360],\r\n       using the signature algorithm and verification key of the Issuer.\r\n\r\n   4.  *Signed Statement validation:* The Transparency Service MUST\r\n       check that the Signed Statement includes the required protected\r\n       headers listed above.  The Transparency Service MAY verify the\r\n       Statement payload format, content and other optional properties.\r\n\r\n\r\n",
      "createdAt": "2024-07-20T18:12:47Z",
      "updatedAt": "2024-10-15T15:10:43Z",
      "closedAt": "2024-10-15T15:10:42Z",
      "comments": []
    },
    {
      "number": 282,
      "id": "I_kwDOIvmHss6QTZur",
      "title": "COSE Verifiable Data Structure Registry",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/282",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "> Referencing the COSE Verifiable Data Structure\r\n   Registry, RFC9162_SHA256 is value 1, which supports -1 (inclusion\r\n   proofs) and -2 (consistency proofs).\r\n\r\n\r\nI believe this registry is defined in another document. The sentence needs to be changed to make the meaning clear.",
      "createdAt": "2024-07-20T18:21:55Z",
      "updatedAt": "2024-08-06T14:43:19Z",
      "closedAt": "2024-08-06T14:43:18Z",
      "comments": []
    },
    {
      "number": 285,
      "id": "I_kwDOIvmHss6QTaYE",
      "title": "Clarification in Security Consideration Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/285",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": ">   [Each of these functions MUST be carefully protected against both](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L729)\r\n   external attacks and internal misbehavior by some or all of the\r\n   operators of the Transparency Service.\r\n\r\nWhat does the term \"each of these functions\" refer to?",
      "createdAt": "2024-07-20T18:29:30Z",
      "updatedAt": "2024-10-08T14:44:18Z",
      "closedAt": "2024-10-08T14:44:18Z",
      "comments": []
    },
    {
      "number": 287,
      "id": "I_kwDOIvmHss6QTa0S",
      "title": "Redundancy in the Security Consideration Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/287",
      "state": "OPEN",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [
        "help wanted",
        "ready-for-pr"
      ],
      "body": "The security consideration section gives me the impression that different authors worked on the content and put the text in there without re-reading the product. As a consequence, there is a lot of repetition.",
      "createdAt": "2024-07-20T18:34:16Z",
      "updatedAt": "2025-02-11T15:52:50Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 289,
      "id": "I_kwDOIvmHss6QTbL4",
      "title": "Incorrect Info in Security Consideration Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/289",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker",
        "henkbirkholz",
        "roywill"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "> For example, Issuers must remove\r\n   Personally Identifiable Information (PII) as clear text in the\r\n   Statement.  Alternatively, Issuers may include opaque cryptographic\r\n   Statements, such as hashes.\r\n\r\n\r\nThe identity of the issuer is included in the signed statement. As such, the example is not great. ",
      "createdAt": "2024-07-20T18:38:59Z",
      "updatedAt": "2025-02-26T00:22:57Z",
      "closedAt": "2025-02-26T00:22:56Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The doc has transistioned over time to now reflect the definition of the TS is to only store hashes of the signed statements, and the storage of the signed statements, receipts in other ancillary services is outside the drafts scope.\r\nThe doc needs a scrub to reflect the separation so sentences like this can have the proper context. \r\n\r\nUpdate PII text to reflect the separation of persistence, and ability to use the cose-hash-envelope \r\n",
          "createdAt": "2024-10-08T14:53:20Z",
          "updatedAt": "2024-10-08T14:53:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved with #346 ",
          "createdAt": "2025-02-26T00:22:56Z",
          "updatedAt": "2025-02-26T00:22:56Z"
        }
      ]
    },
    {
      "number": 291,
      "id": "I_kwDOIvmHss6QTfqB",
      "title": "TLS not mandated by the architecture",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/291",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "roywill"
      ],
      "labels": [
        "pending-close",
        "ready-for-pr"
      ],
      "body": "> All contents exchanged between actors is protected using secure authenticated channels (e.g., TLS) but may not exclude network traffic analysis.\r\n\r\nThis sentence in the security consideration section gives the reader the impression that communication security is assumed to be used. This is, however, not even discussed in the body of the document.",
      "createdAt": "2024-07-20T19:35:46Z",
      "updatedAt": "2024-10-08T15:11:03Z",
      "closedAt": "2024-10-08T15:11:02Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Does the TLS requirement belong in the architecture or SCRAPI? I could see a case for either, but the architecture does not mandate only HTTP and or another application layer protocol that explicates TLS, but I know others have not presented an alternative application/transport layer that would prevent the TLS requirement, so I guess I get feedback with a PR.",
          "createdAt": "2024-08-06T13:26:44Z",
          "updatedAt": "2024-08-06T13:26:44Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Does the TLS requirement belong in the architecture or SCRAPI?\r\n\r\nThe architecture document needs a Security Considerations section. What is in that section is of course up to the authors.",
          "createdAt": "2024-08-06T14:05:51Z",
          "updatedAt": "2024-08-06T14:05:51Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Does the TLS requirement belong in the architecture or SCRAPI?\r\n> \r\n> The architecture document needs a Security Considerations section. What is in that section is of course up to the authors.\r\n\r\nOK, it is unclear if a potential change should explicate TLS or just clarify a \"secure authenticated channel\" is required and can be referenced in those security considerations.\r\n\r\nI guess it is time for me to just PR a change and get supportive or constructive feedback than. \ud83d\ude05 ",
          "createdAt": "2024-08-06T14:14:45Z",
          "updatedAt": "2024-08-06T14:14:45Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think a deeper issue is that it's not clear that an authenticated channel _is_ actually required in most cases. The Signed Statement is inherently integrity protected and carries strong Issuer identity so then we come down to questions that are definitely SCRAPI-specific (and SCRAPI has a Security Considerations already) and/or make recommendations focused more on confidentiality only",
          "createdAt": "2024-08-06T14:31:12Z",
          "updatedAt": "2024-08-06T14:31:12Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think a deeper issue is that it's not clear that an authenticated channel _is_ actually required in most cases.\r\n\r\nI was going to counter with some whataboutism and say \"what about RFC9162!?\" but it seems you are right. In the Security Considerations and elsewhere they never really explicate that, so your point stands.\r\n\r\nI guess I would be interested in how this \"frees up\" TS instances conformant to the architecture that do not strictly use HTTPS and TLS a la SCRAPI, but that is outside the scope of this document and SCRAPI too, so I will leave my comment there for now. \ud83d\ude04 ",
          "createdAt": "2024-08-07T04:24:25Z",
          "updatedAt": "2024-08-07T04:24:25Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Proposing we close, and leave TLS to be API specific (aka SCRAPI)\r\n\r\nIf no objections, or more specifically no PRs are submitted by Oct 8, 2024, I propose we close this issue.",
          "createdAt": "2024-09-30T23:30:57Z",
          "updatedAt": "2024-09-30T23:30:57Z"
        },
        {
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Proposing we close, and leave TLS to be API specific (aka SCRAPI)\r\n> \r\n> If no objections, or more specifically no PRs are submitted by Oct 8, 2024, I propose we close this issue.\r\n\r\nI support closing it out, and I can support waiting until October 8th as well. :smile: ",
          "createdAt": "2024-10-01T01:30:05Z",
          "updatedAt": "2024-10-01T01:30:05Z"
        }
      ]
    },
    {
      "number": 293,
      "id": "I_kwDOIvmHss6Qch9T",
      "title": "Ensure consistent use of \"registered\" to replace \"recorded\" when referring to signed statements being appended to the log. ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/293",
      "state": "CLOSED",
      "author": "rjb4standards",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "has-pr"
      ],
      "body": "We are inconsistent with our use of \"registered\" and \"recorded\" when referring to the addition of signed statements to the append-only log.\r\n\r\nI recommend using the term \"registered\" consistently to refer to this act. This implies that some \"process\" was applied before registration can occur on the append-only log. ",
      "createdAt": "2024-07-22T17:33:29Z",
      "updatedAt": "2024-07-31T15:46:11Z",
      "closedAt": "2024-07-31T15:46:10Z",
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Doing a quick search it seems easy and good to make this change, except one place that looks a bit janky.\r\n\r\nThe current document (draft-08 as released) includes a line:\r\n\r\n> Transparency Services MUST feature an Append-only Log. The Append-only Log is the verifiable data structure that records Signed Statements and supports the production of Receipts.\r\n\r\nIt doesn't quite sound technically right to simply replace the word here because the VDS doesn't register things: there are other bits of the higher level TS involved there.\r\n\r\nWould it satisfy you in this case to change to:\r\n\r\n> Transparency Services MUST feature an Append-only Log. The Append-only Log is the verifiable data structure that records registered Signed Statements and supports the production of Receipts.\r\n\r\nI don't want to mess too much with meaningful text changes and it would be a shame to hold up this issue for one detail. And I think this is strictly better because it also suggests that the VDS *doesn't* record (or validate, or witness, or any other word we might have come up with) Signed Statements that *haven't* been registered.",
          "createdAt": "2024-07-22T22:56:06Z",
          "updatedAt": "2024-07-22T23:12:51Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "No objections here Jon. Thanks for resolving this issue so quickly. Please close this issue after applying appropriate changes.",
          "createdAt": "2024-07-22T23:40:01Z",
          "updatedAt": "2024-07-22T23:43:02Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/296",
          "createdAt": "2024-07-23T00:44:49Z",
          "updatedAt": "2024-07-23T00:44:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as resolved by #296 ",
          "createdAt": "2024-07-31T15:46:11Z",
          "updatedAt": "2024-07-31T15:46:11Z"
        }
      ]
    },
    {
      "number": 307,
      "id": "I_kwDOIvmHss6ZYxGq",
      "title": "Consider allowing x5chain as a protected header parameter",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/307",
      "state": "CLOSED",
      "author": "achamayou",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "achamayou"
      ],
      "labels": [],
      "body": "The current text mandates the presence of `x5t` in the protected header when using x509: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/6a81fa82b5c6eef5a6b66bc3a36fc4615ac2dc56/draft-ietf-scitt-architecture.md?plain=1#L507, and allows an unprotected x5chain: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/6a81fa82b5c6eef5a6b66bc3a36fc4615ac2dc56/draft-ietf-scitt-architecture.md?plain=1#L422\r\n\r\nI propose that the specification allows `x5chain` in the protected header, ideally as a substitute for `x5t`, but in addition otherwise. The motivation for this change is to add a degree of integrity protection over `x5chain`, and blame for malicious payload otherwise.\r\nThe current set up does not authenticate or integrity protect the contents of x5chain, only the leaf, which opens up some opportunities for attacks targeting x509 parsers. I can see why this minimal binding can be desirable in some cases (caching large cert chains), but servers that wish to be stricter to reduce their attack surface should be able to.",
      "createdAt": "2024-10-08T14:37:34Z",
      "updatedAt": "2024-10-15T14:58:59Z",
      "closedAt": "2024-10-15T14:58:59Z",
      "comments": []
    },
    {
      "number": 318,
      "id": "I_kwDOIvmHss6iwUjj",
      "title": "Change the ISO reference to a NIST reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/318",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/d9460bbd223afaef053bb6269400114961854419/draft-ietf-scitt-architecture.md?plain=1#L93",
      "createdAt": "2024-12-10T16:19:15Z",
      "updatedAt": "2024-12-17T16:05:38Z",
      "closedAt": "2024-12-17T16:05:38Z",
      "comments": []
    },
    {
      "number": 319,
      "id": "I_kwDOIvmHss6jhQMo",
      "title": "Simplify Initialization and Bootstrapping",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/319",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker",
        "JAG-UK"
      ],
      "labels": [],
      "body": "Feedback from @mcr:\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/sOGI7xcUaOJx5Zag8uqsygooLrc/\r\n\r\n> I think [4.1.2](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-10.html#name-initialization-and-bootstra) does not need to be stated.\r\n> Just explain what a well formed, (empty) registry looks like.\r\n",
      "createdAt": "2024-12-16T21:08:52Z",
      "updatedAt": "2025-02-28T17:19:53Z",
      "closedAt": "2025-02-28T17:19:52Z",
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Don't want to get caught in no-mans-land of adding something that is half trustworthy....equally we can't possibly add everything to make a complete CCF enclave and codebase trustworthy :-/\n\nCheck with experts in Certificate Transparency to try to understand prior background on this",
          "createdAt": "2025-02-11T15:43:01Z",
          "updatedAt": "2025-02-11T15:43:01Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Jon, we use the X.09 thumbprint to verify that a trusted key was used in the transaction: \n\nThe thumbprint is dynamically generated using the SHA-1 algorithm and does not physically exist in the certificate. Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.",
          "createdAt": "2025-02-11T15:49:01Z",
          "updatedAt": "2025-02-11T15:49:01Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I have solicited feedback from CT implementers and will feed back here in due course.",
          "createdAt": "2025-02-17T14:14:33Z",
          "updatedAt": "2025-02-17T14:14:33Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Feedback collected: TL;DR different use case, different considerations. Do the consistent thing.",
          "createdAt": "2025-02-25T13:40:06Z",
          "updatedAt": "2025-02-25T13:40:06Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK, are you suggesting we close this issue?",
          "createdAt": "2025-02-28T16:56:36Z",
          "updatedAt": "2025-02-28T16:56:36Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes.\n\nIt's been suggested that an alternative to ignoring the issue would be to ensure that the first entry is a registration of the initial Registration Policy. It's not clear that this is actually needed for interim or security purposes. ",
          "createdAt": "2025-02-28T17:18:28Z",
          "updatedAt": "2025-02-28T17:18:28Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@mcr, happy to discuss at IETF 122",
          "createdAt": "2025-02-28T17:19:52Z",
          "updatedAt": "2025-02-28T17:19:52Z"
        }
      ]
    },
    {
      "number": 320,
      "id": "I_kwDOIvmHss6jha5l",
      "title": "Clarify: SCITT tag COSE_Sign1_Tagged is outside the scope of COSE ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/320",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From @mcr\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/sOGI7xcUaOJx5Zag8uqsygooLrc/\r\n\r\n> The SCITT tag COSE_Sign1_Tagged is outside the scope of COSE, and used \r\n> to indicate that a signed object is a Signed Statement.\r\n\r\n> I don't understand this.\r\n> \"used\" is that past-tense, or \"is used to\"?\r\n> If this is not a COSE thing, then where does it come from?\r\n\r\n\r\nhttps://www.ietf.org/archive/id/draft-ietf-scitt-architecture-10.html#:~:text=SCITT%20tag%20COSE_Sign1_Tagged%20is%20outside%20the%20scope%20of%20COSE\r\n",
      "createdAt": "2024-12-16T21:36:54Z",
      "updatedAt": "2025-02-11T15:45:40Z",
      "closedAt": "2025-02-11T15:45:38Z",
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This has been removed since the submitted version - we have moved definition of transparency up and simplified this wording",
          "createdAt": "2025-02-11T15:45:38Z",
          "updatedAt": "2025-02-11T15:45:38Z"
        }
      ]
    },
    {
      "number": 321,
      "id": "I_kwDOIvmHss6jhwbb",
      "title": "Clarify what is notarized on the ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/321",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "achamayou",
        "henkbirkholz"
      ],
      "labels": [],
      "body": "From @mcr,\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/sOGI7xcUaOJx5Zag8uqsygooLrc/\r\n\r\n> it seems that the receipt received from service A can easily be added to the statement submitted to service B.  It's unclear to me that the signed statement submitted to service A can then be updated.  Does the Append-Only Log record just the protected and payload of the Sign1, or does it also witness the unprotected header?\r\n\r\nWe don't seem to clarify what content is used to append to the ledger. Is it just the to-be-signed-bytes, or the entirety of the signed statement, including the unprotected header?\r\n",
      "createdAt": "2024-12-16T22:37:29Z",
      "updatedAt": "2025-02-25T15:57:58Z",
      "closedAt": "2025-02-25T15:57:58Z",
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> We don't seem to clarify what content is used to append to the ledger. Is it just the to-be-signed-bytes, or the entirety of the signed statement, including the unprotected header?\r\n\r\nI think we should mandate that it's at least (*) the signed statement with an empty unprotected header, because:\r\n\r\n1. It's a form of the statement from the issuer that does not contain un-authenticated content.\r\n2. It's convenient for clients/verifiers/tooling to deal with in a way that the TBS is not.\r\n\r\n(*) Implementations could decide that they want to allow some unprotected headers in, perhaps as supporting evidence (such as x5chain where it's sent unprotected), and should be encouraged to validate it as much as possible before they do so. Exposing what unprotected headers are counter-signed, if any, could be done in the transparency config, for the benefit of the verifiers.\r\n\r\nAllowing unprotected headers wholesale amounts to blindly counter-signing something that hasn't been signed in the first place, and should at the very least be heavily discouraged if not forbidden.",
          "createdAt": "2024-12-17T13:56:43Z",
          "updatedAt": "2024-12-17T13:56:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Notes from editors meeting:\r\nWe should create a PR, for text to be added to the registration section:   [6.2. Registration of Signed Statements](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-6.2)[Registration of Signed Statements](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-registration-of-signed-stat)\r\n\r\n- Set the value of the unprotected header to an empty map\r\n\r\nThis would include the protected-header, payload and signature.\r\nWe're specifically calling out emptying the unprotected header.\r\n",
          "createdAt": "2024-12-17T16:01:30Z",
          "updatedAt": "2024-12-17T16:01:30Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Per the conversation here https://youtu.be/DK40XJ651Cw I don't object to the requirement that un protected headers be stripped. I can see the could be left to being \"client choice\", but I do understand the chalenges that could create for scanning the log for the entry. While the client *knows* what was registered, I can see auditors may not.\r\n\r\nOne concerne I'd like to be clear on in any resulting changes: Did the conversation settle on *permiting* the ledger to include additional content in the actual ledger entry on disc ?\r\n\r\nConcrete example from the datatrails ledger we define the merkle leaf of our ledger like this\r\n\r\n`H(DOMAIN-SEPARATOR || EXTRABYTES || IDTIMESTAMP || SERIALIZEDBYTES)`\r\n\r\nOur *hope* is that SERIALIZEDBYTES is the *result* of the normalization process discussed on the call (regardless of what is decided with respect to the inclusion of unprotected headers), and that its for the TS registration policies to defined additional content. Is this what is intended ?\r\n\r\nAdditional context:\r\n\r\nIn our case the log is actually a mog, in that it includes a trie friendly leaf index as well as the more regular merkle tree data. So all material needed to verify the receipt can be obtained (efficiently) from the combination of the original statement, the receipt, and the index entry in the log. This means there is a VDS/ receipts format specific step to assemble the leaf value. \r\n\r\nWe do this so that while we may have duplicate SERIALIZEDBYTES, all entries in the ledger leaves have a unique and time sortable component to their pre-image. And one which is established by the process which commits the VDS to persistent storage.",
          "createdAt": "2024-12-18T17:27:23Z",
          "updatedAt": "2024-12-18T17:27:23Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Robin,\r\n\r\n \r\n\r\nI\u2019m not familiar with the term \u201cmog\u201d can you please provide information to help me understand this?\r\n\r\n \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n   \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\nRisk always exists, but trust must be earned and awarded.\u2122 \r\n\r\nhttps://businesscyberguardian.com/ \r\n\r\nEmail: ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: robinbryce ***@***.***> \r\nSent: Wednesday, December 18, 2024 12:28 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Subscribed ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Clarify what is notarized on the ledger (Issue #321)\r\n\r\n \r\n\r\nPer the conversation here https://youtu.be/DK40XJ651Cw I don't object to the requirement that un protected headers be stripped. I can see the could be left to being \"client choice\", but I do understand the chalenges that could create for scanning the log for the entry. While the client knows what was registered, I can see auditors may not.\r\n\r\nOne concerne I'd like to be clear on in any resulting changes: Did the conversation settle on permiting the ledger to include additional content in the actual ledger entry on disc ?\r\n\r\nConcrete example from the datatrails ledger we define the merkle leaf of our ledger like this\r\n\r\nH(DOMAIN-SEPARATOR || EXTRABYTES || IDTIMESTAMP || SERIALIZEDBYTES)\r\n\r\nOur hope is that SERIALIZEDBYTES is the result of the normalization process discussed on the call (regardless of what is decided with respect to the inclusion of unprotected headers), and that its for the TS registration policies to defined additional content. Is this what is intended ?\r\n\r\nAdditional context:\r\n\r\nIn our case the log is actually a mog, in that it includes a trie friendly leaf index as well as the more regular merkle tree data. So all material needed to verify the receipt can be obtained (efficiently) from the combination of the original statement, the receipt, and the index entry in the log. This means there is a VDS/ receipts format specific step to assemble the leaf value.\r\n\r\nWe do this so that while we may have duplicate SERIALIZEDBYTES, all entries in the ledger leaves have a unique and time sortable component to their pre-image. And one which is established by the process which commits the VDS to persistent storage.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/321#issuecomment-2551894320> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NAVDT4UZT4SDUQQYB32GGWBDAVCNFSM6AAAAABTXELJR2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDKNJRHA4TIMZSGA> .\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-12-18T17:57:45Z",
          "updatedAt": "2024-12-18T17:57:45Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@robinbryce I believe additional content was always allowed, we certainly do it in our implementation, as reflected in the [CCF tree profile](https://github.com/ietf-scitt/draft-birkholz-cose-cometre-ccf-profile/blob/main/draft-birkholz-cose-receipts-ccf-profile.md#transaction-components).\r\n\r\nThis is (again, as I understand it) orthogonal to _how_ the Signed Statement is normalised prior to inclusion, and whether the unprotected/unsigned bits are included or not.",
          "createdAt": "2024-12-18T17:58:01Z",
          "updatedAt": "2024-12-18T17:58:01Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards appologies, that was a lazy reference. mog is a short hand for a \"map backed log\", in otherwords a combination of an append only log with some kind of index. its definitely not a formal term. some treatment of this can be found here https://transparency.dev/verifiable-data-structures/ though it doesn't specificaly use \"mog\".",
          "createdAt": "2024-12-18T19:05:48Z",
          "updatedAt": "2024-12-18T19:05:48Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> @robinbryce I believe additional content was always allowed, we certainly do it in our implementation, as reflected in the [CCF tree profile](https://github.com/ietf-scitt/draft-birkholz-cose-cometre-ccf-profile/blob/main/draft-birkholz-cose-receipts-ccf-profile.md#transaction-components).\r\n> \r\n> This is (again, as I understand it) orthogonal to _how_ the Signed Statement is normalised prior to inclusion, and whether the unprotected/unsigned bits are included or not.\r\n\r\nGreat, that is completely aligned with how I understood things. Thanks!",
          "createdAt": "2024-12-18T19:06:17Z",
          "updatedAt": "2024-12-18T19:06:17Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, on the specific issue of normalization: my instinct here has always been \"don't mess with the bytes\" in the strictest sense. A client registering a statement gets to chose and clients may have good reasons for wanting the un protected headers included in the normalised bytes.\r\n\r\nThe most compeling counter point is that, given a transparent statement with 4 receipts on it that you find under a rock, how would you know which of those receipts contributed pre-image bytes for the others ?\r\n\r\nOn a transparent statement, receipts are contained in an array\r\n\r\nhttps://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#fig-transparent-statement-edn\r\n\r\nI can't see any way that can be re-conciled without knowing something about the specific receipt being verified.",
          "createdAt": "2024-12-18T19:34:31Z",
          "updatedAt": "2024-12-18T19:55:08Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "accidental close!",
          "createdAt": "2024-12-18T19:37:48Z",
          "updatedAt": "2024-12-18T19:37:48Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Last thought: If I wanted to register a statement which represented \"this statement was issued and successfully registered, because its got a receipt attached\", given the current arch, I would make it the payload and be done I think\r\n\r\nMaybe \"any receipts in the unprotected headers MUST be stripped\" would thread the needle but if we are going to mess with the bytes at all, this lacks the compeling simplicity of \"remove them all\"",
          "createdAt": "2024-12-18T20:02:51Z",
          "updatedAt": "2024-12-18T20:05:56Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> A client registering a statement gets to chose and clients may have good reasons for wanting the un protected headers included in the normalised bytes.\r\n\r\nI agree, but the problem with them being unprotected is that there's no telling who set them. It may be the issuer, the client, or someone else. It could be the server implementation.\r\n\r\n> The most compeling counter point is that, given a transparent statement with 4 receipts on it that you find under a rock, how would you know which of those receipts contributed pre-image bytes for the others ?\r\n\r\nI think the point of stripping the unprotected headers is that you don't need to know, because the receipts don't contribute to the pre-image. All the receipts are for the same pre-image, which allows parallel registration and verification.",
          "createdAt": "2024-12-18T20:05:58Z",
          "updatedAt": "2024-12-18T20:05:58Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I am now leaning quite a lot to remove all. But wondering if there is any support for \"remove just receipts\" from the headers",
          "createdAt": "2024-12-18T20:07:37Z",
          "updatedAt": "2024-12-18T20:07:37Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess the possibilities are:\r\n\r\n1. Remove only some things (receipts, ...?)\r\n2. Remove everything\r\n3. Remove everything except some things (x5chain, ...?)\r\n\r\nI am not keen on 1. because it amounts to what I perceive as very open-ended acceptance of completely unauthenticated content. A single issuer getting MITM'ed can lead to content unwanted by both the issuer and the ledger making it in. A dispute between the ledger and an issuer about this content also cannot be satisfactorily resolved.\r\n\r\n2. seems fine to me, it's what I do! It's also what @OR13 does, if I understand correctly.\r\n3. seems plausible, so long as the content is subject to some kind of constrained validation. Because I can't think of a use case, I'm a bit skeptical though.",
          "createdAt": "2024-12-18T20:14:26Z",
          "updatedAt": "2024-12-18T20:14:26Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> I agree, but the problem with them being unprotected is that there's no telling who set them. It may be the issuer, the client, or someone else. It could be the server implementation.\r\n\r\nAnd also\r\n>  A single issuer getting MITM'ed can lead to content unwanted by both the issuer and the ledger making it in\r\n\r\nYes totally, but this is why this choice is so impactful it goes to the heart of the trust assumptions:\r\n\r\nThe *issuer* has signed only the protected headers and the payload. This is not in question here.\r\n\r\nThe *transparency service* has either:\r\n A: counter signed (by way of a receipt) only the protected headers and payload\r\n B: counter signed protected, payload & unprotected(or some redacted subset)\r\n \r\nFor B: whether all or some are signed, the trust model is different for the unprotected headers. The registering entity is the last party in the chain. they are explicitly not necessarily the issuer in the arch.\r\n\r\nB: has utility, but the mental model of sig + counter sig is now incomplete\r\n \r\n In otherwords, it has quite an impact on the trust model as the unprotected headers are only attested in a meaningful way by the TS. (Granting that the arch does not place trust in the authentication required to call registration endpoints)",
          "createdAt": "2024-12-18T20:19:36Z",
          "updatedAt": "2024-12-18T20:19:36Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "If we do anything other that 2, then the TS is attesting that \"this random stuff was included in the statement at time of registration\". It would then be a matter for TS registration policies to declare what that means I think ? ",
          "createdAt": "2024-12-18T20:26:07Z",
          "updatedAt": "2024-12-18T20:26:07Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> For B: whether all or some are signed, the trust model is different for the unprotected headers. The registering entity is the last party in the chain. they are explicitly not necessarily the issuer in the arch.\r\n\r\nYes, completely agree. I tried to say this in the recording, but the term \"counter-signed\" proved controversial :)\r\n\r\nIt seems to me that the unprotected header (minus the receipt) cannot be said to be counter-signed, because it isn't signed to begin with. If the service decides to sign it, then a more obvious and explicit location to do that is in the _protected_ header of the receipt itself. That is very unambiguously \"the service says\" (as opposed to \"the issuer says\", which is the signed statement).\r\n\r\nI struggle to explain simply what the service signing the unprotected header means, it's something like \"the service says that it heard this from a submitter, and the issuer may or may not have meant that\".",
          "createdAt": "2024-12-18T20:32:40Z",
          "updatedAt": "2024-12-18T20:32:40Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> If we do anything other that 2, then the TS is attesting that \"this random stuff was included in the statement at time of registration\". It would then be a matter for TS registration policies to declare what that means I think ?\r\n\r\nIt's possible to let the registration policy decide, but that makes validating a transparent statement a lot more complicated all of a sudden, because you need to work out what the registration policy has decided to leave in or not.",
          "createdAt": "2024-12-18T20:34:27Z",
          "updatedAt": "2024-12-18T20:34:44Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure which hat I'm wearing for this comment, but here are my thoughts for the consideration of the group.\r\n\r\nTL;DR: The unprotected header (UH) MUST be empty when registering a signed statement. \r\n\r\nWhy?\r\nAs others have argued, the responsibility of the Transparency Service is to faithfully register exactly what the Issuer submits for Registration. Anything else seems strange: the very reason for Issuer signature is to prevent the TS or the channel from tampering or spoofing statements on the Issuer's behalf. \r\n\r\nSo then if the Issuer feels the need to put something in the UH then that should be recorded also. Think about why they might do this: to give hints to the Transparency Service? To add tags or something that for whatever reason they want to be able to change and so don't put in the meta map? Well, if these entries are to have any effect *at all*, then those effects might be security relevant to the application layer, or say something critical about the circumstances of Registration, and so not recording them potentially opens an avenue for a dishonest Issuer to smuggle or hide important information away whilst still getting a valid receipt.\r\n\r\nBUT the other side of the threat graph also applies: because the UH is not covered by the Sign1 it is possible for a dishonest TS or channel to add things in here, and then record them, and the Issuer would have no recourse to say \"that wasn't part of my submission\".\r\n\r\nAnd putting these things together one must also conclude that the supposed potential intention of an Issuer to put instructions or metadata or whatever in the UH is unsafe because of this channel/TS threat. And so the assumption must be that no security relevant info can be put in the UH, nor should an Issuer expect that anything in the UH necessarily be processed or actioned by the TS.\r\n\r\nAt which point it's completely useless and we might as well do away with it.\r\n\r\nBUT, there is a stated use for it which remains, which is that on OUTPUT or READ you might have a bunch of useful info stuffed in there, such as SignedStatement + Receipt-in-UH => TransparentStatement. Using the UH as a convenient attached transport for related info that necessarily accrues *after* signing and *after* registration is still pretty neat, and so far the things stuffed in there have their own independent integrity measures so while they're still vulnerable to being removed altogether, there is some trust that can be built there.",
          "createdAt": "2024-12-19T11:16:57Z",
          "updatedAt": "2024-12-19T11:16:57Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> It seems to me that the unprotected header (minus the receipt) cannot be said to be counter-signed, because it isn't signed to begin with\r\n\r\nAbsoloutely\r\n\r\n>  but that makes validating a transparent statement a lot more complicated\r\n\r\nYes\r\n\r\n> (JAG-UK) And so the assumption must be that no security relevant info can be put in the UH\r\n\r\nIndeed\r\n\r\nA clarification I might then make is \"By definition, a transparent statement can not be registered\".\r\n\r\nIf that sort of thing is desired the transparent statement would need to be a payload for a different statement. And as such would be opaque to the protocol\r\n\r\nIt is implied, but the use of un protected headers to convey receipts has contributed to the need for clarification here I think.\r\n\r\nTo be clear, I'm supportive of \"The unprotected header (UH) MUST be empty when registering a signed statement.\"",
          "createdAt": "2024-12-19T11:22:16Z",
          "updatedAt": "2024-12-19T11:22:16Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "I also think that\r\n\r\n\"The unprotected header (UH) MUST be empty when registering a signed statement.\"\r\n\r\nMeans that https://ietf-wg-scitt.github.io/draft-ietf-scitt-scrapi/draft-ietf-scitt-scrapi.html#name-register-signed-statement\r\n\r\nShould do 400 \"invalid request\" rather than silently stripping. This means that validation can decode *to check* for the absense of headers, but the exact bytes of the original (valid) request are submited to the ledger. I think has practical benefits for various potential implementation issues.",
          "createdAt": "2024-12-19T12:33:21Z",
          "updatedAt": "2024-12-19T12:33:21Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> \"The unprotected header (UH) MUST be empty when registering a signed statement.\"\r\n\r\nThat would mean that a client submitting an already transparent statement would need to strip the receipt prior to sending. It's not a major problem (easy enough to ship the CLI tool/utility function), but just to make sure that's what's intended.\r\n\r\nAlthough our implementation strips the UH now, I think I am warming up to the idea of forbidding it altogether, because it's a more definitive solution to canonical serialisation issues, and it ticks the \"don't mess with the bytes\" box at the same time.",
          "createdAt": "2024-12-19T14:23:50Z",
          "updatedAt": "2024-12-19T14:23:50Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> That would mean that a client submitting an already transparent statement would need to strip the receipt prior to sending.\r\n\r\nYes, I can see the practical inconvenience there but I think it's cleaner to just forbid it altogether in the formal spec and make it an SDK problem as you say",
          "createdAt": "2024-12-19T14:46:57Z",
          "updatedAt": "2024-12-19T14:46:57Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "Fair enough, it definitely is cleaner and clearer to only accept valid inputs.",
          "createdAt": "2024-12-19T15:00:02Z",
          "updatedAt": "2024-12-19T15:00:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Summarizing the journey:\r\n\r\n- The unprotected header is intended for the TS to return information after registration or for the client to attach information, such as the receipt, for convenience of storage and transport of associated metadata.\r\n- Upon registration, the unprotected header MUST be empty, or a 400 is returned via SCRAPI to provide consistency and avoid potential MIM attacks.\r\n- If we wish to register a Transparent Statement, it would need to be submitted as the payload, with a known content-type, and could use the same subject to associate them. This latter one is something we should consider how we handle this scenario and why it's needed.",
          "createdAt": "2024-12-19T15:32:26Z",
          "updatedAt": "2024-12-19T15:32:26Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker @robinbryce @JAG-UK I realise now, as I am editing to add these changes that:\n\n> Upon registration, the unprotected header MUST be empty, or a 400 is returned via SCRAPI to provide consistency and avoid potential MIM attacks.\n\nsubstantially conflicts with:\n\n> If `x5t` is included in the protected header, an `x5chain` with a leaf certificate corresponding to the `x5t` value MAY be included in the unprotected header.\n\nTo be clear, I am fine with removing this, and mandating that `x5chain` must be protected by being placed directly in the protected header (it is what our implementation does, for the reasons spelled out in #307 and #309). But do we still want to allow implementations that include supporting evidence in unprotected header params, so long as they have a binding to the protected header (`x5t` in this case), _verified_ at registration?\n\nIf so, we need more subtle wording, which defines an implementation-specific set of authenticated/bound unprotected header params. Statements containing unprotected header params other than those MUST be rejected then.\n\nWhat do you think? Is unprotected `x5chain` worth the nuance?",
          "createdAt": "2025-02-13T11:57:26Z",
          "updatedAt": "2025-02-13T11:57:26Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "\n> If so, we need more subtle wording, which defines an implementation-specific set of authenticated/bound unprotected header params. Statements containing unprotected header params other than those MUST be rejected then.\n> \n> What do you think? Is unprotected `x5chain` worth the nuance?\n\nCan we get away with something like just\n\n\nUpon registration, the unprotected header MUST be empty, of content not otherwise bound explicity by protected headers, or a 400 is returned via SCRAPI to provide consistency and avoid potential MIM attacks.\n\nOr does this force us to enumerate \"bound explicitly\" in a laborious way ?\n",
          "createdAt": "2025-02-16T09:21:08Z",
          "updatedAt": "2025-02-16T09:21:08Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "The unprotected header is an extension point, which can include additional signatures, cryptographic keys or other data.\nVariability in the unprotected header has an impact on storage costs for adjacent services, and on verification in scenarios involving multiple receipts that cover the full path from a statement to a consistency proof.\n\nstatement -> signed-statement -> receipt-of-inclusion -> receipt-of-consistency.\n\nThe unprotected header SHOULD be empty when registering a signed statement.\n\nThe server MAY return a 400, and decline to register signed statements with non empty unprotected headers.\n\nThe evaluation of a signed statement, is part of the registration policy for a transparency service.\n\n\n\n\n\n\n\n",
          "createdAt": "2025-02-16T16:10:43Z",
          "updatedAt": "2025-02-16T16:40:14Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like Orie's suggestion. It's very simple and avoids treading on the toes of other bits of the document, or indeed other specs (the unprotected header belongs to COSE - it should already be clear that its contents are not covered by the Issuer Signature).",
          "createdAt": "2025-02-16T16:54:38Z",
          "updatedAt": "2025-02-16T16:54:38Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 @JAG-UK that's quite a bit more vague than what @robinbryce proposes though, it leaves the door open to services accepting statements with unbound unprotected header params, without specifying if they are to be stripped before inclusion. And I think we've broadly agreed in this thread that this is really undesirable.\n\nI'm otherwise fine with it, in that it allows all desired behaviours (strict rejection of any unprotected header params, limited acceptance of bound unprotected params).",
          "createdAt": "2025-02-17T09:02:35Z",
          "updatedAt": "2025-02-17T09:02:35Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@achamayou we can make the SHOULD a MUST, and the MAY a MUST.\n\nIf you make these MUSTs, you would not be able to register a receipt in a transparency service.\nThat use case might not matter, but just for the sake of clarity:\n\nLets assume you have `receipt.gov.cose` for `software.sbom.cose` and after taking a dependency on the sbom, you want to register both.\n\nYou can easily register `software.sbom.cose`, because its just a signed statement.\nYou cannot register `receipt.gov.cose` without breaking the proof, since the proof is in the unprotected header.\n\n... You could decide to drop the unprotected header parameters for the receipt, but then you would loose the ability to follow an explicit validation chain for proof that they vendor had validated `receipt.gov.cose`, because the receipt for the gov receipt would be over a \"broken proof\".\n\nbuilding on the example above:\n\nstatement -> signed-statement -> receipt-of-inclusion(vendor) -> receipt-of-consistency(vendor).\n\nstatement -> signed-statement -> receipt-of-inclusion(gov) -> receipt-of-consistency(gov).\n\nreceipt-of-inclusion(gov) -> receipt-of-inclusion(vendor) -> receipt-of-consistency(vendor).\n\nIf we don't care to have policies that mandate the inclusion of receipts from \"external\" transparency services, than perhaps the MUST is fine.\n\n> it leaves the door open to services accepting statements with unbound unprotected header params, without specifying if they are to be stripped before inclusion.\n\nI think we are talking about specifying conformance vs interop here.\nDo we need interop around the 2 receipt case?... also, nothing stops a transparency service from refusing to register receipts from other transparency services if the SHOULD is preferred, that is registration policy stuff.\n\nI do think it would be complicated to normatively define a single way to handle multiple receipts at this point.\nThe SHOULD is a way to allow that use case, without specifying it.\n",
          "createdAt": "2025-02-17T14:43:26Z",
          "updatedAt": "2025-02-17T15:02:17Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 I understand the multiple-receipt situation, and I am worried we are [stuck in a loop](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/321#issuecomment-2552174680). I can see that being able to submit a transparent statement and incrementally pile up receipts is convenient. I can also understand (even I don't follow it) the rationale behind the `x5t`/`x5chain` split.\n\nThese are two limited cases where unprotected header parameters are effectively protected, either indirectly, or by another root of trust, such as `receipt.gov.cose` in your example.\n\nThe point made in the discussion above is: outside of some exceptions, unprotected header parameters have unknown provenance, since there is no way for the TS to authenticate them. A malicious TS could manufacture some, and an Issuer would not be able to denounce it. A malicious Client sending a statement to the TS on behalf of an Issuer could do the same.\n\nIs it worth removing the ability for auditors to replay registration and end-to-end integrity on statements, for convenience on multiple receipts and detaching `x5chain`?\n\nIf we go the SHOULD route, we say that it's up to the TS implementation to decide how to handle unprotected headers, and whether to provide these guarantees. It's not possible to say that a TS implementing the RFC always meets that bar.\n\nI will add, playing devil's advocate here, that even TS implementations that reject non-empty protected headers still have to be careful in how they allow registration policies to be implemented to achieve replayability, because any amount of non-determinism in the policy logic is enough to wreck it.\n\nSo I'll go ahead with this change.\n",
          "createdAt": "2025-02-17T16:35:46Z",
          "updatedAt": "2025-02-17T16:35:46Z"
        }
      ]
    },
    {
      "number": 322,
      "id": "I_kwDOIvmHss6jh1QM",
      "title": "Update PII warning",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/322",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker",
        "JAG-UK"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "From @mcr\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/sOGI7xcUaOJx5Zag8uqsygooLrc/\r\n\r\n> section 5:\r\n>        Transparency Services MAY support anonymous access. Issuers SHOULD\r\n>        ensure Signed Statements submitted to public access services are\r\n>        acceptable for public disclosure. Publicly accessible Signed\r\n>        Statements MUST NOT carry confidential information.\r\n>I suggest writing:\r\n>  Transparency Services supporting anonymous access need to ensure that\r\n>  issuers are aware of this, snd SHOULD review the submitted statements for\r\n>  attributes known to contain PII.\r\n\r\n> I don't think it's useful for the MUST NOT to be present. It's neither enforceable nor knowable by any party.\r\n",
      "createdAt": "2024-12-16T22:52:11Z",
      "updatedAt": "2025-02-25T15:56:33Z",
      "closedAt": "2025-02-25T15:56:32Z",
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So it turns out we'd already merged a fix for this, but since I was assigned it I went ahead and tried to tidy up even more anyway.\n\nI have created a PR which we can take or leave.",
          "createdAt": "2025-02-17T12:51:29Z",
          "updatedAt": "2025-02-17T12:51:29Z"
        }
      ]
    },
    {
      "number": 323,
      "id": "I_kwDOIvmHss6jh2Hs",
      "title": "Update Security Considerations to not use BCP14 keywords",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/323",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "From @mcr\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/sOGI7xcUaOJx5Zag8uqsygooLrc/\r\n\r\n> Please do not use BCP14 keywords in the Security Considerations.\r\n> SC should instead always reference some section in the Protocol specification where that was said, while explaining what threat was being mitigated.\r\n> \r\n> Like the bit about TEEs, and the other bit about consensus algorithms, and finally the self-statements (Attestation results I guess?) about the TCB.\r\n> \"Redundant Replicas\" ought to be an entire section on it's own.\r\n> \r\n> \"remote attestation Evidence was appraised by a Relying Party \"\r\n> HENK! Evidence iis appraised by a Verifier :-)\r\n> \r\n> person-in-the-middle is not a term that I proposed in\r\n>     https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdatatracker.ietf.org%2Fdoc%2Fdraft-richardson-saag-onpath-attacker%2F&data=05%7C02%7C%7Ce9ee8d279969424877f708dd1ba04c88%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C638697097466980054%7CUnknown%7CTWFpbGZsb3d8eyJFbXB0eU1hcGkiOnRydWUsIlYiOiIwLjAuMDAwMCIsIlAiOiJXaW4zMiIsIkFOIjoiTWFpbCIsIldUIjoyfQ%3D%3D%7C0%7C%7C%7C&sdata=UgSf4s3sv%2BirzoyYbc%2BRTq0Mx92uor3HwvCDzbQq8UM%3D&reserved=0\r\n> \r\n> some of have proposed MITM be expanded now to:\r\n>      *Meddler\" in the Middle\r\n> \r\n> (if cookies are the thing being stolen, then \"Monster in the Middle\".\r\n> This, btw, is a nom-nom-nom attack.  Coming to an I-D repo near you)",
      "createdAt": "2024-12-16T22:55:03Z",
      "updatedAt": "2025-02-28T13:02:17Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mcr",
          "authorAssociation": "NONE",
          "body": "Steve Lasker ***@***.***> wrote:\n    >> some of have proposed MITM be expanded now to:\n    >> *Meddler\" in the Middle\n\nhttps://datatracker.ietf.org/doc/draft-richardson-saag-onpath-attacker/\n\n",
          "createdAt": "2024-12-23T03:47:46Z",
          "updatedAt": "2024-12-23T03:47:46Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good pointer here that if BCP keywords are required in the Security Considerations there's a good chance that content is missing form the main body of the document.\n\nAlso check the current disposition of IESG how strongly they enforce this rule these days",
          "createdAt": "2025-02-11T15:18:19Z",
          "updatedAt": "2025-02-11T15:18:19Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I have started a branch for this but it's a *huge* change! Given the controversy over whether it's even a problem can we treat it as a nit for last call, on the assumption that we will get comments on this section anyway? ",
          "createdAt": "2025-02-28T13:02:16Z",
          "updatedAt": "2025-02-28T13:02:16Z"
        }
      ]
    },
    {
      "number": 325,
      "id": "I_kwDOIvmHss6j1MVX",
      "title": "Placeholder to recover prior use cases and place in the consolidated architecture document",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/325",
      "state": "CLOSED",
      "author": "rjb4standards",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "rjb4standards"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "The use cases document has expired and the architecture document is being consolidated to include use cases. This issue is in place to assist with the recovery of older use cases into the consolidated architecture document",
      "createdAt": "2024-12-18T19:48:12Z",
      "updatedAt": "2025-02-21T13:01:39Z",
      "closedAt": "2025-02-21T13:01:39Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards, \r\nPR #316 recovered what the authors felt covered the pre-existing use cases into: [Exemplary Software Supply Chain (SSC) Use Cases](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-exemplary-software-supply-c)\r\n\r\nCan you please review and outline what would be edited, or provide a PR?",
          "createdAt": "2024-12-20T16:22:44Z",
          "updatedAt": "2024-12-20T16:22:44Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "That a great question Steve. I suppose this is a question that should be posed to the authors of the expired use cases document - which Use cases from the expired document should be added to the Architecture Document.\r\n\r\nI will cast my vote to keep these use cases:\r\n\r\n[2.1](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#section-2.1).  [Software Supply Chain Use Cases](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#name-software-supply-chain-use-c)\r\n\r\n[2.2](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#section-2.2).  [Verification That Signing Certificate Is Authorized by Supplier](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#name-verification-that-signing-c)\r\n\r\n[2.3](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#section-2.3).  [Multi Stakeholder Evaluation of a Released Software Product](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#name-multi-stakeholder-evaluatio)\r\n\r\n[2.4](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#section-2.4).  [Security Analysis of a Software Product](https://ietf-wg-scitt.github.io/draft-ietf-scitt-software-use-cases/draft-ietf-scitt-software-use-cases.html#name-security-analysis-of-a-soft)\r\n ",
          "createdAt": "2024-12-20T16:34:55Z",
          "updatedAt": "2024-12-20T16:34:55Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "A pull request has been submitted to address Issue 325 adding one missing use case.\r\n\r\nSee PR 328 for details: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/328 ",
          "createdAt": "2024-12-20T18:35:16Z",
          "updatedAt": "2024-12-23T00:37:51Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "With #328 merged, this seems addressed? Is there a remaining gap?",
          "createdAt": "2025-02-21T11:02:46Z",
          "updatedAt": "2025-02-21T11:02:46Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree.",
          "createdAt": "2025-02-21T11:48:37Z",
          "updatedAt": "2025-02-21T11:48:37Z"
        }
      ]
    },
    {
      "number": 326,
      "id": "I_kwDOIvmHss6kGzVT",
      "title": "Make reference to Receipt Label 394 a TBD",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/326",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "From @mcr:\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/xXaVeX1b6idRI8oFbvBF10RkF_Q/\r\n",
      "createdAt": "2024-12-20T18:20:35Z",
      "updatedAt": "2025-02-18T15:08:25Z",
      "closedAt": "2025-02-18T15:08:24Z",
      "comments": []
    },
    {
      "number": 327,
      "id": "I_kwDOIvmHss6kG1PG",
      "title": "Make SCRAPI an Arch Dependency/Normative reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/327",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "From @mcr\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/xXaVeX1b6idRI8oFbvBF10RkF_Q/\r\n\r\n    >> All Transparency Services MUST expose APIs for the Registration of\r\n    >> Signed Statements and issuance of Receipts.\r\n\r\n    > . o O ( such as draft-ietf-scitt-scrapi ?? )\r\n    > Nod: are you suggesting we should add SCRAPI to the architecture doc?\r\n\r\n> Yes, I think that it needs to interlock back and forth, or it needs to be completely top-down reference, in which case probably none of the CDDL belongs.\r\n\r\nTracks if we make SCRAPI a dependency, keeping the CDDL, remove CDDL, or keep as-is with samples that CAN be implemented with SCRAPI\r\n",
      "createdAt": "2024-12-20T18:26:05Z",
      "updatedAt": "2025-01-07T15:52:01Z",
      "closedAt": "2025-01-07T15:52:01Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A note that #316 [added a reference to SCRAPI](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L181)\r\n> The building blocks provided by the SCITT architecture and related documents (e.g., the SCITT Reference API) are not restricted to software supply chain use cases.\r\n",
          "createdAt": "2024-12-20T18:57:33Z",
          "updatedAt": "2024-12-20T18:57:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I've added this PR, but I've also raised the question of whether we should make a bi-directional dependency or only make the dependency from SCRAPI --> Architecture in the scitt mailing thread. \r\nhttps://mailarchive.ietf.org/arch/msg/scitt/CbJEuUXBxnHDm1ZrS5lWYz-gvTY/\r\n",
          "createdAt": "2024-12-30T17:18:25Z",
          "updatedAt": "2024-12-30T17:18:25Z"
        }
      ]
    },
    {
      "number": 329,
      "id": "I_kwDOIvmHss6kIMkE",
      "title": "Clarify what is stored on the ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/329",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "has-pr"
      ],
      "body": "A reader of the Arch doc may assume the content of the signed statements is stored on the Ledger, as opposed to verifiable proofs of the signed statement.\r\nThis has evolved over time as, at least some of us, assumed the signed statement _was_ stored on the ledger. \r\nThe current belief of the authors is the ledger stores \"hashes\", verifiable proofs of the signed statement, that can live forever without concerns of PII information. However, the current state of the doc doesn't really qualify this distinction.\r\n\r\nStoring the actual signed statement, including the payload, or other elements of the protected header on the ledger also raises PII information concerns, such as #322 \r\n\r\nA complete Transparency Service may provide ancillary services that may store the content of the signed statement, or even the contents of a hashed payload, however that's beyond the scope of the SCITT Draft.\r\n\r\nThis issue tracks:\r\n- [ ] Clarifying the ledger only stores \"proofs\" (or a better agreed upon term)\r\n- [ ] Clarifying a service may store the signed statements, but likely not on the ledger so they can delete and/or redact PII information that may be written (intentionally or accidentally)",
      "createdAt": "2024-12-20T23:05:33Z",
      "updatedAt": "2025-02-26T00:25:09Z",
      "closedAt": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "We closed #335, which leaves this issue outstanding \ud83e\udd37\u200d\u2642 ",
          "createdAt": "2025-02-26T00:25:07Z",
          "updatedAt": "2025-02-26T00:25:07Z"
        }
      ]
    },
    {
      "number": 330,
      "id": "I_kwDOIvmHss6kIfZr",
      "title": "Islolate x509 as one option for Issuer identity",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/330",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "has-pr"
      ],
      "body": "The spec has evolved from did:web to being flexible about the types of identity a transparency service may support.\r\nIt uses x.509 as a primary example, but could be confusing whether x.509 must be used, or rather when it's used, these are the properties that MUST or SHOULD be set.\r\n\r\nThis issue tracks extracting x.509 to an identity profile, which could be defined in the same architecture doc. And, making it clear that other identity types CAN be used, eliminating the need to follow the x.509 requirements. ",
      "createdAt": "2024-12-21T01:29:55Z",
      "updatedAt": "2025-02-25T15:53:21Z",
      "closedAt": "2025-02-25T15:53:21Z",
      "comments": []
    },
    {
      "number": 333,
      "id": "I_kwDOIvmHss6kUiao",
      "title": "Include COSE HASH Refernece",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/333",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "From @mcr,\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/xXaVeX1b6idRI8oFbvBF10RkF_Q/\r\n\r\n> If Detached payloads are going to be used, then probably this should\r\n>be more clearly stated as a requirement?\r\n\r\n@SteveLasker \r\n> Personally, I believe hashed (not detached) payloads https://datatracker.ietf.org/doc/draft-ietf-cose-hash-envelope/ will be the majority. Should the draft limit to hash envelopes?\r\n\r\n@mcr\r\n> I don't care exactly, but I think more details are needed.\r\n",
      "createdAt": "2024-12-23T23:26:18Z",
      "updatedAt": "2025-02-24T20:52:44Z",
      "closedAt": "2025-02-24T20:52:41Z",
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "Am I right in remembering that we decided not to include this reference to avoid a dependency that would delay the Architecture draft unnecessarily?",
          "createdAt": "2025-02-24T20:28:45Z",
          "updatedAt": "2025-02-24T20:28:45Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Correct, we closed the PR, but this didn't auto-close",
          "createdAt": "2025-02-24T20:52:41Z",
          "updatedAt": "2025-02-24T20:52:41Z"
        }
      ]
    },
    {
      "number": 337,
      "id": "I_kwDOIvmHss6ktuEm",
      "title": "Reconcile how transparent statements are re-recorded on the ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/337",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Line [#466](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L466) states:\r\n\r\n> However, the Registrations on a separate Transparency Service is generally disjoint, though it is possible to take a Transparent Statement (i.e. a Signed Statement with a Receipt in its unprotected header, ~from a~ (see #331)  from the first Transparency Service) and register it on another Transparency Service, **where the second Receipt will be over the first Receipt in the unprotected header**.\r\n\r\nWith the discussion and comments in [#321](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/321#issuecomment-2554645211), the unprotected header will be stripped prior to registration. \r\n\r\nThe change will make _**where the second Receipt will be over the first Receipt in the unprotected header**_ inaccurate. \r\n\r\nThis issue tracks how and if we need to re-register transparent statements, or remove the above reference.",
      "createdAt": "2024-12-30T16:41:06Z",
      "updatedAt": "2025-02-28T18:34:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe this is resolved by #349, following agreement in #321 that unprotected headers must not be included in the Append-only Log/VDS.\n\nThere is no consensus for carving out an exception for bound or separately trusted claims, such as other receipts, in the unprotected header. Since there is neither a clear use case, nor more importantly an implementation for this \"receipts over receipts mechanism\" (as opposed to multiple receipts over the same statement), I am strongly inclined to leave it out altogether.\n\nIf necessary, a further draft can define a protected header parameter that may be used by an Issuer wanting to make transparent a statement that also includes receipts.",
          "createdAt": "2025-02-21T11:01:24Z",
          "updatedAt": "2025-02-21T11:01:24Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker shall we close this issue then?",
          "createdAt": "2025-02-28T18:34:16Z",
          "updatedAt": "2025-02-28T18:34:16Z"
        }
      ]
    },
    {
      "number": 340,
      "id": "I_kwDOIvmHss6kyBAg",
      "title": "Top level section for Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/340",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "pending-close"
      ],
      "body": "While reviewing SCRAPI it points to the Arch document for the definition of SCITT Objects and Identifiers (Signed Statements, Receipts, and Transparent Statements).\r\nThe current Arch document has top-level definitions for Signed Statements and Transparent Statements but doesn't define Receipts.\r\nThe appendix has identifiers for Signed Statements, Receipts, and Transparent Statements. \r\n\r\nWhile the details of Receipts are deferred to [I-D.draft-ietf-cose-merkle-tree-proofs](https://datatracker.ietf.org/doc/html/draft-ietf-cose-merkle-tree-proofs-07), the TOC should cover the concept as a top-level definition for reference.",
      "createdAt": "2024-12-31T17:48:02Z",
      "updatedAt": "2025-02-17T15:33:17Z",
      "closedAt": "2025-02-17T15:33:16Z",
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO, a Receipt must contain links to artifacts that are accessible via the Registry Operator Transparency Service. A typical \"Registry of Deeds\" is a good model where interested parties can retrieve trustworthy artifacts, like land deeds, from a SCITT Registry, along with other artifacts that are required for registration. Parties that receive these receipts can forward links to the registered artifacts for others to view.\r\n\r\nAlso, keep in mind that receipt delivery may be asynchronous or synchronous, depending on the Transparency Service implementation and Registry Operator registration policies.",
          "createdAt": "2024-12-31T18:00:57Z",
          "updatedAt": "2024-12-31T18:00:57Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Section 6.1 of the current editors draft shows the COSE structure for Receipts so this is covered",
          "createdAt": "2025-02-11T15:49:07Z",
          "updatedAt": "2025-02-11T15:49:07Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Move to close as above: This comment is against an outdated revision.",
          "createdAt": "2025-02-17T14:15:05Z",
          "updatedAt": "2025-02-17T14:15:05Z"
        }
      ]
    },
    {
      "number": 341,
      "id": "I_kwDOIvmHss6kykL7",
      "title": "Feedback: Update the TOC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/341",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [],
      "body": "From @mcr\r\n\r\nProposed ToC for \"architecture\" document.\r\nAny resemblance to RFC793 is purely intentional.\r\n\r\n0. Title:\r\n   Architectural Principals of a Trustworthy and Transparent Digital Supply Chain\r\n   (XXX well, I think this is still wrong)\r\n\r\n1.  INTRODUCTION\r\n* Motivation     - current 1.0 plus parts of current 4.0 Architecture Overview\r\n* Terminology    - current 2.0 plus 3.0 much of Transparency\r\n* Append-Only Logs - rest of 3.0, plus 4.1.0, and pieces of 6.2.1\r\n* Scope          - rest of 4.0 architecture, including diagram\r\n* About This Document - bits of 3.0, particularly \"The building blocks defined...\", should explain the rest of the document.\r\n* Interfaces     - pointers to SCAPI document, high-level of operational requirements\r\n* Operation      - chunks of high-level of Security Considerations 6.2.2\r\n                   (Receipts), 6.2.4 Agility, and Threat Model\r\n                   [Note: these are high-level requirements.  For instance, the statement in 6.2.3, \"All contents exchanged between actors is protected using secure authenticated channels (e.g., TLS) but may not exclude network\" would be included.\r\n\r\n2.  PHILOSOPHY ....................................................... 7\r\n\r\n* Elements of the Transparency Trust system. Details of 4.1.\r\n* Model of Operation - walk us through the *details* (with forward references to 3. FUNCTIONAL) about how a statement is created, what it contains, how it is submitted, and how it can be verified.\r\n* Signed Statements (4.2), but not 4.2.1.\r\n* Transparent Statements (first half of 4.4)\r\n* Validation (first half of 4.4.1)\r\n\r\n3.  FUNCTIONAL SPECIFICATION ........................................ 15\r\n\r\n* Introduction to Transparent Statements. (4.4), with the CDDL, and a bit deeper explanation.\r\n* Receipts CDDL.  Figure 7.\r\n* Replication and Consistency. (which bits of ACID apply, and in which way)\r\n\r\n4. Privacy Considerations\r\n5. Security Considerations\r\n* addressing threat model issues from 1.Operation\r\n",
      "createdAt": "2024-12-31T23:11:01Z",
      "updatedAt": "2025-02-11T15:53:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this proposal would be very helpful. I support it.",
          "createdAt": "2024-12-31T23:21:01Z",
          "updatedAt": "2024-12-31T23:21:01Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Suggesting we merge the open PRs, find a stability point, and then asses this to avoid merge hell.",
          "createdAt": "2024-12-31T23:47:55Z",
          "updatedAt": "2024-12-31T23:47:55Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "+1",
          "createdAt": "2025-01-01T12:53:39Z",
          "updatedAt": "2025-01-01T12:53:39Z"
        }
      ]
    },
    {
      "number": 342,
      "id": "I_kwDOIvmHss6n2OMs",
      "title": "Remove URNs",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/342",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "achamayou"
      ],
      "labels": [],
      "body": "Consistent with https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/50",
      "createdAt": "2025-01-28T15:23:42Z",
      "updatedAt": "2025-02-04T15:17:11Z",
      "closedAt": "2025-02-04T15:17:11Z",
      "comments": []
    },
    {
      "number": 347,
      "id": "I_kwDOIvmHss6qhFlF",
      "title": "Standardise on 'adjacent services'",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/347",
      "state": "CLOSED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "pending-close"
      ],
      "body": "Throughout the document we talk about things like storage and indexing services which are non-core to SCITT interoperability as, variously, 'auxiliary', 'ancillary', and 'adjacent'.\n\n'Adjacent' is best, so standardise on that throughout the document please.",
      "createdAt": "2025-02-18T15:27:01Z",
      "updatedAt": "2025-02-28T16:55:31Z",
      "closedAt": "2025-02-28T16:55:31Z",
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "```\n$ git log -1\ncommit 711bb2ccf3f470655f7ebd636b69af5725985d84 (HEAD -> main, upstream/main)\nMerge: 0239a90 6c898bc\nAuthor: Steve Lasker <stevenlasker@hotmail.com>\nDate:   Tue Feb 18 07:23:22 2025 -0800\n\n    Merge pull request #345 from achamayou/clarify_trust_anchors\n    \n    Clarify trust anchor wording\n$ grep -ic auxiliary draft-ietf-scitt-architecture.md\n0\n$ grep -ic ancillary draft-ietf-scitt-architecture.md\n0\n```\n\nI think we are ok, there is an \"Adjacent Services\" section which looks clear enough, and no reference to it anywhere else I can find.",
          "createdAt": "2025-02-21T10:44:25Z",
          "updatedAt": "2025-02-21T10:47:59Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> ```\n> $ grep -ic auxiliary draft-ietf-scitt-architecture.md\n> 0\n> $ grep -ic ancillary draft-ietf-scitt-architecture.md\n> 0\n> ```\n\nOh that's interesting, so it's only open PRs that are (re-)introducing this issue. OK let's just make sure we catch this in our PR reviews\n\n\n",
          "createdAt": "2025-02-21T14:16:21Z",
          "updatedAt": "2025-02-21T14:16:21Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "As far as I can tell, the open PRs don't mention those either, there were several mentions in the discussion for #348, but not in the diff itself, and #336 and #346 don't mention ancillary/auxiliary services.\n\nI do agree with using \"adjacent\" consistently, it sounds good to me, and it's good to make it explicit too, but I don't think any changes to the text are needed.",
          "createdAt": "2025-02-21T14:27:27Z",
          "updatedAt": "2025-02-21T14:27:27Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Move to close this, since the confusion is not in the main branch, only in candidate PRs which we can scrub prior to merge.",
          "createdAt": "2025-02-28T13:00:25Z",
          "updatedAt": "2025-02-28T13:00:25Z"
        }
      ]
    },
    {
      "number": 348,
      "id": "I_kwDOIvmHss6qhMv2",
      "title": "Revisit reference of Append-Only for VDS",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/348",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [
        "has-pr"
      ],
      "body": "On 2/18/25, while reviewing #355, we're re-evaluating clarifying details of Append-only log, and what's described, with deferring to the VDS implemented by the TS.\n",
      "createdAt": "2025-02-18T15:35:45Z",
      "updatedAt": "2025-02-28T16:47:18Z",
      "closedAt": "2025-02-28T16:47:18Z",
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "Is the change to replace all mention of \"Append-only Log\" with \"Verifiable Data Structure\"?",
          "createdAt": "2025-02-21T14:29:15Z",
          "updatedAt": "2025-02-21T14:29:15Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is the change to replace all mention of \"Append-only Log\" with \"Verifiable Data Structure\"?\n\nThat was the discussion on the call last week. We can discuss here if we think that's not a good plan, before opening a pr.",
          "createdAt": "2025-02-21T15:00:14Z",
          "updatedAt": "2025-02-21T15:00:14Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes I do remember the discussion, but I don't think we landed on a clear decision?\n\nI propose that:\n\n1. In https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md#terminology-terminology, we define \"Append-only log\" as a concept that can be implemented with a verifiable data structure. We already provide additional details under https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md#append-only-log, with links to the CT and COMETRE drafts.\n2. We remove the three mentions of \"ledger\" that somehow survive in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md#append-only-log\n3. We keep everything else the same. Append-only log is a good, understandable term that clearly expresses what's needed for Transparency. Verifiable Data Structure is not, it's unnecessarily open-ended for SCITT purposes.",
          "createdAt": "2025-02-21T15:41:49Z",
          "updatedAt": "2025-02-21T15:41:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @achamayou \nI agree with your position that VDS is accurate, but can lose the basics of the concepts the architecture is intended for.\nI'l make a PR for review.",
          "createdAt": "2025-02-21T15:48:11Z",
          "updatedAt": "2025-02-21T15:48:11Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Note: I opened #351.\nConsidering we often hear confusion whether the contents of the statement are recorded \"on the log\", as opposed to a Verifiable Data Structure is committed to the log, I did use Verifiable Data Structure throughout.  PTAL",
          "createdAt": "2025-02-24T18:53:54Z",
          "updatedAt": "2025-02-24T18:53:54Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "The verifiable data structure is something that is constructed *over* the log, isn't it? Like a Merkle Tree?\n\n> Verifiable Data Structure (VDS):\n> A data structure which supports one or more Proof Types. This property is conceptually similar to \"alg\" (1), it described an algorithm used to maintain the verifiable data structure, for example a binary merkle tree algorithm.\n\nIt's never committed \"to\" the log itself, it's calculated *from* the entries that form the log.",
          "createdAt": "2025-02-24T20:19:35Z",
          "updatedAt": "2025-02-24T20:19:35Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "This is certainly not a good plan, Append ONLY is the fundamental characteristic on which Verifiable Data structures are built.\n\nNot any VERIFIABLE DATA STRUCTURE can be used (killing/hiding the property of Append ONLY ) , will kill the transparency systems!",
          "createdAt": "2025-02-25T09:44:33Z",
          "updatedAt": "2025-02-25T09:44:33Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Logs which support consistency proofs can show append only. That property is provided by the VDS. If append only is fundamental for the arch to be useful why are consistency proofs optional ? That suggests we need a requirement on the VDS that it at least be able to demonstrate append only",
          "createdAt": "2025-02-25T11:26:55Z",
          "updatedAt": "2025-02-25T11:26:55Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@robinbryce I think, the fundamental pillar on which Transparency Service is built is Append ONLY Characteristic (which leads to non repudiation) which is the base on which this architecture is built. We do not want to paint it as Verifiable Data Structure, as it I checked everywhere, A VDS is simply a data base which allows users to cryptographically verify entries, but does not talk about this fundamental characteristic!",
          "createdAt": "2025-02-26T09:57:12Z",
          "updatedAt": "2025-02-26T09:57:12Z"
        }
      ]
    },
    {
      "number": 352,
      "id": "I_kwDOIvmHss6sHQUV",
      "title": "Append-only VDS?",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/352",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Append-only VDS?\r\n\r\n_Originally posted by @henkbirkholz in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/351#discussion_r1975681065_\r\n            ",
      "createdAt": "2025-02-28T16:25:11Z",
      "updatedAt": "2025-03-03T18:30:13Z",
      "closedAt": "2025-03-03T18:30:13Z",
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "There are still five mentions of Append-only Log in the draft, according to [a quick search](https://github.com/search?q=repo%3Aietf-wg-scitt%2Fdraft-ietf-scitt-architecture+%22Append-only+Log%22&type=code).\n\nAs discussed, if defining a 5-word Term is a big problem, I think we could:\n\n1. Talk inline about \"the sequence of Signed Statements recorded in the VDS\", it's a little heavy but I think it's sufficient for what we want to say.\n2. Add a clarification that SCITT requires an append-only VDS specifically\n\nDoes that help?",
          "createdAt": "2025-02-28T18:04:39Z",
          "updatedAt": "2025-02-28T18:04:39Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #353, I believe.",
          "createdAt": "2025-03-03T11:19:42Z",
          "updatedAt": "2025-03-03T11:19:42Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOIvmHss5KC23t",
      "title": "Disambiguate registration policy definitions",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/1",
      "state": "MERGED",
      "author": "letmaik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is a duplicate of what had been already merged in the old repository:\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/41\r\n\r\nOriginal author: @darracott",
      "createdAt": "2023-02-15T15:29:48Z",
      "updatedAt": "2023-02-19T21:26:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "757b536c87c0425ce38e4bb034a5239f588e615a",
      "headRepository": "letmaik/draft-ietf-scitt-architecture",
      "headRefName": "letmaik/pr-41",
      "headRefOid": "84c06bdb626eef5ebccfd36c7b8dabe036b69b82",
      "closedAt": "2023-02-19T21:26:49Z",
      "mergedAt": "2023-02-19T21:26:49Z",
      "mergedBy": "letmaik",
      "mergeCommit": {
        "oid": "3fcf61106c2499fbcf3caf2ef14a470be4c7aa8e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOIvmHss5KC5OO",
      "title": "Nits from WG Adoption review",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/2",
      "state": "MERGED",
      "author": "letmaik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is a duplicate of what had been already merged in the old repository:\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/39\r\n\r\nOriginal author: @cabo",
      "createdAt": "2023-02-15T15:36:07Z",
      "updatedAt": "2023-02-19T21:27:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "757b536c87c0425ce38e4bb034a5239f588e615a",
      "headRepository": "letmaik/draft-ietf-scitt-architecture",
      "headRefName": "letmaik/pr-39",
      "headRefOid": "a2565ffbf0aa0c93e97773497fcffd6937594a37",
      "closedAt": "2023-02-19T21:27:33Z",
      "mergedAt": "2023-02-19T21:27:33Z",
      "mergedBy": "letmaik",
      "mergeCommit": {
        "oid": "c8ad68740476eaf24c663147fd349b16bfa4f4d2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOIvmHss5KNOpx",
      "title": "Cleanup of REST API",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/3",
      "state": "MERGED",
      "author": "letmaik",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is a duplicate of what had already been reviewed in the old repository:\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-architecture/pull/44\r\n",
      "createdAt": "2023-02-17T10:32:25Z",
      "updatedAt": "2023-02-22T14:33:57Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c8ad68740476eaf24c663147fd349b16bfa4f4d2",
      "headRepository": "letmaik/draft-ietf-scitt-architecture",
      "headRefName": "letmaik/rest-api",
      "headRefOid": "e3260b92996cb7a9abe7401fc2c530ea6c495e37",
      "closedAt": "2023-02-22T14:33:53Z",
      "mergedAt": "2023-02-22T14:33:53Z",
      "mergedBy": "letmaik",
      "mergeCommit": {
        "oid": "2056dc9704ef7cad925f51c3c82719a71effd962"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@letmaik I am reviewing it now!",
          "createdAt": "2023-02-22T11:52:18Z",
          "updatedAt": "2023-02-22T11:52:18Z"
        },
        {
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@yogeshbdeshpande Thanks for the review. I addressed your comments, please approve if you think it's good to go.",
          "createdAt": "2023-02-22T12:55:28Z",
          "updatedAt": "2023-02-22T12:55:28Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@letmaik DONE!",
          "createdAt": "2023-02-22T12:56:27Z",
          "updatedAt": "2023-02-22T12:56:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5NrBIb",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "LGTM, thanks for addressing my API concerns from the previous round.\r\n\r\nI have left a couple of purely editorial comments.",
          "createdAt": "2023-02-17T10:33:54Z",
          "updatedAt": "2023-02-17T10:53:37Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIf the transparency service cannot process a client's request, it MUST return an HTTP 4xx or 5xx status code, and the body SHOULD be a JSON problem details object ({{RFC7807}}) containing:\r\n```",
              "createdAt": "2023-02-17T10:33:54Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            },
            {
              "originalPosition": 17,
              "body": "the new URN namespace needs to be registered.  We need to a sub-section in the IANA considerations like this:\r\n```\r\n## URN Sub-namespace for SCITT (urn:ietf:params:scitt)\r\n\r\nIANA is requested to register the URN sub-namespace `urn:ietf:params:scitt`\r\nin the \"IETF URN Sub-namespace for Registered Protocol Parameter Identifiers\"\r\nregistry {{!IANA.params}}, following the template in {{!RFC3553}}:\r\n\r\n   Registry name:  scitt\r\n\r\n   Specification:  [RFCthis]\r\n\r\n   Repository:  http://www.iana.org/assignments/scitt\r\n\r\n   Index value:  No transformation needed.\r\n```",
              "createdAt": "2023-02-17T10:47:26Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            },
            {
              "originalPosition": 117,
              "body": "looks like a leftover?",
              "createdAt": "2023-02-17T10:49:00Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            },
            {
              "originalPosition": 199,
              "body": "_\"[...] see TBD\"_ ?",
              "createdAt": "2023-02-17T10:51:37Z",
              "updatedAt": "2023-02-17T10:53:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Nrvb_",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-17T12:07:22Z",
          "updatedAt": "2023-02-17T12:07:23Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "I added the reference to the receipts I-D.",
              "createdAt": "2023-02-17T12:07:22Z",
              "updatedAt": "2023-02-17T12:07:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Nrvou",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-17T12:07:45Z",
          "updatedAt": "2023-02-17T12:07:46Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "Not really, but I made it more clear: \"- [TODO]: more error codes to be defined\"",
              "createdAt": "2023-02-17T12:07:45Z",
              "updatedAt": "2023-02-17T12:07:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5NrvrM",
          "commit": {
            "abbreviatedOid": "b81183f"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-17T12:07:50Z",
          "updatedAt": "2023-02-17T12:07:50Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Added.",
              "createdAt": "2023-02-17T12:07:50Z",
              "updatedAt": "2023-02-17T12:07:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Nr4m6",
          "commit": {
            "abbreviatedOid": "df11553"
          },
          "author": "thomas-fossati",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "\ud83d\udea2 it\r\n\r\nI think eventually the API stuff should be moved into its own \"SCITT API\" document.",
          "createdAt": "2023-02-17T12:26:42Z",
          "updatedAt": "2023-02-17T12:26:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5OBxzV",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:55:38Z",
          "updatedAt": "2023-02-22T11:55:38Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Perhaps add a github issue to define more error codes and refer it here!",
              "createdAt": "2023-02-22T11:55:38Z",
              "updatedAt": "2023-02-22T11:55:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OByN9",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:56:48Z",
          "updatedAt": "2023-02-22T11:56:49Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nIf 202 is returned, then clients should wait until registration succeeded or failed, by polling the registration status using the Operation ID returned in the response. Clients should always obtain a receipt as a proof that registration has succeeded.\r\n```",
              "createdAt": "2023-02-22T11:56:48Z",
              "updatedAt": "2023-02-22T11:56:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OBy7q",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:58:44Z",
          "updatedAt": "2023-02-22T11:58:44Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "On line 609, did you mean to say:\r\nUpon polling, client will always get a Receipt as a proof if registration has succeeded.",
              "createdAt": "2023-02-22T11:58:44Z",
              "updatedAt": "2023-02-22T11:58:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OBzko",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:00:28Z",
          "updatedAt": "2023-02-22T12:00:29Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Should we not return 202 here if the Registration is running ?",
              "createdAt": "2023-02-22T12:00:29Z",
              "updatedAt": "2023-02-22T12:00:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OB1Mb",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, the API set looks quite tidy, left few minor .nits, please check and incorporate them.\r\n",
          "createdAt": "2023-02-22T12:04:52Z",
          "updatedAt": "2023-02-22T12:04:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5OCBsY",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:39:37Z",
          "updatedAt": "2023-02-22T12:39:38Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "No, status codes are always relative to the given resource. Here, 200 means the server was able to return the representation of the operation status. If it returned 202, it would mean that the server can't currently report on the status but will be able soon, which is not the intent here.",
              "createdAt": "2023-02-22T12:39:37Z",
              "updatedAt": "2023-02-22T12:39:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OCGyQ",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:52:51Z",
          "updatedAt": "2023-02-22T12:52:52Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Done.",
              "createdAt": "2023-02-22T12:52:51Z",
              "updatedAt": "2023-02-22T12:52:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OCHY3",
          "commit": {
            "abbreviatedOid": "fa3c51b"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T12:54:29Z",
          "updatedAt": "2023-02-22T12:54:29Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "I think I prefer the current phrasing. It should be clear enough, saying essentially wait until it's done, then fetch the receipt to get a proof of registration.",
              "createdAt": "2023-02-22T12:54:29Z",
              "updatedAt": "2023-02-22T12:54:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OCIBL",
          "commit": {
            "abbreviatedOid": "e3260b9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!\r\n",
          "createdAt": "2023-02-22T12:56:06Z",
          "updatedAt": "2023-02-22T12:56:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOIvmHss5Kd623",
      "title": "Vast Terminology Overhaul",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/16",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "Fixes #15\r\n\r\n(to some extend), please see #15 and check the issues highlighted there as part of reviewing this PR.",
      "createdAt": "2023-02-21T23:04:47Z",
      "updatedAt": "2023-10-23T23:24:02Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2056dc9704ef7cad925f51c3c82719a71effd962",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "core-terms",
      "headRefOid": "67cbcd00b1ac346ebf8e27e3e831ac2b23f82156",
      "closedAt": "2023-03-09T15:44:09Z",
      "mergedAt": "2023-03-09T15:44:09Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz @fournet @letmaik \r\nAll claim terminology has been replaced with \"Signed Statement\" including the Architecture Diagram.\r\n\r\nPlease have a look!",
          "createdAt": "2023-02-22T18:51:07Z",
          "updatedAt": "2023-02-22T18:51:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @nedmsmith, @nealmcb, @OR13, @yogeshbdeshpande, @fournet, @letmaik, @kaywilliams, @raylutz and a very speshal thanks to @henkbirkholz for all feedback and suggestions. \r\nAs noted above, we needed to get this overhaul merged for smaller PRs, to meet the [IETF 116 Monday milestone](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/milestone/1)\r\n\r\nIf we've missed anything, please open an issue for discussion, or if it's easy, a small PR may be more efficient.",
          "createdAt": "2023-03-09T23:03:17Z",
          "updatedAt": "2023-03-09T23:03:17Z"
        },
        {
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "body": "Great work @SteveLasker! Above-and-beyond the call, to take so many of our frequently-off-topic responses and capture them in new issues.",
          "createdAt": "2023-03-10T00:12:22Z",
          "updatedAt": "2023-03-10T00:12:22Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @nealmcb, and thank you for all the great feedback. Unfortunately, I didn't see GitHub was nice enough to \"hide\" many of the outstanding items, so I guess there's more to capture... \ud83e\udd37\u200d\u2642\ufe0f ",
          "createdAt": "2023-03-10T00:55:36Z",
          "updatedAt": "2023-03-10T00:55:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5OAztQ",
          "commit": {
            "abbreviatedOid": "e2a25f0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T09:25:16Z",
          "updatedAt": "2023-02-22T09:25:16Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\n: the pre-condition enforced by the Transparency Service before registering a Signed Statement,\r\n```",
              "createdAt": "2023-02-22T09:25:16Z",
              "updatedAt": "2023-02-22T09:25:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OBtua",
          "commit": {
            "abbreviatedOid": "69371b9"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T11:43:45Z",
          "updatedAt": "2023-02-22T11:43:46Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nTransparent Statement:\r\n```",
              "createdAt": "2023-02-22T11:43:45Z",
              "updatedAt": "2023-02-22T11:43:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OFbDs",
          "commit": {
            "abbreviatedOid": "69371b9"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T19:37:06Z",
          "updatedAt": "2023-02-22T19:37:06Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "We have to check consistent use of Signed Statement vs. Transparent Statement.",
              "createdAt": "2023-02-22T19:37:06Z",
              "updatedAt": "2023-02-22T19:37:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OGPld",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "+1 to simplify a \"claim\" becomes \"statement\" and refer to statements that change \"state\" (#8)\r\n`Statement` --> `Signed Statment` --> `Transparent Statement`\r\n",
          "createdAt": "2023-02-22T21:23:50Z",
          "updatedAt": "2023-02-22T21:35:54Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "nit: case consistency on each bullet:\r\n\r\nr/I w/i",
              "createdAt": "2023-02-22T21:23:51Z",
              "updatedAt": "2023-02-22T21:35:54Z"
            },
            {
              "originalPosition": 41,
              "body": "+1 to the more expressive, expanded acronyms.\r\n\r\n>\"when was the Signed Statement about the Artifact registered in the Registry\" \r\n\r\nWhich term do we wish to settle on, and under what context? This is the question under #7 \r\nPersonally, I struggle with Registry as a generic term and Transparency Service, which I think confuses transparent with public. \r\nEither way, the use of registry and transparency service seem interchangeable here. Or, are we talking about different sub-components?\r\n\r\n",
              "createdAt": "2023-02-22T21:29:43Z",
              "updatedAt": "2023-02-22T21:35:54Z"
            },
            {
              "originalPosition": 50,
              "body": "cater--> caters",
              "createdAt": "2023-02-22T21:33:05Z",
              "updatedAt": "2023-02-22T21:35:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OGYs7",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T21:40:46Z",
          "updatedAt": "2023-02-22T21:40:47Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "> ...independent third party such as a reviewer or an endorser.\r\n\r\nI can see statements being made that are \"negative\", meaning a security company makes a statement the artifact has many critical vulnerabilities and should be replaced with version:foo.\r\nDo we want to elaborate endorser to include opposed, or another term that reflects a negative statement? \r\nOr, do we want to generalize all statements, and leave it to the consumer and artifactType to define the schema of positive/negative?",
              "createdAt": "2023-02-22T21:40:47Z",
              "updatedAt": "2023-02-22T21:40:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5OGZF9",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-02-22T21:41:38Z",
          "updatedAt": "2023-02-22T21:41:38Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "> metadata and an Issuer's signature is added to a Statement via COSE envelope \r\n\r\nmetadata and an Issuer's signature is added to a Statement via _**a**_ COSE envelope ",
              "createdAt": "2023-02-22T21:41:38Z",
              "updatedAt": "2023-02-22T21:41:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5O0enJ",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Multiple comments ",
          "createdAt": "2023-03-02T18:17:52Z",
          "updatedAt": "2023-03-02T19:59:45Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "Why is this a SHOULD and not MUST?",
              "createdAt": "2023-03-02T18:17:53Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 355,
              "body": "how does the TS ensure determinism?",
              "createdAt": "2023-03-02T18:19:12Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 357,
              "body": "This requires more explanation. Sounds dubious.",
              "createdAt": "2023-03-02T18:20:20Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 360,
              "body": "It might be better to describe the properties of manifests that are desired instead of or in addition to simply requiring 'manifests' - which is ambiguous.",
              "createdAt": "2023-03-02T18:22:20Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 371,
              "body": "Why is this a SHOULD and not MUST? Otherwise it is an untrustworthy TS.",
              "createdAt": "2023-03-02T18:24:47Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 374,
              "body": "Some exemplary text describing what is meant by \"auxiliary governance\" would be helpful.",
              "createdAt": "2023-03-02T18:26:13Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 380,
              "body": "Why is this not a SHOULD instead of MAY? SHOULD implies the interfaces for performing reviews will be defined and implemented.",
              "createdAt": "2023-03-02T18:27:58Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 394,
              "body": "'consumer' might not be the best term. Does it mean ingress or someone engaging in commerce?",
              "createdAt": "2023-03-02T18:29:50Z",
              "updatedAt": "2023-03-02T19:59:45Z"
            },
            {
              "originalPosition": 455,
              "body": "Since the use of COSE is mandatory, shouldn't this be MUST?",
              "createdAt": "2023-03-02T18:34:24Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 467,
              "body": "This is a long sentence, maybe break it up into multiple 80 character lines?\r\nA policy could be 'unrecognized', 'unparsable', or 'not implemented'. Does 'unknown' imply all of these? ",
              "createdAt": "2023-03-02T18:37:28Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 510,
              "body": "break up long lines please.\r\nThis seems to hint that a TS MUST have ACID properties and that \"registered\" is code for a committed transaction. Maybe make the expected TS integrity requirements more  clear in terms of durability, 'commit' and 'rollback', referential integrity of \"registered\" statements as well as what constitutes a sound or safe state when working with a blockchain. ",
              "createdAt": "2023-03-02T18:43:25Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 519,
              "body": "Does this work if the TS cluster is behind a load balancer?",
              "createdAt": "2023-03-02T18:44:25Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 522,
              "body": "please break up long sentences into shorter lines.\r\n\r\nThe term 'local' is subjective and contextual. If used, it needs to be defined.",
              "createdAt": "2023-03-02T18:46:11Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 525,
              "body": "Ambiguously describes things that may or may not be relevant or important. Consider deleting this or rewriting to focus on what Verifier MUST / SHOULD do to establish sufficient trust to interoperate with a TS.",
              "createdAt": "2023-03-02T18:48:41Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 528,
              "body": "The different available options should be described.",
              "createdAt": "2023-03-02T18:49:22Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 540,
              "body": "If they have different governance, organization trust, and otherwise don't trust each other what is the basis for allowing them to interoperate? This seems very dubious and possibly should be called out as conditions for NOT interoperating.",
              "createdAt": "2023-03-02T18:51:50Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 544,
              "body": "What is the value of having multiple registrations other than for availability? A Verifiler or relying party may have policies for not trusting one or more of the selected TSs and therefore, registration at multiple is potentially dubious if the reason for not trusting is the TS is compromised or malicious etc. The justification for why this is being considered needs to be motivated better.",
              "createdAt": "2023-03-02T18:55:27Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 585,
              "body": "This seems to be stating that a TS is intended to be trusted to protect privacy on behalf of the user community. It would be better if the user community is allowed to apply their own privacy protections independent of the TS. This might be in the form of blinded values in a Signed Statement.",
              "createdAt": "2023-03-02T18:59:38Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 591,
              "body": "Use of 'trustworthy' seems overly ambiguous. Does it mean the contents of the Transparent Statement are opaque to the TS? Does that further imply the contents could be privacy protected in some way including encrypted? If the TS provides registration assurances but contents are allowed to be opaque. Then wouldn't it make more sense to call it a \"Registered Statement\" instead of a \"Transparent Statement\"?",
              "createdAt": "2023-03-02T19:04:02Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 595,
              "body": "This seems to be describing the legal liability of the TS. If so, does it really belong here? If not, what is it trying to describe?",
              "createdAt": "2023-03-02T19:05:40Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 598,
              "body": "The wording needs to clarify the difference between a purposefully opaque payload from a payload that is described by a well-known schema.",
              "createdAt": "2023-03-02T19:07:05Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 602,
              "body": "What threat does this normative requirement counter? Given keys are certified (X.509) or described by DID or other certification process. Does this requirement override these other forms of qualifiers on keys or is it just giving advice?",
              "createdAt": "2023-03-02T19:08:20Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 607,
              "body": "'malicious' and 'misbehaved' might be better words.",
              "createdAt": "2023-03-02T19:11:33Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 618,
              "body": "This contradicts statements about dissimilar TSs interoperating or working together in a trusted way. The use of trust anchors to validate key credentials implies trust. All of this can be compromised or is subject to malicious or improper behavior. It seems impossible to achieve both objectives at the same time. Some aspects of this document is overstated, but it isn't clear which part.",
              "createdAt": "2023-03-02T19:16:49Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 621,
              "body": "This seems to contradict line 651.",
              "createdAt": "2023-03-02T19:17:25Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 624,
              "body": "Maybe 'accountable' is the wrong word. If the user contributes a purposefully opaque statement, that shouldn't be considered form of unaccountability. It appears that opaque statements are expected by the SCITT architecture. Use of the term 'false assertion' with an expectation that SCITT treats assertions as opaque doesn't make sense and seems biased or judgmental. Maybe the paragraph should focus on what properties of transparency, or trust that SCITT provides and leave other things out of scope?",
              "createdAt": "2023-03-02T19:25:26Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 627,
              "body": "break this into several lines.",
              "createdAt": "2023-03-02T19:26:41Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 630,
              "body": "please break into multiple lines.\r\nIt isn't clear who's liability is being described.",
              "createdAt": "2023-03-02T19:28:51Z",
              "updatedAt": "2023-03-02T19:59:46Z"
            },
            {
              "originalPosition": 639,
              "body": "use of 'honest' seems out of place. Is this describing TS operational integrity requirements such as ACID?",
              "createdAt": "2023-03-02T19:31:01Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 646,
              "body": "Of course a compromised TS could do all sorts of malicious things. If the previous line / paragraph stated the 4 (or more?) bullet points below in terms of how a TS is supposed to behave. It might be easier to understand what requirements implementers must address in order to build a suitable TS?",
              "createdAt": "2023-03-02T19:33:47Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 653,
              "body": "This is confusing.",
              "createdAt": "2023-03-02T19:34:58Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 665,
              "body": "I don't think 'trust' is the right word. Availability is facilitated by networks and storage subsystems, but this paragraph doesn't explain how. If a deployment of SCITT utilizes a trusted network, the inclusion of SCITT doesn't superficially make the network untrusted. ",
              "createdAt": "2023-03-02T19:38:50Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 668,
              "body": "Auditing isn't normally regarded as a mechanism for establishing or ensuring availability. Should this be in a different section?",
              "createdAt": "2023-03-02T19:40:09Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 673,
              "body": "Availability strategies generally involve replication and redundancy techniques. This seems to contradict that. This is confusing as an availability strategy.",
              "createdAt": "2023-03-02T19:42:01Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 684,
              "body": "Maybe it would be better if the information owner is expected to apply privacy protections before contributing a Statement?",
              "createdAt": "2023-03-02T19:47:46Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 687,
              "body": "Is this describing a requirement on TSs, Issuers (users), or Verifiers? It's confusing.",
              "createdAt": "2023-03-02T19:49:17Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 701,
              "body": "It is unclear who 'we' is. - Possibly, \"the SCITT architecture\"?",
              "createdAt": "2023-03-02T19:50:53Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 710,
              "body": "An untrusted Client could obtain legitimate credentials and masquerade as a legitimate user only to perform a denial of service attack in the form of out of order registrations and the like. The SCITT architecture should have some mechanism for ensuring operational integrity despite having untrusted Clients or it should require Client trust and employ some form of vetting process to register, authenticate and authorize them.",
              "createdAt": "2023-03-02T19:55:37Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            },
            {
              "originalPosition": 718,
              "body": "It might scale better if the TSs request revocation status updates such as OCSP [RFC2560].",
              "createdAt": "2023-03-02T19:58:51Z",
              "updatedAt": "2023-03-02T19:59:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PAYsU",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T04:25:32Z",
          "updatedAt": "2023-03-06T04:25:32Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "> cannot delete or alter earlier Signed Statements about certain Artifacts\r\n\r\ndrop \"about certain Artifacts\". It makes it seem like they could delete or alter Signed Statements about certain *other* Artifacts. But they can't delete or alter any earlier Signed Statements about anything.\r\n\r\n\r\n\r\n",
              "createdAt": "2023-03-06T04:25:32Z",
              "updatedAt": "2023-03-06T04:25:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PAZyt",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T04:34:34Z",
          "updatedAt": "2023-03-06T04:34:34Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "The sentence *Unlike CT,...* takes away an important aspect of any transparency service, and negates the overall notion that we are trying to generalize CT.\r\n\r\nInstead, we should note that any given TS will be well served by having replicas and auditors which confirm that relying parties can choose any replica they want.",
              "createdAt": "2023-03-06T04:34:34Z",
              "updatedAt": "2023-03-06T04:34:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PAbsC",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T04:46:22Z",
          "updatedAt": "2023-03-06T04:46:22Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I'd take out \"need to\" in both definitions.\r\n\r\nFor the end of the second one I'd get rid of the tricky and unnecessary word *trust* by substituting this:\r\n=> that access, validate, and evaluate the reliability of authentic Statements",
              "createdAt": "2023-03-06T04:46:22Z",
              "updatedAt": "2023-03-06T04:46:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE3Mg",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:25:40Z",
          "updatedAt": "2023-03-06T16:25:41Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I don't love this language.\r\n\r\nI think notarizing applies to making a \"Signed Statement\" a \"Transparent Statement\"... but this sentence seems to imply notarization is part of the process of creating a \"Signed Statement\", which seems wrong.\r\n",
              "createdAt": "2023-03-06T16:25:40Z",
              "updatedAt": "2023-03-06T16:25:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE3Wa",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:26:02Z",
          "updatedAt": "2023-03-06T16:26:04Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nThe global interoperability enabled and guaranteed by the Transparency Services is enabled via core components (architectural constituents) that come with prescriptive requirements (that are typically hidden away from the user audience via APIs). The core components are based on the Concise Signing and Encryption standard specified in {{-COSE}}, which is used to sign released Statements about Artifacts and to build and maintain a Merkle tree that functions as an append-only Registry for corresponding Signed Statements.\r\n```",
              "createdAt": "2023-03-06T16:26:02Z",
              "updatedAt": "2023-03-06T16:26:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE3-n",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:27:07Z",
          "updatedAt": "2023-03-06T16:27:07Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "I think the concept of \"notarization\" needs to go here... or it needs to not be used anywhere.",
              "createdAt": "2023-03-06T16:27:07Z",
              "updatedAt": "2023-03-06T16:27:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE47V",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:28:34Z",
          "updatedAt": "2023-03-06T16:28:35Z",
          "comments": [
            {
              "originalPosition": 209,
              "body": "love these updates!",
              "createdAt": "2023-03-06T16:28:34Z",
              "updatedAt": "2023-03-06T16:28:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE5rk",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:29:40Z",
          "updatedAt": "2023-03-06T16:29:41Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "I suggest maybe not using the words \"DID Key Manifest\"... \r\n\r\nMaybe \"Public Key Identifier\" or \"VerificationMethod\".",
              "createdAt": "2023-03-06T16:29:40Z",
              "updatedAt": "2023-03-06T16:29:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE59s",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:30:02Z",
          "updatedAt": "2023-03-06T16:30:03Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "extra \"(decentralized)\" seems redundant.",
              "createdAt": "2023-03-06T16:30:03Z",
              "updatedAt": "2023-03-06T16:30:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE6LB",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:30:21Z",
          "updatedAt": "2023-03-06T16:30:22Z",
          "comments": [
            {
              "originalPosition": 208,
              "body": "```suggestion\r\n                    .----+----.  .----------.    Decentralized Identifier\r\n```",
              "createdAt": "2023-03-06T16:30:22Z",
              "updatedAt": "2023-03-06T16:30:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE6dX",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:30:47Z",
          "updatedAt": "2023-03-06T16:30:48Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "```suggestion\r\n                          '----. .----'            | Public Key Identifiers |\r\n```",
              "createdAt": "2023-03-06T16:30:48Z",
              "updatedAt": "2023-03-06T16:31:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PE6oB",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:31:03Z",
          "updatedAt": "2023-03-06T16:31:04Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "```suggestion\r\n                                |                  |   |\r\n```",
              "createdAt": "2023-03-06T16:31:03Z",
              "updatedAt": "2023-03-06T16:31:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFCwO",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:42:27Z",
          "updatedAt": "2023-03-06T16:42:27Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This PR intends to do three things (and is not complete in doing it yet):\r\n\r\n1. using Statement, Signed Statement & Transparent Statement\r\n2. expanding TS to Transparency Services\r\n3. updating Figure 1, aligning with 1. and 2.\r\n\r\nThe issues you raise are all valid, but I would like to get 1-3 done in this PR and get another one going for others (if possible).",
              "createdAt": "2023-03-06T16:42:27Z",
              "updatedAt": "2023-03-06T16:42:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFETZ",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:44:51Z",
          "updatedAt": "2023-03-06T16:44:51Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "@nealmcb, could you create a proposal (maybe in separate PR) after we merged this PR in?",
              "createdAt": "2023-03-06T16:44:51Z",
              "updatedAt": "2023-03-06T16:44:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFEfE",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:45:09Z",
          "updatedAt": "2023-03-06T16:45:10Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nThe Transparency Services specified in this architecture caters to two types of audiences:\r\n```",
              "createdAt": "2023-03-06T16:45:09Z",
              "updatedAt": "2023-03-06T16:45:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFHHX",
          "commit": {
            "abbreviatedOid": "81c750a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T16:49:12Z",
          "updatedAt": "2023-03-06T16:49:12Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\n: metadata and an Issuer's signature is added to a Statement via a COSE envelope by the Issuer to produce a Signed Statement.\r\n```",
              "createdAt": "2023-03-06T16:49:12Z",
              "updatedAt": "2023-03-06T16:49:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFZaK",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:19:13Z",
          "updatedAt": "2023-03-06T17:19:14Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "Re the discussion at the end of the call March 6, on the benefits of quickly merging this PR:\r\nThis is one of many examples (including ones I have made...) of a comment on the original document, not on the proposed change. Comments like this need to be resolved quickly, or kept alive somehow, via a new issue.\r\n\r\nIf we don't merge this PR quickly, we risk accumulating more of these comments which should really be issues.",
              "createdAt": "2023-03-06T17:19:13Z",
              "updatedAt": "2023-03-06T17:19:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFath",
          "commit": {
            "abbreviatedOid": "7d66813"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Massive PR, lots of comments from other reviewers, assuming they are addressed, I think it can be merged, I don't have any blocking feedback.",
          "createdAt": "2023-03-06T17:21:23Z",
          "updatedAt": "2023-03-06T17:21:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5PFb26",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:23:17Z",
          "updatedAt": "2023-03-06T17:23:18Z",
          "comments": [
            {
              "originalPosition": 455,
              "body": "Parenthetically, it might be helpful to point to a discussion of why COSE is mandatory. Does that choice preclude interoperability with Sigstore, which uses DSSE instead, I think?",
              "createdAt": "2023-03-06T17:23:17Z",
              "updatedAt": "2023-03-06T17:23:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFeZF",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:27:30Z",
          "updatedAt": "2023-03-06T17:27:30Z",
          "comments": [
            {
              "originalPosition": 540,
              "body": "Perhaps just taking out the always-overloaded term \"trust\" would help. In this context, it is easy to imagine a consumer choosing to rely on multiple transparency services which choose not to \"trust\" each other, based on quite distinct notions of trust relating to budget or jurisdictional issues.",
              "createdAt": "2023-03-06T17:27:30Z",
              "updatedAt": "2023-03-06T17:27:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PFfOJ",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-06T17:28:56Z",
          "updatedAt": "2023-03-06T18:06:57Z",
          "comments": [
            {
              "originalPosition": 544,
              "body": "They may have different accessibility policies - confidential vs public, or different performance characteristics (detailed internal view vs customer-facing view.",
              "createdAt": "2023-03-06T17:28:57Z",
              "updatedAt": "2023-03-06T18:06:57Z"
            },
            {
              "originalPosition": 618,
              "body": "This is just a statement of fact. Trust is in the eye of the beholder. Different relying parties will have different threat models and requirements for how they handle artifacts. Some TS will screw up and be compromised, and hopefully auditors will catch that.",
              "createdAt": "2023-03-06T17:39:27Z",
              "updatedAt": "2023-03-06T18:06:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNHZa",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:37:26Z",
          "updatedAt": "2023-03-07T15:37:27Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Tracked at #23 ",
              "createdAt": "2023-03-07T15:37:27Z",
              "updatedAt": "2023-03-07T15:37:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNI47",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:39:30Z",
          "updatedAt": "2023-03-07T15:39:30Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "Tracked at #24 ",
              "createdAt": "2023-03-07T15:39:30Z",
              "updatedAt": "2023-03-07T15:39:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNMJz",
          "commit": {
            "abbreviatedOid": "2897db5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:42:35Z",
          "updatedAt": "2023-03-07T15:42:36Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "Captured in #25 ",
              "createdAt": "2023-03-07T15:42:35Z",
              "updatedAt": "2023-03-07T15:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNMwX",
          "commit": {
            "abbreviatedOid": "2897db5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:43:20Z",
          "updatedAt": "2023-03-07T15:43:21Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "Captured in #25 ",
              "createdAt": "2023-03-07T15:43:21Z",
              "updatedAt": "2023-03-07T15:43:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNT-6",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T15:53:14Z",
          "updatedAt": "2023-03-07T15:53:15Z",
          "comments": [
            {
              "originalPosition": 467,
              "body": "Thanks @nedmsmith, we discussed on an editors call, and agreed to simplify content feedback to use sentence-based lines. And, we'll create a document for conventions for this org.",
              "createdAt": "2023-03-07T15:53:15Z",
              "updatedAt": "2023-03-07T15:53:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNjFc",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:15:03Z",
          "updatedAt": "2023-03-07T16:15:04Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Captured in #27 ",
              "createdAt": "2023-03-07T16:15:03Z",
              "updatedAt": "2023-03-07T16:15:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNl47",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:19:02Z",
          "updatedAt": "2023-03-07T16:19:03Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Captured in #28 ",
              "createdAt": "2023-03-07T16:19:02Z",
              "updatedAt": "2023-03-07T16:19:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNo5d",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:23:22Z",
          "updatedAt": "2023-03-07T16:23:22Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Captured in #29",
              "createdAt": "2023-03-07T16:23:22Z",
              "updatedAt": "2023-03-07T16:23:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PNpNS",
          "commit": {
            "abbreviatedOid": "3745801"
          },
          "author": "raylutz",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T16:23:50Z",
          "updatedAt": "2023-03-07T16:23:50Z",
          "comments": [
            {
              "originalPosition": 640,
              "body": "```suggestion\r\nVerifiers and Auditors need not have a previously established trust relationship with other actors. In particular, they cannot \"frame\" an Issuer or a Transparency Service for Signed Statements they did not issue or register.\r\n```",
              "createdAt": "2023-03-07T16:23:50Z",
              "updatedAt": "2023-03-07T16:23:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POLNx",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:13:45Z",
          "updatedAt": "2023-03-07T17:13:46Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "Captured in #30 ",
              "createdAt": "2023-03-07T17:13:45Z",
              "updatedAt": "2023-03-07T17:13:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POMR8",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:15:50Z",
          "updatedAt": "2023-03-07T17:15:51Z",
          "comments": [
            {
              "originalPosition": 627,
              "body": "Captured in #26 ",
              "createdAt": "2023-03-07T17:15:51Z",
              "updatedAt": "2023-03-07T17:15:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POMg4",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:16:09Z",
          "updatedAt": "2023-03-07T17:16:09Z",
          "comments": [
            {
              "originalPosition": 630,
              "body": "Line breaks captured in #26 \r\n@nedmsmith, the multiple \"hands\" could use some more tweaking. Please open a new issue or PR for further clarification on liability. ",
              "createdAt": "2023-03-07T17:16:09Z",
              "updatedAt": "2023-03-07T17:18:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POPAr",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:20:44Z",
          "updatedAt": "2023-03-07T17:20:44Z",
          "comments": [
            {
              "originalPosition": 640,
              "body": "Thanks, @raylutz, in the spirit of merging this doc, and creating new issues/PRs for additional changes, I'm resolving this one. I did think we were avoiding the reference to \"trust relationship\", but please open an issue/PR if you feel otherwise.",
              "createdAt": "2023-03-07T17:20:44Z",
              "updatedAt": "2023-03-07T17:20:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PORvQ",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:25:01Z",
          "updatedAt": "2023-03-07T17:25:02Z",
          "comments": [
            {
              "originalPosition": 467,
              "body": "Captured in #26 ",
              "createdAt": "2023-03-07T17:25:02Z",
              "updatedAt": "2023-03-07T17:25:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POSKT",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:26:02Z",
          "updatedAt": "2023-03-07T17:26:02Z",
          "comments": [
            {
              "originalPosition": 510,
              "body": "@nedmsmith, can you confirm #32 captures your need here? If not, can you please open a new issue/PR?",
              "createdAt": "2023-03-07T17:26:02Z",
              "updatedAt": "2023-03-07T17:26:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POTBT",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:28:07Z",
          "updatedAt": "2023-03-07T17:28:08Z",
          "comments": [
            {
              "originalPosition": 519,
              "body": "Captured in #33 ",
              "createdAt": "2023-03-07T17:28:07Z",
              "updatedAt": "2023-03-07T17:28:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POTxY",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:29:55Z",
          "updatedAt": "2023-03-07T17:29:56Z",
          "comments": [
            {
              "originalPosition": 522,
              "body": "Captured in #34 ",
              "createdAt": "2023-03-07T17:29:56Z",
              "updatedAt": "2023-03-07T17:29:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POWgn",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:34:11Z",
          "updatedAt": "2023-03-07T17:34:12Z",
          "comments": [
            {
              "originalPosition": 355,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #35 ",
              "createdAt": "2023-03-07T17:34:12Z",
              "updatedAt": "2023-03-07T17:34:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POXqx",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:36:14Z",
          "updatedAt": "2023-03-07T17:36:14Z",
          "comments": [
            {
              "originalPosition": 360,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #36 ",
              "createdAt": "2023-03-07T17:36:14Z",
              "updatedAt": "2023-03-07T17:36:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POZbY",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:39:56Z",
          "updatedAt": "2023-03-07T17:39:57Z",
          "comments": [
            {
              "originalPosition": 371,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #37 ",
              "createdAt": "2023-03-07T17:39:56Z",
              "updatedAt": "2023-03-07T17:39:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POZ7g",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:41:05Z",
          "updatedAt": "2023-03-07T17:41:05Z",
          "comments": [
            {
              "originalPosition": 374,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #36. \r\nIf you feel \"auxiliary governance\" should be tracked separately, please open a new issue/pr.",
              "createdAt": "2023-03-07T17:41:05Z",
              "updatedAt": "2023-03-07T17:41:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POaJ2",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:41:33Z",
          "updatedAt": "2023-03-07T17:41:34Z",
          "comments": [
            {
              "originalPosition": 380,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #36",
              "createdAt": "2023-03-07T17:41:33Z",
              "updatedAt": "2023-03-07T17:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POcF2",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:45:11Z",
          "updatedAt": "2023-03-07T17:45:11Z",
          "comments": [
            {
              "originalPosition": 357,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #38 ",
              "createdAt": "2023-03-07T17:45:11Z",
              "updatedAt": "2023-03-07T17:45:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POevA",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T17:50:53Z",
          "updatedAt": "2023-03-07T17:50:54Z",
          "comments": [
            {
              "originalPosition": 394,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #39 ",
              "createdAt": "2023-03-07T17:50:53Z",
              "updatedAt": "2023-03-07T17:50:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POltR",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:06:13Z",
          "updatedAt": "2023-03-07T18:06:13Z",
          "comments": [
            {
              "originalPosition": 455,
              "body": "Thanks, @nedmsmith, to make iterative progress, this has been captured in #40 \r\nThanks, @nealmcb. COSE is intrinsic to SCITT as an extensible means to capture headers and payload in a consistent/standards-based format. The evaluation was captured here: [Digital Artifact Signing Envelope Format Comparison](https://docs.google.com/document/d/18YVGA4mq45wfUkWrAqWkymzdHRcXxlwINKXnEp86L0w/edit#heading=h.3v6vw85pjg5e)\r\nAs a result, sigstore/rekor added support through a [draft](https://github.com/sigstore/rekor/pull/731) then [subsequent merged PR](https://github.com/sigstore/rekor/pull/867)",
              "createdAt": "2023-03-07T18:06:13Z",
              "updatedAt": "2023-03-07T18:06:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POnbK",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:10:54Z",
          "updatedAt": "2023-03-07T18:10:55Z",
          "comments": [
            {
              "originalPosition": 525,
              "body": "Thanks @nedmsmith, to make iterative progress, I believe this has been captured in #34. \r\nIf you consider an external validation (local), may wish to re-verify information the service ran through its registration policy, the term local may help.\r\nRegistration policies will change over time, which also need to be captured as statements. So, a consumer may wish to validate specific policies unique to its environment.\r\nPlease do open another issue/PR if you feel this needs further clarification.",
              "createdAt": "2023-03-07T18:10:54Z",
              "updatedAt": "2023-03-07T18:10:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POoge",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:13:31Z",
          "updatedAt": "2023-03-07T18:13:31Z",
          "comments": [
            {
              "originalPosition": 528,
              "body": "Thanks @nedmsmith, to make iterative progress, this has been captured in #41",
              "createdAt": "2023-03-07T18:13:31Z",
              "updatedAt": "2023-03-07T18:13:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POrhn",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:21:22Z",
          "updatedAt": "2023-03-07T18:21:23Z",
          "comments": [
            {
              "originalPosition": 540,
              "body": "Thanks @nedmsmith, @nealmcb: to make iterative progress, this has been captured in #42 ",
              "createdAt": "2023-03-07T18:21:22Z",
              "updatedAt": "2023-03-07T18:21:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POtn8",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:26:21Z",
          "updatedAt": "2023-03-07T18:26:21Z",
          "comments": [
            {
              "originalPosition": 544,
              "body": "Thanks @nedmsmith, there's been a few discussions around the need for multiple instances, operated by different entities for their specific purpose.  There's some more explanation here: https://scitt.io/supply-chain where a publisher and consumer will operate their own SCITT Transparency Service. Please open an issue if you feel we need further clarification on multiple instances, beyond the reliability/availability discussion. ",
              "createdAt": "2023-03-07T18:26:21Z",
              "updatedAt": "2023-03-07T18:26:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5POvTc",
          "commit": {
            "abbreviatedOid": "f499b2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-07T18:29:40Z",
          "updatedAt": "2023-03-07T18:29:41Z",
          "comments": [
            {
              "originalPosition": 585,
              "body": "Thanks @nedmsmith, this is meant to capture PII or other privacy information. I read it as: anything in a SCITT Transparency Service should not be considered private, so don't put private information in SCITT, particularly in plaintext. \r\n\r\nTo make iterative progress, please open an issue/pr if you feel this needs further clarification. ",
              "createdAt": "2023-03-07T18:29:40Z",
              "updatedAt": "2023-03-07T18:29:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PgQKJ",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T21:39:56Z",
          "updatedAt": "2023-03-09T21:39:57Z",
          "comments": [
            {
              "originalPosition": 684,
              "body": "See #45 ",
              "createdAt": "2023-03-09T21:39:56Z",
              "updatedAt": "2023-03-09T21:39:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PgZKI",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:12:23Z",
          "updatedAt": "2023-03-09T22:12:24Z",
          "comments": [
            {
              "originalPosition": 687,
              "body": "@nedmsmith, please see #51 to see if this clarifies things. If not, please open a new issue. ",
              "createdAt": "2023-03-09T22:12:23Z",
              "updatedAt": "2023-03-09T22:12:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PgalT",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:18:05Z",
          "updatedAt": "2023-03-09T22:18:06Z",
          "comments": [
            {
              "originalPosition": 701,
              "body": "@nedmsmith, thanks for identifying ambiguity. Please see #52, and open a new issue if that doesn't help.",
              "createdAt": "2023-03-09T22:18:05Z",
              "updatedAt": "2023-03-09T22:18:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pgidi",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:51:53Z",
          "updatedAt": "2023-03-09T22:51:53Z",
          "comments": [
            {
              "originalPosition": 710,
              "body": "Thanks @nedmsmith. The registration policy provides for a SCITT Transparency Service implementation to create various policies, including which identities, and or identity types are permitted. \r\nNote, there is a difference between a user that has RBAC writes to a ledger (Steve), and whether the signed statement from `the-ned-smith-project`, with an Issuer of `the-ned-smith-project` is accepted. \r\n\r\nThe first barrier is RBAC control. And implementations will have various DOS configurations. Do you think this should be captured in the SCITT architecture, or be part of an implementation?\r\n\r\nIf there's additional clarity needed, can you please open a new issue?",
              "createdAt": "2023-03-09T22:51:53Z",
              "updatedAt": "2023-03-09T22:51:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pgj6c",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-09T22:58:53Z",
          "updatedAt": "2023-03-09T22:58:54Z",
          "comments": [
            {
              "originalPosition": 718,
              "body": "Thanks @nedmsmith. This is a good clarification. See #55 ",
              "createdAt": "2023-03-09T22:58:53Z",
              "updatedAt": "2023-03-09T22:58:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PhG44",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T02:24:57Z",
          "updatedAt": "2023-03-10T02:24:57Z",
          "comments": [
            {
              "originalPosition": 591,
              "body": "Thanks @nedmsmith \r\nThere's a combination of goal and boundary. \r\nThe goal of SCITT is to provide verified registration, based on the identity and a registration policy. This is why you see the authors focus on the notary concept. The notary doesn't evaluate the validatiy of the document that's being notarized. Rather the notary evaluates the trustworthiness of the identities signing. It's up to a consumer to decide if the content represents the info they can act upon. However, if you can't trust the issuer, the content is no different than a piece of info found \"on the street\", or \"on the web\".\r\n\r\nThe boundary, is related to SCITT doesn't evaluate the content. \r\n\r\nFor the Registered vs. Transparent Statement, @kaywilliams did open #20, which was duped to #8\r\n\r\nFWIW, I do see the concern with calling everything \"transparent\", when the contents may be opaque. Lets see if we can continue the conversation in #8 regarding terminology. \r\n",
              "createdAt": "2023-03-10T02:24:57Z",
              "updatedAt": "2023-03-10T02:24:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PhHBM",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T02:25:52Z",
          "updatedAt": "2023-03-10T02:25:53Z",
          "comments": [
            {
              "originalPosition": 607,
              "body": "@nedmsmith, do you mind opening a PR as a suggestion?",
              "createdAt": "2023-03-10T02:25:52Z",
              "updatedAt": "2023-03-10T02:25:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PhHZs",
          "commit": {
            "abbreviatedOid": "5b497e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T02:28:33Z",
          "updatedAt": "2023-03-10T02:28:33Z",
          "comments": [
            {
              "originalPosition": 639,
              "body": "Thanks, @nedmsmith Please see #58 and feel free to open a PR for some discussion.",
              "createdAt": "2023-03-10T02:28:33Z",
              "updatedAt": "2023-03-10T02:28:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOIvmHss5LsXfz",
      "title": "Apply line wrapping at each sentance",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/43",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves issue #26",
      "createdAt": "2023-03-09T16:19:08Z",
      "updatedAt": "2023-03-09T16:28:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc",
      "headRepository": null,
      "headRefName": "issue-26",
      "headRefOid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc",
      "closedAt": "2023-03-09T16:28:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 44,
      "id": "PR_kwDOIvmHss5Lsek3",
      "title": "Apply line wrapping at each sentence",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/44",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #26 ",
      "createdAt": "2023-03-09T16:39:43Z",
      "updatedAt": "2023-03-09T19:07:13Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f1cbad3d7f035e1a2666130017b4cd520319b6cc",
      "headRepository": null,
      "headRefName": "line-wraps",
      "headRefOid": "9b8445f5d9082c122ce0e34cd95597f94606d8ce",
      "closedAt": "2023-03-09T19:04:18Z",
      "mergedAt": "2023-03-09T19:04:18Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "0e3785939f8110ac67c36ebcbca1f4fc3dba9286"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 47,
      "id": "PR_kwDOIvmHss5Lt3yP",
      "title": "Consolidate Log to Ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/47",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #46 ",
      "createdAt": "2023-03-09T21:12:47Z",
      "updatedAt": "2023-03-09T22:44:39Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "63f2a465b46ac3d2bc4cde1688b918ee0ce33f03",
      "headRepository": null,
      "headRefName": "issue-46",
      "headRefOid": "3de3fab4030585d2af27fda336b0c3cf7e08e417",
      "closedAt": "2023-03-09T22:32:23Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Replaced with #54 ",
          "createdAt": "2023-03-09T22:44:39Z",
          "updatedAt": "2023-03-09T22:44:39Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 48,
      "id": "PR_kwDOIvmHss5Lt5uM",
      "title": "Fix Terminology alpha ordering",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/48",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "No content changes. Fixes ordering after terminology renaming",
      "createdAt": "2023-03-09T21:21:37Z",
      "updatedAt": "2023-03-09T21:56:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0e3785939f8110ac67c36ebcbca1f4fc3dba9286",
      "headRepository": null,
      "headRefName": "terminology-ordering",
      "headRefOid": "9456f141418f75267757202b61ce643b82e23ae1",
      "closedAt": "2023-03-09T21:23:22Z",
      "mergedAt": "2023-03-09T21:23:22Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "63f2a465b46ac3d2bc4cde1688b918ee0ce33f03"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "With no content changes, build success, and to assure other PRs aren't blocked, I'm merging as editor.",
          "createdAt": "2023-03-09T21:23:10Z",
          "updatedAt": "2023-03-09T21:23:10Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 50,
      "id": "PR_kwDOIvmHss5LuBEQ",
      "title": "Spelling fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/50",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T21:56:01Z",
      "updatedAt": "2023-03-09T22:10:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "63f2a465b46ac3d2bc4cde1688b918ee0ce33f03",
      "headRepository": null,
      "headRefName": "nits",
      "headRefOid": "8c5283e7f1dd1ba48cd67e7186a61e99c9ff9cf5",
      "closedAt": "2023-03-09T21:56:57Z",
      "mergedAt": "2023-03-09T21:56:57Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0b8a9b6ed17339467498c3fe436f0715395dc9b5"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "With no content changes (beyond spelling), build success, and to assure other PRs aren't blocked, I'm merging as editor.",
          "createdAt": "2023-03-09T21:56:49Z",
          "updatedAt": "2023-03-09T21:56:49Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "+1",
          "createdAt": "2023-03-09T22:10:00Z",
          "updatedAt": "2023-03-09T22:10:00Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 51,
      "id": "PR_kwDOIvmHss5LuFC-",
      "title": "Clarify PII info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/51",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T22:11:56Z",
      "updatedAt": "2023-03-09T22:40:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0b8a9b6ed17339467498c3fe436f0715395dc9b5",
      "headRepository": null,
      "headRefName": "pii-info",
      "headRefOid": "dc95a996220afb5be6c11791446094b48073e286",
      "closedAt": "2023-03-09T22:32:24Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Replaced with #53",
          "createdAt": "2023-03-09T22:40:53Z",
          "updatedAt": "2023-03-09T22:40:53Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 52,
      "id": "PR_kwDOIvmHss5LuGIJ",
      "title": "Clarify use of we",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/52",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T22:17:15Z",
      "updatedAt": "2023-03-09T22:31:59Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0b8a9b6ed17339467498c3fe436f0715395dc9b5",
      "headRepository": null,
      "headRefName": "clarify-we",
      "headRefOid": "5a1a1b454586cbecfdc8ad6bd65406bab2eb5580",
      "closedAt": "2023-03-09T22:21:08Z",
      "mergedAt": "2023-03-09T22:21:08Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "44649625141c8f13140deb2896a145172001d3d2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Pga8r",
          "commit": {
            "abbreviatedOid": "5a1a1b4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "better",
          "createdAt": "2023-03-09T22:19:43Z",
          "updatedAt": "2023-03-09T22:19:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOIvmHss5LuKwG",
      "title": "Clarify PII info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/53",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-09T22:40:38Z",
      "updatedAt": "2023-05-02T14:19:29Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "44649625141c8f13140deb2896a145172001d3d2",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "pii-info",
      "headRefOid": "d481f03e920f144cbdc04590125a3bca6d72e9de",
      "closedAt": "2023-05-02T14:19:28Z",
      "mergedAt": "2023-05-02T14:19:28Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "e20a2aacbdb9062f9ffc862b3b5de9db21376f88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5PkMdz",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T13:43:28Z",
          "updatedAt": "2023-03-10T13:43:29Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "There are cases where pii is exactly the information that we want to include and verify in the ledger, for example in genealogical applications. So I would say `issuers should not unnecessarily include` pii as clear text.",
              "createdAt": "2023-03-10T13:43:28Z",
              "updatedAt": "2023-03-10T13:43:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PtdgU",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T15:14:04Z",
          "updatedAt": "2023-03-13T15:14:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nA collection of Transparent Statements must not leak information about the contents of other Transparent Statements registered on the Transparency Service.\r\n```",
              "createdAt": "2023-03-13T15:14:04Z",
              "updatedAt": "2023-03-13T15:14:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Ptf_O",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T15:18:29Z",
          "updatedAt": "2023-03-13T15:18:30Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "We should leave this to a generic statement, like as much as possible PII as clear statements should be avoided (unless the use case demands it).",
              "createdAt": "2023-03-13T15:18:29Z",
              "updatedAt": "2023-03-13T15:18:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5PthH1",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Left few comments, kindly absorb and move on.\r\n\r\nI have approved it now!",
          "createdAt": "2023-03-13T15:20:36Z",
          "updatedAt": "2023-03-13T15:20:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Q8Lvy",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-26T06:27:30Z",
          "updatedAt": "2023-03-26T06:27:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5SOB9y",
          "commit": {
            "abbreviatedOid": "cd96de3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-11T14:31:25Z",
          "updatedAt": "2023-04-11T14:31:26Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Concerns around the term PII, as its definition is inconsistent across various governing bodies.\r\nShould we:\r\n- use a more generic reference for the user to be aware of the type of confidential materials?\r\n- use PII as a bucket, that can be interpreted by the user, for the scenario?\r\n\r\nA payload can contain:\r\n- clear text - transparent\r\n- opaque, as they may be encrypted\r\n- a link to an external service/storage \r\n",
              "createdAt": "2023-04-11T14:31:25Z",
              "updatedAt": "2023-04-11T14:31:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOIvmHss5LuLZc",
      "title": "Consolidate Log to Ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/54",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #46 ",
      "createdAt": "2023-03-09T22:44:28Z",
      "updatedAt": "2023-05-01T23:58:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "44649625141c8f13140deb2896a145172001d3d2",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "issue-46",
      "headRefOid": "3b558594b57d3134cc7ecb89a2a6aa61e6e59939",
      "closedAt": "2023-05-01T23:58:06Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker I think way back we all agreed not to use Ledger as a term in the Architecture document.\r\n\r\nNot sure why we are bringing it up here again ?",
          "createdAt": "2023-03-10T09:27:21Z",
          "updatedAt": "2023-03-10T09:27:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker to reverse log and ledger",
          "createdAt": "2023-04-11T14:33:04Z",
          "updatedAt": "2023-04-11T14:33:04Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, in lieu of #60 ",
          "createdAt": "2023-05-01T23:58:06Z",
          "updatedAt": "2023-05-01T23:58:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Q8Lrw",
          "commit": {
            "abbreviatedOid": "3b55859"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-26T06:25:37Z",
          "updatedAt": "2023-03-26T06:25:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOIvmHss5LuTYp",
      "title": "Clarify COSE as MUST",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/56",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #40 \r\n\r\n@nedmsmith, PTAL",
      "createdAt": "2023-03-09T23:20:49Z",
      "updatedAt": "2023-03-10T10:19:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "44649625141c8f13140deb2896a145172001d3d2",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "issue-40",
      "headRefOid": "8d6eb1d686a260982e9c0bb3b6b86cbd22844e7b",
      "closedAt": "2023-03-10T10:19:23Z",
      "mergedAt": "2023-03-10T10:19:23Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "cab90cc1fb43a34c7b42bfa78b1ec79401a44125"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Pg4MA",
          "commit": {
            "abbreviatedOid": "8d6eb1d"
          },
          "author": "nealmcb",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "> Once all the Envelope headers are set, an Issuer MUST use a standard COSE implementation to produce an appropriately serialized Signed Statement\r\n\r\nIt would seem more appropriate to just say `MUST produce an appropriately serialized COSE-compliant Signed Statement`, rather than introduce the notion of a \"standard COSE implementation\". The latter would seem to involve a need to have a certification program for COSE implementations or something unnecessarily involved like that.\r\n\r\n> (the SCITT tag of `COSE_Sign1_Tagged` is outside the scope of COSE, and used to indicate that a signed object is a Signed Statement).\r\n\r\nI don't follow the implications of this. Can it be spelled out some more?\r\n\r\nI'll also note #57",
          "createdAt": "2023-03-10T00:48:26Z",
          "updatedAt": "2023-03-10T00:48:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Pi1OA",
          "commit": {
            "abbreviatedOid": "8d6eb1d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-03-10T10:19:16Z",
          "updatedAt": "2023-03-10T10:19:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOIvmHss5Lyxv8",
      "title": "Clarify notarization function",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/59",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-10T18:57:09Z",
      "updatedAt": "2023-05-02T14:30:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cab90cc1fb43a34c7b42bfa78b1ec79401a44125",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-23",
      "headRefOid": "77985b917c5c02a4ba17fe182ffb4c29653a47db",
      "closedAt": "2023-05-02T14:30:41Z",
      "mergedAt": "2023-05-02T14:30:41Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "66506ac9e7400a42405e8b24904d7594c38d789b"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker Incorporated Review Comments!",
          "createdAt": "2023-03-13T15:40:39Z",
          "updatedAt": "2023-03-13T15:40:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @yogeshbdeshpande \r\nlets see if we can agree on append-only log|registry today so we can adapt and merge. ",
          "createdAt": "2023-03-13T16:35:24Z",
          "updatedAt": "2023-03-13T16:35:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "For the sake of clarity, suggesting \"append only log\"",
          "createdAt": "2023-04-11T14:36:01Z",
          "updatedAt": "2023-04-11T14:36:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5PmXUV",
          "commit": {
            "abbreviatedOid": "f4ebfa9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T18:58:02Z",
          "updatedAt": "2023-03-10T18:58:03Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe issuer of a Signed Statement should be authenticated and trusted according to the registration policy of the transparency service.\r\n```",
              "createdAt": "2023-03-10T18:58:02Z",
              "updatedAt": "2023-03-10T18:58:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pmm24",
          "commit": {
            "abbreviatedOid": "f3a8b2d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-10T19:45:29Z",
          "updatedAt": "2023-03-10T19:45:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "can we remove \"believable\" as it opens a bunch of questions for believable by whom and such. \r\n```suggestion\r\nIf trust can be put into the operations that record Signed Statements in a secure, append-only Registry via online operations, the same trust can be put into a corresponding Receipt that is the resulting documentation (i.e transparent signed statement, via an endorsement from a notarization function) issued by the Transparency Services and that can be validated in offline operations.\r\n```",
              "createdAt": "2023-03-10T19:45:29Z",
              "updatedAt": "2023-03-10T19:45:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Pthgr",
          "commit": {
            "abbreviatedOid": "f3a8b2d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-13T15:21:22Z",
          "updatedAt": "2023-03-13T15:21:22Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@SteveLasker Agree you have a valid point, I will change this!",
              "createdAt": "2023-03-13T15:21:22Z",
              "updatedAt": "2023-03-13T15:21:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8Lq8",
          "commit": {
            "abbreviatedOid": "3869b76"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-26T06:24:59Z",
          "updatedAt": "2023-03-26T06:24:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5T7_Ro",
          "commit": {
            "abbreviatedOid": "3869b76"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-01T23:55:27Z",
          "updatedAt": "2023-05-01T23:55:38Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Nit for consistency:\r\n> append-only Registry \r\n\r\nAppend-only Log ",
              "createdAt": "2023-05-01T23:55:27Z",
              "updatedAt": "2023-05-01T23:55:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_vpi",
          "commit": {
            "abbreviatedOid": "3869b76"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:23:41Z",
          "updatedAt": "2023-05-02T14:23:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nIf trust can be put into the operations that record Signed Statements in a secure, append-only log via online operations, the same trust can be put into a corresponding Receipt that is the resulting documentation (i.e transparent signed statement, via an endorsement from a notarization\r\n```",
              "createdAt": "2023-05-02T14:23:41Z",
              "updatedAt": "2023-05-02T14:23:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_yJF",
          "commit": {
            "abbreviatedOid": "58c3f74"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:26:20Z",
          "updatedAt": "2023-05-02T14:26:21Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nIf trust can be put into the operations that record Signed Statements in a secure, append-only log via online operations, the same trust can be put into the resulting transparent statement,\r\n```",
              "createdAt": "2023-05-02T14:26:20Z",
              "updatedAt": "2023-05-02T14:26:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_y8q",
          "commit": {
            "abbreviatedOid": "58c3f74"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:26:51Z",
          "updatedAt": "2023-05-02T14:26:52Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe issuer of a Signed Statement should be authenticated and authorized according to the registration policy of the transparency service.\r\n```",
              "createdAt": "2023-05-02T14:26:51Z",
              "updatedAt": "2023-05-02T14:26:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_0UP",
          "commit": {
            "abbreviatedOid": "53de12b"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:29:15Z",
          "updatedAt": "2023-05-02T14:29:15Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nissued by the Transparency Services and that can be validated in offline operations.\r\n```",
              "createdAt": "2023-05-02T14:29:15Z",
              "updatedAt": "2023-05-02T14:29:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_03t",
          "commit": {
            "abbreviatedOid": "77985b9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-05-02T14:30:20Z",
          "updatedAt": "2023-05-02T14:30:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOIvmHss5L1wN9",
      "title": "Consistency fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/60",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A scan of the document to align terminology consistency.\r\n\r\nThe changes account for:\r\n- Registry and Transparency Service being used interchangeably.\r\n- Log and Ledger being used interchangeably.\r\n\r\nFor the purpose of this PR:\r\n\r\n- **append-only Log** has been replaced with **append-only Ledger**. **Reasonsing:** As we're focusing on a Transparency Service verifying the identity of the issuer, this aligns with the Notary concept. A Notary writes entries to a Ledger. This also leaves the term Log available for diagnostics logs used to troubleshoot a Transparency Service.\r\n- **Transparency Service**: An entity operating an instance of this specification. Personally, I struggle as \"Transparent\" suggests everything is visible and public. We later discuss Opaque statements being placed in the Transparency Service. My personal suggestion is to call it a \"SCITT Registry\" and we leave the terms Transparent and Opaque to the types of payloads placed in the Statement.\r\n\r\nI've only completed to line 141, with an edit to terminology.  I'll try pickup later today.\r\nI've created this PR under a `consistency-fixes` branch here, so others can also make proposed changes.\r\n",
      "createdAt": "2023-03-12T17:16:50Z",
      "updatedAt": "2023-10-23T23:24:05Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e835300b89a744b909f81eb46035bf119ff4fb15",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "consistency-fixes",
      "headRefOid": "888fc609259f7ed7a261a9c436dd8cedb5bf155d",
      "closedAt": "2023-06-13T14:07:54Z",
      "mergedAt": "2023-06-13T14:07:54Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "be2b399f23617dd5a231aa8380579ea69c6de963"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker , I think, we are going in circles here.\r\n\r\nWe agreed we will use SCITT Registry and where applicable, an append only log and not use the term ledger, consistently throughout the document.\r\n\r\nThis was agreed between all the Architecture authors in consensus during the Monday meeting.\r\n\r\nRequest please do not push more PR's with Ledger terminology.\r\n\r\nI would request please we stick to the same concept now also ",
          "createdAt": "2023-03-13T09:33:42Z",
          "updatedAt": "2023-03-13T09:33:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @yogeshbdeshpande,\r\nI hadn\u2019t seen the note. \r\nThe doc currently uses several terms interchangeably. \r\n- append-only log is fine over ledger as a notary writes to a log\r\n- - we\u2019ve consolidated on statement, signed statement and transparent statement \u2705 :\r\n- but what are we using to refer to an instance of SCITT? Transparency Service or Registry?",
          "createdAt": "2023-03-13T14:46:50Z",
          "updatedAt": "2023-03-13T14:47:26Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> * instance of SCITT\r\n\r\nInstance of SCITT is a Transparency Service. It is a logical layer, which has Registration Functions, Notary Function baked into it.\r\n\r\nRegistry is a synonym to an \"Append Only Log\"",
          "createdAt": "2023-03-13T15:04:18Z",
          "updatedAt": "2023-03-13T15:04:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we capture the decisions in these issues:\r\n- [Terminology: Registry & Transparency Service #7](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/7)\r\n- [Converge Claim and Statement #8](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/8)\r\n- [Change term artifact #9](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/9)",
          "createdAt": "2023-03-13T15:59:19Z",
          "updatedAt": "2023-03-13T15:59:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker to replace \"append-only registry\" with \"append-only log\"",
          "createdAt": "2023-04-11T14:38:05Z",
          "updatedAt": "2023-04-11T14:38:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @OR13 , @mprorock, @yogeshbdeshpande for the feedback. Can you please take a look and confirm the latest changes meet the outcome we agreed to?",
          "createdAt": "2023-05-01T21:07:48Z",
          "updatedAt": "2023-05-01T21:07:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Q8LSO",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:13:09Z",
          "updatedAt": "2023-03-26T06:13:09Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nProducing a Transparent Statement is also referred to as a form of notarization.\r\n```",
              "createdAt": "2023-03-26T06:13:09Z",
              "updatedAt": "2023-03-26T06:13:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LVH",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:15:30Z",
          "updatedAt": "2023-03-26T06:15:31Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nThe core components are based on the Concise Signing and Encryption standard specified in {{-COSE}}, which is used to produce Signed Statements about Artifacts and to build and maintain a Merkle tree that functions as an append-only Ledger for corresponding Signed Statements.\r\n```",
              "createdAt": "2023-03-26T06:15:30Z",
              "updatedAt": "2023-03-26T06:15:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LgQ",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:19:49Z",
          "updatedAt": "2023-03-26T06:19:49Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-03-26T06:19:49Z",
              "updatedAt": "2023-03-26T06:19:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LhK",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:20:31Z",
          "updatedAt": "2023-03-26T06:20:32Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "I think this is ledger specific implementation detail, not \"cross ledger\" or \"SCITT\".",
              "createdAt": "2023-03-26T06:20:31Z",
              "updatedAt": "2023-03-26T06:20:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8LoB",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T06:22:54Z",
          "updatedAt": "2023-03-26T06:22:54Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "why not `application/json`....",
              "createdAt": "2023-03-26T06:22:54Z",
              "updatedAt": "2023-03-26T06:22:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q8Lp2",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A few nits",
          "createdAt": "2023-03-26T06:24:08Z",
          "updatedAt": "2023-03-26T06:24:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Q8UwG",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "letmaik",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T10:33:51Z",
          "updatedAt": "2023-03-26T10:33:51Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "Out of scope for this PR I would say. Maybe open an issue to discuss it? ",
              "createdAt": "2023-03-26T10:33:51Z",
              "updatedAt": "2023-03-26T10:33:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q84Cu",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T22:19:31Z",
          "updatedAt": "2023-03-26T22:19:31Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "yeah, def out of scope, was just wondering if this had been discussed, I will file an issue.",
              "createdAt": "2023-03-26T22:19:31Z",
              "updatedAt": "2023-03-26T22:19:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Q84Fp",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-26T22:20:45Z",
          "updatedAt": "2023-03-26T22:20:45Z",
          "comments": [
            {
              "originalPosition": 395,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/62",
              "createdAt": "2023-03-26T22:20:45Z",
              "updatedAt": "2023-03-26T22:20:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5TzCrK",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-28T12:55:11Z",
          "updatedAt": "2023-04-28T12:55:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5T7fdL",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-01T20:53:15Z",
          "updatedAt": "2023-05-01T20:53:16Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Added. Note, I'm not using the GithUb commit suggestion as it bypasses signing :(",
              "createdAt": "2023-05-01T20:53:16Z",
              "updatedAt": "2023-05-01T20:53:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T7gQp",
          "commit": {
            "abbreviatedOid": "12a0d20"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-01T20:56:28Z",
          "updatedAt": "2023-05-01T20:56:28Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "@OR13, while I agree, I'm not sure what you're suggesting we'd change here. I was reading this as how SCITT could operate, acknowledging different implemetnations are still consistent with a SCITT spec. ",
              "createdAt": "2023-05-01T20:56:28Z",
              "updatedAt": "2023-05-01T20:56:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5T_5OX",
          "commit": {
            "abbreviatedOid": "c934d09"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T14:39:02Z",
          "updatedAt": "2023-05-02T14:39:03Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-05-02T14:39:02Z",
              "updatedAt": "2023-05-02T14:39:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UBcL9",
          "commit": {
            "abbreviatedOid": "c934d09"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-02T18:30:41Z",
          "updatedAt": "2023-05-02T18:30:41Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "I've removed line 123 above: \r\n> Producing a Transparent Statement is also referred to as a form of notarization.\r\n\r\nAdded:\r\n\r\n> Producing a Transparent Statement is also referred to as a form of notarization.",
              "createdAt": "2023-05-02T18:30:41Z",
              "updatedAt": "2023-05-02T18:30:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YDWbo",
          "commit": {
            "abbreviatedOid": "888fc60"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-06-13T14:07:14Z",
          "updatedAt": "2023-06-13T14:07:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOIvmHss5MUmWm",
      "title": "Adding Seve Lasker as editor",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/61",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-17T16:31:29Z",
      "updatedAt": "2023-10-23T23:24:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cab90cc1fb43a34c7b42bfa78b1ec79401a44125",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "roster-update",
      "headRefOid": "57681e544179426c650f61f14bd20a8bba6ba429",
      "closedAt": "2023-03-24T19:40:08Z",
      "mergedAt": "2023-03-24T19:40:08Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "bf0486811a272acd157de0db9a561476d3221f29"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5QPtPs",
          "commit": {
            "abbreviatedOid": "57681e5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-17T16:33:13Z",
          "updatedAt": "2023-03-17T16:33:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 64,
      "id": "PR_kwDOIvmHss5NIT03",
      "title": "Issue 45",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/64",
      "state": "CLOSED",
      "author": "roywill",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Suggested way to address Issue 45",
      "createdAt": "2023-03-29T06:23:45Z",
      "updatedAt": "2023-07-10T04:14:34Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "bf0486811a272acd157de0db9a561476d3221f29",
      "headRepository": "roywill/draft-ietf-scitt-architecture-Issue-45",
      "headRefName": "main",
      "headRefOid": "2fb1eaeff710ed05d863bf8af629c81364f43562",
      "closedAt": "2023-07-10T04:14:33Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@roywill can you help with some updates?",
          "createdAt": "2023-06-13T14:04:52Z",
          "updatedAt": "2023-06-13T14:04:52Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest this PR be closed it seems over taken by events, and has conflicts.",
          "createdAt": "2023-06-22T18:14:40Z",
          "updatedAt": "2023-06-22T18:14:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I support @OR13 view on this PR. We should abandon this PR, give a fresh pass on the Architecture and proceed from there!",
          "createdAt": "2023-06-23T09:05:26Z",
          "updatedAt": "2023-06-23T09:05:26Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as it's aged, with other edits. If portions are still needed, please open a new PR, on the current branch.",
          "createdAt": "2023-07-10T04:14:33Z",
          "updatedAt": "2023-07-10T04:14:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5RbWCI",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T01:12:02Z",
          "updatedAt": "2023-03-31T01:12:02Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Are we sure that the transparent statement goes in the log?\r\n\r\nThat seems a bit meta, since the signed statement gets a receipt when it goes in the log, and then the signed statement with the embedded receipt becomes a transparent statement, if that goes in the log, the receipt you would get would be for a transparent statement, not a signed statement.\r\n\r\nMy mental model is:\r\n\r\nsigned statement \r\n-> registration \r\n-> (log entry, with evidence) \r\n-> receipt (proof of inclusion for statement and evidence)\r\n-> (notary signature, from transparency service)\r\n-> transparent statement\r\n\r\n> \"The act of registration will always record in the logs the Transparent Statement and associated resolution evidence.\"\r\n\r\nI think this should be:\r\n\r\n\"Successful registration implies that the **Signed Statement** and any associated evidence, have been appended to the transparency log\"",
              "createdAt": "2023-03-31T01:12:02Z",
              "updatedAt": "2023-03-31T01:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5RbW42",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T01:18:25Z",
          "updatedAt": "2023-03-31T01:18:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nNonetheless, Issuers should carefully review the inclusion of private/confidential materials in their issued Signed Statements; they may for instance remove any PII, or leverage payloads based on opaque cryptographic commitments, such as hashes of the original payload content.  The pattern of leveraging COSE Sign1 with detached payloads, and embedded URL in the protected header, results in a situation where the envelope content is on the log (and viewable) and a different access policy can be used for the confidential content, based on the values provided in the protected header. Furthermore, for confidentiality or compliance reasons the original content of the signed statement may no longer be retained when it is referenced by hash, leaving just the record of registration.\r\n```",
              "createdAt": "2023-03-31T01:18:25Z",
              "updatedAt": "2023-03-31T02:20:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5RbXGr",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think we can tighten this language up a bit.",
          "createdAt": "2023-03-31T01:20:05Z",
          "updatedAt": "2023-03-31T01:20:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5S3Qd4",
          "commit": {
            "abbreviatedOid": "f832d00"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T14:09:05Z",
          "updatedAt": "2023-04-18T14:09:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Re: \"mental model\" sequence, I see the production of a receipt as a two-step process: (1) the transparency service signs and persists the log entry; (2) anyone (e.g. the transparency service) can extract from the extended log the receipt by collecting the signature and intermediate hashes.",
              "createdAt": "2023-04-18T14:09:05Z",
              "updatedAt": "2023-04-18T14:09:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOIvmHss5QFre6",
      "title": "Use COSE Signed Merkle Tree Proofs as a basis for receipts (#22)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/68",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As proposed in at the WG meeting in Tokyo, we would like to move receipts as a generic primitive in COSE. (see issue #22)\r\n\r\nThis PR removes all explicit references to the SCITT receipt ID and instead defines Receipts based on [Orie's COSE Signer Merkle Tree Proof ID](https://ietf-scitt.github.io/draft-steele-cose-merkle-tree-proofs/letmaik/remove-non-rfc-tree-algs/draft-steele-cose-merkle-tree-proofs.html#name-signed-merkle-tree-proof).\r\n\r\nNote that I also incorporated 2 proposed changes to make SCITT statement and receipt signature more symmetrical:\r\n- Receipts now include the DID of the transparency service. This can be optionally used to discover the receipt signing key. This change was originally proposed at the IETF WG meeting in London. It simplifies statement authorization, as verifiers can only trust the stable DID of the TS instead of worry about keys or certificate that may be rotated\r\n- Transparency services can now indicate the registration policies that were actually applied. This is very helpful for verifier, for instance to check the freshness of claims. This was proposed in Tokyo",
      "createdAt": "2023-05-09T12:37:04Z",
      "updatedAt": "2023-06-13T14:23:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "be2b399f23617dd5a231aa8380579ea69c6de963",
      "headRepository": "ad-l/draft-ietf-scitt-architecture",
      "headRefName": "cose_receipts",
      "headRefOid": "90bd8c830d86f22a5fe093ab321fba5936bf2880",
      "closedAt": "2023-06-13T14:23:16Z",
      "mergedAt": "2023-06-13T14:23:16Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM, see this implementation:\r\n\r\n- https://github.com/transmute-industries/cose/blob/main/test/readme.md.test.ts\r\n\r\nand demo:\r\n\r\n- https://scitt.xyz",
          "createdAt": "2023-05-30T15:03:02Z",
          "updatedAt": "2023-05-30T15:03:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, can you help resolve the errors? ",
          "createdAt": "2023-06-05T14:50:18Z",
          "updatedAt": "2023-06-05T14:50:18Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi,\r\nDoes this change mean that implementations based on native merkle tries (eg [ethereum erc 1186](https://eips.ethereum.org/EIPS/eip-1186) will have to translate proofs to this format ? And if that is so, what is the basis for trusting the service that does that ? \r\n\r\nOr is there scope for registering trie algorithms based on native proofs like ERC 1186 ?",
          "createdAt": "2023-06-07T11:48:12Z",
          "updatedAt": "2023-06-07T11:48:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5Uj8Io",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I'd like to more generally discuss additional information provided by the TS as it issues receipts:\r\n- Some information \"at the root\" refers to its signing (timestamp, keying, ID, etc) but implicitly applies to every statement recorded so far.\r\n- As discussed at the last hackathon, some information \"at the leaf\" is the outcome of applying the TS registration policy to each signed statement, including e.g. the configuration of the TS at that point (timestamp, authorized keys, DID resolution results, etc) ",
          "createdAt": "2023-05-09T13:58:38Z",
          "updatedAt": "2023-05-09T13:58:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5UkB2j",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:08:00Z",
          "updatedAt": "2023-05-09T14:08:00Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n  I-D.draft-steele-cose-merkle-tree-proofs: COMETRE\r\n```",
              "createdAt": "2023-05-09T14:08:00Z",
              "updatedAt": "2023-05-09T14:08:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkCAU",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:08:18Z",
          "updatedAt": "2023-05-09T14:08:19Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nSince COSE Signed Merkle Tree Proofs ({{-COMETRE}}) support multiple Merkle Tree algorithms, SCITT supports different Transparency Service implementations of the Registry, such as historical Merkle Trees or sparse Merkle Trees.\r\n```",
              "createdAt": "2023-05-09T14:08:18Z",
              "updatedAt": "2023-05-09T14:08:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkDsr",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:10:40Z",
          "updatedAt": "2023-05-09T14:10:40Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "```suggestion\r\nThe high-level validation algorithm is described in {{validation}}; the Registry-specific details of checking Receipts are covered in {{-COMTRE}}.\r\n```",
              "createdAt": "2023-05-09T14:10:40Z",
              "updatedAt": "2023-05-09T14:10:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkE5d",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:12:16Z",
          "updatedAt": "2023-05-09T14:12:16Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "```suggestion\r\n  ? 4 => bstr                ; Key ID (optional)\r\n  ? 33 => COSE_X509\t         ; X.509 chain (optional)\r\n```",
              "createdAt": "2023-05-09T14:12:16Z",
              "updatedAt": "2023-05-09T14:12:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkFq1",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:13:16Z",
          "updatedAt": "2023-05-09T14:13:16Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "any header parameters/attributes that are mandatory? we can make them mandatory by being in the label 2 array.",
              "createdAt": "2023-05-09T14:13:16Z",
              "updatedAt": "2023-05-09T14:13:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkHE5",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:15:05Z",
          "updatedAt": "2023-05-09T14:15:06Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "how different is SCITT Version to Receipt Version",
              "createdAt": "2023-05-09T14:15:05Z",
              "updatedAt": "2023-05-09T14:15:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5UkaPt",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-09T14:49:04Z",
          "updatedAt": "2023-05-09T14:49:04Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n  390 => int               ; SCITT Receipt Version\r\n```",
              "createdAt": "2023-05-09T14:49:04Z",
              "updatedAt": "2023-05-09T14:49:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Wf2ZE",
          "commit": {
            "abbreviatedOid": "42d532f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-30T15:04:09Z",
          "updatedAt": "2023-05-30T15:04:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5Wf9Dy",
          "commit": {
            "abbreviatedOid": "c61a1bb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T15:16:24Z",
          "updatedAt": "2023-05-30T15:16:24Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "```suggestion\r\n  2 => [+ label]            ; Critical headers\r\n```",
              "createdAt": "2023-05-30T15:16:24Z",
              "updatedAt": "2023-05-30T15:16:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Wf9YD",
          "commit": {
            "abbreviatedOid": "bf42e07"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-05-30T15:17:03Z",
          "updatedAt": "2023-05-30T15:17:04Z",
          "comments": [
            {
              "originalPosition": 127,
              "body": "will fix composite quantities later",
              "createdAt": "2023-05-30T15:17:03Z",
              "updatedAt": "2023-05-30T15:17:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5Wf98o",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "iteration is good enough for now. waiting for cometre update and then go from there",
          "createdAt": "2023-05-30T15:18:10Z",
          "updatedAt": "2023-05-30T15:18:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5XVu_g",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:12:48Z",
          "updatedAt": "2023-06-06T14:12:48Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "A Receipt is a SCITT word for the COMETRE concept of a \"Signed Inclusion Proof\".",
              "createdAt": "2023-06-06T14:12:48Z",
              "updatedAt": "2023-06-06T14:12:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvQD",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:13:15Z",
          "updatedAt": "2023-06-06T14:13:15Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n: a Receipt is a cryptographic proof that a Signed Statement is recorded in the Registry. Receipts are based on COSE Signed Merkle Tree Proofs {{-COMETRE}}; they consist of a Registry-specific inclusion proof, a signature by the Transparency Service of the state of the Registry, and additional metadata (contained in the signature's protected headers) to assist in auditing.\r\n```",
              "createdAt": "2023-06-06T14:13:15Z",
              "updatedAt": "2023-06-06T14:13:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvuv",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:13:59Z",
          "updatedAt": "2023-06-06T14:14:00Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n  ? 393 => RegistrationInfo  ; Registration policy information (optional)\r\n```",
              "createdAt": "2023-06-06T14:13:59Z",
              "updatedAt": "2023-06-06T14:14:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvwu",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:03Z",
          "updatedAt": "2023-06-06T14:14:03Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "ideally there would be references to these tree types here.",
              "createdAt": "2023-06-06T14:14:03Z",
              "updatedAt": "2023-06-06T14:14:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVvyb",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:06Z",
          "updatedAt": "2023-06-06T14:14:06Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "Add ?",
              "createdAt": "2023-06-06T14:14:06Z",
              "updatedAt": "2023-06-06T14:14:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVv2e",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:14Z",
          "updatedAt": "2023-06-06T14:14:14Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nMost of the details of the Receipt's contents are specified in the COSE Signed Merkle Tree Proof document {{-COMETRE}}.\r\n```",
              "createdAt": "2023-06-06T14:14:14Z",
              "updatedAt": "2023-06-06T14:14:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwFu",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:38Z",
          "updatedAt": "2023-06-06T14:14:39Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "is this intentional?",
              "createdAt": "2023-06-06T14:14:39Z",
              "updatedAt": "2023-06-06T14:14:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwQ9",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:14:58Z",
          "updatedAt": "2023-06-06T14:14:59Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "+1",
              "createdAt": "2023-06-06T14:14:58Z",
              "updatedAt": "2023-06-06T14:14:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwV9",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:15:07Z",
          "updatedAt": "2023-06-06T14:15:07Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nReceipts are based on COSE Signed Merkle Tree Proofs ({{-COMETRE}}) with an additional wrapper structure that adds the following information:\r\n```",
              "createdAt": "2023-06-06T14:15:07Z",
              "updatedAt": "2023-06-06T14:15:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwl3",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:15:33Z",
          "updatedAt": "2023-06-06T14:15:34Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\n- Since {{-COMETRE}} uses optional headers, the `crit` header (id: 2) MUST be included and all SCITT-specific headers (version, issuer DID and Registration Policy) MUST be marked critical.\r\n```",
              "createdAt": "2023-06-06T14:15:33Z",
              "updatedAt": "2023-06-06T14:15:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVwyD",
          "commit": {
            "abbreviatedOid": "bb9522c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:15:54Z",
          "updatedAt": "2023-06-06T14:15:54Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "+1",
              "createdAt": "2023-06-06T14:15:54Z",
              "updatedAt": "2023-06-06T14:15:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxHs",
          "commit": {
            "abbreviatedOid": "af28f66"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:16:31Z",
          "updatedAt": "2023-06-06T14:16:31Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "+1",
              "createdAt": "2023-06-06T14:16:31Z",
              "updatedAt": "2023-06-06T14:16:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxSG",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:16:49Z",
          "updatedAt": "2023-06-06T14:16:49Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "is \"did_manifest\" code for \"did document\" ?",
              "createdAt": "2023-06-06T14:16:49Z",
              "updatedAt": "2023-06-06T14:16:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxSI",
          "commit": {
            "abbreviatedOid": "fc55952"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:16:49Z",
          "updatedAt": "2023-06-06T14:16:50Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "+1",
              "createdAt": "2023-06-06T14:16:49Z",
              "updatedAt": "2023-06-06T14:16:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxZh",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:17:01Z",
          "updatedAt": "2023-06-06T14:17:02Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "```suggestion\r\nThe high-level validation algorithm is described in {{validation}}; the Registry-specific details of checking Receipts are covered in {{-COMETRE}}.\r\n```",
              "createdAt": "2023-06-06T14:17:02Z",
              "updatedAt": "2023-06-06T14:17:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxjM",
          "commit": {
            "abbreviatedOid": "2e75db1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:17:17Z",
          "updatedAt": "2023-06-06T14:17:18Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "+1",
              "createdAt": "2023-06-06T14:17:18Z",
              "updatedAt": "2023-06-06T14:17:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVxqA",
          "commit": {
            "abbreviatedOid": "3f74f45"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:17:30Z",
          "updatedAt": "2023-06-06T14:17:30Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nThe retrieved Receipt may be embedded in the corresponding COSE_Sign1 document in the unprotected header, of the signed statement.\r\n```",
              "createdAt": "2023-06-06T14:17:30Z",
              "updatedAt": "2023-06-06T14:17:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVyUj",
          "commit": {
            "abbreviatedOid": "01f595d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:18:42Z",
          "updatedAt": "2023-06-06T14:18:43Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "+1",
              "createdAt": "2023-06-06T14:18:42Z",
              "updatedAt": "2023-06-06T14:18:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XVyoW",
          "commit": {
            "abbreviatedOid": "01f595d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:19:16Z",
          "updatedAt": "2023-06-06T14:19:17Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "```suggestion\r\n; Details of the registration policy applied by the TS\r\n```",
              "createdAt": "2023-06-06T14:19:16Z",
              "updatedAt": "2023-06-06T14:19:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XV0Xi",
          "commit": {
            "abbreviatedOid": "2c6aed4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:22:17Z",
          "updatedAt": "2023-06-06T14:22:18Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "I am okay with that re-statement. Maybe add a backward reference to the Terminology Section later?",
              "createdAt": "2023-06-06T14:22:17Z",
              "updatedAt": "2023-06-06T14:22:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5XV8H6",
          "commit": {
            "abbreviatedOid": "01f595d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-06T14:35:32Z",
          "updatedAt": "2023-06-06T14:35:32Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n  ? \"log_index\": uint,\r\n```",
              "createdAt": "2023-06-06T14:35:32Z",
              "updatedAt": "2023-06-06T14:35:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YDfmo",
          "commit": {
            "abbreviatedOid": "90bd8c8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-06-13T14:23:06Z",
          "updatedAt": "2023-06-13T14:23:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOIvmHss5S6HKl",
      "title": "Roywill main",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/71",
      "state": "CLOSED",
      "author": "roywill",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updated with suggestions",
      "createdAt": "2023-06-13T16:27:15Z",
      "updatedAt": "2023-07-22T03:40:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "roywill/draft-ietf-scitt-architecture-Issue-45",
      "headRefName": "roywill-main",
      "headRefOid": "fba2e6541fc5b92863032e3c95a1d4248d690097",
      "closedAt": "2023-07-22T03:32:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@roywill, can you please address the changes above?",
          "createdAt": "2023-07-10T04:16:06Z",
          "updatedAt": "2023-07-10T04:16:06Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "iirc, this PR is stale, has already been implemented by other PRs, and has conflicts... merge it or close it...",
          "createdAt": "2023-07-19T17:15:31Z",
          "updatedAt": "2023-07-19T17:15:31Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with @OR13 fully. This has been already addressed by other PR's so we can close this, without merging!",
          "createdAt": "2023-07-19T17:51:12Z",
          "updatedAt": "2023-07-19T17:51:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing per comments. \r\n@roywill please reopen if needed. ",
          "createdAt": "2023-07-22T03:32:57Z",
          "updatedAt": "2023-07-22T03:32:57Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "body": "I will be on it tomorrow.\r\n\r\nRoy Williams\r\n________________________________\r\nFrom: Steve Lasker ***@***.***>\r\nSent: Friday, July 21, 2023 8:33:08 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Roy Williams (E+P) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Roywill main (PR #71)\r\n\r\n\r\nClosed #71<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/71>.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/71#event-9890343787>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJP7OQEIHHEQTXE3FWLNPPLXRNCXJANCNFSM6AAAAAAZFEQPCI>.\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n",
          "createdAt": "2023-07-22T03:40:37Z",
          "updatedAt": "2023-07-22T03:40:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5YE2Dt",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T16:54:50Z",
          "updatedAt": "2023-06-13T16:54:50Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Please note with your changes, we need to remove line : 980 below, as we are not registering Transparent Statements in the transparency service!",
              "createdAt": "2023-06-13T16:54:50Z",
              "updatedAt": "2023-06-13T16:54:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YE31E",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-13T16:59:20Z",
          "updatedAt": "2023-06-13T16:59:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "remove or change to... see below?",
              "createdAt": "2023-06-13T16:59:20Z",
              "updatedAt": "2023-06-13T16:59:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5YE4CQ",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-13T16:59:44Z",
          "updatedAt": "2023-06-13T16:59:53Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nA collection of Transparent Statements must not leak information about the contents of other Signed Statements registered on the Transparency Service.\r\n```",
              "createdAt": "2023-06-13T16:59:44Z",
              "updatedAt": "2023-06-13T16:59:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ZCQqP",
          "commit": {
            "abbreviatedOid": "86c11a3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "please apply the suggestion from @henkbirkholz ",
          "createdAt": "2023-06-22T18:14:09Z",
          "updatedAt": "2023-06-22T18:14:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5bof1R",
          "commit": {
            "abbreviatedOid": "fba2e65"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm, any objections?",
          "createdAt": "2023-07-19T15:14:54Z",
          "updatedAt": "2023-07-19T15:14:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5bpbgW",
          "commit": {
            "abbreviatedOid": "fba2e65"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-19T17:14:43Z",
          "updatedAt": "2023-07-19T17:14:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 72,
      "id": "PR_kwDOIvmHss5UsiTZ",
      "title": "Removed TBD's from the draft",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/72",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Use the issuer tracker instead. This helps to improve readability",
      "createdAt": "2023-07-05T11:56:30Z",
      "updatedAt": "2023-07-10T15:25:42Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "702363eff7dca8e42c4c49ed942e6977e826f08a",
      "closedAt": "2023-07-10T15:24:35Z",
      "mergedAt": "2023-07-10T15:24:35Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "a8281e9ad5167fc308a7fee956048d9cc24255c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aRBe0",
          "commit": {
            "abbreviatedOid": "3e04d03"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:34:24Z",
          "updatedAt": "2023-07-05T12:34:24Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I would prefer adding a line, that says this item is open for discussion and point to a github issue where it is been tracked. We have done this for CoRIM. Please see https://ietf-rats-wg.github.io/draft-ietf-rats-corim/draft-ietf-rats-corim.html",
              "createdAt": "2023-07-05T12:34:24Z",
              "updatedAt": "2023-07-05T12:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajUK3",
          "commit": {
            "abbreviatedOid": "3e04d03"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-07T15:53:55Z",
          "updatedAt": "2023-07-07T15:54:04Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "@yogeshbdeshpande could you please provide a suggestion for the meeting on Monday?",
              "createdAt": "2023-07-07T15:53:55Z",
              "updatedAt": "2023-07-07T15:54:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBHz",
          "commit": {
            "abbreviatedOid": "3e04d03"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T12:40:05Z",
          "updatedAt": "2023-07-08T12:40:05Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n# Federation\r\n\r\nThis topic is still under discussion, see [issue 79](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/79)\r\n```",
              "createdAt": "2023-07-08T12:40:05Z",
              "updatedAt": "2023-07-08T12:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avP7a",
          "commit": {
            "abbreviatedOid": "702363e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-07-10T15:17:22Z",
          "updatedAt": "2023-07-10T15:17:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avQ2H",
          "commit": {
            "abbreviatedOid": "702363e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:19:21Z",
          "updatedAt": "2023-07-10T15:19:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avQ6r",
          "commit": {
            "abbreviatedOid": "702363e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:19:31Z",
          "updatedAt": "2023-07-10T15:19:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOIvmHss5UsjCb",
      "title": "Remove use cases",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/73",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is a separate use case document providing the details for these use cases. \r\n\r\nAdding a reference to the use case document would be useful!",
      "createdAt": "2023-07-05T11:58:56Z",
      "updatedAt": "2023-07-10T15:39:57Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-2",
      "headRefOid": "3ef84a906d03681dcb53f608f59ca661e3959bcf",
      "closedAt": "2023-07-10T15:39:53Z",
      "mergedAt": "2023-07-10T15:39:53Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "17879f6656c48f8bb368fc44504705fabaabe40d"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "use cases seem helpful to the architecture, but perhaps they belong in an appendix",
          "createdAt": "2023-07-05T12:54:32Z",
          "updatedAt": "2023-07-05T12:54:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aRCw4",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:37:34Z",
          "updatedAt": "2023-07-05T12:37:40Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@hannestschofenig We should do two approaches, rather than blanket removal:\r\n\r\nOption 1) My preferred Option: Somewhere in the Architecture text we refer to some known use cases and link it to the new document. Completely removing use case reference is not a good idea.\r\n\r\nOption 2) Retain the title # Use Cases and on the next line refer to the reference to the new document",
              "createdAt": "2023-07-05T12:37:34Z",
              "updatedAt": "2023-07-05T12:37:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajV5h",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-07T15:58:54Z",
          "updatedAt": "2023-07-07T15:59:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "A dedicated section here that will refer to the use cases document is required before merge.\r\nPlease note: the use-case I-D is subject of churn and has to be tracked independently!",
              "createdAt": "2023-07-07T15:58:54Z",
              "updatedAt": "2023-07-07T15:59:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBMo",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T12:43:55Z",
          "updatedAt": "2023-07-08T12:43:55Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Add a link to https://datatracker.ietf.org/doc/draft-ietf-scitt-software-use-cases/ ",
              "createdAt": "2023-07-08T12:43:55Z",
              "updatedAt": "2023-07-08T12:43:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aq5a8",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T04:20:10Z",
          "updatedAt": "2023-07-10T04:20:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": ":+1: to option 2",
              "createdAt": "2023-07-10T04:20:10Z",
              "updatedAt": "2023-07-10T04:20:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5arC98",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T05:21:24Z",
          "updatedAt": "2023-07-10T05:21:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Yep option 2. Then we can get back to editing the use case document :-)\r\n\r\nI'll make a GitHub suggestion to make this simpler",
              "createdAt": "2023-07-10T05:21:24Z",
              "updatedAt": "2023-07-10T05:25:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5arEHl",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-10T05:27:53Z",
          "updatedAt": "2023-07-10T05:27:59Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\n{::boilerplate bcp14-tagged}\r\n\r\n- # Use Cases\r\n\r\nThe building blocks defined in SCITT are intended to support applications in any supply chain that produces or relies upon digital artifacts, from the build and supply of software and IoT devices to advanced manufacturing and food supply.\r\n\r\nDetailed use cases are maintained in a separate document: https://datatracker.ietf.org/doc/draft-ietf-scitt-software-use-cases/\r\n```",
              "createdAt": "2023-07-10T05:27:54Z",
              "updatedAt": "2023-07-10T05:27:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auXbK",
          "commit": {
            "abbreviatedOid": "183b5d6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:33:42Z",
          "updatedAt": "2023-07-10T13:33:43Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "maybe add in the informative reference section of the document header:`I-D.ietf-scitt-software-use-cases: sw-use-cases`\r\nand here: `{{-sw-use-cases}}`",
              "createdAt": "2023-07-10T13:33:43Z",
              "updatedAt": "2023-07-10T13:33:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avS0W",
          "commit": {
            "abbreviatedOid": "f8d7916"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:23:29Z",
          "updatedAt": "2023-07-10T15:23:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avTLw",
          "commit": {
            "abbreviatedOid": "f8d7916"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-07-10T15:24:16Z",
          "updatedAt": "2023-07-10T15:24:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOIvmHss5UskAk",
      "title": "Removed RBAC",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/74",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T12:01:33Z",
      "updatedAt": "2023-10-23T23:24:06Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-3",
      "headRefOid": "e007370805cf699ea65e0db67da4544cd98e0ce9",
      "closedAt": "2023-07-07T15:55:20Z",
      "mergedAt": "2023-07-07T15:55:20Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "a89197d64f48419d0a65a69c433b6448929eb71c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aRJyq",
          "commit": {
            "abbreviatedOid": "e007370"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-05T12:52:35Z",
          "updatedAt": "2023-07-05T12:52:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aRMSx",
          "commit": {
            "abbreviatedOid": "e007370"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-07-05T12:57:52Z",
          "updatedAt": "2023-07-05T12:57:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ajUlX",
          "commit": {
            "abbreviatedOid": "e007370"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "no artificial constraints at this point",
          "createdAt": "2023-07-07T15:55:07Z",
          "updatedAt": "2023-07-07T15:55:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOIvmHss5UslLL",
      "title": "Updating registration policy text",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/75",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T12:04:47Z",
      "updatedAt": "2023-10-23T23:24:08Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-4",
      "headRefOid": "863c468df8f99b77a1e3a6d05f37aa595406f4c0",
      "closedAt": "2023-07-07T15:57:15Z",
      "mergedAt": "2023-07-07T15:57:15Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "ec5677026a519c9d867a2093327b3d843740cde1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aQ9RP",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:25:37Z",
          "updatedAt": "2023-07-05T12:25:37Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nStatement offered by anonymous Issuers would only provide \r\n```",
              "createdAt": "2023-07-05T12:25:37Z",
              "updatedAt": "2023-07-05T12:25:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ9om",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:26:30Z",
          "updatedAt": "2023-07-05T12:26:31Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Is it Verification or Authorization",
              "createdAt": "2023-07-05T12:26:31Z",
              "updatedAt": "2023-07-05T12:26:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ-UN",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Left a minor comment, but in general LGTM!",
          "createdAt": "2023-07-05T12:27:54Z",
          "updatedAt": "2023-07-05T12:27:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aQ-do",
          "commit": {
            "abbreviatedOid": "e65bd07"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:28:16Z",
          "updatedAt": "2023-07-05T12:28:16Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I would say \"authorization\" is better",
              "createdAt": "2023-07-05T12:28:16Z",
              "updatedAt": "2023-07-05T12:28:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRJnl",
          "commit": {
            "abbreviatedOid": "9d8ea2d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-05T12:52:12Z",
          "updatedAt": "2023-07-05T12:52:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aRKit",
          "commit": {
            "abbreviatedOid": "9d8ea2d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:54:16Z",
          "updatedAt": "2023-07-05T12:54:17Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n\"authorization\" is needed before registration of Signed Statements to\r\n```",
              "createdAt": "2023-07-05T12:54:16Z",
              "updatedAt": "2023-07-05T12:54:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajVQ2",
          "commit": {
            "abbreviatedOid": "863c468"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Significant simplification, will require discussion time at IETF 117, probably.",
          "createdAt": "2023-07-07T15:57:06Z",
          "updatedAt": "2023-07-07T15:57:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOIvmHss5UsoME",
      "title": "Remove standardized registration policy",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/76",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is incomplete because the standardized registration policy is scattered all over the document.",
      "createdAt": "2023-07-05T12:13:34Z",
      "updatedAt": "2023-07-10T16:32:19Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "b239beb3f797240f6cf2886ab6a97ae164e214b3",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-5",
      "headRefOid": "951b23efb70aad41674759f1aeb4d5e98a05b2b6",
      "closedAt": "2023-07-10T16:32:16Z",
      "mergedAt": "2023-07-10T16:32:16Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "8dd97759d1338abd48065cff000ef91e2a790297"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aQ8TX",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:23:25Z",
          "updatedAt": "2023-07-05T12:23:25Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Why did you remove the list and made it into a statement ?",
              "createdAt": "2023-07-05T12:23:25Z",
              "updatedAt": "2023-07-05T12:23:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ8pE",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:24:09Z",
          "updatedAt": "2023-07-05T12:24:09Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Perhaps we can retain the list and add a last line to say, other formats can be added in future",
              "createdAt": "2023-07-05T12:24:09Z",
              "updatedAt": "2023-07-05T12:24:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aQ9WL",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:25:50Z",
          "updatedAt": "2023-07-05T12:25:50Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "It makes the document shorter. \r\n\r\nIf you think these payloads are import to the draft it would be important to add references and to expand the acronyms.",
              "createdAt": "2023-07-05T12:25:50Z",
              "updatedAt": "2023-07-05T12:25:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRE0i",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:41:34Z",
          "updatedAt": "2023-07-05T12:41:34Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I agree we should give due weightage to these acronyms as the they are the building blocks using SCITT and essential elements of Supply Chain Security!\r\n\r\nI would check with other reviewers what they think about this...",
              "createdAt": "2023-07-05T12:41:34Z",
              "updatedAt": "2023-07-05T12:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRILf",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:48:54Z",
          "updatedAt": "2023-07-05T12:48:54Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nThe registration time is defined as the timestamp at which the TS has added this Signed Statement to its Registry.\r\n```",
              "createdAt": "2023-07-05T12:48:54Z",
              "updatedAt": "2023-07-05T12:48:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aRJGH",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T12:51:01Z",
          "updatedAt": "2023-07-05T12:51:02Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "perhaps these are actually COSE / JOSE registered claim names?",
              "createdAt": "2023-07-05T12:51:01Z",
              "updatedAt": "2023-07-05T12:51:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aSMvc",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T14:51:03Z",
          "updatedAt": "2023-07-05T14:51:03Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "That's fine for me. Use the list style,  add references and explain the acronyms.",
              "createdAt": "2023-07-05T14:51:03Z",
              "updatedAt": "2023-07-05T14:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aSNK1",
          "commit": {
            "abbreviatedOid": "dcd54e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-05T14:51:39Z",
          "updatedAt": "2023-07-05T14:51:39Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yes, this sounds like a regular claim name",
              "createdAt": "2023-07-05T14:51:39Z",
              "updatedAt": "2023-07-05T14:51:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajWns",
          "commit": {
            "abbreviatedOid": "56439e6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-07-07T16:00:58Z",
          "updatedAt": "2023-07-07T16:01:05Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Please phrase as a dedicated issue and push a PR.\r\nThis is postponed after submission moratorium of IETF 117.",
              "createdAt": "2023-07-07T16:00:58Z",
              "updatedAt": "2023-07-07T16:01:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avV72",
          "commit": {
            "abbreviatedOid": "56439e6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:30:02Z",
          "updatedAt": "2023-07-10T15:30:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avWhN",
          "commit": {
            "abbreviatedOid": "79adeeb"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:31:13Z",
          "updatedAt": "2023-07-10T15:31:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avWoz",
          "commit": {
            "abbreviatedOid": "79adeeb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-07-10T15:31:28Z",
          "updatedAt": "2023-07-10T15:31:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avWzo",
          "commit": {
            "abbreviatedOid": "79adeeb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:31:50Z",
          "updatedAt": "2023-07-10T15:31:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOIvmHss5UtNIP",
      "title": "Clarify usage of Transparent Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/77",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-05T13:43:14Z",
      "updatedAt": "2023-07-10T15:38:08Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "ec5677026a519c9d867a2093327b3d843740cde1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "arch-correction",
      "headRefOid": "3a24240f0d69bf92cf63736f87812b6669599312",
      "closedAt": "2023-07-10T15:38:04Z",
      "mergedAt": "2023-07-10T15:38:04Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "a7e70e142c1e2cc9c6e6e3f5c6835f34adf2b542"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> Potential topic for this Monday OR be moved to after the IETF 117 submission moratorium.\r\n\r\n@henkbirkholz This is a fundamental bug in the spec, we need to correct it ASAP!",
          "createdAt": "2023-07-07T16:06:01Z",
          "updatedAt": "2023-07-07T16:06:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, Thank you for the review. I agree with most of your edits.",
          "createdAt": "2023-07-07T16:43:40Z",
          "updatedAt": "2023-07-07T16:43:40Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 Thanks, I have done all the required edits, please have a look!",
          "createdAt": "2023-07-07T17:27:37Z",
          "updatedAt": "2023-07-07T17:27:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5ajTnV",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:52:19Z",
          "updatedAt": "2023-07-07T15:52:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The directionality of this, feels difficult...\r\n\r\nI agree auditor checks transparent statements... not sure the parenthetical is helpful.",
              "createdAt": "2023-07-07T15:52:19Z",
              "updatedAt": "2023-07-07T15:52:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajTrP",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:52:29Z",
          "updatedAt": "2023-07-07T15:52:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: an entity that checks the correctness and consistency of all Transparent Statements issued by a Transparency Service.\r\n```",
              "createdAt": "2023-07-07T15:52:29Z",
              "updatedAt": "2023-07-07T15:52:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajT1k",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:52:57Z",
          "updatedAt": "2023-07-07T15:52:57Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\"issued to\" will lead to the 2 party vs 3 party model discussion... we probably don't want to invite that.",
              "createdAt": "2023-07-07T15:52:57Z",
              "updatedAt": "2023-07-07T15:52:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajUai",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:54:36Z",
          "updatedAt": "2023-07-07T15:54:37Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n: a Signed Statement that is augmented with a Receipt created via Registration in a Transparency Service ( the receipt is stored under tag TBD_N in the unprotected header of the Signed Statement).\r\n```",
              "createdAt": "2023-07-07T15:54:36Z",
              "updatedAt": "2023-07-07T15:54:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajVyd",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T15:58:33Z",
          "updatedAt": "2023-07-07T15:58:34Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nThis section describes, at a high level, the three main roles and associated processes in SCITT: Issuers and the Signed Statement issuance process, Transparency Service and the Signed Statement Registration process, Verifiers of the Transparent Statements and the Validation process (including verification of signatures).\r\n```",
              "createdAt": "2023-07-07T15:58:34Z",
              "updatedAt": "2023-07-07T16:57:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajWhW",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:00:40Z",
          "updatedAt": "2023-07-07T16:00:40Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "I am not sure about this... I think policies being in place applies to making a receipt (an action the TS performs)... not to producing a signed statement (an action an Issuer performs).",
              "createdAt": "2023-07-07T16:00:40Z",
              "updatedAt": "2023-07-07T16:00:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajW7E",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:01:52Z",
          "updatedAt": "2023-07-07T16:01:53Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nA Transparent Statement including a Receipt ensures that the associated Signed Statement passed its Registration Policy and was recorded appropriately.\r\n```",
              "createdAt": "2023-07-07T16:01:52Z",
              "updatedAt": "2023-07-07T16:01:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajXIV",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Potential topic for this Monday OR be moved to after the IETF 117 submission moratorium.",
          "createdAt": "2023-07-07T16:02:27Z",
          "updatedAt": "2023-07-07T16:02:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ajqM-",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:50:19Z",
          "updatedAt": "2023-07-07T16:50:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "ok! Agree with the statement, will change",
              "createdAt": "2023-07-07T16:50:19Z",
              "updatedAt": "2023-07-07T16:50:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajqd5",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:51:13Z",
          "updatedAt": "2023-07-07T16:51:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I would prefer avoiding specific here. I will make it a general statement",
              "createdAt": "2023-07-07T16:51:13Z",
              "updatedAt": "2023-07-07T16:51:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajq_q",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:53:02Z",
          "updatedAt": "2023-07-07T16:53:02Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Verifiers first verify the Transparent Statement, to check the inclusion in the log (offline).\r\n\r\nWhether further Verification of Signed Statement is left to implementation, so I would remove the Signed Statement from Verifiers actions",
              "createdAt": "2023-07-07T16:53:02Z",
              "updatedAt": "2023-07-07T16:53:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajrbF",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:54:25Z",
          "updatedAt": "2023-07-07T16:54:25Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Makes sense, I will make the edits",
              "createdAt": "2023-07-07T16:54:25Z",
              "updatedAt": "2023-07-07T16:54:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajskY",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T16:58:10Z",
          "updatedAt": "2023-07-07T16:58:10Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "updated",
              "createdAt": "2023-07-07T16:58:10Z",
              "updatedAt": "2023-07-07T16:58:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajtxz",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:02:07Z",
          "updatedAt": "2023-07-07T17:02:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "better?",
              "createdAt": "2023-07-07T17:02:07Z",
              "updatedAt": "2023-07-07T17:02:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajt20",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:02:22Z",
          "updatedAt": "2023-07-07T17:02:22Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": ":+1: ",
              "createdAt": "2023-07-07T17:02:22Z",
              "updatedAt": "2023-07-07T17:02:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajzPs",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:20:32Z",
          "updatedAt": "2023-07-07T17:20:33Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "This section talks about Append Only log, so the `text` about honesty makes sense here?\r\n",
              "createdAt": "2023-07-07T17:20:33Z",
              "updatedAt": "2023-07-07T17:20:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aj1gx",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:28:00Z",
          "updatedAt": "2023-07-07T17:28:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Done the change in the new commit",
              "createdAt": "2023-07-07T17:28:01Z",
              "updatedAt": "2023-07-07T17:28:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aj1pd",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:28:28Z",
          "updatedAt": "2023-07-07T17:28:29Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Done, please have a look!",
              "createdAt": "2023-07-07T17:28:28Z",
              "updatedAt": "2023-07-07T17:28:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aj2aL",
          "commit": {
            "abbreviatedOid": "11046fe"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T17:30:11Z",
          "updatedAt": "2023-07-07T17:30:12Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "@OR13  I did not find anything particularly objectionable/wrong in the text above so retained it.",
              "createdAt": "2023-07-07T17:30:11Z",
              "updatedAt": "2023-07-07T17:30:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBQX",
          "commit": {
            "abbreviatedOid": "43a376f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T12:46:19Z",
          "updatedAt": "2023-07-08T12:46:19Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "thats fine, I don't think the text is wrong, I just don't think it's needed here.",
              "createdAt": "2023-07-08T12:46:19Z",
              "updatedAt": "2023-07-08T12:46:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5apBQh",
          "commit": {
            "abbreviatedOid": "13f8006"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-08T12:46:25Z",
          "updatedAt": "2023-07-08T12:46:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aq6R7",
          "commit": {
            "abbreviatedOid": "13f8006"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A few minor nits to cleanup, then LGTM",
          "createdAt": "2023-07-10T04:25:54Z",
          "updatedAt": "2023-07-10T04:28:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "A space got lost:\r\n\r\n>  a Signed Statement that is augmented with a Receipt created via Registration in a Transparency **Service (the** receipt is ",
              "createdAt": "2023-07-10T04:25:54Z",
              "updatedAt": "2023-07-10T04:28:42Z"
            },
            {
              "originalPosition": 74,
              "body": "nit: looks like the line breaks got reformatted. Please break on sentences.",
              "createdAt": "2023-07-10T04:28:06Z",
              "updatedAt": "2023-07-10T04:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atKOz",
          "commit": {
            "abbreviatedOid": "13f8006"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T10:40:20Z",
          "updatedAt": "2023-07-10T10:40:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n: a Signed Statement that is augmented with a Receipt created via Registration in a Transparency Service (the receipt is stored in the unprotected header of COSE Envelope of the Signed Statement).\r\n```",
              "createdAt": "2023-07-10T10:40:20Z",
              "updatedAt": "2023-07-10T10:40:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atKi7",
          "commit": {
            "abbreviatedOid": "72b5559"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T10:41:10Z",
          "updatedAt": "2023-07-10T10:41:10Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nsome Transparency Services may provide limited support for historical queries on the Signed Statements they have registered, and accept the risk of being blamed for inconsistent Registration or Issuer equivocation.\r\n```",
              "createdAt": "2023-07-10T10:41:10Z",
              "updatedAt": "2023-07-10T10:41:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atKsp",
          "commit": {
            "abbreviatedOid": "72b5559"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T10:41:35Z",
          "updatedAt": "2023-07-10T10:41:35Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "approvable fix below",
              "createdAt": "2023-07-10T10:41:35Z",
              "updatedAt": "2023-07-10T10:41:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5atVQB",
          "commit": {
            "abbreviatedOid": "72b5559"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T11:10:12Z",
          "updatedAt": "2023-07-10T11:10:12Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "@henkbirkholz I am doing it now",
              "createdAt": "2023-07-10T11:10:12Z",
              "updatedAt": "2023-07-10T11:10:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avYuy",
          "commit": {
            "abbreviatedOid": "3a24240"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:36:09Z",
          "updatedAt": "2023-07-10T15:36:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avZBN",
          "commit": {
            "abbreviatedOid": "3a24240"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:36:47Z",
          "updatedAt": "2023-07-10T15:36:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avZcT",
          "commit": {
            "abbreviatedOid": "3a24240"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nLine item at 962 could be done later",
          "createdAt": "2023-07-10T15:37:45Z",
          "updatedAt": "2023-07-10T15:37:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOIvmHss5U1QVU",
      "title": "Attempt to define resolution and dereferencing",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/78",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR attempts to address the problem of documenting the various ways that known key content types, such as `application/jwk+json` and `application/cose-key` are discovered from opaque strings or URIs such as `iss` and `kid`.\r\n\r\nThis PR also explains how DIDs are similar to OIDC.",
      "createdAt": "2023-07-06T17:29:51Z",
      "updatedAt": "2023-07-10T16:24:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dab07df2ca7205f79a3ef4354b50cbae4a89c6e1",
      "headRepository": "transmute-industries/draft-ietf-scitt-architecture",
      "headRefName": "feat/key-discovery",
      "headRefOid": "c0cc1543fda0c31e23b72c10df4d8cef71a9ec98",
      "closedAt": "2023-07-10T16:24:17Z",
      "mergedAt": "2023-07-10T16:24:17Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "7a014a4b56f972bf64baa86b122effa2dd93bba0"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I have a working demo of this on scitt.xyz, \r\n\r\nhttps://transmute.id/did:web:scitt.xyz\r\n\r\nhttps://scitt.xyz/.well-known/did.json\r\n\r\nIts also possible to do same thing with did methods other than `did:web`, for example `did:jwk`...\r\n\r\nThere is a demo of that working with index db here: https://scitt.xyz/demo\r\n\r\nThis shows that there is interoperability across issuers that use different did methods, that conform to the same resolution and dereferencing interfaces. ",
          "createdAt": "2023-07-06T17:55:15Z",
          "updatedAt": "2023-07-06T17:55:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5abCMu",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-06T17:46:52Z",
          "updatedAt": "2023-07-06T17:46:53Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "@Sakurann this is related to the conversations we have had on https://www.w3.org/TR/did-core/#verification-relationships\r\n\r\n... if you use those JSON-LD relationships would cannot eliminate did documents, or you need to encode the relationship in the identifier itself... for example:\r\n\r\n```\r\ndid:example:123/assertion/kid => jwk+json\r\ndid:example:123/assertion=> jwk-set+json\r\n```",
              "createdAt": "2023-07-06T17:46:52Z",
              "updatedAt": "2023-07-06T17:46:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5abCxg",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-06T17:48:36Z",
          "updatedAt": "2023-07-06T17:48:36Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "See a similar section of the W3C draft: https://w3c.github.io/vc-jwt/#key-discovery\r\n\r\nIt's a mess, because of mistakes made in DID Core... So we expect anything taking a dependency on DIDs to have similar sections of their spec.",
              "createdAt": "2023-07-06T17:48:36Z",
              "updatedAt": "2023-07-06T17:48:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ajXlG",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "a proposal for discussion @ IETF 117 Hackathon and meeting seems very useful to me.\r\n\r\n:+1: ",
          "createdAt": "2023-07-07T16:03:47Z",
          "updatedAt": "2023-07-07T16:03:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5amH9B",
          "commit": {
            "abbreviatedOid": "cfa28e3"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-07T21:52:46Z",
          "updatedAt": "2023-07-07T21:52:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "How about:\r\nand 'kid' MUST then be a URL relative to `iss`",
              "createdAt": "2023-07-07T21:52:46Z",
              "updatedAt": "2023-07-07T21:52:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5amMOG",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Asked Kristina to also look at this.",
          "createdAt": "2023-07-07T21:57:09Z",
          "updatedAt": "2023-07-07T21:57:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5aoPlV",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:33:09Z",
          "updatedAt": "2023-07-08T03:33:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n`kid` MUST either be an absolute URL,\r\nor a relative URL. Relative URL MUST be\r\nrelative to an `iss` value. When relative URL is used,\r\n`iss` MUST also be present in the protected header.\r\n```\r\n\r\nI think the requirement conveyed can be clearer.\r\n\r\nit also confused me originally if this is only about DIDs or not. looks like it is not..",
              "createdAt": "2023-07-08T03:33:09Z",
              "updatedAt": "2023-07-08T03:45:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoQ3W",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:35:08Z",
          "updatedAt": "2023-07-08T03:35:09Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nResolving `kid` MUST return an identity document of a registered content type (a set of public keys).\r\n```\r\nlet's be consistent in capitalization.",
              "createdAt": "2023-07-08T03:35:08Z",
              "updatedAt": "2023-07-08T03:35:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoTWX",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:38:51Z",
          "updatedAt": "2023-07-08T03:38:52Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nTo dereference a DID URL, it first MUST be resolved. After that the fragment is processed according to the media type.\r\n```",
              "createdAt": "2023-07-08T03:38:51Z",
              "updatedAt": "2023-07-08T03:38:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoTiI",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:39:12Z",
          "updatedAt": "2023-07-08T03:39:13Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nfirst, the identity document for `did:example:123` is resolved as content type `application/did+json`,\r\n```",
              "createdAt": "2023-07-08T03:39:12Z",
              "updatedAt": "2023-07-08T03:39:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoT4p",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:40:14Z",
          "updatedAt": "2023-07-08T03:40:14Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "`in JSON` here should be removed or made clearer.",
              "createdAt": "2023-07-08T03:40:14Z",
              "updatedAt": "2023-07-08T03:40:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoUJh",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:41:05Z",
          "updatedAt": "2023-07-08T03:41:06Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "why is there a need for a content type for a JWK? JWK is a published RFC and has a clearly defined content/structure",
              "createdAt": "2023-07-08T03:41:05Z",
              "updatedAt": "2023-07-08T03:41:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVZZ",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:44:54Z",
          "updatedAt": "2023-07-08T03:44:54Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I think this should be moved before line 379. it really confused me if DIDs are required or not.\r\n\r\nI don't know if this is a separate issue, but honestly would be good to have a sentence or two what to do/expect when it is not a DID... like finding a keys using `https` URL scheme, for example, usually requires defining a `.well-known` path and structure of a document found there...",
              "createdAt": "2023-07-08T03:44:54Z",
              "updatedAt": "2023-07-08T03:48:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVi-",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:46:27Z",
          "updatedAt": "2023-07-08T03:46:28Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThe details of both `DID resolution` and `DID dereferencing` are out of scope for this document.\r\n```",
              "createdAt": "2023-07-08T03:46:28Z",
              "updatedAt": "2023-07-08T03:46:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVpV",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:49:08Z",
          "updatedAt": "2023-07-08T03:49:09Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "what about relative DID URLs??\r\n\r\nalso a reference to the definition of relative DID URL in [DID Core](https://www.w3.org/TR/did-core/#relative-did-urls) might be helpful? ",
              "createdAt": "2023-07-08T03:49:08Z",
              "updatedAt": "2023-07-08T03:49:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoVsb",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:49:59Z",
          "updatedAt": "2023-07-08T03:50:00Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "how is this section related to a sentence above `The details of both `did resolution` and `did dereferencing` are out of scope for this document.` should be clearer",
              "createdAt": "2023-07-08T03:49:59Z",
              "updatedAt": "2023-07-08T03:50:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoV4g",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:51:50Z",
          "updatedAt": "2023-07-08T03:51:50Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I don't think there is a need to copy what is already defined in OIDC.Core and rfc6749. just pointing to the related sections in those specs is sufficient. \r\n\r\nif you want to include examples for those who might not be familiar with OIDC/OAuth, that's fine, but right now it looks like you are redefining.",
              "createdAt": "2023-07-08T03:51:50Z",
              "updatedAt": "2023-07-08T03:53:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoW2z",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:56:22Z",
          "updatedAt": "2023-07-08T03:56:22Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "I am still catching up, but using ID Tokens/Access Tokens here intuitively seems odd. Can Issuer be a natural person authenticated by OIDC? ",
              "createdAt": "2023-07-08T03:56:22Z",
              "updatedAt": "2023-07-08T03:56:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoW_w",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:56:57Z",
          "updatedAt": "2023-07-08T03:56:57Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "I think `.well-known/jwt-issuer` defined in SD-JWT VC draft is more relevant here. https://vcstuff.github.io/draft-terbu-sd-jwt-vc/draft-terbu-oauth-sd-jwt-vc.html#name-jwt-issuer-metadata",
              "createdAt": "2023-07-08T03:56:57Z",
              "updatedAt": "2023-07-08T03:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoXLE",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-08T03:57:47Z",
          "updatedAt": "2023-07-08T03:57:48Z",
          "comments": [
            {
              "originalPosition": 136,
              "body": "```suggestion\r\nFor example, when DIDs are used:\r\n```",
              "createdAt": "2023-07-08T03:57:48Z",
              "updatedAt": "2023-07-08T03:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5aoYBf",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "Sakurann",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "made comments, but I think a bit more discussion/work is needed.",
          "createdAt": "2023-07-08T04:00:47Z",
          "updatedAt": "2023-07-08T04:00:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5auLbh",
          "commit": {
            "abbreviatedOid": "155aaa3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:13:03Z",
          "updatedAt": "2023-07-10T13:13:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nnext, the fragment `#key-2` is dereferenced to a verification method that contains a `publicKeyJwk` property.\r\n```",
              "createdAt": "2023-07-10T13:13:03Z",
              "updatedAt": "2023-07-10T13:13:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auMmI",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:15:28Z",
          "updatedAt": "2023-07-10T13:15:29Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I agree, I filed an issue for this: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/81",
              "createdAt": "2023-07-10T13:15:29Z",
              "updatedAt": "2023-07-10T13:15:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auNWu",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:17:04Z",
          "updatedAt": "2023-07-10T13:17:05Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Just being explicit.. and... because resolution and dereferencing are only described in the abstract in did core.\r\n\r\nMost of this text would not be needed if DID Core defined resolution and dereferencing more concretely",
              "createdAt": "2023-07-10T13:17:04Z",
              "updatedAt": "2023-07-10T13:17:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auN9b",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:18:20Z",
          "updatedAt": "2023-07-10T13:18:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "It's definitely a separate issue, the list is currently discussing all the possible ways to identify an organization with public keys... we are pretty sure we want to support DIDs, but we don't know how many other schemes we should support.",
              "createdAt": "2023-07-10T13:18:21Z",
              "updatedAt": "2023-07-10T13:18:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auOTR",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:19:03Z",
          "updatedAt": "2023-07-10T13:19:04Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Hard to fix, given DID Core doesn't define them either.\r\n\r\nAny more specific suggestion here?",
              "createdAt": "2023-07-10T13:19:03Z",
              "updatedAt": "2023-07-10T13:19:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auPNK",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:20:50Z",
          "updatedAt": "2023-07-10T13:20:51Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "fwiw, I plan to add that to the vc-jwt draft when it lands as well...\r\n\r\nHowever, I disagree that drafts of \"VCs\" are more relevant than OIDC, which has massive adoption.",
              "createdAt": "2023-07-10T13:20:50Z",
              "updatedAt": "2023-07-10T13:20:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auRRf",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:23:38Z",
          "updatedAt": "2023-07-10T13:23:39Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I agree with this comment, but I don't think it's clear enough to just point to the sections... it also breaks the flow of reading the document. \r\n\r\nProbably some stronger explanation up front and links to the relevant section of the document addresses this concern.",
              "createdAt": "2023-07-10T13:23:38Z",
              "updatedAt": "2023-07-10T13:23:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auT1J",
          "commit": {
            "abbreviatedOid": "8027ac5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:26:33Z",
          "updatedAt": "2023-07-10T13:26:34Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "It's an example... the point is JWTs are useless until they are profiled in a way that easier to adopt and ensures interop... thats what OIDC did for JWT, what will SCITT do for signed statements about software artifacts? \r\n\r\nThis is probably not conveyed well, and possibly more directly to the working group than readers of the draft... I suspect this whole section will need several iterations to get right.",
              "createdAt": "2023-07-10T13:26:33Z",
              "updatedAt": "2023-07-10T13:26:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5auUFj",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "@Sakurann thank you for such a thorough review!\r\n\r\nI filed issues for things I could not address easily in the current PR. \r\n",
          "createdAt": "2023-07-10T13:27:05Z",
          "updatedAt": "2023-07-10T13:28:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avbgF",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T15:42:18Z",
          "updatedAt": "2023-07-10T15:42:19Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "nit: linebreak on sentences across the PR",
              "createdAt": "2023-07-10T15:42:18Z",
              "updatedAt": "2023-07-10T15:42:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avkc2",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM to merge as a baseline for future discussion",
          "createdAt": "2023-07-10T16:03:07Z",
          "updatedAt": "2023-07-10T16:03:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5avlnD",
          "commit": {
            "abbreviatedOid": "cfa28e3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T16:06:02Z",
          "updatedAt": "2023-07-10T16:06:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I think we addressed this, with applying kristina's suggestions",
              "createdAt": "2023-07-10T16:06:02Z",
              "updatedAt": "2023-07-10T16:06:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avltf",
          "commit": {
            "abbreviatedOid": "e35ea17"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T16:06:16Z",
          "updatedAt": "2023-07-10T16:06:17Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "agreed, I removed it",
              "createdAt": "2023-07-10T16:06:16Z",
              "updatedAt": "2023-07-10T16:06:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5avl7z",
          "commit": {
            "abbreviatedOid": "c0cc154"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T16:06:49Z",
          "updatedAt": "2023-07-10T16:06:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "fix it, in editorial PR",
              "createdAt": "2023-07-10T16:06:49Z",
              "updatedAt": "2023-07-10T16:06:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOIvmHss5VBONZ",
      "title": "Small but important grammar/editorial fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/80",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A bunch of small but important drafting fixes. \r\nShouldn't be any controversial content changes in this one",
      "createdAt": "2023-07-09T17:40:43Z",
      "updatedAt": "2023-07-10T14:07:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "ec5677026a519c9d867a2093327b3d843740cde1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/editorial-nits",
      "headRefOid": "a06041729d5af9318f0ba9c1f3aa34692defd535",
      "closedAt": "2023-07-10T13:50:50Z",
      "mergedAt": "2023-07-10T13:50:50Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "8a7ffa3ca9a54ef77f6728c07a0f9c4800da5fb1"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK : The others authors have not even looked at it. We should avoid rapid merges like this. It sets a wrong precedence in the community.",
          "createdAt": "2023-07-10T13:54:22Z",
          "updatedAt": "2023-07-10T13:54:22Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @JAG-UK : The others authors have not even looked at it. We should avoid rapid merges like this. It sets a wrong precedence in the community.\r\n\r\nApologies, I took two thumbs-up to be good and was intending to set a clean base for the other open PRs that we might want to get in ahead of the 117 cut-off today. We have a call in an hour, if it's a problem we can revert\r\n",
          "createdAt": "2023-07-10T13:57:46Z",
          "updatedAt": "2023-07-10T13:57:46Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK I only see Orie Approval, so I would suggest we wait for other approvers, before merging this.",
          "createdAt": "2023-07-10T13:59:55Z",
          "updatedAt": "2023-07-10T13:59:55Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "@JAG-UK, I'd like to see this PR presented in the group for feedback, if that is okay.",
          "createdAt": "2023-07-10T14:03:09Z",
          "updatedAt": "2023-07-10T14:03:09Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @JAG-UK, I'd like to see this PR presented in the group for feedback, if that is okay.\r\n\r\nSure thing. If you both tick this I'll revert it: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/82\r\n",
          "createdAt": "2023-07-10T14:07:07Z",
          "updatedAt": "2023-07-10T14:07:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5aq2w0",
          "commit": {
            "abbreviatedOid": "51aa433"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, @JAG-UK\r\nGreat edits, thank you. Overall LGTM, with one minor nit/clarification of wording.",
          "createdAt": "2023-07-10T04:03:33Z",
          "updatedAt": "2023-07-10T04:10:28Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "> Breadth of access if critical so the Transparency \r\n\r\nWas this intended to be:\r\nBreadth of access **is** critical so the",
              "createdAt": "2023-07-10T04:03:33Z",
              "updatedAt": "2023-07-10T04:10:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at8KL",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T12:39:55Z",
          "updatedAt": "2023-07-10T12:39:55Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nProducing a Transparent Statement might be considered a form of notarization.\r\n```",
              "createdAt": "2023-07-10T12:39:55Z",
              "updatedAt": "2023-07-10T12:39:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at8VB",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T12:40:20Z",
          "updatedAt": "2023-07-10T12:40:21Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "avoiding normative language, not sure if its as much of a deal as it is at W3C",
              "createdAt": "2023-07-10T12:40:21Z",
              "updatedAt": "2023-07-10T12:40:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at8mk",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T12:40:59Z",
          "updatedAt": "2023-07-10T12:41:00Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nImplementations of Transparency Services might protect their Registry using a combination of trusted hardware, replication and consensus protocols, and cryptographic evidence.\r\n```",
              "createdAt": "2023-07-10T12:40:59Z",
              "updatedAt": "2023-07-10T12:41:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5at9Gs",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "my nits can be ignored",
          "createdAt": "2023-07-10T12:42:08Z",
          "updatedAt": "2023-07-10T12:42:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5auNsY",
          "commit": {
            "abbreviatedOid": "a060417"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T13:17:45Z",
          "updatedAt": "2023-07-10T13:17:46Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Only capitalized words are normative. So, it is completely fine to use \"may\" here.",
              "createdAt": "2023-07-10T13:17:45Z",
              "updatedAt": "2023-07-10T13:17:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 82,
      "id": "PR_kwDOIvmHss5VF3Fr",
      "title": "Revert \"Small but important grammar/editorial fixes\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/82",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reverts ietf-wg-scitt/draft-ietf-scitt-architecture#80",
      "createdAt": "2023-07-10T14:04:01Z",
      "updatedAt": "2023-10-23T23:24:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "8a7ffa3ca9a54ef77f6728c07a0f9c4800da5fb1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "revert-80-jag-uk/editorial-nits",
      "headRefOid": "de9fc0e78335bdb3eff50afcc16a9d7fc7580643",
      "closedAt": "2023-07-10T14:36:52Z",
      "mergedAt": "2023-07-10T14:36:52Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "99f9d3a5f6384810005e02e032ece48c7c479060"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5auu0N",
          "commit": {
            "abbreviatedOid": "de9fc0e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGMT!",
          "createdAt": "2023-07-10T14:16:48Z",
          "updatedAt": "2023-07-10T14:16:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOIvmHss5VG_TS",
      "title": "Various grammer and typo nits",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/85",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fairly big conflict rebase of the reverted #80, but hopefully all good and simple.",
      "createdAt": "2023-07-10T17:14:30Z",
      "updatedAt": "2023-10-23T23:24:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "8dd97759d1338abd48065cff000ef91e2a790297",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/fix-typos-for-117",
      "headRefOid": "88345d4f1e2688ade2e8ae1a1471ac0a9e59613f",
      "closedAt": "2023-07-10T17:56:44Z",
      "mergedAt": "2023-07-10T17:56:44Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "4e490bbe2c001874f4d1da7265fde8d92f7fffde"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Thanks a ton, Jon, for the thorough review! :+1: ",
          "createdAt": "2023-07-10T17:19:19Z",
          "updatedAt": "2023-07-10T17:19:19Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK Thank you again for Great work, much appreciated!",
          "createdAt": "2023-07-10T17:35:44Z",
          "updatedAt": "2023-07-10T17:35:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5awNvO",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "One non-blocking nit.",
          "createdAt": "2023-07-10T17:16:39Z",
          "updatedAt": "2023-07-10T17:18:20Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nTrust in the Transparency Service itself is supported both by protecting their implementation (using, for instance, replication, trusted hardware, and remote attestation of a system's operational state) and by enabling independent audits of the correctness and consistency of its Registry, thereby holding the organization that operates it accountable.\r\n```",
              "createdAt": "2023-07-10T17:16:39Z",
              "updatedAt": "2023-07-10T17:18:20Z"
            },
            {
              "originalPosition": 24,
              "body": "nitpicking",
              "createdAt": "2023-07-10T17:16:47Z",
              "updatedAt": "2023-07-10T17:18:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awP78",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:22:55Z",
          "updatedAt": "2023-07-10T17:22:55Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nBreadth of access is critical so the Transparency Service specified in this architecture cater to two types of audiences:\r\n```",
              "createdAt": "2023-07-10T17:22:55Z",
              "updatedAt": "2023-07-10T17:22:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awQpy",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:24:43Z",
          "updatedAt": "2023-07-10T17:24:43Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "@JAG-UK I think software was deliberately added as the current scope was only `software`",
              "createdAt": "2023-07-10T17:24:43Z",
              "updatedAt": "2023-07-10T17:24:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awQ4j",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:25:21Z",
          "updatedAt": "2023-07-10T17:25:22Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Sorry I just realized that software is already used in 194 so fine with it: now.",
              "createdAt": "2023-07-10T17:25:21Z",
              "updatedAt": "2023-07-10T17:25:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awR3W",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:27:42Z",
          "updatedAt": "2023-07-10T17:27:43Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nEach Transparency Service also defines its own Registration Policies, which MUST apply to all entries in the Registry.\r\n```",
              "createdAt": "2023-07-10T17:27:43Z",
              "updatedAt": "2023-07-10T17:27:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awTQa",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:30:45Z",
          "updatedAt": "2023-07-10T17:30:45Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nAn Issuer must first decide on a suitable format to serialize the Statement payload. For a software supply chain, payloads describing the software artifacts may, for example, include\r\n```",
              "createdAt": "2023-07-10T17:30:45Z",
              "updatedAt": "2023-07-10T17:30:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awTk0",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-10T17:31:39Z",
          "updatedAt": "2023-07-10T17:31:39Z",
          "comments": [
            {
              "originalPosition": 192,
              "body": "```suggestion\r\nOn one hand, this enables valid actors to detect and disambiguate malicious actors who issue contradictory Signed Statements to different entities (Verifiers, Auditors, Issuers), otherwise known as 'equivocation'.\r\n```",
              "createdAt": "2023-07-10T17:31:39Z",
              "updatedAt": "2023-07-10T17:31:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5awUnY",
          "commit": {
            "abbreviatedOid": "2629737"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! I have left few .nits, Please do consider before merging. \r\nYou have my approval to merge",
          "createdAt": "2023-07-10T17:34:38Z",
          "updatedAt": "2023-07-10T17:34:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOIvmHss5WP9Sr",
      "title": "MInor fix to fragment mismatch",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/88",
      "state": "MERGED",
      "author": "shigeya",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-24T16:25:03Z",
      "updatedAt": "2023-08-21T15:31:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "4e490bbe2c001874f4d1da7265fde8d92f7fffde",
      "headRepository": "shigeya/draft-ietf-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "2dd593446a4a8a8d110cbcf772f52f162898995d",
      "closedAt": "2023-08-21T15:31:15Z",
      "mergedAt": "2023-08-21T15:31:15Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0f468f4e36876a94489bf1748b838e52040655d3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5cFeRB",
          "commit": {
            "abbreviatedOid": "2dd5934"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks Good To Me!\r\n\r\nThanks",
          "createdAt": "2023-07-25T08:40:17Z",
          "updatedAt": "2023-07-25T08:40:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5enBAD",
          "commit": {
            "abbreviatedOid": "2dd5934"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-08-21T15:30:19Z",
          "updatedAt": "2023-08-21T15:30:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 94,
      "id": "PR_kwDOIvmHss5X5me_",
      "title": "Proposal for Section 6 - Signed Statement Issuance, Registration, and\u2026",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/94",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Attempt to clean up Section 6",
      "createdAt": "2023-08-14T16:16:43Z",
      "updatedAt": "2023-09-26T14:28:09Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f283c4167f8350f529ae2adb893118133fa0c553",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "59eb9735d8b3438e071c9b56c1c6cf301a8dbb24",
      "closedAt": "2023-09-26T14:27:59Z",
      "mergedAt": "2023-09-26T14:27:59Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0383ec2b5a23f11d1a42800aebbe38368e12376d"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Orie, you realize that you are commenting on text that I didn't suggest. This text has already been there in the submitted draft",
          "createdAt": "2023-09-19T16:14:41Z",
          "updatedAt": "2023-09-19T16:14:41Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig yes, I do realize that... The comment is still relevant to progressing the document, and its not a blocking change request (I approved the PR).",
          "createdAt": "2023-09-19T17:16:36Z",
          "updatedAt": "2023-09-19T17:16:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5eAmVe",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:27:07Z",
          "updatedAt": "2023-08-14T16:27:08Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Line 644 does not look right to me? Assuming that you want atleast one header and a statement as payload I will re-write the statement, ",
              "createdAt": "2023-08-14T16:27:07Z",
              "updatedAt": "2023-08-14T16:27:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eAnZV",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:30:01Z",
          "updatedAt": "2023-08-14T16:30:02Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nSigned Statements are CBOR encoded {{-CBOR}} and protected by CBOR Object Signing and Encryption (COSE {{-COSE}}). Additionally, it contains at least one or more headers and a set of statements as its payload.\r\n```",
              "createdAt": "2023-08-14T16:30:01Z",
              "updatedAt": "2023-08-14T16:30:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eAodM",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:32:59Z",
          "updatedAt": "2023-08-14T16:32:59Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "```suggestion\r\n3. Signed Statement validation.\r\n```",
              "createdAt": "2023-08-14T16:32:59Z",
              "updatedAt": "2023-08-14T16:32:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eAoz5",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-14T16:33:59Z",
          "updatedAt": "2023-08-14T16:33:59Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "```suggestion\r\n4. Apply Registration Policy: for named policies, the Transparency Service should check that the required Registration info attributes are present in the Signed Statement and apply the check described in Table 1.\r\n```",
              "createdAt": "2023-08-14T16:33:59Z",
              "updatedAt": "2023-08-14T16:33:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eLh6N",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T08:30:46Z",
          "updatedAt": "2023-08-16T08:30:47Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Accepted your wording suggestion",
              "createdAt": "2023-08-16T08:30:46Z",
              "updatedAt": "2023-08-16T08:30:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5eLlEv",
          "commit": {
            "abbreviatedOid": "c3168a0"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-16T08:38:03Z",
          "updatedAt": "2023-08-16T08:38:03Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "Fixed this issue.",
              "createdAt": "2023-08-16T08:38:03Z",
              "updatedAt": "2023-08-16T08:38:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXBjp",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-19T14:20:49Z",
          "updatedAt": "2023-09-19T14:20:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5hXCRZ",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:22:01Z",
          "updatedAt": "2023-09-19T14:22:01Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "we should NOT do this... we should use https://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/\r\n\r\nFor now, I would recommend simply saying `kid` is mandatory and MUST be an absolute DID URL.",
              "createdAt": "2023-09-19T14:22:01Z",
              "updatedAt": "2023-09-19T14:22:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXCu5",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:22:50Z",
          "updatedAt": "2023-09-19T14:22:50Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n- Content type (label: `3`): Media type of payload, as a string. For example, `application/spdx+json` is the media type of SDPX in JSON encoding.\r\n```",
              "createdAt": "2023-09-19T14:22:50Z",
              "updatedAt": "2023-09-19T14:48:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXEOn",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:24:25Z",
          "updatedAt": "2023-09-19T14:24:26Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Do we want to allow COAP? see also https://datatracker.ietf.org/doc/draft-ietf-cose-typ-header-parameter/\r\n\r\n`typ` is for the envelope, not the payload type, but the same CBOR media type stuff applies",
              "createdAt": "2023-09-19T14:24:25Z",
              "updatedAt": "2023-09-19T14:24:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXU3C",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:51:45Z",
          "updatedAt": "2023-09-19T14:51:45Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Tracking in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/100",
              "createdAt": "2023-09-19T14:51:45Z",
              "updatedAt": "2023-09-19T14:51:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5heQtW",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T10:41:00Z",
          "updatedAt": "2023-09-20T10:41:00Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n##  Signed Statement Envelope\r\n```",
              "createdAt": "2023-09-20T10:41:00Z",
              "updatedAt": "2023-09-20T10:41:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5heRdY",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T10:42:54Z",
          "updatedAt": "2023-09-20T10:42:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@hannestschofenig : As the Main heading for the section is `Signed Statement Issuance, Registration, and Verification`\r\n\r\nI think, it makes sense to introduce this section as `Signed Statement Envelope` The reason been (a) We are not discussing Issuance per say here\r\n\r\n(b) We do not have a fixed signed statement format, but we just have an Envelope which contains a `Payload`",
              "createdAt": "2023-09-20T10:42:54Z",
              "updatedAt": "2023-09-20T10:42:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5iA0eJ",
          "commit": {
            "abbreviatedOid": "35d970f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-26T14:10:15Z",
          "updatedAt": "2023-09-26T14:10:16Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "As discussed in the Editors meeting, address in another PR.",
              "createdAt": "2023-09-26T14:10:15Z",
              "updatedAt": "2023-09-26T14:10:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5iBAvS",
          "commit": {
            "abbreviatedOid": "59eb973"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-26T14:27:05Z",
          "updatedAt": "2023-09-26T14:27:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5iBAyI",
          "commit": {
            "abbreviatedOid": "59eb973"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with resolution",
          "createdAt": "2023-09-26T14:27:09Z",
          "updatedAt": "2023-09-26T14:27:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5iBBIW",
          "commit": {
            "abbreviatedOid": "59eb973"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM! After all the hard work !",
          "createdAt": "2023-09-26T14:27:46Z",
          "updatedAt": "2023-09-26T14:27:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOIvmHss5ZCfAo",
      "title": "Follow BCP 14 rules for SHOULD/SHOULD NOT",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/95",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #91 ",
      "createdAt": "2023-08-29T13:53:14Z",
      "updatedAt": "2023-09-19T14:51:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0f468f4e36876a94489bf1748b838e52040655d3",
      "headRepository": "ad-l/draft-ietf-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "184fbad4201b6aa3545e6d672bea4c2f539bd0d2",
      "closedAt": "2023-09-19T14:51:44Z",
      "mergedAt": "2023-09-19T14:51:44Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a7ba78e98d6089ffe5c5c95c51d582baef634233"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "please accept or dismiss my change suggestions, and ping me for a re-review.",
          "createdAt": "2023-09-05T14:06:59Z",
          "updatedAt": "2023-09-05T14:06:59Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "please accept or dismiss my change suggestions, and ping me for a re-review.",
          "createdAt": "2023-09-19T14:19:55Z",
          "updatedAt": "2023-09-19T14:19:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5fZfhz",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:07:51Z",
          "updatedAt": "2023-08-29T14:07:51Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nIssuers MAY update their DID Document at any time, for instance to refresh their signing keys or algorithms, but they SHOULD NOT remove or change any of their previous keys unless they intend to revoke all Signed Statements that are registered as Transparent Statements issued with those keys.\r\n```",
              "createdAt": "2023-08-29T14:07:51Z",
              "updatedAt": "2023-08-29T14:07:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZf0x",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:08:22Z",
          "updatedAt": "2023-08-29T14:08:23Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nThe Issuer's DID appears in the protected header of Signed Statements' Envelopes, while the version of the key from the DID Document used to sign the Signed Statement is written in the `kid` header.\r\n```",
              "createdAt": "2023-08-29T14:08:22Z",
              "updatedAt": "2023-08-29T14:08:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZgja",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:09:41Z",
          "updatedAt": "2023-08-29T14:09:42Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "nice!",
              "createdAt": "2023-08-29T14:09:41Z",
              "updatedAt": "2023-08-29T14:09:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZhbD",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:11:13Z",
          "updatedAt": "2023-08-29T14:11:14Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nThis attestation evidence can be supplemented with Receipts for the software and configuration of the service, as measured in its attestation report.\r\n```",
              "createdAt": "2023-08-29T14:11:13Z",
              "updatedAt": "2023-08-29T14:11:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZh47",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:12:02Z",
          "updatedAt": "2023-08-29T14:12:02Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\n- a Transparency Service MAY store evidence about the resolution of DIDs into DID Documents.\r\n```",
              "createdAt": "2023-08-29T14:12:02Z",
              "updatedAt": "2023-08-29T14:12:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZjdI",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:14:04Z",
          "updatedAt": "2023-08-29T14:14:04Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "I suggest we not invent a new parameter for this, can we use `iss`  via the CWT header draft:\r\nhttps://datatracker.ietf.org/doc/draft-ietf-cose-cwt-claims-in-headers/",
              "createdAt": "2023-08-29T14:14:04Z",
              "updatedAt": "2023-08-29T14:14:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZn-H",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:18:04Z",
          "updatedAt": "2023-08-29T14:18:05Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n- ts_identifier: The DID of the Transparency Service that issued the Receipt. Verifiers MAY use this DID as a key discovery mechanism to verify the Receipt; in this case the verification is the same as for Signed Claims and the signer MAY include the `kid` header parameter. Verifiers MUST support the `did:web` method, all other methods are optional.\r\n```",
              "createdAt": "2023-08-29T14:18:05Z",
              "updatedAt": "2023-08-29T14:18:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZo5D",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:18:58Z",
          "updatedAt": "2023-08-29T14:18:58Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "we should consider \"Statement Issuer\" vs \"Receipt Issuer\", for better clarity.",
              "createdAt": "2023-08-29T14:18:58Z",
              "updatedAt": "2023-08-29T14:18:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZpoX",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:19:42Z",
          "updatedAt": "2023-08-29T14:19:42Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "```suggestion\r\nVerifiers MAY be configured to re-verify the Issuer's signature locally, but this requires a fresh resolution of the Issuer's DID, which MAY fail if the DID Document is not available or if the statement's signing key has been revoked. Otherwise, the Verifier trusts the validation done by the Transparency Service during Registration.\r\n```",
              "createdAt": "2023-08-29T14:19:42Z",
              "updatedAt": "2023-08-29T14:19:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZrXU",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "we need to refer to \"manifest\" as \"controller document or did document\".",
          "createdAt": "2023-08-29T14:21:21Z",
          "updatedAt": "2023-08-29T14:21:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5fZtr9",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:24:47Z",
          "updatedAt": "2023-08-29T14:24:47Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "One method is \"mandatory\" to support, other DID Methods are optional, a transparency service MUST support at least 1 did method.",
              "createdAt": "2023-08-29T14:24:47Z",
              "updatedAt": "2023-08-29T14:24:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZugt",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:26:11Z",
          "updatedAt": "2023-08-29T14:26:12Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "TS must advertise the DID methods they support.\r\n\r\nIndependently, implementations MUST support did:web (but they may be configured not to accept it)",
              "createdAt": "2023-08-29T14:26:11Z",
              "updatedAt": "2023-08-29T14:26:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZ6BR",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:46:45Z",
          "updatedAt": "2023-08-29T14:46:46Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Move this requirement to the TS section",
              "createdAt": "2023-08-29T14:46:45Z",
              "updatedAt": "2023-08-29T14:46:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZ68f",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:48:30Z",
          "updatedAt": "2023-08-29T14:48:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Create a new issue to move this to a new place!",
              "createdAt": "2023-08-29T14:48:30Z",
              "updatedAt": "2023-08-29T14:48:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fZ_y9",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-08-29T14:57:32Z",
          "updatedAt": "2023-08-29T14:57:32Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "The verifier is interested in the authenticity of the issuer of the transparent statement and signed statement... The verifier trusts the TS to vet the issuer of the signed statement... the verifier benefits from the transparency service, if they can't trust the TS, there is no reason to do SCITT.",
              "createdAt": "2023-08-29T14:57:32Z",
              "updatedAt": "2023-08-29T15:04:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fy-Vs",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:39:41Z",
          "updatedAt": "2023-09-01T15:39:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "For interoperability there are a few choices: either we pick a DID method that is mandatory to implement or we have the TS support all methods listed in the document and clients can select one.\r\n\r\nWhich approach do you prefer?",
              "createdAt": "2023-09-01T15:39:41Z",
              "updatedAt": "2023-09-01T15:39:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fy_Kt",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:41:53Z",
          "updatedAt": "2023-09-01T15:41:53Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "What is a \"public service identity\"? Let's use terms that are well established. For example, do you want to say that the TS MUST have a certificate and a private key?",
              "createdAt": "2023-09-01T15:41:53Z",
              "updatedAt": "2023-09-01T15:41:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fy_95",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:43:27Z",
          "updatedAt": "2023-09-01T15:43:27Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I don't want to have normative language on attestation in this document because so far attestation hasn't been integrated. It appears strange to suddenly bring it up here.",
              "createdAt": "2023-09-01T15:43:27Z",
              "updatedAt": "2023-09-01T15:43:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzASN",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:44:10Z",
          "updatedAt": "2023-09-01T15:44:11Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Explain what exactly you want to store.",
              "createdAt": "2023-09-01T15:44:10Z",
              "updatedAt": "2023-09-01T15:44:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzBeG",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:47:15Z",
          "updatedAt": "2023-09-01T15:47:16Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "```suggestion\r\n- version: Receipt version number; MUST be set to `0` for implementation of this document.\r\n```",
              "createdAt": "2023-09-01T15:47:16Z",
              "updatedAt": "2023-09-01T15:47:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzBqu",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:47:49Z",
          "updatedAt": "2023-09-01T15:47:49Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "Everyone understands what the purpose of version numbers are. So, there is no need to talk about what could be done in the future to create a new version",
              "createdAt": "2023-09-01T15:47:49Z",
              "updatedAt": "2023-09-01T15:47:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5fzB6G",
          "commit": {
            "abbreviatedOid": "a0a7589"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-01T15:48:32Z",
          "updatedAt": "2023-09-01T15:48:32Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "But the TS signs the already signed claim. Wouldn't there be suddently two issuers there?",
              "createdAt": "2023-09-01T15:48:32Z",
              "updatedAt": "2023-09-01T15:48:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5f4FBy",
          "commit": {
            "abbreviatedOid": "c1ce4ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-03T14:28:33Z",
          "updatedAt": "2023-09-03T14:28:34Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "That would be one example. I am not sure, if limiting, for example, to certificate and private signing key is a useful thing to do here. Maybe it is, but it feels rather artificially constraining.\r\n\r\nMaybe this is also a symptom of a bigger problem? \"Identity\" is a hot topic in scitt (as the thread you started shows: https://mailarchive.ietf.org/arch/msg/scitt/kubTlBU7sKLSkTpHdVqudsY7U1Y). Maybe we should dedicate text on that topic (carefully, in order to support to operationalize) based on that discussion and then refer back to a corresponding section?",
              "createdAt": "2023-09-03T14:28:33Z",
              "updatedAt": "2023-09-03T14:28:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5gCD1U",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T14:08:05Z",
          "updatedAt": "2023-09-05T14:08:05Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Ping the issue link here to resolve this, thread",
              "createdAt": "2023-09-05T14:08:05Z",
              "updatedAt": "2023-09-05T14:08:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5gCEJ8",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T14:08:38Z",
          "updatedAt": "2023-09-05T14:08:38Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@hannestschofenig we discussed wanting a dedicated issue to discuss, and keeping this PR on topic.",
              "createdAt": "2023-09-05T14:08:38Z",
              "updatedAt": "2023-09-05T14:08:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5gCElP",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-05T14:09:25Z",
          "updatedAt": "2023-09-05T14:09:26Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "No, its find to have have a nested cose sign 1 with a different header.",
              "createdAt": "2023-09-05T14:09:25Z",
              "updatedAt": "2023-09-05T14:09:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXIXr",
          "commit": {
            "abbreviatedOid": "c1ce4ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:29:52Z",
          "updatedAt": "2023-09-19T14:29:52Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "+1",
              "createdAt": "2023-09-19T14:29:52Z",
              "updatedAt": "2023-09-19T14:29:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXJqE",
          "commit": {
            "abbreviatedOid": "effcc6f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:32:02Z",
          "updatedAt": "2023-09-19T14:32:03Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "+1",
              "createdAt": "2023-09-19T14:32:02Z",
              "updatedAt": "2023-09-19T14:32:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXJvS",
          "commit": {
            "abbreviatedOid": "effcc6f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:32:12Z",
          "updatedAt": "2023-09-19T14:32:12Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "+1",
              "createdAt": "2023-09-19T14:32:12Z",
              "updatedAt": "2023-09-19T14:32:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXJ1I",
          "commit": {
            "abbreviatedOid": "effcc6f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:32:21Z",
          "updatedAt": "2023-09-19T14:32:21Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "+1",
              "createdAt": "2023-09-19T14:32:21Z",
              "updatedAt": "2023-09-19T14:32:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXO7H",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:41:12Z",
          "updatedAt": "2023-09-19T14:41:13Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "Resolved with: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/94#discussion_r1330217675",
              "createdAt": "2023-09-19T14:41:12Z",
              "updatedAt": "2023-09-19T14:41:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXPvU",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:42:40Z",
          "updatedAt": "2023-09-19T14:42:41Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@ad-l  to file a separate issue",
              "createdAt": "2023-09-19T14:42:40Z",
              "updatedAt": "2023-09-19T14:42:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQFy",
          "commit": {
            "abbreviatedOid": "184fbad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:43:18Z",
          "updatedAt": "2023-09-19T14:43:18Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Now captured in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/97",
              "createdAt": "2023-09-19T14:43:18Z",
              "updatedAt": "2023-09-19T14:43:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQNO",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:43:31Z",
          "updatedAt": "2023-09-19T14:43:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
              "createdAt": "2023-09-19T14:43:31Z",
              "updatedAt": "2023-09-19T14:43:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQUz",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:43:43Z",
          "updatedAt": "2023-09-19T14:43:44Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
              "createdAt": "2023-09-19T14:43:43Z",
              "updatedAt": "2023-09-19T14:43:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXQ0s",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:44:35Z",
          "updatedAt": "2023-09-19T14:44:35Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/98",
              "createdAt": "2023-09-19T14:44:35Z",
              "updatedAt": "2023-09-19T14:44:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXR2W",
          "commit": {
            "abbreviatedOid": "80dd7e4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T14:46:27Z",
          "updatedAt": "2023-09-19T14:46:27Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Tracked in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/99",
              "createdAt": "2023-09-19T14:46:27Z",
              "updatedAt": "2023-09-19T14:46:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5hXSRZ",
          "commit": {
            "abbreviatedOid": "184fbad"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-19T14:47:12Z",
          "updatedAt": "2023-09-19T14:47:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 101,
      "id": "PR_kwDOIvmHss5auKk2",
      "title": "Update company for steve lasker",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/101",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-19T22:13:51Z",
      "updatedAt": "2023-09-21T03:59:10Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a7ba78e98d6089ffe5c5c95c51d582baef634233",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "update-org",
      "headRefOid": "d1713fdfa0ddb13305e6ceca49e68fd7a1205292",
      "closedAt": "2023-09-21T03:59:10Z",
      "mergedAt": "2023-09-21T03:59:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f283c4167f8350f529ae2adb893118133fa0c553"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5hdQNS",
          "commit": {
            "abbreviatedOid": "d1713fd"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-09-20T08:44:22Z",
          "updatedAt": "2023-09-20T08:44:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5hdQ6G",
          "commit": {
            "abbreviatedOid": "d1713fd"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "yes",
          "createdAt": "2023-09-20T08:45:45Z",
          "updatedAt": "2023-09-20T08:45:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDOIvmHss5bzXew",
      "title": "Remove feed",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/104",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR highlights how easy it would be to remove feed from the architecture, and notes that feed is redundant to `Reg_Info` which provides more flexibility and is already unbounded in terms of implementation complexity.",
      "createdAt": "2023-10-03T15:08:17Z",
      "updatedAt": "2023-10-20T16:02:12Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "transmute-industries/draft-ietf-scitt-architecture",
      "headRefName": "fix/remove-feed",
      "headRefOid": "86f0e2f56fd6bdaea8c09fbfaab44b292a0300c0",
      "closedAt": "2023-10-20T16:02:12Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, are you suggesting the existing [feed property](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-3-2.10.1) (tstr) moves to a named property under `reg_info`?  \r\n> Protected_Header = {\r\n>   1 => int               ; algorithm identifier\r\n>   3 => tstr              ; payload type\r\n>  4 => bstr              ; Key ID\r\n>  ; TBD, Labels are temporary\r\n>  391 => tstr            ; DID of Issuer\r\n>  ~~392 => tstr            ; Feed~~\r\n>  393 => Reg_Info        ; Registration Policy info\r\n>}\r\n\r\n```\r\nReg_Info = {\r\n  ? \"feed_id\": tstr,\r\n  ? \"register_by\": uint .within (~time),\r\n  ? \"sequence_no\": uint,\r\n  ? \"issuance_ts\": uint .within (~time),\r\n  ? \"no_replay\": null,\r\n  * tstr => any\r\n}\r\n```\r\n\r\nOr, are you saying SCITT doesn't have a well known feed property, and consumers need to decide their own name/value pairs within the `Reg_Info`?",
          "createdAt": "2023-10-03T23:04:53Z",
          "updatedAt": "2023-10-03T23:04:53Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "I very much prefered a world in which makers of statements MUST idenfify a feed. Knowing that there is some specific field that consumers and producers are using to co-ordinate the context of their statements lets me, as a TS implementor, organise data much more conveniently. \r\n\r\nI get this benefit without having to care a lot about exactly what form the feed id has. From my PoV it is just a tuple [DID, feed id]. I don't care that many issuers may make statements about the same feed id.\r\n\r\nIf I understand this change correctly, moving to reg info seems to make its presence optional ? And so I would have to start understanding where all the different issuers *chose* to make their equivlent of feed id known. \r\n\r\nIt's presense as a MUST does not require a strong opinion re what *form* it takes. I believe the standard would be much more practical and useful if the field was mandatory but its content were left to applications with some guidance from profiles.\r\n\r\n",
          "createdAt": "2023-10-04T09:30:12Z",
          "updatedAt": "2023-10-04T13:25:48Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Feed was previously defined as a string separate from reg info.\n\nAfter this PR is merged you could add feed as a new property of reg info, along with guidance on its use, or leave it unspecified which would essentially be equivalent to what the spec says now.\n\nSince the structure of feed is not defined, this PR doesn't impact interoperability.\n\nIssuers might prefer to use different expressions of feed in reg info, for example cpe and gtin... what happens if they want to include both? \n\nWhat about all 3 { feed, cpe, purl } ?\n\nRemoving feed doesn't prevent properties from being added to reg info and as has been discussed at great length, feed isn't the only member of the protected header that transparency services can index on.\n\n\n\n",
          "createdAt": "2023-10-04T23:57:35Z",
          "updatedAt": "2023-10-04T23:57:35Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Removing feed from the protected header also makes room for using feed to describe the index exposed by the transparency service without confusing that with the topic identifier the issuer included in reg info.\n\n",
          "createdAt": "2023-10-05T00:02:23Z",
          "updatedAt": "2023-10-05T00:02:23Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> Since the structure of feed is not defined, this PR doesn't impact interoperability.\r\n\r\nAh, this is where we differ. I see its presence and its definition as 'an opaque statement issuer identifier' as crucial from the perspective of practical applications and interoperability. Without it the context of statements seems entirely arbitrary.\r\n\r\n> Issuers might prefer to use different expressions of feed in reg info\r\n\r\nThey are welcome to do so, and I can see plenty of places that could be useful. I see that as supplimentary to the basic utility of a feed identifier as a co-ordination context.\r\n\r\n> Removing feed doesn't prevent properties from being added to reg info \r\n\r\nNeither does keeping it think ?\r\n\r\n> has been discussed at great length, \r\n\r\nI understood the issue with feed was the attempt to make it more structured than an 'opaque issuer defined value'. I see the attempt at adding mandatory structure, possibly even 'strongly recommended' structure as undermining the applicability of the standard.\r\n\r\n\r\n> feed isn't the only member of the protected header that transparency services can index on.\r\n\r\nOk, great, what do you think is more appropriate here, what am i missing ?",
          "createdAt": "2023-10-05T10:16:17Z",
          "updatedAt": "2023-10-05T10:17:01Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 I beg to differ. Feed should not be part of RegInfo\r\n\r\nThe reason I see it this way is:\r\n\r\n1. Feed is an additional information about the Statements made for the Artifact, How issuer would like to identify all the Statements pertaining to the Artifact. It has All Statements Scope (about an artifact)\r\n2. Registration Information container is for about the registration specific aspect of the specific command, When it was registered. Till what time it has a validity etc. It has per Command Scope.\r\n3. We should not link the two as the scope is different!\r\n4. Any other comments are Welcome!",
          "createdAt": "2023-10-05T10:38:16Z",
          "updatedAt": "2023-10-05T10:38:16Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "FWI: \r\n\r\nWhen I saw 'feed' in the earlier work presented as just a string it struck me as a simple, powerful and practical way to have a base line context for statements.\r\n\r\nWhen I got a sense of the efforts to add structure to it I didn't think happy thoughts. I just couldn't see how there could be 'one way'.\r\n\r\nIf it moves the world forward to stop talking about it and leave it out, we can of course work with that. It could always come a long later if it is realy as useful as I think it is.\r\n\r\nIt does seem to mean that trusted service implementations will all be inventing different ways to contextualise statements. Possibly that is actually the right thing, and scitt users should be aware of the specifics of each TS. \r\n\r\nThe presence of feed as 'a string' seemed to offer a really good baseline - as long as it didn't try to be opinionated about structure.",
          "createdAt": "2023-10-05T10:40:04Z",
          "updatedAt": "2023-10-05T10:40:36Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "RegInfo is about feed... because it will be used to order the feed by the ts..the RDF style feed, would look like:\n\nfeed: {\nid : // graph node id\ntype: // graph node type\n... }\n\nThe whole idea of registering something is to be able to come back and see filtered views of what has been registered.\n\nSince feed has no structure, it is extraneous to reg info.\n\nPerhaps an alternative PR will propose an informative way that the transparency service processes feeds, maybe something like:\n\nselect * from feeds where feed.id = device.id\n\nBut the same thing can already be accomplished by indexing on any of the other custom properties the ts registration policy allows.\n\nAnother alternative would be to make the registration policy normative and require feed to be present.\n\nI'm open to other solutions, let's see some PRs :)\n\n",
          "createdAt": "2023-10-05T12:42:44Z",
          "updatedAt": "2023-10-05T12:44:31Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR could be merged first, then https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108 could address the CDDL changes, and https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107 could be updated to find replace \"Feed\" with \"Subject\" / \"sub\" and or tag 2.\r\n\r\n",
          "createdAt": "2023-10-07T14:02:19Z",
          "updatedAt": "2023-10-07T14:02:19Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "The purpose of the `feed`\u200b header is to allow a single issuer `iss`\u200b to sign for different purposes.\r\n\r\nFor example:\r\n\r\n* A Microsoft product group may have a single `iss`\u200b identifier. That product group may produce a collection of software products, each packaged as a container. Each of those containers has a different purpose. The product group can indicate that purpose in the `feed`\u200b. When a new container image for `feed`\u200b \"my-https-front-end\" is produced, the signed statement for it can be distinguished from the signed statements for the \"my-database-connector\" container image (and all of its versions).\r\n* An operator of an online service single `iss`\u200b identifier. That operator may produce a series of signed statements regarding the software they run with `feed` \"our-software-product\" and, separately, a series of signed statements regarding which versions of their software customers should currently be using, with `feed` \"our-software-usage-policy\".\r\n* A foundation that produces an open source library may have a single `iss`\u200b identifier. That foundation might release a series of signed statements for their x86 binaries with `feed` \"oss-library-x86-64\" and a separate one for ARM binaries with `feed` \"oss-library-aarch64\".\r\n\r\nWithout a header that indicates the purpose of the signed statement, there is a confusion attack. For example:\r\n\r\n* An online service provider may intend to run a \"my-database-connector\" container from some issuer. Due to a malicious confusion attack, they are given signed statements for a \"my-database-connector-with-debug-backdoor\" container.\r\n\r\nIn other words: without a `feed`\u200b, an `iss`\u200b can only be used for a single purpose.\r\n\r\nThe name `feed` (as opposed to, say, `purpose`) is to indicate that the signed statements may be augmented or superceded with additional signed statements for the same purpose. For example, a software product may have a new version released for the same `feed`.\r\n",
          "createdAt": "2023-10-11T00:38:47Z",
          "updatedAt": "2023-10-11T00:38:47Z"
        },
        {
          "author": "edoardogiordano",
          "authorAssociation": "NONE",
          "body": "As other already mention I feel the need to have an identifier that MUST be present to differentiate between different products within the same issuer.\r\n\r\n> This PR could be merged first, then #108 could address the CDDL changes, and #107 could be updated to find replace \"Feed\" with \"Subject\" / \"sub\" and or tag 2.\r\n\r\nIn my understanding your suggestion here is to separate the concept of an identifier, which would be the sub field of the CWT claim and the concept of the feed which would allow more complex references between various statements. If this is the intended behavior, than I agree this could be the way to proceed.",
          "createdAt": "2023-10-11T07:58:10Z",
          "updatedAt": "2023-10-11T08:24:51Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@sylvanc So according to your definition a `Feed` is an information about a Product. it is not clear to me whether the Feed identify a specific revision of the product or it associates to any/all revisions of a product.\r\nThen if it pertains to a all revisions, then how a statement about a specific revision can be identified ?\r\n\r\nDo we need to recommend the same in the Architecture document ?\r\n\r\nAlso the existing Feed definition implied, multiple issuers can use the Feed to identify statements pertaining to an Artifact.\r\n\r\nWe need to clearly define, 1. Purpose 2. Scope 3. Usage examples of Feed before introducing into the specification.\r\n\r\nOtherwise, it triggers confusion/ambiguity in the Specification.\r\n\r\nI recommend we Remove Feed from the existing specification, come up with a clear proposal which defines 1.2. & 3. above and then re-introduce the same",
          "createdAt": "2023-10-11T09:44:03Z",
          "updatedAt": "2023-10-11T09:44:03Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "No, `feed` is not a product. A `feed` identifies an unbounded sequence of statements about the same topic. It is a _purpose_, with the explicit ability to continue to make new statements for that purpose.\r\n\r\nA signed statement is meaningless without both an issuer `iss` and a `feed`. Removing it creates a situation where a relying party must do a \"deep dive\" of the payload in order to guess at the statement's purpose.",
          "createdAt": "2023-10-11T14:13:54Z",
          "updatedAt": "2023-10-11T14:13:54Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Multiple Issuers, X, Y,Z are making statements about the same product P.\r\n\r\nThis resonates with me, as it accomplishes the scenarios entities do today. \r\n\r\n> An Issuer : X is issuing statements about Multiple products (P, Q, R):\r\n\r\nThis one is less clear. Can we articulate how the above could be used in practice? Trying to correlate across multiple Artifacts (products as noted above) feels like a conflation and complication. Rather than attempt to make a statement about multiple artifacts, why not make the statement on each artifact?\r\n\r\n> A `feed` identifies an unbounded sequence of statements about the same topic. It is a _purpose_, with the explicit ability to continue to make new statements for that purpose.\r\n\r\nThis seems consistent with: [Attempt clarification of Feed purpose and differentiate from reg_info #107](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107)\r\n\r\nIf we can ground the designs in the problems we're trying to solve, ([the use cases](https://www.ietf.org/archive/id/draft-ietf-scitt-software-use-cases-01.html)) we might be able to better address a proposal. \r\nFrom: [Use CWT Claims in Headers: comment](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108#issuecomment-1753959506)\r\n\r\nThe thing I'd like to test with this discussion is whether two or more identities can make statements about the same artifact.\r\n\r\n1. Wabbit Networks (_the identity `391: did`_) releases their `net-monitor v1` software (_the Artifact_)\r\n1. Wabbit Networks publishes a Signed Statement using a `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"391: DID\":=\"wabbitnetworks\"` on their `scitt.wabbit-networks.io` service. \r\n1. Wabbit Networks has an auditor publish a signed statement: `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"391: did\":=\"coyote-security\"` on the same `scitt.wabbit-networks.io` service.\r\n1. Cosmic security, Mitre, and other independent publishers make statements about the same Artifact\r\n    - `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"391: did\":=\"cosmicsecurity\"` on their `scitt.cosmic-security.io` service. \r\n    - `\"392: feed\": \"wabbitnetworks-netmonv3linux` and `\"identity\":=\"mitre\"` on their `scitt.mitre.org` service. \r\n\r\nAs a consumer, ACME Rockets can\r\n- query the `scitt.wabbit-networks.io` service, to get statements associated with the net-monitor v1 software package.\r\n- query `scitt.mitre.org` for any public statements, using `\"392: feed\": \"wabbitnetworks-netmonv3linux` as the means to find statements from Mitre for the Wabbit Networks, net-monitor v1 software.\r\n- optionally query `scitt.cosmic-security.io` as they specialize in aerospace software, providing deeper insights for the specific aerospace vertical.\r\n\r\nACME Rockets (_the consumer_) can choose to trust the statements because they trust the independent identities making statements. Which endpoints they query is up to them. They could equally choose to NOT trust Coyote Security, (because who trusts the Coyote?), or because they're not tailored to the unique needs Cosmic Security addresses.\r\n\r\nIn the above case, `392: feed` is used to independently identify a collection of statements about an artifact, independently from the identity, and consistent across SCITT Transparency Service Instances\r\n\r\nIs the above usecase one we're trying to solve? \r\n- If not, what is the problem we're solving, and how would someone implement the above?\r\n- If so, does `392: feed` and `391: did` solve the problem? If not, what are the alternatives?\r\n",
          "createdAt": "2023-10-11T14:27:35Z",
          "updatedAt": "2023-10-11T14:27:35Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "That's a great use case. Yes, any `iss` can make a statement with a given `feed`. But `feed` isn't a \"controlled\" or \"owned\" value - no need for registering it. The tuple of (`iss`, `feed`) identifies the sequence of statements from an issuer - which works well with your Coyote example.",
          "createdAt": "2023-10-11T14:42:33Z",
          "updatedAt": "2023-10-11T14:42:33Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2023-10-18T16:30:26Z",
          "updatedAt": "2023-10-18T16:30:26Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm withdrawing this PR, however I may object to the current text in future published revisions. \r\n\r\nI look forward to reviewing the next draft.",
          "createdAt": "2023-10-20T16:02:12Z",
          "updatedAt": "2023-10-20T16:02:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5jk-qj",
          "commit": {
            "abbreviatedOid": "86f0e2f"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-11T09:48:39Z",
          "updatedAt": "2023-10-11T09:48:39Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "The existing specification statements here are extremely confusing to me!\r\n\r\nI think, we should clearly distinguish the two use cases and describe them individually.\r\n\r\nUse Case 1:\r\nAn Issuer : X is issuing statements about  Multiple products (P, Q, R):\r\n\r\nUse Case 2:\r\nMultiple Issuers, X, Y,Z are making statements about the same product P.\r\n\r\nWe need to have these two cases clearly covered in the specificiation.",
              "createdAt": "2023-10-11T09:48:39Z",
              "updatedAt": "2023-10-11T09:48:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDOIvmHss5b0EEr",
      "title": "Cleanup of remaining references to Claims. ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/105",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #15, #16 and #8",
      "createdAt": "2023-10-03T17:01:11Z",
      "updatedAt": "2023-10-06T00:45:38Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0383ec2b5a23f11d1a42800aebbe38368e12376d",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "claim-cleanup",
      "headRefOid": "ce0b9f4d64668f3a96059d9d665fa3ea97f31af5",
      "closedAt": "2023-10-06T00:45:38Z",
      "mergedAt": "2023-10-06T00:45:38Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e6e4f1831ac8d8b21696d7be199b26775da1d447"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5i9bxs",
          "commit": {
            "abbreviatedOid": "ce0b9f4"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, thanks for finishing this off",
          "createdAt": "2023-10-05T16:23:14Z",
          "updatedAt": "2023-10-05T16:23:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDOIvmHss5b1SWs",
      "title": "Markdown Formatting Fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/106",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A number of markdown formatting errors caused [i-d-template](https://github.com/martinthomson/i-d-template/) to fail processing and rendering.\r\n\r\nAs an example, see [section-5.1.1.1-5](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1-5)",
      "createdAt": "2023-10-03T20:50:21Z",
      "updatedAt": "2023-10-06T00:49:58Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e6e4f1831ac8d8b21696d7be199b26775da1d447",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "markdown-cleanup",
      "headRefOid": "780466cec1c3d2dcf8faa5ea21bd28de2ac4ae75",
      "closedAt": "2023-10-06T00:49:58Z",
      "mergedAt": "2023-10-06T00:49:58Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "37dbbc686c529bdc89765f18e8fafd20b732f387"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5i9bjK",
          "commit": {
            "abbreviatedOid": "b3bd2f0"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM - nobody loves broken markdown :-)",
          "createdAt": "2023-10-05T16:22:39Z",
          "updatedAt": "2023-10-05T16:22:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 107,
      "id": "PR_kwDOIvmHss5cItAF",
      "title": "Attempt clarification of Feed purpose and differentiate from reg_info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/107",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is an attempt to break the deadlock on Feeds vs searchability etc.\r\n\r\nWithout making any normative changes (I hope!) I seek to clarify a handful of issues:\r\n\r\n- Why do we need Feed at all? Because it is the very simple but essential way of ensuring the desired goal of non-equivocation. It makes it practical to discover or eliminate equivocation through a very simple but powerful way of linking related Transparent Statements together, and providing a very simple way of enable pre-commitment for statements of fact and accountability. In less fancy but as useful ways it also ensures that the relying party or someone with a copy of one Transparent Statement in their hands can ensure completeness of the set they're evaluating, and confirm that they are up-to-date with supply chain information that can move very fast.\r\n\r\n- Does Feed need a structure? No, assuming the above is the purpose of grouping statements together then it doesn't mater what it's called as long as it's the same for all items in the group. This again cements the need for it to be in the Envelope though, since otherwise coordinating all the points in various systems that would need to know what value to put in there would be impractical. By having it in the Envelope anyone with a single Transparent statement from the Feed would know what to use for either making new statements or looking in the TS for related statements.\r\n\r\n- Can Feed just be a part of reg_info? No, because reg_info is defined for a very different purpose. Registration Policies are also very complicated and need work, but I don't think they need work to close this particular issue.\r\n\r\nWhile there are still clarity issues in the spec which I would love for us to address soon, I think this minimal change makes it possible to move on and removes the pollution from the discussion about types of identity, self-describing serialised data structures, and the like. Crucially, in keeping with the findings from -117, I believe it shows that it is possible to carry the 'findability' information that was required by the applications building on top of SCOITT building blocks without going outside our charter and defining things at the semantic or application layer. ",
      "createdAt": "2023-10-06T17:28:23Z",
      "updatedAt": "2023-10-23T23:23:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "40dc274de6b72b476be88938bc5a008d6afb4d1c",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "dev/jag-uk/clarify-feed",
      "headRefOid": "caae2e893be38a85985b582791cf7abcf70d4a05",
      "closedAt": "2023-10-20T19:24:48Z",
      "mergedAt": "2023-10-20T19:24:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e9bd8209be9085a6dcb5a935e5cba5a676c75835"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I've fine taking the changes in this PR as is, but I think Feed should still be removed / replaced with COSE conventions, see https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108",
          "createdAt": "2023-10-07T14:04:29Z",
          "updatedAt": "2023-10-07T14:04:48Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Could someone please describe what a \"registered claim name\" is? For example, using a \"Registry of Deeds\"  analogy, would Book and Page number,be considered the \"registered claim name\"?",
          "createdAt": "2023-10-07T18:26:20Z",
          "updatedAt": "2023-10-07T18:26:20Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards in COSE and JOSE, there are names like \"iss\" and \"sub\" that are already registered in iana, and there are \"private names\" like \"vendor_branding_info\", that are not registered.\n\nRegistered names are established by updating the registries which requires publishing documents usually.\n\nPrivate names are ones that people decided to use, without registering them.\n",
          "createdAt": "2023-10-08T13:15:49Z",
          "updatedAt": "2023-10-08T13:15:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2023-10-18T16:29:57Z",
          "updatedAt": "2023-10-18T16:29:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR adds clarity and works well with the recent PRs (#113)\r\nAre there any objections to merging? If so, please identify what should be changed prior, and what couldn't be resolved with additional PRs of clarity.",
          "createdAt": "2023-10-18T19:10:28Z",
          "updatedAt": "2023-10-18T19:10:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Please merge asap",
          "createdAt": "2023-10-20T16:35:00Z",
          "updatedAt": "2023-10-20T16:35:00Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging to move the spec forward, with a cleanup PR coming. \r\nMerging current discussions will enable additional conversations at IETF 118.",
          "createdAt": "2023-10-20T19:24:38Z",
          "updatedAt": "2023-10-20T19:24:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5jGH9k",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I skimmed this and these edits were very good, and clarified for me in an educational way. I don't want to quibble on word choice, but want to better understand what promise means specifically in the context of feeds and non-equivocation.",
          "createdAt": "2023-10-06T17:59:05Z",
          "updatedAt": "2023-10-06T17:59:52Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Minor: This edit and all the others are great, but can we be a little more explicit about the what and/or how of the *promise* non-equivocation is in this context? The use of that word throws me off.",
              "createdAt": "2023-10-06T17:59:05Z",
              "updatedAt": "2023-10-06T17:59:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5jHRl2",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This seems fine, but I think the CDDL can be simplified and we can reuse registered claim names to accomplish the same thing",
          "createdAt": "2023-10-06T22:09:34Z",
          "updatedAt": "2023-10-06T22:09:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kRAha",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T12:23:31Z",
          "updatedAt": "2023-10-17T12:23:32Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Why should this statement be part of the specification text? Maybe we should try to fix the meaning of Reg_Info?\r\n\r\nPlease find a first attempt to bash at #113 ",
              "createdAt": "2023-10-17T12:23:32Z",
              "updatedAt": "2023-10-17T12:23:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kRGZy",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T12:35:13Z",
          "updatedAt": "2023-10-17T12:35:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I checked the definition of Verifier as it starts to move into more focus now. Pulling the definition in here for convenience:\r\n```\r\nan entity that consumes Transparent Statements (a specialization of Signed Statement Consumer),\r\nverifying their proofs and inspecting their Statement payload, either before using corresponding\r\nArtifacts, or later to audit an Artifact's provenance on the supply chain.\r\n```\r\n\r\nWith respect to the quoted definition:\r\n1.) `specialization of Signed Statement Consumer` seems to be outdated?\r\n2.) what kind of proofs in `verifying their proofs`?\r\n3.) payload opaque to the TS is inspected in `inspecting their Statement payload`?\r\n4.) what does `before using corresponding Artifacts` mean?\r\n\r\nWith respect to the proposed changes in line 189:\r\n1.) how do Verifiers `ensure completeness`? Is that via `verifying their proofs`?\r\n2.) `Statements linked to the one(s) they are evaluating` is done via the Feed value, right?",
              "createdAt": "2023-10-17T12:35:13Z",
              "updatedAt": "2023-10-17T12:35:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kdZK2",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:34:05Z",
          "updatedAt": "2023-10-18T15:34:05Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Nit: title case:\r\n```suggestion\r\n### Support for Multiple Artifacts\r\n```",
              "createdAt": "2023-10-18T15:34:05Z",
              "updatedAt": "2023-10-18T15:34:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfFmW",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T18:53:09Z",
          "updatedAt": "2023-10-18T18:53:09Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> Quoted definition on verifier:\r\n\r\n@henkbirkholz, should this be a separate PR to add any [clarification for Verifier within the terminology](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L244)? \r\n\r\n> 1.) how do Verifiers `ensure completeness`? Is that via `verifying their proofs`?\r\n> 2.) `Statements linked to the one(s) they are evaluating` is done via the Feed value, right?\r\n\r\nMy interpretation of the following: \r\n> Verifiers use the Feed to ensure completeness and non-equivocation in supply chain evidence by identifying all Transparent Statements linked to the one(s) they are evaluating.\r\n\r\nA consumer|verifier can query the statements about the ~feed~ subject. They may choose to query all statements, filter the statements by specific issuers, filter by specific contentTypes, or a mix of the each. But, all are related to a specific artifact, as defined by a ~feed~ subject.  Because they've identified \"the artifact\" by a subject\r\n",
              "createdAt": "2023-10-18T18:53:09Z",
              "updatedAt": "2023-10-18T18:53:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfGyV",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T18:56:20Z",
          "updatedAt": "2023-10-18T18:56:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@henkbirkholz when we say related to the same artifact, does this imply a historical record/tracking type of report for the \"same artifact\"? Thanks.",
              "createdAt": "2023-10-18T18:56:20Z",
              "updatedAt": "2023-10-18T18:56:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfKPr",
          "commit": {
            "abbreviatedOid": "4d6db74"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T19:04:58Z",
          "updatedAt": "2023-10-18T19:04:58Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "#113 was merged, and helps. This appears to add clarity and doesn't seem to conflict.\r\n\r\nI'm also thinking Registration Policy Metadata is the right heading, unless we rename Reg_Info ",
              "createdAt": "2023-10-18T19:04:58Z",
              "updatedAt": "2023-10-18T19:04:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kfSKG",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T19:13:39Z",
          "updatedAt": "2023-10-18T19:13:40Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "The definition of non-equivocation is a good topic that we could possibly provide a link. For example: https://www.dpss.inesc-id.pt/~rodrigo/nonequiv_podc12.pdf\r\n\r\nI think trying to describe non-equivocation in the spec is beyond the scope.",
              "createdAt": "2023-10-18T19:13:39Z",
              "updatedAt": "2023-10-18T19:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kffi8",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T19:34:08Z",
          "updatedAt": "2023-10-18T19:34:09Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@rjb4standards,\r\nAs an example:\r\nWabbit-networks ships the `net-monitor v1` software package.\r\nThey wish to provide:\r\n- SPDX SBOM\r\n- ClycloneDX SBOM\r\n- A VEX report\r\n- Updated VEX reports as they learn more\r\n- A statement when the product will no longer be maintained for support\r\n- A statement that says it's being replaced by v1.2\r\n\r\nAll those are statements that Wabbit-networks may make on that specific artifact.\r\n\r\nOther entities, such as Cosmic Security or MITRE can also make statements about the same artifact.\r\n\r\nAs a consumer, you would use the ~Feed~ | Subject to correlate all the statements about the same Artifact The `net-monitor v1` package.",
              "createdAt": "2023-10-18T19:34:08Z",
              "updatedAt": "2023-10-18T19:34:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kw3Y2",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Fixing `Feed` content in the doc to `CWT Subject Claim` occurrences where possible must be done before submission!",
          "createdAt": "2023-10-20T16:48:31Z",
          "updatedAt": "2023-10-20T16:48:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kxg7Z",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:20:06Z",
          "updatedAt": "2023-10-20T18:20:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I am leery of changing this to information about the Artifact.  The job of the transparency service is to countersign the signature not make any determination or claims about the content.  In fact there are scenarios where we don't want that information to be anywhere near the service.  ",
              "createdAt": "2023-10-20T18:20:06Z",
              "updatedAt": "2023-10-20T18:20:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxim_",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:24:03Z",
          "updatedAt": "2023-10-20T18:24:03Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The stitching of coherent information from multiple sources is complex.  The view from within a corporation could be the public published information augmented with the internal Legal or security endorsements.  Thus the thought that all relevant content flows through one Transparency services does not work here.  In addition, the decision of whether one identity can make statements about another's product is not under the control of the Transparency service.   The feed is not going to be authoritative in this context.",
              "createdAt": "2023-10-20T18:24:03Z",
              "updatedAt": "2023-10-20T18:24:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxkK1",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:28:31Z",
          "updatedAt": "2023-10-20T18:28:31Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I don't agree that the discriminator for a product is within the signed statements.  In the case where product identity is mandated within the artifact, requiring it to be replicated into the detached signature is unclear.  \r\nIn the use case where there is a global or major Transparency service, I could make a case that the product information hints to auditors more than the frequency of which statements are process, and that may be unacceptable.  Right now the information disclosure in a signed detached signature is limited.  Can someone make a case why we must\\should scope this here?  I could see it being necessary for some vertical process.",
              "createdAt": "2023-10-20T18:28:31Z",
              "updatedAt": "2023-10-20T18:28:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxlTu",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:32:04Z",
          "updatedAt": "2023-10-20T18:32:05Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "The registration\\configuration of trusted identity sources is a problem.  How this is addressed is the open issue.  I don't see a solution where there are hints in the receipts to know that configuration policy has changed to drive this.  Nor do I see every consumer binding to the feed.   The model of asking for every receipt for the policy also seems flawed to me.  The original refocus on \"feeds\" was to offer a solution here which is now been segmented off the discussion and left as a future problem.",
              "createdAt": "2023-10-20T18:32:05Z",
              "updatedAt": "2023-10-20T18:32:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxlgd",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:32:45Z",
          "updatedAt": "2023-10-20T18:32:46Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Why \"recently very recently\"?",
              "createdAt": "2023-10-20T18:32:45Z",
              "updatedAt": "2023-10-20T18:32:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxmDO",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:34:01Z",
          "updatedAt": "2023-10-20T18:34:01Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Thanks for the paper, I reviewed it, it was informative (but I likely need more time to understand it). To bring it back to the PR, I was asking if we have to define this term in this spec. Other terms, such as client in #102.\r\n\r\nIf that is not needed, feel free to resolve this comment. I will take it to mean I might be behind the shared understanding of other WG contributors and participants and it is well understood (and I am asking us to define water for specs in a specification about water purification level of obtuseness, to be funny about it).\r\n\r\nIf you would like it be added, I can make an issue and PR an explanation summarized from this and/or other sources. Let me know.",
              "createdAt": "2023-10-20T18:34:01Z",
              "updatedAt": "2023-10-20T18:34:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxmcm",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:35:12Z",
          "updatedAt": "2023-10-20T18:35:12Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Don't see this working?  The verification of a transparent statement should never require binding to a feed.  I thought we were talking about feeds for auditors not end users.  If so, making it that end user needs to see the Transparency Service directly and \"subscribe\" has issues.",
              "createdAt": "2023-10-20T18:35:12Z",
              "updatedAt": "2023-10-20T18:35:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxn7I",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:39:32Z",
          "updatedAt": "2023-10-20T18:39:32Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Don't agree as VEX style statements or claims can be augmented by the same entity and only the latter matters.  In that case the retrieval of all statements of a feed is a huge tax.  This concept of retrieval should be an application based solution (think a public registry) where graph style queries go.  It is at this layer the uber ownership and who gets to write new information per product is made.  That is not a function of the Transparency service. ",
              "createdAt": "2023-10-20T18:39:32Z",
              "updatedAt": "2023-10-20T18:39:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxoGE",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:40:08Z",
          "updatedAt": "2023-10-20T18:40:09Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Is this a shorthand way of alluding to the epoch works from the RATS WG? If so, should we word appropriately and reference that as one potential temporal approach, which can be substituted for others? (I am guessing here based on wording, but I could be very wrong).\r\n\r\nhttps://datatracker.ietf.org/doc/draft-birkholz-rats-epoch-markers/05/",
              "createdAt": "2023-10-20T18:40:08Z",
              "updatedAt": "2023-10-20T18:40:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxqQT",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:47:32Z",
          "updatedAt": "2023-10-20T18:47:33Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "We presume the statement below, \r\n\r\n> the retrieval of all statements of a feed is a huge tax\r\n\r\nwith this reservation below.\r\n\r\n> Don't agree as VEX style statements or claims can be augmented by the same entity and only the latter matters.\r\n\r\nGiven the higher-level architecture of SCITT, what about this sentence or current draft requires a consumer of a TS retrieve all statements of the feed at once or at all, but not look at one and query *if* there are statements that were published with metadata in one statement indicating others before or after this statement in a sequence? This goes outside the scope of SCITT, but inside VEX and other formats. In formats I have helped design or maintain, you can look at pointers to records, before, after, or show me the most current (from a data model perspective, not that different from how the IETF Datatracker works when you visit an old draft; you do not need to visit a page and read all drafts in a single page at once). So where is this called and why do we assume this here or elsewhere in the current spec draft?",
              "createdAt": "2023-10-20T18:47:33Z",
              "updatedAt": "2023-10-20T18:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxtRa",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:56:53Z",
          "updatedAt": "2023-10-20T18:56:53Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "@aj-stein-nist \r\n> feel free to resolve this comment. I will take it to mean I might be behind the shared understanding of other WG contributors and participants and it is well understood (and I am asking us to define water for specs in a specification about water purification level of obtuseness, to be funny about it).\r\n> If you would like it be added, I can make an issue and PR an explanation summarized from this and/or other sources. Let me know.\r\n\r\nYou're not behind, rather it's a great topic to clarify. Please do create an issue, and/or add a PR, it would be much appreciated as I'm sure others have the same question.",
              "createdAt": "2023-10-20T18:56:53Z",
              "updatedAt": "2023-10-20T18:56:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxueY",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:00:48Z",
          "updatedAt": "2023-10-20T19:00:49Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "This is a great topic as we dig deeper into receipts. Please open a new issue for receipts, or we can have that conversation in #103 ",
              "createdAt": "2023-10-20T19:00:48Z",
              "updatedAt": "2023-10-20T19:00:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxzsK",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:15:13Z",
          "updatedAt": "2023-10-20T19:15:13Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "@roywill \r\n> Don't agree as VEX style statements or claims can be augmented by the same entity and only the latter matters. In that case the retrieval of all statements of a feed is a huge tax. \r\n\r\nI agree with fetching all statements for an Artifact, based don't the `CWT_Claim => sub` may not be practical, or needed. \r\nThe verifier may want all statements, of a particular contentType, such as VEX, or all statements of a specific issuer, of a specific contentType. \r\nThese are all great topics when we discuss indexing, querying, etc. Which may likely be application layer concepts. \r\nWe can iterate this text a bit more, in a subsequent issue/PR",
              "createdAt": "2023-10-20T19:15:13Z",
              "updatedAt": "2023-10-20T19:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx0bS",
          "commit": {
            "abbreviatedOid": "1b88058"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:17:51Z",
          "updatedAt": "2023-10-20T19:17:51Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> Thus the thought that all relevant content flows through one Transparency services does not work here. \r\n\r\nAgreed. This is also why we need a property for multiple instances of SCITT to have a property to correlate upon :) \r\n\r\nResolving this, and open to additional Issues/PRs for additional clarity.",
              "createdAt": "2023-10-20T19:17:51Z",
              "updatedAt": "2023-10-20T19:17:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx04J",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:19:30Z",
          "updatedAt": "2023-10-20T19:19:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I believe this update is saying the registration policy can read the non-opaque envelope header to make the decisions. ",
              "createdAt": "2023-10-20T19:19:30Z",
              "updatedAt": "2023-10-20T19:19:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx15T",
          "commit": {
            "abbreviatedOid": "7e11273"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:22:50Z",
          "updatedAt": "2023-10-20T19:22:50Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nFor example, a Registry may only allow a Signed Statement to be registered if it was signed very recently, or may reject a Signed Statement if it arrives out of order in some sequenced protocol.\r\n```\r\nCorrecting, what may, or may not have been an intentional duplication of \"_recently_\"",
              "createdAt": "2023-10-20T19:22:50Z",
              "updatedAt": "2023-10-20T19:22:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 108,
      "id": "PR_kwDOIvmHss5cK9gO",
      "title": "Use CWT Claims in Headers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/108",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR shows that feed is redundant to CWT Claims in headers.\r\nIf this approach gains consensus we won't need to register special tags in the protected header, and can instead use the RFC that allows this to happen.\r\n\r\nFor context, see this discussion from the list:\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/cose/KNRge3vxXF3A2LY24DNo6ZQxrNc/",
      "createdAt": "2023-10-07T13:56:10Z",
      "updatedAt": "2023-10-20T16:53:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "transmute-industries/draft-ietf-scitt-architecture",
      "headRefName": "feat-cwt-claims",
      "headRefOid": "4d414a4aeea8d08f5a7741c45ac62e84b63dade8",
      "closedAt": "2023-10-20T16:53:07Z",
      "mergedAt": "2023-10-20T16:53:07Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0f5dc15c8c0f2d0372ab73e5f8d3f9b677b59210"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR also aligns with the terminology used in W3C, where:\r\n\r\n`issuer's make claims about subjects`.\r\n\r\nW3C requires additional structure for the identifiers of issuers and subjects, they need to be https://www.w3.org/TR/json-ld11/#node-identifiers\r\n\r\nJOSE and COSE do not restrict `iss` and `sub` like this, they are both `string or URI`.... just like `feed`.\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1\r\n- https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc8392#section-3.1.1\r\n- https://datatracker.ietf.org/doc/html/rfc8392#section-3.1.2\r\n\r\nI don't see why we would invent a new label for the \"identifier which the statements are in relation to\", when we already have `iss` and `sub`.",
          "createdAt": "2023-10-07T14:00:32Z",
          "updatedAt": "2023-10-07T14:00:53Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "The reason to have a new label is to avoid conflating it with something it isn't. Or at least something that it only imperfectly reflects.\r\n\r\nAs a trusted service implementor interested in making strong and clear assertions about completeness and non-equivocation over a series of statements, what do I do if I also see 'exp' or 'iat' in the context of 'iss' and 'sub' ? When I read a standard, from the perspective of a TS implementor again, that mentions just iss, and sub do I get to assume that I will never deal with those ?\r\n\r\nIf those are not permitted how is this actually a CWT ?\r\n\r\nThese things possibly have answers but I don't think my confusion will be an isolated one. What I would really like to see for feed id is wording like this:\r\n\r\n```\r\nTrusted Services MUST treat the feed id as an opaque series of bytes.\r\n Issuers MAY define encoding appropriate for their domain for the benefit\r\n of relying parties. Completeness and non-equivocation guarantees MUST \r\nonly be defined in terms of the opaque array of bytes comprising the feed id\r\n```\r\n\r\nI believe that permits issuers and relying parties full flexibility of expression _in the context_ of a very clearly articulated series of statements.\r\n\r\nIn otherwords, if we use 'sub' but define it that way, I don't see how it really is anything to do with 8392.\r\n\r\nAnd this would imply the restoration of DID. So we continue to have both",
          "createdAt": "2023-10-09T15:30:56Z",
          "updatedAt": "2023-10-09T15:38:35Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "> If those are not permitted how is this actually a CWT ?\r\n\r\nSigned statements are not CWTs, unless the payload content type is a CBOR map that uses registered claim names.\r\n\r\nYou can use CWT Claims in headers for payload that are xml files, this was discussed on the related draft, in the mailing list discussion I linked.\r\n\r\n`sub` as a arbitrary text or `feed` as arbitrary text are equivalent.\r\n\r\nThe only reason not to use `sub` would be that you have a well defined relationship between `sub` and `feed` and `iss` where you need all 3 to accomplish something... AFAIK, we don't have that.",
          "createdAt": "2023-10-09T15:40:56Z",
          "updatedAt": "2023-10-09T15:42:32Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> Signed statements are not CWTs, unless the payload content type is a CBOR map that uses registered claim names.\r\n\r\nOk, in that case, what is the TS expected to do ? I mean, it seems to force the TS to take account of the content type when before it did not ?\r\n\r\n",
          "createdAt": "2023-10-09T15:50:14Z",
          "updatedAt": "2023-10-09T15:52:08Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "> Ok, in that case, what is the TS expected to do ? I mean, it seems to force the TS to take account of the content type when before it did not ?\r\n\r\nThe TS has a registration policy that answers this question.\r\n\r\ncontent type has always been a parameter the TS might use to deny a registration, for example, my TS might accept XML SBOMs and reject JSON ones, or vice versa.\r\n\r\nRegardless of how you structure the info in a protected header, the registration policy and the architecture document have to make this clear.\r\n\r\nIt seems easier to make it clear, by reusing other specs, that provide context for implementers.",
          "createdAt": "2023-10-09T16:33:12Z",
          "updatedAt": "2023-10-09T17:15:15Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Aligning with existing specs is \ud83d\udcaf part of the SCITT Charter.\r\nLooking a [CWT Subect](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.2)\r\n>  The \"sub\" (subject) claim identifies the principal that is the\r\n   subject of the JWT.  The claims in a JWT are normally statements\r\n   about the subject.  The subject value MUST either be scoped to be\r\n   locally unique in the context of the issuer or be globally unique.\r\n   The processing of this claim is generally application specific.  The\r\n   \"sub\" value is a case-sensitive string containing a StringOrURI\r\n   value.  Use of this claim is OPTIONAL.\r\n   \r\n This covers a few things we've discussed, such as:\r\n- `case-sensitivity` - which I personally find frustrating as someone trying to differentiate the difference between `a123` and `A123` is just creating a future frustration point for users that get confused why a query for one fails to find the other. However, specifying this is fine, and best practice would be to lowercase all ids- but I digress \ud83d\ude44 \r\n- `StringOrURI value` covers the various ways an issuer may choose to represent their Artifact Feed identifier.\r\n\r\nThe thing I'd like to test with this discussion is whether two or more parties can make statements about the same artifact.\r\n\r\n1. Wabbit Networks (_the identity_) releases their `net-monitor v1` software (_the Artifact_)\r\n1. Wabbit Networks publishes a Signed Statement using a `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"wabbitnetworks\"` on their `scitt.wabbit-networks.io` service. \r\n1. Wabbit Networks has an auditor publish a signed statement: `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"coyote-security\"` on the same `scitt.wabbit-networks.io` service.\r\n1. Cosmic security, Mitre and other independent publishers make statements about the same Artifact\r\n    - `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"cosmicsecurity\"` on their `scitt.cosmic-security.io` service. \r\n    - `\"sub\": \"wabbitnetworks-netmonv3linux` and `\"iss\":=\"mitre\"` on their `scitt.mitre.org` service. \r\n\r\nAs a consumer, ACME Rockets can\r\n- query the `scitt.wabbit-networks.io` service, to get statements associated with the net-monitor v1 software package. \r\n- query `scitt.mitre.org` for any public statements, using `\"sub\": \"wabbitnetworks-netmonv3linux` as the means to find statements from Mitre for the Wabbit Networks, net-monitor v1 software.\r\n- optionally query `scitt.cosmic-security.io` as they specialize in aerospace software, providing deeper insights for the specific aerospace vertical.\r\n\r\nACME Rockets (_the consumer_) can choose to trust the statements because they trust the independent identities making statements. Which endpoints they query is up to them. They could equally choose to NOT trust Coyote Security, (because who trusts the Coyote), or because they're not tailored to the unique needs Cosmic Security addresses.\r\n\r\nCan `subject` be used to independently identify a collection of statements about an artifact, independently from the issuer, and consistent across SCITT Transparency Service Instances?",
          "createdAt": "2023-10-09T22:09:34Z",
          "updatedAt": "2023-10-09T22:09:34Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, so I think I understand where this PR is trying to go. With respect I just don't agree with what I understand of its intent :-)\r\n\r\nIs there  something you can\u2019t achieve where the CWT is just binary encoded in the feed id ? Provided everyone agrees the envelope feed id is an opaque string nobody needs to refer to the combination of other standards and specific reg policies to get base line confidence over the context for a series of statements.\r\n\r\nI beleive having any structure in the feed id will gaurantee divergent and incompatible combinations of TS, issuer, series-of-statements. In particular, regarding the re-use of 'sub', I base this assertion on significant practical exposure to iss/sub in the context of identity providers & JWT's.\r\n\r\nIf we go the structured road we will lose the opportunity to define a single universal means to identify a complete series of statements in the envelope of the statement.\r\n\r\nWith a single property, defined as an opaque byte string, I believe we will get a simplicity that is enabling rather than limiting: On top of that base, richer interpretations can be built for TS's and issuers that wish to be mutualy content aware. And all TS implementations can guarantee a base level of utility before considering added value.\r\n\r\nYet consumers of those same feeds, regardless of origin, will still enjoy the base line ability to correlate the series of statements and demonstrate completeness and so on.\r\n\r\n> It seems easier to make it clear, by reusing other specs, that provide context for implementers.\r\n\r\nSpeaking as a prospective implementor I  feel the opposite.\r\n\r\n> Can subject be used to independently identify a collection of statements about an artifact, independently from the issuer, and consistent across SCITT Transparency Service Instances?\r\n\r\nProvided that its value is opaque to the TS for the purposes of defining the complete series, yes I believe so. And very much think this is a good thing to aim for.\r\n\r\nThat is my stall set out as clearly as I can make it :-)\r\n",
          "createdAt": "2023-10-10T08:58:08Z",
          "updatedAt": "2023-10-10T09:02:03Z"
        },
        {
          "author": "sylvanc",
          "authorAssociation": "NONE",
          "body": "I left some comments in #104 related to this. tl;dr: I agree with @robinbryce that a `feed` defines an unbounded sequence of statements made for the same purpose.\r\n\r\nObviously, any tag can be reused to mean anything you like. We can declare that `sub` means `feed`. That may require significant documentation to dissuade people from putting the a subject into `sub` instead.\r\n\r\nDo I understand that the intention is to not put `iss` at the top level, but to embed it in `CWT_claims` ? Is the goal there for existing CWT relying parties to accept these?",
          "createdAt": "2023-10-11T14:35:18Z",
          "updatedAt": "2023-10-11T14:35:18Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2023-10-18T16:29:40Z",
          "updatedAt": "2023-10-18T16:29:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kc8WZ",
          "commit": {
            "abbreviatedOid": "1a9af1f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Feedback to prep this for a vote for using CWT as defined here, or replacing Feed with Subject (without CTW)",
          "createdAt": "2023-10-18T14:51:22Z",
          "updatedAt": "2023-10-18T14:57:48Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```\r\n",
              "createdAt": "2023-10-18T14:51:22Z",
              "updatedAt": "2023-10-18T14:57:48Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-18T14:51:31Z",
              "updatedAt": "2023-10-18T14:57:48Z"
            },
            {
              "originalPosition": 8,
              "body": "I was going to suggest removing:\r\n> , throughout this spec, this is also called feed.\r\n\r\nand use a separate PR to replace Feed with Subject. \r\nTo keep this PR isolated to these changes, I'd leave this sentence and cleanup in another PR: Update Feed to be Subject",
              "createdAt": "2023-10-18T14:54:49Z",
              "updatedAt": "2023-10-18T14:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwVAV",
          "commit": {
            "abbreviatedOid": "0a6db22"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:01:19Z",
          "updatedAt": "2023-10-20T16:01:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I object to removing this, until a later date... there is still too much confusion, keep this for now.",
              "createdAt": "2023-10-20T16:01:20Z",
              "updatedAt": "2023-10-20T16:01:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwl_X",
          "commit": {
            "abbreviatedOid": "0a6db22"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:26:55Z",
          "updatedAt": "2023-10-20T16:26:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n  2 => tstr; sub, the subject about which the statements are made, throughout this spec, this is also called feed.\r\n```",
              "createdAt": "2023-10-20T16:26:55Z",
              "updatedAt": "2023-10-20T16:26:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwn9v",
          "commit": {
            "abbreviatedOid": "4d414a4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:29:48Z",
          "updatedAt": "2023-10-20T16:29:48Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "why is 393 still in, when there is 13 in?",
              "createdAt": "2023-10-20T16:29:48Z",
              "updatedAt": "2023-10-20T16:29:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kwpqU",
          "commit": {
            "abbreviatedOid": "4d414a4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Reg_Info is still out of place here, but I can accept that is incremental progress",
          "createdAt": "2023-10-20T16:32:11Z",
          "updatedAt": "2023-10-20T16:32:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kw5e-",
          "commit": {
            "abbreviatedOid": "4d414a4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nIncremental progress, with #107, #114 coming in as well.",
          "createdAt": "2023-10-20T16:52:16Z",
          "updatedAt": "2023-10-20T16:52:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 110,
      "id": "PR_kwDOIvmHss5cx1rU",
      "title": "Kramdown format fixes, including width of code blocks - IETF Datatracker Update",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/110",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is intended to update https://datatracker.ietf.org/doc/draft-ietf-scitt-architecture/ as the current version has broken codeblock formatting and no longer reflects the current state of the draft\r\n\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1-5\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1.1-8\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.1.1-9\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.2-8\r\n- https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.html#section-5.1.1.2-9\r\n ",
      "createdAt": "2023-10-13T22:42:54Z",
      "updatedAt": "2023-10-16T15:54:25Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "format-width-fixes",
      "headRefOid": "44ccf1476290e2de51c21d1c963463b869a8d181",
      "closedAt": "2023-10-16T15:40:24Z",
      "mergedAt": "2023-10-16T15:40:24Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "512b43a01341759fdc1a0d25b63e06d2add1e1b9"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I looked through the changes and they are fine.\r\nThanks for fixing the over-long lines in the examples.",
          "createdAt": "2023-10-16T14:41:23Z",
          "updatedAt": "2023-10-16T14:41:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kJ_ny",
          "commit": {
            "abbreviatedOid": "8f77ee8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": ":ship: it",
          "createdAt": "2023-10-16T15:38:35Z",
          "updatedAt": "2023-10-16T15:38:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kJ_8Q",
          "commit": {
            "abbreviatedOid": "8f77ee8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T15:39:14Z",
          "updatedAt": "2023-10-16T15:39:14Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n2. Such Statements must be registered on a secure append-only Log, so that their provenance and history can be independently and consistently audited\r\n3. Issuers can efficiently prove to any other party the Registration of their Signed Statements; verifying this proof ensures that the Issuer is consistent and non-equivocal when producing Signed Statements\r\n```",
              "createdAt": "2023-10-16T15:39:14Z",
              "updatedAt": "2023-10-16T15:39:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 111,
      "id": "PR_kwDOIvmHss5c1SpL",
      "title": "Change Feed label 392 to bstr, representing an opaque series of bytes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/111",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This attempts to resolve the balance between a generic string and a structured string for how issuers and verifiers can identify \"a sequence of Signed Statements about the same Artifact.\", as [currently defined](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md?plain=1#L189)\r\n\r\nChanging to `bstr` enables an issuer to set the `Feed` to be a `sub`, and it also allows an issuer to use other identifier formats. \r\n\r\nThere's a great suggestion to use `sub`, as part of the CTW (PR #108). And at first it looks fairly simple.\r\n```cddl\r\nCWT_Claims = {\r\n  1 => tstr; iss, the issuer that is making statements\r\n  2 -> tstr; sub, the subject about which the statements are made, throughout this spec, this is also called feed.\r\n * tstr => any\r\n}\r\n```\r\n\r\nThe challenge is a CWT_Claim is far more expressive [as defined](https://www.iana.org/assignments/cwt/cwt.xhtml)\r\n\r\nFor an issuer and a verifier to clearly identify the specific artifact they are referencing with CWT_Claims, it would be both powerful and confusing for an issuer to specify which CWT_Claims properties they were using to identify the feed.\r\n\r\nAn issuer could add: \r\n\r\n```cddl\r\nCWT_Claims = {\r\n  1 => tstr; iss, the issuer that is making statements\r\n  2 -> tstr; sub, the subject about which the statements are made, throughout this spec, this is also called feed.\r\n  256 -> bstr; ueid, The Universal Entity ID \r\n  260 -> array; hwversion, the Hardware Version Identifier\r\n  2395 -> uint; psa-security-lifecycle, PSA Security Lifecycle\t\r\n   * tstr => any\r\n}\r\n```\r\n\r\nUsing the text in PR #103, changing the Feed to `bstr`, makes it clear the Feed is:\r\n\r\n> Feed:\r\n> : a logical collection of Statements about the same Artifact.\r\n> For any step or set of steps in a supply chain there will be multiple statements made about the same Artifact. Issuers use the Feed to create a coherent sequence of Signed Statements about the same Artifact and Verifiers use the Feed to ensure completeness and non-equivocation in supply chain evidence by identifying all Transparent Statements linked to the one(s) they are evaluating.\r\nFixe #11 ",
      "createdAt": "2023-10-15T15:41:11Z",
      "updatedAt": "2023-10-20T18:07:30Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "37dbbc686c529bdc89765f18e8fafd20b732f387",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "feed_as_bstr",
      "headRefOid": "b1e72c7b34df021160d4891bbe80546b9e50c6c7",
      "closedAt": "2023-10-20T18:07:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2023-10-16T15:12:02Z",
          "updatedAt": "2023-10-16T15:12:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing, in lieu of #108 ",
          "createdAt": "2023-10-20T18:07:30Z",
          "updatedAt": "2023-10-20T18:07:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kEXpp",
          "commit": {
            "abbreviatedOid": "b1e72c7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-15T20:29:02Z",
          "updatedAt": "2023-10-15T20:29:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdGZx",
          "commit": {
            "abbreviatedOid": "b1e72c7"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T15:06:33Z",
          "updatedAt": "2023-10-18T15:06:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 113,
      "id": "PR_kwDOIvmHss5dAcIl",
      "title": "Proposal to rephrase the Reg_Info definition",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/113",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #112 ",
      "createdAt": "2023-10-17T11:46:31Z",
      "updatedAt": "2023-10-23T23:23:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "512b43a01341759fdc1a0d25b63e06d2add1e1b9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "reg-info-patch1",
      "headRefOid": "3694890a62b8c77afa42f5655da0e116ede2ac9a",
      "closedAt": "2023-10-18T15:20:04Z",
      "mergedAt": "2023-10-18T15:20:04Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c02c19372d242fcf000310522c2926f7aff3edd6"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Good clarification, with a few nits to reduce and clarify the text",
          "createdAt": "2023-10-18T00:07:47Z",
          "updatedAt": "2023-10-18T00:07:47Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "All edits have been addressed. I believe this is ready for merging.",
          "createdAt": "2023-10-18T14:50:08Z",
          "updatedAt": "2023-10-18T14:50:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I would prefer \"The key/value pair semantics are application-specific, or even possibly specified by each Issuer for each of their Feed.\" but I am fine with both formulations. Thanks.\r\n\r\nThanks, @fournet \r\nSounds like we can address this suggestion separately and we can merge this as-is ",
          "createdAt": "2023-10-18T15:19:52Z",
          "updatedAt": "2023-10-18T15:19:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kWrR2",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:02:40Z",
          "updatedAt": "2023-10-18T00:02:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Registration Policy info (label: `TBD`, temporary: `393`): A map containing key/value pairs set by the Issuer which are sealed on Registration and non-opaque to the Transparency Service. The key/value pair semantics are specified by each Issuer or are specific to the Issuer and Feed tupel. Examples include: the sequence number of signed statements on a feed, Issuer metadata, or a reference to other transparent statements (e.g., augments, replaces, new-version, CPE-for).\r\n```",
              "createdAt": "2023-10-18T00:02:41Z",
              "updatedAt": "2023-10-18T00:02:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWrs4",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:04:32Z",
          "updatedAt": "2023-10-18T00:04:32Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n: the process of submitting a Signed Statement to a Transparency Service, applying the Transparency Service's Registration Policy, storing the Signed Statement in the Registry, producing a Receipt, and returning it to the submitting Issuer.\r\n```\r\nClarified \"it\" to be the signed statement, and not which policy was applied. \r\nAlthough, we should clarify if each statement references the policy(s) applied, or does the SCITT service make entries when a policy changes?",
              "createdAt": "2023-10-18T00:04:32Z",
              "updatedAt": "2023-10-18T00:04:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWryS",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:05:05Z",
          "updatedAt": "2023-10-18T00:05:05Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-18T00:05:05Z",
              "updatedAt": "2023-10-18T00:05:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWrz5",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:05:16Z",
          "updatedAt": "2023-10-18T00:05:16Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-18T00:05:16Z",
              "updatedAt": "2023-10-18T00:05:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kWr1x",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T00:05:28Z",
          "updatedAt": "2023-10-18T00:05:29Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Removing 2 extra blank lines",
              "createdAt": "2023-10-18T00:05:29Z",
              "updatedAt": "2023-10-18T00:05:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kXD5O",
          "commit": {
            "abbreviatedOid": "ec0464e"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T01:57:52Z",
          "updatedAt": "2023-10-18T01:57:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Very minor nit: tuple, not tupel in \"to the Issuer and Feed tupel.\" Otherwise, it makes content a little clearer for me.",
              "createdAt": "2023-10-18T01:57:52Z",
              "updatedAt": "2023-10-18T11:55:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kaNFc",
          "commit": {
            "abbreviatedOid": "f7fa9f3"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Great improvement, a couple of small suggestions",
          "createdAt": "2023-10-18T09:38:48Z",
          "updatedAt": "2023-10-18T09:43:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Registration Policy info (label: `TBD`, temporary: `393`): A map containing key/value pairs provided and controlled by the Issuer that are sealed on Registration and non-opaque to the Transparency Service. The key/value pair semantics are specified by each individual Issuer or are specific to the Issuer and Feed tuple. Examples include: sequence number of signed statement on feed, Issuer metadata, or reference to other transparent statements (e.g., augments, replaces, new-version, CPE-for).\r\n```",
              "createdAt": "2023-10-18T09:38:48Z",
              "updatedAt": "2023-10-18T09:43:25Z"
            },
            {
              "originalPosition": 11,
              "body": "We have the principle of 'long running operations' in SCITT and in order to be practical we can't define an API or components that block for the time it takes to settle or achieve finality on certain kinds of ledger systems. IN order to avoid the implication that Registration is a single atomic operation that starts with a Signed Statement and ends with a final Receipt. This suggestion still compels the TS to produce the receipt, but it can then be returned, or later fetched, depending on implementation.\r\n\r\n```suggestion\r\n: the process of submitting a Signed Statement to a Transparency Service, applying the Transparency Service's Registration Policy, storing the Signed Statement in the Registry, and producing a Receipt.\r\n```",
              "createdAt": "2023-10-18T09:43:08Z",
              "updatedAt": "2023-10-18T09:43:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kcsej",
          "commit": {
            "abbreviatedOid": "b24df6a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T14:25:53Z",
          "updatedAt": "2023-10-18T14:25:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- Registration Policy info (label: `TBD`, temporary: `393`): A map containing key/value pairs set by the Issuer which are sealed on Registration and non-opaque to the Transparency Service. The key/value pair semantics are specified by each Issuer or are specific to the Issuer and Feed tuple. Examples include: the sequence number of signed statements on a feed, Issuer metadata, or a reference to other transparent statements (e.g., augments, replaces, new-version, CPE-for).\r\n```",
              "createdAt": "2023-10-18T14:25:53Z",
              "updatedAt": "2023-10-18T14:25:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kc-bw",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-18T14:54:51Z",
          "updatedAt": "2023-10-18T14:54:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdAnI",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM as it addresses all feedback and clarifies the conversations",
          "createdAt": "2023-10-18T14:58:35Z",
          "updatedAt": "2023-10-18T14:58:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdDx7",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I would prefer \"The key/value pair semantics are application-specific, or even possibly specified by each Issuer for each of their Feed.\" but I am fine with both formulations. Thanks. ",
          "createdAt": "2023-10-18T15:03:59Z",
          "updatedAt": "2023-10-18T15:03:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdEqZ",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:05:32Z",
          "updatedAt": "2023-10-18T15:05:33Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: the process of submitting a Signed Statement to a Transparency Service, applying the Transparency Service's Registration Policy, and producing a Receipt.\r\n```",
              "createdAt": "2023-10-18T15:05:32Z",
              "updatedAt": "2023-10-18T15:05:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kdG7m",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:06:50Z",
          "updatedAt": "2023-10-18T15:06:50Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The registry might not store the signed statement... it might only store a \"leaf\" or \"hash\" of it... it only needs to store what is needed to produce the receipt.",
              "createdAt": "2023-10-18T15:06:50Z",
              "updatedAt": "2023-10-18T15:06:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kdIUz",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T15:07:37Z",
          "updatedAt": "2023-10-18T15:07:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdPuY",
          "commit": {
            "abbreviatedOid": "fce9528"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T15:16:45Z",
          "updatedAt": "2023-10-18T15:16:46Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Good catch",
              "createdAt": "2023-10-18T15:16:46Z",
              "updatedAt": "2023-10-18T15:16:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDOIvmHss5dKJ2Y",
      "title": "Rename Feed to Subject",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/114",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR addressing the conversation around Feed is redundant with Subject, as defined in CWT\r\n- [3.1.2.  sub (Subject) Claim](https://www.rfc-editor.org/rfc/rfc8392.html#section-3.1.2)\r\n    >    The \"sub\" (subject) claim has the same meaning and processing rules\r\n    >    as the \"sub\" claim defined in Section 4.1.2 of [RFC7519], except that\r\n    >    the value is a StringOrURI, as defined in Section 2 of this\r\n    >    specification.  The Claim Key 2 is used to identify this claim.\r\n- [4.1.2.  \"sub\" (Subject) Claim](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.2)\r\n    >    The \"sub\" (subject) claim identifies the principal that is the\r\n    >    subject of the JWT.  The claims in a JWT are normally statements\r\n    >    about the subject.  The subject value MUST either be scoped to be\r\n    >    locally unique in the context of the issuer or be globally unique.\r\n    >    The processing of this claim is generally application specific.  The\r\n    >    \"sub\" value is a case-sensitive string containing a StringOrURI\r\n    >    value.  Use of this claim is OPTIONAL.\r\n\r\nThis PR intentionally contrasts #108\r\n\r\nChoice for folks to vote upon:\r\n\r\n- [ ] Rename Feed to Subject\r\n- [ ] Should we also include CWT_Claims, which contains the subject #108 \r\n\r\nFixes #11 ",
      "createdAt": "2023-10-18T15:47:17Z",
      "updatedAt": "2023-10-20T18:06:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0f5dc15c8c0f2d0372ab73e5f8d3f9b677b59210",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "feed-becomes-subject",
      "headRefOid": "a8fed6ba50b710bef8e3695e281b964d83bc4521",
      "closedAt": "2023-10-20T18:06:53Z",
      "mergedAt": "2023-10-20T18:06:53Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "40dc274de6b72b476be88938bc5a008d6afb4d1c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kdp83",
          "commit": {
            "abbreviatedOid": "52d8851"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-18T16:03:52Z",
          "updatedAt": "2023-10-18T16:03:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kdrY7",
          "commit": {
            "abbreviatedOid": "52d8851"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "One small but important nit ",
          "createdAt": "2023-10-18T16:06:46Z",
          "updatedAt": "2023-10-18T16:08:19Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "...to which the statement _refers_, surely?",
              "createdAt": "2023-10-18T16:06:46Z",
              "updatedAt": "2023-10-18T16:08:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kd1Zz",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-18T16:22:13Z",
          "updatedAt": "2023-10-18T16:22:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kd4tD",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T16:26:01Z",
          "updatedAt": "2023-10-18T16:26:01Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Does the subject (old feed) is mandatory?\r\n\r\n",
              "createdAt": "2023-10-18T16:26:01Z",
              "updatedAt": "2023-10-18T16:26:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kd6fH",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-18T16:27:55Z",
          "updatedAt": "2023-10-18T16:27:56Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "I didn't make that explicit change, but yes an issuer of a signed statement must have a subject. ",
              "createdAt": "2023-10-18T16:27:55Z",
              "updatedAt": "2023-10-18T16:27:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kd8YR",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-10-18T16:30:02Z",
          "updatedAt": "2023-10-18T16:30:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kp1j-",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:28:39Z",
          "updatedAt": "2023-10-19T21:28:53Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Isn't 2 'crit`? Shouldn't 'sub' be nested in a 13 (see https://www.ietf.org/archive/id/draft-ietf-cose-cwt-claims-in-headers-06.html#name-representation)?",
              "createdAt": "2023-10-19T21:28:39Z",
              "updatedAt": "2023-10-19T21:30:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kqQ8P",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T22:36:07Z",
          "updatedAt": "2023-10-19T22:36:07Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Ahh, yes, I incorrectly pulled `2` from the CWT spec. \r\nIn this PR, we're not pulling in CWT. That is deferred to #108\r\nThis PR renames `Feed` to `Subject`, aligning with the definition of Subject, within CWT. \r\nCan we agree with this incremental step? If so, what tag should we use? I can repurpose 392, but I think we agree [cbor-tags](https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml) should have a common tag  for `subject`, which is outside the scope of this PR.\r\n\r\n- Do we agree with the rename?\r\n- What CBOR tag should we use?",
              "createdAt": "2023-10-19T22:36:07Z",
              "updatedAt": "2023-10-19T22:36:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kvbeS",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T14:20:31Z",
          "updatedAt": "2023-10-20T14:20:31Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "To unblock, I've set the label to 392 (previous temporary label), as a `bytestring`, similar to #111. This unblocks the rename, with the ability to relax to `string` if we decide, or possibly shift to a CWT (#108). ",
              "createdAt": "2023-10-20T14:20:31Z",
              "updatedAt": "2023-10-20T14:20:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kvc8k",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T14:22:35Z",
          "updatedAt": "2023-10-20T14:22:35Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Above reference is outdated. Please see updated [line 658](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/114/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R658)\r\n> `392 => bstr            ; Subject`",
              "createdAt": "2023-10-20T14:22:35Z",
              "updatedAt": "2023-10-20T14:22:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kxZwU",
          "commit": {
            "abbreviatedOid": "66f536e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:02:36Z",
          "updatedAt": "2023-10-20T18:02:36Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "With #108 merged, removing this entry. ",
              "createdAt": "2023-10-20T18:02:36Z",
              "updatedAt": "2023-10-20T18:02:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 115,
      "id": "PR_kwDOIvmHss5dZ77C",
      "title": "Adding Orie as a Contributor",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/115",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-20T17:06:20Z",
      "updatedAt": "2023-10-23T23:23:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0f5dc15c8c0f2d0372ab73e5f8d3f9b677b59210",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "dragging-orie-into-this",
      "headRefOid": "5906d79945eb5b974133740b127f2a930ef0eb38",
      "closedAt": "2023-10-23T21:26:51Z",
      "mergedAt": "2023-10-23T21:26:51Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "628504c60f9502468da32a50421a6c28626c76d9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kxDtY",
          "commit": {
            "abbreviatedOid": "fed0abe"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-20T17:13:20Z",
          "updatedAt": "2023-10-20T17:13:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5kx2ty",
          "commit": {
            "abbreviatedOid": "fed0abe"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:25:12Z",
          "updatedAt": "2023-10-20T19:25:12Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-10-20T19:25:12Z",
              "updatedAt": "2023-10-20T19:25:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kx20-",
          "commit": {
            "abbreviatedOid": "5906d79"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-20T19:25:36Z",
          "updatedAt": "2023-10-20T19:25:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOIvmHss5dbVz2",
      "title": "Cleanup for 118",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/118",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "General edits, cleanup of terminology, consistency, clarity, and chopping extra words, sentences and paragraphs to make it more consumable. \r\n\r\n**Guided by the \"Less is more\"** theory\r\n\r\nIf you feel something should be un-deleted, please quantify why it's so important and/or unique. \r\n",
      "createdAt": "2023-10-20T23:35:56Z",
      "updatedAt": "2023-10-23T23:23:18Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e9bd8209be9085a6dcb5a935e5cba5a676c75835",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "cleanup-for-118",
      "headRefOid": "1d8251f9b8581a179eaa34a4d2ead384ad3c168d",
      "closedAt": "2023-10-23T19:53:03Z",
      "mergedAt": "2023-10-23T19:53:03Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a1f98906191bb7bd15293957c01707c82fba6426"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Ready for review, before submission to the datatracker by Sunday evening PST",
          "createdAt": "2023-10-21T16:13:50Z",
          "updatedAt": "2023-10-21T16:56:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Delta from 117: https://author-tools.ietf.org/api/iddiff?url_1=https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-02.txt&url_2=https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/cleanup-for-118/draft-ietf-scitt-architecture.txt",
          "createdAt": "2023-10-21T16:57:02Z",
          "updatedAt": "2023-10-21T16:57:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The HTML view of the \"Editors copy\" for this PR: https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/cleanup-for-118/draft-ietf-scitt-architecture.html",
          "createdAt": "2023-10-23T15:41:23Z",
          "updatedAt": "2023-10-23T15:41:23Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker These are very involved set of changes, which will need time to review properly. My personal take but we should not  rush to make it to IETF 118, until all other authors approve of the change!",
          "createdAt": "2023-10-23T17:47:39Z",
          "updatedAt": "2023-10-23T17:47:39Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> @SteveLasker These are very involved set of changes, which will need time to review properly. My personal take but we should not rush to make it to IETF 118, until all other authors approve of the change!\r\n\r\n@yogeshbdeshpande  I appreciate the feedback. We have been asking for feedback for several days and we're now at the deadline. Without merging this content, we're asking the rest of IETF community to not benefit from the cleaned up consistency across the document.  As editor, the consistency of the doc as a stable reference point provides more clarity for the consumer. As it's still a draft, we will continue to take feedback, but we really need to publish the best version we have. The version prior to this change has duplicate, inconsistent references.",
          "createdAt": "2023-10-23T19:51:58Z",
          "updatedAt": "2023-10-23T19:51:58Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5kyz1x",
          "commit": {
            "abbreviatedOid": "732bb69"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-21T01:22:54Z",
          "updatedAt": "2023-10-21T01:22:54Z",
          "comments": [
            {
              "originalPosition": 400,
              "body": "This section was duped, and out of sync with [line 689](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/118/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R689)",
              "createdAt": "2023-10-21T01:22:54Z",
              "updatedAt": "2023-10-21T01:22:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5kzPhq",
          "commit": {
            "abbreviatedOid": "4bc31c9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-21T04:02:08Z",
          "updatedAt": "2023-10-21T04:02:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k5xem",
          "commit": {
            "abbreviatedOid": "c55fe1a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I filed https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/120 based on discussion on the call... I suggest additional issue markers be filed, and this PR be merged.",
          "createdAt": "2023-10-23T15:23:11Z",
          "updatedAt": "2023-10-23T15:23:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k6AN3",
          "commit": {
            "abbreviatedOid": "c55fe1a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor grammar and capitalization issues, but otherwise looks good. I will continue reading and point out anything more serious by 4:59 PT, oh well, I have not been so useful. Thus far, improvements look good to me, but more to follow.",
          "createdAt": "2023-10-23T15:51:28Z",
          "updatedAt": "2023-10-23T16:10:33Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Minor, non-blocking: producer is not capitalized like producer, is this a problem re capitalization discussion during today's interim meeting?\r\n\r\n```suggestion\r\nWithin the SCITT Architecture, a Producer is known as an Issuer, and a Consumer is known as a Verifier.\r\n```\r\n\r\nOr perhaps it is the opposite, with both lower-case producer and consumer, but this seems unlikely given the document.",
              "createdAt": "2023-10-23T15:51:28Z",
              "updatedAt": "2023-10-23T16:10:33Z"
            },
            {
              "originalPosition": 55,
              "body": "Minor, non-blocking: the range is ...\r\n\r\n```suggestion\r\nHowever, the range of use cases and applications in this document is broader, which requires more flexibility in how each Transparency Service is implemented and operates.\r\n```",
              "createdAt": "2023-10-23T15:57:26Z",
              "updatedAt": "2023-10-23T16:10:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k62u8",
          "commit": {
            "abbreviatedOid": "db310e7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T17:44:06Z",
          "updatedAt": "2023-10-23T17:44:07Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\n1. **Issuers**: organizations, stakeholders, and users involved in creating or attesting to supply chain artifacts, releasing authentic Statements to a definable set of peers\r\n```",
              "createdAt": "2023-10-23T17:44:06Z",
              "updatedAt": "2023-10-23T17:44:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k63Fl",
          "commit": {
            "abbreviatedOid": "db310e7"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T17:44:42Z",
          "updatedAt": "2023-10-23T17:44:42Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "I would retain stakeholders as consumers sounds contradictory to Issuers",
              "createdAt": "2023-10-23T17:44:42Z",
              "updatedAt": "2023-10-23T17:44:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k73-y",
          "commit": {
            "abbreviatedOid": "db310e7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T19:52:40Z",
          "updatedAt": "2023-10-23T19:52:40Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "I just realized we added consumers to issuers, as opposed to Verifiers. I've fixed in this PR",
              "createdAt": "2023-10-23T19:52:40Z",
              "updatedAt": "2023-10-23T19:52:40Z"
            }
          ]
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOIvmHss5di0p3",
      "title": "Adding \"Consumers\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/119",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T15:18:08Z",
      "updatedAt": "2023-10-23T23:23:47Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "cleanup-for-118",
      "baseRefOid": "c55fe1a7245febab3064f3e8c8c8290070786e8d",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "45056e6b40879e1dd94ee7941b2ddc1c159f7267",
      "closedAt": "2023-10-23T17:11:22Z",
      "mergedAt": "2023-10-23T17:11:22Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a3eaa85731579fdad97c46f7d2502cc463ab658c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5k6mDw",
          "commit": {
            "abbreviatedOid": "45056e6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM,\r\nThanks, @hannestschofenig. the stakeholders to consumers looks like a great change. I don't know if we'd keep both, or replace. I'll merge this to keep moving forward.\r\nAlso, thanks for the catch on CBOR ",
          "createdAt": "2023-10-23T17:11:11Z",
          "updatedAt": "2023-10-23T17:11:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "PR_kwDOIvmHss5djKgF",
      "title": "Add references to the format list",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/121",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T16:11:24Z",
      "updatedAt": "2023-10-23T20:15:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a1f98906191bb7bd15293957c01707c82fba6426",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "references",
      "headRefOid": "45391321f34c4e2f644a375ec5be2468c4337d6b",
      "closedAt": "2023-10-23T20:15:28Z",
      "mergedAt": "2023-10-23T20:15:28Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "ff7fffea52e9986666eca62af2a3eef61ba8254e"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker Please take it before making a draft cutoff for IETF today, if there is enough concensus among co-authors!",
          "createdAt": "2023-10-23T16:15:11Z",
          "updatedAt": "2023-10-23T16:15:11Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "To minimize the merge conflicts, I'll merge after PR #118, before the IETF deadline today",
          "createdAt": "2023-10-23T17:09:17Z",
          "updatedAt": "2023-10-23T17:09:52Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande, if you wanted to re-target the PR to the  https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/tree/cleanup-for-118 branch, I can merge right away",
          "createdAt": "2023-10-23T17:12:22Z",
          "updatedAt": "2023-10-23T17:12:22Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker : lets merge for 118.",
          "createdAt": "2023-10-23T17:13:55Z",
          "updatedAt": "2023-10-23T17:15:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande, yes, that's the plan. Your PR will conflict with PR #118 as I re-ordered the list alphabetically. \r\nI was suggesting could re-target the PR against the https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/tree/cleanup-for-118 branch, I could just merge without conflicts.\r\nI could also just copy/paste your edits, but that wouldn't show your contribution in git history.",
          "createdAt": "2023-10-23T17:28:47Z",
          "updatedAt": "2023-10-23T17:28:47Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "ok, please merge your PR and then I will Rebase my (this) PR",
          "createdAt": "2023-10-23T17:38:31Z",
          "updatedAt": "2023-10-23T17:38:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5k6NYV",
          "commit": {
            "abbreviatedOid": "0a6c155"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor nits around spacing and a URL update (pretending I understand my employer).",
          "createdAt": "2023-10-23T16:17:38Z",
          "updatedAt": "2023-10-23T16:22:39Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I will venture a guess that you can be more specific if you point to either.\r\n\r\nThe NIST specifications:\r\n\r\n```suggestion\r\n    target: https://csrc.nist.gov/Projects/Software-Identification-SWID/guidelines\r\n```\r\n\r\nOr the referenced ISO specifications, which is what NIST recommends you do on the changed link above.\r\n\r\n> The SWID Tag format, defined by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC) standard ISO/IEC 19770-2, is a structured metadata format for describing a software product. NIST recommends use of the latest version of this standard, [ISO/IEC 19770-2:2015](https://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2fIEC+19770-2%3a2015).\r\n\r\n```suggestion\r\n    target: https://www.iso.org/standard/65666.html\r\n```",
              "createdAt": "2023-10-23T16:17:39Z",
              "updatedAt": "2023-10-23T16:22:39Z"
            },
            {
              "originalPosition": 5,
              "body": "Is there a reason for the double space?\r\n\r\n```suggestion\r\n    title: did:web Decentralized Identifiers Method Spec\r\n```",
              "createdAt": "2023-10-23T16:22:09Z",
              "updatedAt": "2023-10-23T16:22:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5k6lHM",
          "commit": {
            "abbreviatedOid": "c154c5b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-23T17:08:49Z",
          "updatedAt": "2023-10-23T17:08:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k6zpl",
          "commit": {
            "abbreviatedOid": "c154c5b"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T17:38:27Z",
          "updatedAt": "2023-10-23T17:38:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5k7Kz_",
          "commit": {
            "abbreviatedOid": "c154c5b"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for adding the references.\r\n\r\nI am not sure whether you can indeed add them in this style but you can try. I would just use this style:\r\n\r\nSLSA {{SLSA}}",
          "createdAt": "2023-10-23T18:26:34Z",
          "updatedAt": "2023-10-23T18:26:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 122,
      "id": "PR_kwDOIvmHss5dlUe-",
      "title": "Update references for datatracker submission",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/122",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T22:52:24Z",
      "updatedAt": "2023-10-23T23:23:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "628504c60f9502468da32a50421a6c28626c76d9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "submission-update",
      "headRefOid": "c31249dc691e39f3a3ae6b12da1dbba925208ff1",
      "closedAt": "2023-10-23T22:53:12Z",
      "mergedAt": "2023-10-23T22:53:12Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d0fb2231337ef6b4c499b98e585e86a5adf7013b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 123,
      "id": "PR_kwDOIvmHss5dptHs",
      "title": "Address Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/123",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR makes it clearer that merkle trees are not required, and what the structure of a receipt is.",
      "createdAt": "2023-10-24T14:55:48Z",
      "updatedAt": "2023-12-12T03:54:10Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d0fb2231337ef6b4c499b98e585e86a5adf7013b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "fix/remove-merkle-assumptions",
      "headRefOid": "a2e86c08b281feb69c7743d8dad731bd81eb6432",
      "closedAt": "2023-11-06T15:19:49Z",
      "mergedAt": "2023-11-06T15:19:49Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a4645e4bc3e78ad5cfd9f8347c7e0ac8267c1079"
      },
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "Just to be clear, we very much appreciate the work on the cose merkle proof format and intend to use that by default where we can.",
          "createdAt": "2023-10-24T16:33:43Z",
          "updatedAt": "2023-10-24T16:33:43Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "And also of course, LGTM",
          "createdAt": "2023-10-24T16:35:06Z",
          "updatedAt": "2023-10-24T16:35:06Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "If you approved this PR, you should probably review and approve https://github.com/cose-wg/draft-ietf-cose-merkle-tree-proofs/pull/8 ",
          "createdAt": "2023-10-24T21:04:18Z",
          "updatedAt": "2023-10-24T21:04:18Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 I added the changes from the IETF Hackathon, including the new statement-specific registration information in the receipt and the description of transparent statement verification algorithm. The examples will have to be aligned to the new CDDL",
          "createdAt": "2023-11-05T14:53:22Z",
          "updatedAt": "2023-11-05T14:53:22Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "These improvements seem excellent... I would approve them, if I could, but I opened the PR.",
          "createdAt": "2023-11-05T15:01:30Z",
          "updatedAt": "2023-11-05T15:01:30Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz , can you please re-review your \"requested changes\" review",
          "createdAt": "2023-11-05T15:30:16Z",
          "updatedAt": "2023-11-05T15:30:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging as Henks comment was resolved",
          "createdAt": "2023-11-06T15:19:23Z",
          "updatedAt": "2023-11-06T15:19:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5lDTZN",
          "commit": {
            "abbreviatedOid": "913c7e1"
          },
          "author": "dmitrizagidulin",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": ":+1: ",
          "createdAt": "2023-10-24T16:25:58Z",
          "updatedAt": "2023-10-24T16:25:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5lFQIC",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-24T21:03:07Z",
          "updatedAt": "2023-10-24T21:03:07Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "if we dare, we can make this an actual well known software supply chain media type",
              "createdAt": "2023-10-24T21:03:07Z",
              "updatedAt": "2023-10-24T21:03:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOc2-",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "I might have some mistakes, as I was lazily using the github review/suggestion feature.",
          "createdAt": "2023-10-25T21:32:20Z",
          "updatedAt": "2023-10-25T21:47:33Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\n  2 => tstr; sub, the subject\r\n```\r\nSo close :-)",
              "createdAt": "2023-10-25T21:32:20Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 169,
              "body": "So this is a transitional version, where we have to decide what the difference between 13 and 393 is?",
              "createdAt": "2023-10-25T21:33:33Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 168,
              "body": "Not sure how happy everybody going for \"simplicity\" will be with optional attributes in the protected header.",
              "createdAt": "2023-10-25T21:35:11Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 178,
              "body": "a header map",
              "createdAt": "2023-10-25T21:36:36Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 164,
              "body": "type name conflict with line 910. This one should probably be:\r\n\r\n```suggestion\r\nSigned_Statement_Protected_Header = {\r\n```",
              "createdAt": "2023-10-25T21:38:30Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 177,
              "body": "a CBOR data item including the protected header map. Probably should be:\r\n\r\n```suggestion\r\n    protected : bstr .cbor Signed_Statement_Protected_Header / bstr .size 0 \r\n```",
              "createdAt": "2023-10-25T21:41:19Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 102,
              "body": "```suggestion\r\n\r\nlabel = int / tstr\r\nvalue = any\r\n\r\nInclusion_Proofs = [ + bstr ]\r\n```",
              "createdAt": "2023-10-25T21:45:51Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 120,
              "body": "```suggestion\r\n  * label => value\r\n```",
              "createdAt": "2023-10-25T21:46:09Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            },
            {
              "originalPosition": 161,
              "body": "```suggestion\r\n  * label => value\r\n```",
              "createdAt": "2023-10-25T21:46:31Z",
              "updatedAt": "2023-10-25T21:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOh1Q",
          "commit": {
            "abbreviatedOid": "51ca52f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:51:19Z",
          "updatedAt": "2023-10-25T21:51:20Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Yep, not trying to fix everything at once.",
              "createdAt": "2023-10-25T21:51:20Z",
              "updatedAt": "2023-10-25T21:51:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOiJs",
          "commit": {
            "abbreviatedOid": "51ca52f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:52:34Z",
          "updatedAt": "2023-10-25T21:52:35Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "I am fine banning x509 from headers... But it was my understanding that it was required to be supported, and it clearly can't be made mandatory.",
              "createdAt": "2023-10-25T21:52:34Z",
              "updatedAt": "2023-10-25T21:52:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOiSv",
          "commit": {
            "abbreviatedOid": "51ca52f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:53:07Z",
          "updatedAt": "2023-10-25T21:53:08Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Wut",
              "createdAt": "2023-10-25T21:53:07Z",
              "updatedAt": "2023-10-25T21:53:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOib8",
          "commit": {
            "abbreviatedOid": "9c370bf"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:53:42Z",
          "updatedAt": "2023-10-25T21:53:42Z",
          "comments": [
            {
              "originalPosition": 177,
              "body": "Thank you!",
              "createdAt": "2023-10-25T21:53:42Z",
              "updatedAt": "2023-10-25T21:53:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOjcy",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T21:57:52Z",
          "updatedAt": "2023-10-25T21:57:52Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "see unlabeled CDDL fragment at the end of this Section:\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc9052.html#name-header-parameters",
              "createdAt": "2023-10-25T21:57:52Z",
              "updatedAt": "2023-10-25T21:57:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lOkhj",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T22:02:13Z",
          "updatedAt": "2023-10-25T22:02:13Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Did I forget to include: `Signed_Statement_Unprotected_Header = { * label => value }` ?\r\nThat is what I meant. It can end up as: `unprotected: {}`",
              "createdAt": "2023-10-25T22:02:13Z",
              "updatedAt": "2023-10-25T22:02:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lPKrK",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-26T00:01:51Z",
          "updatedAt": "2023-10-26T00:01:51Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "Receipt_Unprotected_Header has a redundant definition. Probably needs even more qualification in the type name? Where does -222 go and where does -333 go?",
              "createdAt": "2023-10-26T00:01:51Z",
              "updatedAt": "2023-10-26T00:01:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5lPLSZ",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-26T00:03:23Z",
          "updatedAt": "2023-10-26T00:03:24Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "```suggestion\r\n    protected : bstr .cbor Receipt_Protected_Header,\r\n```",
              "createdAt": "2023-10-26T00:03:23Z",
              "updatedAt": "2023-10-26T00:03:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mJtQP",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-04T16:37:39Z",
          "updatedAt": "2023-11-04T16:37:39Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "yes, we should... what that type should be, that's another fun conversation. ",
              "createdAt": "2023-11-04T16:37:39Z",
              "updatedAt": "2023-11-04T16:37:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mJtSo",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-04T16:38:55Z",
          "updatedAt": "2023-11-04T16:38:55Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "agreed, let's queue this up separately. @fournet was working on a new PR",
              "createdAt": "2023-11-04T16:38:55Z",
              "updatedAt": "2023-11-04T16:38:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mKaBF",
          "commit": {
            "abbreviatedOid": "61dcef6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-11-05T15:09:36Z",
          "updatedAt": "2023-11-05T15:29:01Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "```suggestion\r\nExample transparent statement:\r\n```",
              "createdAt": "2023-11-05T15:09:36Z",
              "updatedAt": "2023-11-05T15:29:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMKTv",
          "commit": {
            "abbreviatedOid": "8682ef5"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Even though some of the text needs to be adjusted to the receipt changes I think we should merge this as quickly as possible",
          "createdAt": "2023-11-06T08:04:55Z",
          "updatedAt": "2023-11-06T08:04:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5mMR1F",
          "commit": {
            "abbreviatedOid": "5604893"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:23:51Z",
          "updatedAt": "2023-11-06T08:23:51Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "This should be addressed by my latest changes",
              "createdAt": "2023-11-06T08:23:51Z",
              "updatedAt": "2023-11-06T08:23:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMTNx",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:27:05Z",
          "updatedAt": "2023-11-06T08:27:06Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "According to the current IANA registry https://www.iana.org/assignments/cose/cose.xhtml kccs is the header that has the correct type (map) and semantics (CWT claim set). So I changed the receipt type to use 14",
              "createdAt": "2023-11-06T08:27:05Z",
              "updatedAt": "2023-11-06T08:27:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMTqk",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:27:59Z",
          "updatedAt": "2023-11-06T08:28:00Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "The semantics is that you need either a `kid` or a `x5chain`, but not both. There is no easy way to specify this in the syntax of the headers so I think this has to be specified in text",
              "createdAt": "2023-11-06T08:27:59Z",
              "updatedAt": "2023-11-06T08:28:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMURD",
          "commit": {
            "abbreviatedOid": "5311caa"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:29:26Z",
          "updatedAt": "2023-11-06T08:29:26Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "Let's not block this PR on this. Picking one of the BOM types could bias the architecture and we want to be completely neutral",
              "createdAt": "2023-11-06T08:29:26Z",
              "updatedAt": "2023-11-06T08:29:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mP4Kq",
          "commit": {
            "abbreviatedOid": "a2e86c0"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I also suggest we merge then work on the details. ",
          "createdAt": "2023-11-06T15:07:45Z",
          "updatedAt": "2023-11-06T15:07:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 126,
      "id": "PR_kwDOIvmHss5enZwL",
      "title": "Transparency Service configurations and policies (IETF118 hackathon)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/126",
      "state": "MERGED",
      "author": "fournet",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Extending the architecture with Transparent Statements recording the Transparency Service configuration, notably its registration policy. The syntax of the configuration (notably its supported registration policies) are still TBC.  ",
      "createdAt": "2023-11-05T11:25:51Z",
      "updatedAt": "2023-11-14T15:43:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d0fb2231337ef6b4c499b98e585e86a5adf7013b",
      "headRepository": "fournet/draft-ietf-scitt-architecture",
      "headRefName": "configuration",
      "headRefOid": "5427d83077fec440d1f47f68489d783c39dddc88",
      "closedAt": "2023-11-14T15:43:31Z",
      "mergedAt": "2023-11-14T15:43:31Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "867f321ea190119e909ddb8b2d5394473c3d8b74"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5mKYSF",
          "commit": {
            "abbreviatedOid": "e4c5431"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-05T14:33:33Z",
          "updatedAt": "2023-11-05T14:33:33Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe registration policy for statements with this media type is implementation-specific.\r\nThe implementation SHOULD document them, for example defining the Issuers authorized to register configuration Signed Statements. \r\n```",
              "createdAt": "2023-11-05T14:33:33Z",
              "updatedAt": "2023-11-05T14:33:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mKYix",
          "commit": {
            "abbreviatedOid": "a12708e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "a few nits, and a question on how we manage a concept, such as registration policy, and the format of that content",
          "createdAt": "2023-11-05T14:40:30Z",
          "updatedAt": "2023-11-05T14:44:06Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "is this the `3 payload type` in the protected header?\r\nAgree we need a way to determine this. I do wonder how the payload type and mediaType that says it's json, XML, rdf, or others would conflict with this. \r\n",
              "createdAt": "2023-11-05T14:40:31Z",
              "updatedAt": "2023-11-05T14:44:06Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nThe Transparency Service MUST register a Signed Statement that defines its initial configuration before registering any other Signed Statement.\r\nThe Transparency Service MAY register an additional Signed Statement that updates its configuration. \r\n```",
              "createdAt": "2023-11-05T14:40:59Z",
              "updatedAt": "2023-11-05T14:44:06Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThe Transparency Service provides an endpoint that returns the Transparency Statement that describes its current configuration.\r\n```",
              "createdAt": "2023-11-05T14:41:54Z",
              "updatedAt": "2023-11-05T14:44:06Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-11-05T14:42:04Z",
              "updatedAt": "2023-11-05T14:44:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mKZKU",
          "commit": {
            "abbreviatedOid": "23fa55b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-05T14:52:41Z",
          "updatedAt": "2023-11-05T14:52:42Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n\r\n~~~ cddl\r\n```",
              "createdAt": "2023-11-05T14:52:41Z",
              "updatedAt": "2023-11-05T14:52:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMIMh",
          "commit": {
            "abbreviatedOid": "a12708e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T07:59:01Z",
          "updatedAt": "2023-11-06T07:59:01Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Further discussions: the base mediaType could be `application/scitt-configuration`, with a `+<format>` as the various implementation formats evolve",
              "createdAt": "2023-11-06T07:59:01Z",
              "updatedAt": "2023-11-06T07:59:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMIrj",
          "commit": {
            "abbreviatedOid": "ed74081"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:00:19Z",
          "updatedAt": "2023-11-06T08:00:19Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe Transparency Service records its configuration in the Append-Only Log using Transparent Statements with distinguished media type `application/scitt-configuration`.\r\n```",
              "createdAt": "2023-11-06T08:00:19Z",
              "updatedAt": "2023-11-06T08:00:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMM4A",
          "commit": {
            "abbreviatedOid": "1591fc7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:11:20Z",
          "updatedAt": "2023-11-06T08:11:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe registration policy for statements with the media type suffix (`+<format>` is implementation-specific.\r\n```",
              "createdAt": "2023-11-06T08:11:20Z",
              "updatedAt": "2023-11-06T08:11:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMNkA",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T08:13:12Z",
          "updatedAt": "2023-11-06T08:13:12Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "To avoid rollbacks, we SHOULD likely make this a MUST, specific to configuration.",
              "createdAt": "2023-11-06T08:13:12Z",
              "updatedAt": "2023-11-06T08:13:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mMN3g",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM as a great baseline, output of the IETF 118 hackathon",
          "createdAt": "2023-11-06T08:13:59Z",
          "updatedAt": "2023-11-06T08:13:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5mPHvm",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T13:57:28Z",
          "updatedAt": "2023-11-06T13:57:29Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nDesignated authorised entities are allowed to submit Configuration statements to the Transparency Service.\r\n\r\nThe Transparency Service records the configuration in the Append-Only Log using Transparent Statements with distinguished media type `application/scitt-configuration`.\r\n```",
              "createdAt": "2023-11-06T13:57:28Z",
              "updatedAt": "2023-11-06T13:57:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPIQk",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T13:58:24Z",
          "updatedAt": "2023-11-06T13:58:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe Transparency Service records its configuration in the Append-Only Log using Signed Statements with distinguished media type `application/scitt-configuration`.\r\n```",
              "createdAt": "2023-11-06T13:58:24Z",
              "updatedAt": "2023-11-06T13:58:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPJl1",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T14:00:52Z",
          "updatedAt": "2023-11-06T14:00:52Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nThe Transparency Service provides an endpoint that returns the Transparent Statement that describes its current configuration.\r\n```",
              "createdAt": "2023-11-06T14:00:52Z",
              "updatedAt": "2023-11-06T14:00:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPKnQ",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T14:02:42Z",
          "updatedAt": "2023-11-06T14:02:43Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "We must state something about a default configuration that brings up the `append only log` managed by the Transparency Service. Once the Service is up and running the default configuration can be modified.",
              "createdAt": "2023-11-06T14:02:42Z",
              "updatedAt": "2023-11-06T14:02:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPNFu",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T14:07:25Z",
          "updatedAt": "2023-11-06T14:07:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "To make life simple, we should only keep Registration Information as the Element which needs updating, hence instead of using the generic term Configuration, we should adhere to a more specific term known as \r\n`Registration Policy` which is an updatable element.",
              "createdAt": "2023-11-06T14:07:25Z",
              "updatedAt": "2023-11-06T14:08:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPRGa",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T14:13:55Z",
          "updatedAt": "2023-11-06T14:13:56Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This comment is ONLY applicable if-we stick to the original definition of the `Configuration` which I strongly believe we should avoid.",
              "createdAt": "2023-11-06T14:13:55Z",
              "updatedAt": "2023-11-06T14:13:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPpnE",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T14:44:03Z",
          "updatedAt": "2023-11-06T14:44:03Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "When I first read the inserted line 624 for \"Designated authorized...\" I thought it touches on RBAC, which we left to the implementation-specific area. \r\nAre you suggesting there's a registration policy for which issuers can submit changes to the registration policy?\r\nIt's kinda obvious that writes should be RBAC controlled, and configuration MUST be controlled. So we could call it out, or leave all RBAC out of the spec.  ",
              "createdAt": "2023-11-06T14:44:03Z",
              "updatedAt": "2023-11-06T14:44:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mPq1m",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T14:46:20Z",
          "updatedAt": "2023-11-06T14:46:20Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This is an interesting question, whether we reference the Signed Statement before or after it's written. \r\n...records its configuration... could infer the signed statement is being submitted, becoming a transparent statement.\r\nIs there a strong opinion either way?",
              "createdAt": "2023-11-06T14:46:20Z",
              "updatedAt": "2023-11-06T14:46:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mP1kj",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T15:03:36Z",
          "updatedAt": "2023-11-06T15:03:36Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I was also struggling with the text that referenced ordering. This sounds implementation-specific. I wonder if we should simply say the Transparency Service MUST have a registration and configuration persisted as signed statements. Should how the service is \"booted up\" be outside the specification?",
              "createdAt": "2023-11-06T15:03:36Z",
              "updatedAt": "2023-11-06T15:03:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mP4Wx",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T15:08:06Z",
          "updatedAt": "2023-11-06T15:08:06Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This was a great discussion during the hackathon. We talked about having multiple statements for configuration, and registration policies allowing a service to put RBAC on who could read the files. We likely needed an aggregated statement to reference the different config and registration policies. This way the receipt would need only one. This is additional content we wanted to follow-up with after this baseline as it introduces more details we wanted to incrementally think through. ",
              "createdAt": "2023-11-06T15:08:06Z",
              "updatedAt": "2023-11-06T15:08:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mP5RJ",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T15:09:35Z",
          "updatedAt": "2023-11-06T15:09:35Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Does anyone have an opinion on changing this PR, or making a separate? In the spirt of merging quickly, and iterating, I'm fine deferring to another PR. ",
              "createdAt": "2023-11-06T15:09:35Z",
              "updatedAt": "2023-11-06T15:09:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mP6Dp",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T15:10:46Z",
          "updatedAt": "2023-11-06T15:10:46Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@yogeshbdeshpande, are you ok with deferring the additional detail? Please \ud83d\udc4d if you agree.",
              "createdAt": "2023-11-06T15:10:46Z",
              "updatedAt": "2023-11-06T15:10:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mP97t",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-06T15:17:39Z",
          "updatedAt": "2023-11-06T15:17:39Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "tracked in #127 to avoid blocking the merge",
              "createdAt": "2023-11-06T15:17:39Z",
              "updatedAt": "2023-11-06T15:17:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mgRLI",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-08T09:03:14Z",
          "updatedAt": "2023-11-08T09:03:14Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I agree policy statements are issued by authorized parties, but this seems implementation-specific and I don't think we need to give any details on their authorization here. Hence \"Designated authorised entities\" seems too strong. ",
              "createdAt": "2023-11-08T09:03:14Z",
              "updatedAt": "2023-11-08T09:03:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mgSMu",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-08T09:05:23Z",
          "updatedAt": "2023-11-08T09:05:23Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "As usual, what matters for most parties are (signed) transparent statements. In particular, we must reference configuration statements once registered, to ensure they are transparent before they are used for further registrations.",
              "createdAt": "2023-11-08T09:05:23Z",
              "updatedAt": "2023-11-08T09:05:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5mgTqr",
          "commit": {
            "abbreviatedOid": "62f4605"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-08T09:07:25Z",
          "updatedAt": "2023-11-08T09:07:26Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "The default configuration before registering the first configuration is entirely implementation specific (it just needs to explain how the first explicit configuration is authorized and registered) so I don't think there is much to say about it. ",
              "createdAt": "2023-11-08T09:07:26Z",
              "updatedAt": "2023-11-08T09:07:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5nBnLD",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-14T00:09:40Z",
          "updatedAt": "2023-11-14T00:09:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5nFChb",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-14T10:09:36Z",
          "updatedAt": "2023-11-14T10:09:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5nHnYw",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-14T15:38:25Z",
          "updatedAt": "2023-11-14T15:38:25Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Editors meeting discussion: Signed Statement refers to a configuration that doesn't prove it was placed into the transparency service. \r\nThere's a good discussion whether we should use Transparent Statement or Receipt as the term for referencing something that was registered (notarized). However, we should track that separately. \r\nFor this PR, it's important to recognize the configuration was registered, making \"signed statement\" too early and incorrect.",
              "createdAt": "2023-11-14T15:38:25Z",
              "updatedAt": "2023-11-14T15:38:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5nHnxN",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-14T15:39:07Z",
          "updatedAt": "2023-11-14T15:39:08Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@yogeshbdeshpande, please open a new issue/pr if you feel there is missing info. ",
              "createdAt": "2023-11-14T15:39:08Z",
              "updatedAt": "2023-11-14T15:39:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5nHoP_",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-14T15:40:02Z",
          "updatedAt": "2023-11-14T15:40:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Editors call: RBAC is out of scope. Please open a new issue/pr if more discussion is needed. ",
              "createdAt": "2023-11-14T15:40:02Z",
              "updatedAt": "2023-11-14T15:40:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5nHokl",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-14T15:40:38Z",
          "updatedAt": "2023-11-14T15:40:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@yogeshbdeshpande, please open a new issue/pr if you feel there is missing info.",
              "createdAt": "2023-11-14T15:40:39Z",
              "updatedAt": "2023-11-14T15:40:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5nHoz4",
          "commit": {
            "abbreviatedOid": "5427d83"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-14T15:41:05Z",
          "updatedAt": "2023-11-14T15:41:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 129,
      "id": "PR_kwDOIvmHss5fdj8y",
      "title": "Update RKVST branding to DataTrails",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/129",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RKVST has re-branded to DataTrails. Update to reflect my new email and company branding. ",
      "createdAt": "2023-11-14T22:42:16Z",
      "updatedAt": "2023-11-14T22:42:25Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "867f321ea190119e909ddb8b2d5394473c3d8b74",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "stevelasker-companynamechange",
      "headRefOid": "4ae3c5573211721875f45d304be5e166d55573e8",
      "closedAt": "2023-11-14T22:42:25Z",
      "mergedAt": "2023-11-14T22:42:25Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "930a0cd38a92dd6079bda2ed3c675019ee9b0aa3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 130,
      "id": "PR_kwDOIvmHss5gDO8w",
      "title": "Link to default HTML format for RFC9393 reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/130",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A minor nit, but in the current version of the draft only RFC 9393 (COSWID) links to its PDF form, not the default HTML form. It is minor, but hopefully more (eventual) consistency is a good thing.",
      "createdAt": "2023-11-21T17:47:22Z",
      "updatedAt": "2023-11-27T20:48:29Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "930a0cd38a92dd6079bda2ed3c675019ee9b0aa3",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "align-rfc-references",
      "headRefOid": "435689f45ed09cc316a6c6c34b566c6b0262e0af",
      "closedAt": "2023-11-27T20:48:29Z",
      "mergedAt": "2023-11-27T20:48:29Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f70576e324b93b9b7c1d8c605d8f33c0bdfa1063"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5n5B5J",
          "commit": {
            "abbreviatedOid": "435689f"
          },
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-21T20:17:06Z",
          "updatedAt": "2023-11-21T20:17:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5oYyvZ",
          "commit": {
            "abbreviatedOid": "435689f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\ngood quick fix",
          "createdAt": "2023-11-27T20:48:23Z",
          "updatedAt": "2023-11-27T20:48:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 131,
      "id": "PR_kwDOIvmHss5gE06b",
      "title": "Define Non-equivocation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/131",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Define equivocation and non-equivocation and cite the article that coined the term in analyzing Lamport. Closes ietf-wg-scitt/draft-ietf-scitt-architecture#116.",
      "createdAt": "2023-11-21T23:10:32Z",
      "updatedAt": "2023-12-05T15:08:42Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "9950b34ce4e4a02c5fc80daa9262a6733fdfd153",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "116-non-equivocation",
      "headRefOid": "af4e3b8093a4d7b063eceb074edf21ed96d11781",
      "closedAt": "2023-12-05T15:08:42Z",
      "mergedAt": "2023-12-05T15:08:42Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "cd61a58ed50603fc6cf74a00dbd029762ab6764d"
      },
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this reference from the CT rfc is useful. \r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc6962#section-7.3\r\n\r\n\"and (2) by\r\n   violating its append-only property by presenting two different,\r\n   conflicting views of the Merkle Tree at different times and/or to\r\n   different parties.\"\r\n   \r\n   this is equivocation. If we replace \"Merkle Tree\" with \"collection of statements\".\r\n   \r\n  And that reference is also careful to cast things interms of detectability rather than prevention",
          "createdAt": "2023-11-28T13:11:38Z",
          "updatedAt": "2023-11-28T13:11:38Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think this reference from the CT rfc is useful.\r\n> \r\n> https://datatracker.ietf.org/doc/html/rfc6962#section-7.3\r\n\r\nThis is very useful, thanks. I will adjust with this and your other feedback, most appreciated!",
          "createdAt": "2023-11-28T13:50:56Z",
          "updatedAt": "2023-11-28T13:50:56Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> LGTM Thanks, @aj-stein-nist for the iterations. This was a tricky one to summarize an entire paper in a few sentences\r\n\r\nWho reads papers anyway? Jokes aside, thanks for the contributions and making me think about how to communicate clearly on this one.",
          "createdAt": "2023-12-01T22:10:40Z",
          "updatedAt": "2023-12-01T22:10:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5oZBMO",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "LGTM",
          "createdAt": "2023-11-27T21:16:01Z",
          "updatedAt": "2023-11-29T04:51:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5oZujM",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Some updated clarfiication and suggestions. ",
          "createdAt": "2023-11-27T23:01:57Z",
          "updatedAt": "2023-11-27T23:28:21Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Important nit.\r\nIssuers create signed statements they register, which means the Transparency Service must not provide different results to different verifiers. But, it doesn't provide results _to_ Issuers, in this sense.\r\n\r\nThe TS can't, and shouldn't, prevent an Issuer from making updated statements as it learns more. \r\nOn Monday, the artifact \"is fine\". On Wednesday, the Issuer learns of a new vulnerability and registers an updated statement that says the artifact \"isn't fine\". This is a valid scenario, yet it's not equivocation. \r\n\r\nHowever, the TS shouldn't be able to return different results of the same Signed Statement to different Verifiers.\r\n\r\nI'm wondering if we should better summarize Non-equivocation, and let specific references clarify it in context.\r\n\r\nAnd, do we need to specify Equivocation _and_ Non Equivocation? ",
              "createdAt": "2023-11-27T23:01:58Z",
              "updatedAt": "2023-11-27T23:28:21Z"
            },
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n  NON-EQUIVOCATION: DOI.10.1145/1323293.1294280\r\n```",
              "createdAt": "2023-11-27T23:04:44Z",
              "updatedAt": "2023-11-27T23:28:21Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n: assurance an Issuer is unable to make different Statements to different Verifiers.\r\nThe Transparency Service registers Signed Statements from Issuers, returning consistent results to all Verifiers. {{NON-EQUIVOCATION}}\r\nOver time, an Issuer may register new Signed Statements about an Artifact reflecting new information, however, the collection of statements about the Artifact are consistently returned to all Verifiers.\r\n```",
              "createdAt": "2023-11-27T23:26:10Z",
              "updatedAt": "2023-11-27T23:28:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5obPft",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-28T04:51:56Z",
          "updatedAt": "2023-11-28T04:51:57Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> Important nit. Issuers create signed statements they register, which means the Transparency Service must not provide different results to different verifiers. But, it doesn't provide results _to_ Issuers, in this sense.\r\n\r\nI guess this is semantics but I had not really considered otherwise: the Issuer is going to have a TS client that processes the result with Signed and Transparent Statements to complete further processing or present otherwise for whatever it needs, right? (If I maintain an open source application or library, I presume I would want the URL or an ID to either of those upon registration to present on my application or library's web site or repo, no? Or am I really presuming and overloading what an Issuer is?)\r\n\r\n> The TS can't, and shouldn't, prevent an Issuer from making updated statements as it learns more. On Monday, the artifact \"is fine\". On Wednesday, the Issuer learns of a new vulnerability and registers an updated statement that says the artifact \"isn't fine\". This is a valid scenario, yet it's not equivocation.\r\n\r\nTrue, the SCITT-focused definiton of Equivocation is to say the exact same thing registered with exact same inputs presents different Signed Statements to different consumers of the TS (it seems re your point that can only be Verifiers, I will not say Issuer or Verifier until I think I get corrected on the previous comment).\r\n\r\n> However, the TS shouldn't be able to return different results of the same Signed Statement to different Verifiers.\r\n> \r\n> I'm wondering if we should better summarize Non-equivocation, and let specific references clarify it in context.\r\n\r\nI am fine with that, any suggestions? I will mull it over.\r\n \r\n> And, do we need to specify Equivocation _and_ Non Equivocation?\r\n\r\nI only did it that way because the original source that derived this defined Equivocation (the unhappy path), not Non-equivocation (happy path), and definitely did not define the former with concepts and vocabulary of SCITT. That is the only reason I defined both. It seemed odd to have a long embedded definition of Equivocation in the definition of Non-equivocation, or the state of \"not that.\" \ud83d\ude06 \r\n",
              "createdAt": "2023-11-28T04:51:57Z",
              "updatedAt": "2023-11-28T04:53:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5obS4V",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-28T04:54:25Z",
          "updatedAt": "2023-11-28T04:54:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Re my comment above in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/131#discussion_r1407117520, this paper is cited as the first definition of equivocation, and never formally defines non-equivocation in its context, but describes it a lot.",
              "createdAt": "2023-11-28T04:54:25Z",
              "updatedAt": "2023-11-28T04:54:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5oeASu",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-11-28T11:48:58Z",
          "updatedAt": "2023-11-28T12:17:41Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I think we head towards imposibility (or specialised hardware) if the standard requires the TS to provably not equivocate. The crucial property is that the equivocation be evident.\r\n\r\n\"A state where it is impossible for clients to determine that a statement is provable to one client and not to others\". My understanding is that consistency proofs are the ideal way to accomplish this even though those are not required by scitt.\r\n\r\nAny wording that implies the TS has to guarantee publishing consistently at all times seems troublesome to me.",
              "createdAt": "2023-11-28T11:48:58Z",
              "updatedAt": "2023-11-28T12:17:41Z"
            },
            {
              "originalPosition": 25,
              "body": "252-253 these would be much better if re-cast in terms of tamper evidence.\r\n\r\n\"The Transparency Service registers Signed Statements maintains statements from Issuers in a manner that enables all verifiers to assure a consistent history. {{NON-EQUIVOCATION}}\"\r\n\r\n\"Over time, an Issuer may register new Signed Statements about an Artifact reflecting new information, however, the consistency of a collection of statements about the Artifact can be checked by all Verifiers\"",
              "createdAt": "2023-11-28T12:17:31Z",
              "updatedAt": "2023-11-28T12:17:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5oftaw",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-28T15:07:45Z",
          "updatedAt": "2023-11-28T15:07:45Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "> In [logic](https://en.wikipedia.org/wiki/Logic), equivocation (\"calling two different things by the same name\") is an [informal fallacy](https://en.wikipedia.org/wiki/Informal_fallacy) resulting from the use of a particular word/expression in multiple [senses](https://en.wikipedia.org/wiki/Word_sense) within an argument.[[1]](https://en.wikipedia.org/wiki/Equivocation#cite_note-Damer2008-1)[[2]](https://en.wikipedia.org/wiki/Equivocation#cite_note-2)\r\n\r\n> It is a type of [ambiguity](https://en.wikipedia.org/wiki/Semantic_ambiguity) that stems from a phrase having two or more distinct [meanings](https://en.wikipedia.org/wiki/Meaning_(linguistics)), not from the grammar or structure of the sentence.[[1]](https://en.wikipedia.org/wiki/Equivocation#cite_note-Damer2008-1)\r\n\r\n-- https://en.wikipedia.org/wiki/Equivocation",
              "createdAt": "2023-11-28T15:07:45Z",
              "updatedAt": "2023-11-28T15:07:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5of8bK",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-28T15:30:19Z",
          "updatedAt": "2023-11-28T15:30:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I knew there is a linguistic definition to the notion of equivocating, but I cited the particular paper and attempted to define it in terms that were not based on linguistic factors. Re Section 2.4 I based it on this definition where the authors defined this term based on their understanding of Lamport paper on the Byzantine Generals problem, quoted below. Then they go into two examples.\r\n\r\nSo to that end: are you recommending a change to the definition? Are you saying this definition of equivocation, in the SCITT context, is not applicable and this should not be defined?\r\n\r\n> 2.4 Equivocation\r\n>\r\n> In deterministic systems that aim to guarantee linearizability, ly-\r\n> ing is bad enough, but lying in different ways to different people\r\n> is even worse. The \u201cprototype\u201d problem behind Byzantine-fault\r\n> tolerant agreement, the \u201cByzantine generals problem,\u201d has been\r\n> demonstrated unsolvable in a population of three parties when one\r\n> is faulty [25], precisely because of equivocation. Beyond agree-\r\n> ment, especially when there is a single server to contend with,\r\n> equivocation can wreak just as much havoc: a server can feign ig-\r\n> norance to client A for data that it has promised client B it would\r\n> broadcast to all. Even when it does not drop information, a faulty\r\n> server can order sequential requests \u2013 think about two concurrent\r\n> writes a and b to the same shared variable \u2013 in different ways when\r\n> responding to different clients, potentially changing the presumed\r\n> state of the system substantially: one client sees a as the dominat-\r\n> ing write whereas the other client sees b instead.\r\n> In what follows, we present two detailed examples of equivoca-\r\n> tion attacks against single-server and replicated systems, to moti-\r\n> vate our focus on eliminating equivocation through trusted system\r\n> abstractions.\r\n",
              "createdAt": "2023-11-28T15:30:19Z",
              "updatedAt": "2023-11-28T15:32:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ohvJV",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-28T18:58:24Z",
          "updatedAt": "2023-11-28T18:58:24Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Thanks, @robinbryce, both comments make sense and help with the clarity. ",
              "createdAt": "2023-11-28T18:58:24Z",
              "updatedAt": "2023-11-28T18:58:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5orIHD",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-29T20:15:14Z",
          "updatedAt": "2023-11-29T20:15:15Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n: a state where it is possible for a Transparency Service to provide different views of its append only log to Verifiers about the same Artifact {{EQUIVOCATION}}.\r\n```",
              "createdAt": "2023-11-29T20:15:14Z",
              "updatedAt": "2023-11-29T20:15:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5otO2J",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-30T05:50:40Z",
          "updatedAt": "2023-11-30T05:50:40Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Updated to be this with some minor editorial adjustments in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/131/commits/45f3f12715782df36a37709da07ec19e7db2b9fe.",
              "createdAt": "2023-11-30T05:50:40Z",
              "updatedAt": "2023-11-30T05:50:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5otO4z",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-30T05:50:51Z",
          "updatedAt": "2023-11-30T05:50:51Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Updated to be this with some minor editorial adjustments in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/131/commits/45f3f12715782df36a37709da07ec19e7db2b9fe.",
              "createdAt": "2023-11-30T05:50:51Z",
              "updatedAt": "2023-11-30T05:50:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5otPC-",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-30T05:51:14Z",
          "updatedAt": "2023-11-30T05:51:15Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I used some of this in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/131/commits/45f3f12715782df36a37709da07ec19e7db2b9fe, thanks!",
              "createdAt": "2023-11-30T05:51:14Z",
              "updatedAt": "2023-11-30T05:51:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5otPaK",
          "commit": {
            "abbreviatedOid": "2f2e17f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-30T05:52:51Z",
          "updatedAt": "2023-11-30T05:52:51Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I left this as-is with my original citation as it defines equivocation in that article, not non-equivocation (we get that from here and other places, they just don't actually define the opposite formally with that term). If you want to push back and change the citation itself or we think it is important to mark the citation as non-equivocation through the reference in the document, reopen this and let me know.",
              "createdAt": "2023-11-30T05:52:51Z",
              "updatedAt": "2023-11-30T05:52:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5o65dF",
          "commit": {
            "abbreviatedOid": "45f3f12"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I like those changes. Reads clean to me thanks",
          "createdAt": "2023-12-01T17:25:46Z",
          "updatedAt": "2023-12-01T17:28:22Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Yep, that is super clear to me now. Thanks",
              "createdAt": "2023-12-01T17:25:46Z",
              "updatedAt": "2023-12-01T17:28:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5o8FwD",
          "commit": {
            "abbreviatedOid": "45f3f12"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nThanks, @aj-stein-nist for the iterations. This was a tricky one to summarize an entire paper in a few sentences",
          "createdAt": "2023-12-01T21:21:51Z",
          "updatedAt": "2023-12-01T21:21:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5pOPur",
          "commit": {
            "abbreviatedOid": "af4e3b8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-05T15:07:15Z",
          "updatedAt": "2023-12-05T15:07:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 132,
      "id": "PR_kwDOIvmHss5gkhej",
      "title": "Add sequence diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/132",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR addresses https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/13",
      "createdAt": "2023-11-28T15:44:04Z",
      "updatedAt": "2023-12-12T03:54:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f70576e324b93b9b7c1d8c605d8f33c0bdfa1063",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat/13-add-sequence-diagram",
      "headRefOid": "02be59db1a2e975dae6f5da81bbac9acfb21dc91",
      "closedAt": "2023-12-02T16:51:12Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Feel free to make adjustments using: https://mermaid.live/edit#pako:eNqNU01v2zAM_SuEztkf8KE7ZAWWw3ZYe9ngiyLRMRF9uBLlwij630fZFZatyTadZOq9R_KZfFEmWlSdyvhUMBj8RPqUtO8DyJl0YjI06cBwyLlgeh9_TDpkCQh5ecA0k8EN9DUygsOBIQ5v7A4OwPqMkDBPMWQ6kiNeYIgJeESosoM2nAU3pWhL09ro8OHu7lq-Dh5HzJWOq8wUnVSHVUV7MNF7YkYLHMEjMoXT_6keILMOFo4L-AWM0-Qz6GMsXL9bsZuWi3GC_QbZj2jOW7ieK9q3c37DmfBZDHI4V3tbVimjtbUpY7Db5ZZ8s_wzii2Ua8nCiSmjRxGuigkN0vTWwV5-SPGYhHvdjSzmik7rG7IesHpaMn68MOH-Ism_nbiV7S8-XHTxpxc3zWjNdfA9FjA6AKeS-feOduv0XJokj5nJOZi1o5ZjHexEp3Gd7F_KBxj1jDJvYSBbdwkovBtrs8HVTgnHa7Kyey9VuFcC9dirTq5Wp3Ov-vAqOF04PizBqE5Kxp0qk9Xc9lR1g3ZZomiJY_qyLfO60zsl-_kjxoZ5_QnpGWCo\r\n\r\nGithub comments support mermaid:\r\n\r\n~~~ text\r\n``` mermaid\r\n...\r\n```\r\n~~~\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    participant Issuer\r\n    participant TransparencyService\r\n    Note left of Issuer: I take responsibility for the artifacts I produce\r\n    Issuer ->> TransparencyService: These are the policies I am committed to meeting\r\n    Issuer ->> TransparencyService: I stand by my claims about my artifact\r\n    loop Claims Check\r\n        TransparencyService ->> TransparencyService: Review relevant claims and policies\r\n    end\r\n    TransparencyService ->> Issuer: Here is my endorsement and receipt\r\n    Consumer->>TransparencyService: Is this artifact safe to use?\r\n    loop Endorsement Check\r\n        TransparencyService->>TransparencyService: Review relevant claims and endorsements\r\n    end\r\n     TransparencyService ->> Consumer: You can trust this artifact, the endorsement is still valid\r\n     Note right of Consumer: I have confidence in the artifacts I consume\r\n```",
          "createdAt": "2023-11-28T15:46:28Z",
          "updatedAt": "2023-11-28T15:46:28Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, is this a draft PR?",
          "createdAt": "2023-11-29T04:49:37Z",
          "updatedAt": "2023-11-29T04:49:37Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, of course... The svg build is currently bugging, I can't build the draft locally.",
          "createdAt": "2023-11-29T04:51:13Z",
          "updatedAt": "2023-11-29T04:51:13Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Animated nyancat for testing purposes only.",
          "createdAt": "2023-11-29T04:52:14Z",
          "updatedAt": "2023-11-29T04:52:14Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> Yes, of course... The svg build is currently bugging, I can't build the draft locally.\r\n\r\nThe last [GHA build complains about `mmdc`](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/actions/runs/7022336236/job/19106385023?pr=132).\r\n\r\n```sh\r\n/usr/lib/ruby/3.2.0/open3.rb:222:in `spawn': No such file or directory - mmdc (Errno::ENOENT)\r\n\tfrom /usr/lib/ruby/3.2.0/open3.rb:222:in `popen_run'\r\n\tfrom /usr/lib/ruby/3.2.0/open3.rb:103:in `popen3'\r\n\tfrom /usr/lib/ruby/3.2.0/open3.rb:290:in `capture3'\r\n```\r\n\r\nTIL is the name of the shorthand name of the mermaid-cli compiler. I did not know that. I am looking Martin Thompson's template repo to see if this is supported (it must be if it mapped the `` ```mermaid`` backticks to that presumably installed command or what the deal is.\r\n\r\n**EDIT:** Perhaps this is the issue, we need our own package.json to activate that? It's implied, but kind of neat. I shall test.",
          "createdAt": "2023-12-01T16:11:13Z",
          "updatedAt": "2023-12-01T16:12:41Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "closing for now, well need to do this with `aasvg` until other options become available.",
          "createdAt": "2023-12-02T16:51:12Z",
          "updatedAt": "2023-12-02T16:51:12Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 133,
      "id": "PR_kwDOIvmHss5gnXrE",
      "title": "Update CWT_Claims COSE label to 15",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/133",
      "state": "MERGED",
      "author": "johnandersen777",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Per https://www.ietf.org/archive/id/draft-ietf-cose-cwt-claims-in-headers-09.html",
      "createdAt": "2023-11-29T00:29:06Z",
      "updatedAt": "2023-12-01T21:18:46Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f70576e324b93b9b7c1d8c605d8f33c0bdfa1063",
      "headRepository": "johnandersen777/draft-ietf-scitt-architecture",
      "headRefName": "patch-1",
      "headRefOid": "bd08572c8e71037c399965d242f38a17939338ea",
      "closedAt": "2023-12-01T21:18:46Z",
      "mergedAt": "2023-12-01T21:18:46Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "9950b34ce4e4a02c5fc80daa9262a6733fdfd153"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5okssU",
          "commit": {
            "abbreviatedOid": "bd08572"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-11-29T04:50:06Z",
          "updatedAt": "2023-11-29T04:50:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5o8E8D",
          "commit": {
            "abbreviatedOid": "bd08572"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-01T21:18:35Z",
          "updatedAt": "2023-12-01T21:18:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 134,
      "id": "PR_kwDOIvmHss5g6sYs",
      "title": "Mermaid Diagram Support",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/134",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per the docs from the template repo we use, we need to enable this explicitly by adding the proper npm configuration and it will just work.\r\n\r\nhttps://github.com/martinthomson/i-d-template/blob/c448265276fd30235326955c459fccf28f7bc364/doc/TOOLS.md?plain=1#L72-L75",
      "createdAt": "2023-12-01T16:31:37Z",
      "updatedAt": "2023-12-07T02:26:45Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "feat/13-add-sequence-diagram",
      "baseRefOid": "02be59db1a2e975dae6f5da81bbac9acfb21dc91",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "13-support-markdown-diagrams",
      "headRefOid": "fcbcad059406cf49badd4fea1604f2dc04849f32",
      "closedAt": "2023-12-07T02:22:48Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Ugh, you need puppeteer for this? It will be enjoyable for all @OR13 (GitHub CI will be ok, others will need to configure Chrome for local draft building, I forgot this fact).\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/actions/runs/7062624270/job/19226846223?pr=134",
          "createdAt": "2023-12-01T16:35:33Z",
          "updatedAt": "2023-12-01T16:35:33Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I presume @OR13 stopped caring long ago, but if I figure a way to clean up the actual SVG output this might be usable and have general appeal amongst IETF WG authors, but the result has been a nice nothing burger in the end.\r\n\r\nI got it to work, then this from [`svgcheck`](https://github.com/ietf-tools/svgcheck) in [GHA CI run](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/actions/runs/7122905900/job/19394663503#step:6:73):\r\n\r\n```sh\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'max-width' removed\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'background-color' removed\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'text-anchor' promoted to attribute\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'font-size' promoted to attribute\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'font-weight' promoted to attribute\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'text-anchor' promoted to attribute\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'font-size' promoted to attribute\r\n*** [svgcheck:] ../../tmp/kramdown-rfc20231207-155-lgaec1:1: Style property 'font-weight' promoted to attribute\r\n*** [svgcheck:] ERROR: File does not conform to SVG requirements\r\nlib/trace.sh draft-ietf-scitt-architecture.txt -s xml2rfc-txt xml2rfc -q --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/github/workspace/.refcache --text --no-pagination draft-ietf-scitt-architecture.xml -o draft-ietf-scitt-architecture.txt\r\ndraft-ietf-scitt-architecture.xml(2016): Error: Invalid attribute font-weight for element text, at /rfc/back/section[1]/artset/artwork[1]/*/*[1]/*[2]\r\ndraft-ietf-scitt-architecture.xml(2024): Error: Invalid attribute font-weight for element text, at /rfc/back/section[1]/artset/artwork[1]/*/*[2]/*[2]/*[2]\r\n/github/workspace/draft-ietf-scitt-architecture.xml(10): Error: Invalid document before running preptool.\r\nUnable to complete processing draft-ietf-scitt-architecture.xml\r\nmake[1]: *** [lib/main.mk:116: draft-ietf-scitt-architecture.txt] Error 1\r\nlib/trace.sh draft-ietf-scitt-architecture.html -s xml2rfc-html xml2rfc -q --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/github/workspace/.refcache --html --css=lib/v3.css --metadata-js-url=/dev/null draft-ietf-scitt-architecture.xml -o draft-ietf-scitt-architecture.html\r\ndraft-ietf-scitt-architecture.xml(2016): Error: Invalid attribute font-weight for element text, at /rfc/back/section[1]/artset/artwork[1]/*/*[1]/*[2]\r\ndraft-ietf-scitt-architecture.xml(2024): Error: Invalid attribute font-weight for element text, at /rfc/back/section[1]/artset/artwork[1]/*/*[2]/*[2]/*[2]\r\n/github/workspace/draft-ietf-scitt-architecture.xml(10): Error: Invalid document before running preptool.\r\nUnable to complete processing draft-ietf-scitt-architecture.xml\r\nmake[1]: *** [lib/main.mk:111: draft-ietf-scitt-architecture.html] Error 1\r\nmake[1]: Target 'latest' not remade because of errors.\r\ndraft-ietf-scitt-architecture.md has no newline on the last line\r\n*** Run 'make fix-lint' to automatically fix some errors\r\nmake[1]: *** [lib/main.mk:199: lint-whitespace] Error 1\r\nmake[1]: Target 'lint' not remade because of errors.\r\nrm draft-ietf-scitt-architecture.xml\r\nmake: *** [lib/main.mk:16: all] Error 2\r\n```\r\n\r\nEt fin. \ud83e\udd26 ",
          "createdAt": "2023-12-07T02:22:48Z",
          "updatedAt": "2023-12-07T02:22:48Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "It turns out it's easier to learn aasvg, than it is to get mermaid to work ",
          "createdAt": "2023-12-07T02:24:17Z",
          "updatedAt": "2023-12-07T02:24:17Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> It turns out it's easier to learn aasvg, than it is to get mermaid to work\r\n\r\nThe main challenge is we will need to \"transmogrify\" (to be a smart alec) the resulting SVG, but I too see the appeal. I am closing here but as a side project for when core project work is hard kind of routine I will look into this, but it is not in scope for upstream `mmdc` fixing or a filter script. I have been meaning to learn more about our favorite vector graphics format, and I know people into it.\r\n\r\nBut again, not in scope for convo here. More to follow and I will reach out if/when I make progress.",
          "createdAt": "2023-12-07T02:26:44Z",
          "updatedAt": "2023-12-07T02:26:44Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 135,
      "id": "PR_kwDOIvmHss5g8j3R",
      "title": "Remove Reg_Info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/135",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on discussions at IETF and subsequent editors meetings, this proposal removes `reg_info` as not required by all Transparency Service implementations. \r\nTransparency Services MAY implement optional information using `CWT_Claims` and the [\"private use\" implementation keys](https://www.iana.org/assignments/cwt/cwt.xhtml#claims-registry) available\r\n\r\nFixes #19, #103, #127",
      "createdAt": "2023-12-02T00:37:37Z",
      "updatedAt": "2023-12-12T03:54:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cd61a58ed50603fc6cf74a00dbd029762ab6764d",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/19-103-127",
      "headRefOid": "4301c8d1399189ef64e58f7a8124dbf1b7d7e84b",
      "closedAt": "2023-12-05T17:24:42Z",
      "mergedAt": "2023-12-05T17:24:42Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "2e3d01fdde3c4ba9b9a3e27bbc8afd16756821e9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5o8r7o",
          "commit": {
            "abbreviatedOid": "8413f94"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Just a question for now. As an observer and interested, looks good so far!",
          "createdAt": "2023-12-02T00:52:01Z",
          "updatedAt": "2023-12-02T00:53:48Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "What does a named policy mean in this context? ",
              "createdAt": "2023-12-02T00:52:01Z",
              "updatedAt": "2023-12-02T00:53:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5o9TgH",
          "commit": {
            "abbreviatedOid": "8413f94"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-02T15:15:34Z",
          "updatedAt": "2023-12-02T15:15:35Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nFor interoperability, Registration Policy decisions should be based on interpretation of the mandatory metadata in the protected header of a Signed Statement.\r\n```",
              "createdAt": "2023-12-02T15:15:34Z",
              "updatedAt": "2023-12-02T15:15:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5o9ThT",
          "commit": {
            "abbreviatedOid": "8413f94"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-02T15:16:26Z",
          "updatedAt": "2023-12-02T15:16:26Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\n1. **Apply Registration Policy:** The Transparency Service MUST check the attributes required by a policy are present in the protected headers.\r\n```",
              "createdAt": "2023-12-02T15:16:26Z",
              "updatedAt": "2023-12-02T15:16:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5o9Tld",
          "commit": {
            "abbreviatedOid": "8413f94"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-02T15:18:44Z",
          "updatedAt": "2023-12-02T15:18:45Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "```suggestion\r\n- Transparency Service MUST include additional claims in the protected header of Receipts to indicate the policies evaluated during the registration of a Statement\r\n```\r\n\r\nI don't think we should force transparency services to disclose such information.",
              "createdAt": "2023-12-02T15:18:45Z",
              "updatedAt": "2023-12-05T15:24:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5o9Tm1",
          "commit": {
            "abbreviatedOid": "8413f94"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-02T15:19:32Z",
          "updatedAt": "2023-12-02T15:19:32Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "also with the CDDL removed, this cannot be a MUST, without some additional specification, which will need to be handled in a separate PR.\r\n\r\nTracked in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/136",
              "createdAt": "2023-12-02T15:19:32Z",
              "updatedAt": "2023-12-05T15:28:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5pOeo5",
          "commit": {
            "abbreviatedOid": "b6ec5f8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-05T15:29:25Z",
          "updatedAt": "2023-12-05T15:29:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5pOetq",
          "commit": {
            "abbreviatedOid": "b6ec5f8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-05T15:29:32Z",
          "updatedAt": "2023-12-05T15:29:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5pOs5h",
          "commit": {
            "abbreviatedOid": "8413f94"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-05T15:53:50Z",
          "updatedAt": "2023-12-05T15:53:51Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "resolving, outdated",
              "createdAt": "2023-12-05T15:53:50Z",
              "updatedAt": "2023-12-05T15:53:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5pPXqS",
          "commit": {
            "abbreviatedOid": "3d0c259"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "fix accidental reversal due to merge resolution",
          "createdAt": "2023-12-05T16:50:58Z",
          "updatedAt": "2023-12-05T16:52:23Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\n  15  => CWT_Claims      ; CBOR Web Token Claims,\r\n```",
              "createdAt": "2023-12-05T16:50:58Z",
              "updatedAt": "2023-12-05T16:52:23Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n  15  => CWT_Claims      ; CBOR Web Token Claims,\r\n```",
              "createdAt": "2023-12-05T16:51:49Z",
              "updatedAt": "2023-12-05T16:52:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 139,
      "id": "PR_kwDOIvmHss5hM6sl",
      "title": "Prepare for SCRAPI",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/139",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR removes implementation details from the architecture, many of which are specific to SCRAPI.",
      "createdAt": "2023-12-05T16:34:38Z",
      "updatedAt": "2023-12-12T17:10:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "bd1f91d34ba54ef0c064e44d2fe72a482bc9ea54",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "scrapi-adoption-prep",
      "headRefOid": "a4e15641877cd578e7d391e0aeaf26582bedd2d9",
      "closedAt": "2023-12-12T17:09:41Z",
      "mergedAt": "2023-12-12T17:09:41Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0580ad7de21d197f02379b6d02741d192d8fe96d"
      },
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Re the SCRAPI I-D reference, it does not appear to be in the IETF Datatracker system at all and noticed when it wasn't listed or clicked on a link to search by I-D name and it returned no results, @OR13. That is why I asked about this on the mailing list.\r\n\r\nhttps://datatracker.ietf.org/doc/search?name=draft-birkholz-scitt-scrapi&rfcs=on&activedrafts=on&olddrafts=on\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/AqHH6OUrc2Xzj81JI-fD4IUB91U/\r\n\r\nDon't we need to take care of that issue for the short-hand references to work at all? Can it not be added to the tracker in advance of being adopted by the WG? (It seems some are added and \"owned\" by authors and not associated with the target WG in advance in some or not all cases. Sorry, I am new here.\r\n\r\n**UPDATE:** I had encountered this problem before and I guess I misread this output from [the previous run](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/actions/runs/7104011455/job/19338031440). It seems whitespace is an issue but not dangling links. Disregard!\r\n\r\n```sh\r\n /github/workspace/.refcache/reference.I-D.draft-birkholz-scitt-scrapi.xml: fetching from https://datatracker.ietf.org/doc/bibxml3/draft-birkholz-scitt-scrapi.xml\r\n*** Can't get with persistent HTTP: Status code 404 while fetching https://datatracker.ietf.org/doc/bibxml3/draft-birkholz-scitt-scrapi.xml\r\n*** 404 Not Found while fetching https://datatracker.ietf.org/doc/bibxml3/draft-birkholz-scitt-scrapi.xml\r\n*** No such file or directory @ rb_sysopen - /github/workspace/.refcache/reference.I-D.draft-birkholz-scitt-scrapi.xml for /github/workspace/.refcache/reference.I-D.draft-birkholz-scitt-scrapi.xml\r\n```",
          "createdAt": "2023-12-05T17:15:24Z",
          "updatedAt": "2023-12-05T17:21:25Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@aj-stein-nist hmm, you are right... seems scrapi is not published well enough to be referenced... I will have to fix that, but apparently its not blocking the PR... which is weird.\r\n\r\n- https://datatracker.ietf.org/doc/search?name=draft-birkholz-scitt-scrapi&rfcs=on&activedrafts=on&olddrafts=on",
          "createdAt": "2023-12-05T17:22:15Z",
          "updatedAt": "2023-12-05T17:22:55Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> apparently its not blocking the PR... which is weird.\r\n\r\nI too thought it was weird, I'll look into the i-d template action and consider if there is a bug to report or enhancement to file.\r\n",
          "createdAt": "2023-12-05T17:33:07Z",
          "updatedAt": "2023-12-05T17:33:07Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "PR against SCRAPI which can take some of these changes, but which I am intentionally leaving light.\r\n\r\nhttps://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/pull/7",
          "createdAt": "2023-12-05T18:34:17Z",
          "updatedAt": "2023-12-05T18:34:17Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "fixes #117 ",
          "createdAt": "2023-12-12T04:19:05Z",
          "updatedAt": "2023-12-12T04:19:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5pPqEn",
          "commit": {
            "abbreviatedOid": "2cd602b"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-05T17:22:02Z",
          "updatedAt": "2023-12-05T17:22:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5p5DFF",
          "commit": {
            "abbreviatedOid": "0b8c06e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Will be LGTM with merger of #141 ",
          "createdAt": "2023-12-12T04:20:55Z",
          "updatedAt": "2023-12-12T04:20:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5p-d1d",
          "commit": {
            "abbreviatedOid": "a4e1564"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nPer the editors call, there was a few open questions that @fournet was going to open new issues and prs for tracking. \r\nThis PR completes the previous decision to segment the APIs into: https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/",
          "createdAt": "2023-12-12T16:40:44Z",
          "updatedAt": "2023-12-12T16:40:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5p-lgP",
          "commit": {
            "abbreviatedOid": "a4e1564"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM. Clarity is good.",
          "createdAt": "2023-12-12T16:56:30Z",
          "updatedAt": "2023-12-12T16:56:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 140,
      "id": "PR_kwDOIvmHss5hY_7A",
      "title": "Some Header Re-Shuffeling",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/140",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "simplified a few references & added a WG, some reordering",
      "createdAt": "2023-12-07T08:31:13Z",
      "updatedAt": "2023-12-12T03:53:48Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "1720d0b8ce4a10658ba2361712c0e3089c2dcb4b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "henks-editorials-1",
      "headRefOid": "d8d8695de57b593c0e30a39751dcc48ba7483759",
      "closedAt": "2023-12-12T03:53:44Z",
      "mergedAt": "2023-12-12T03:53:43Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "bd1f91d34ba54ef0c064e44d2fe72a482bc9ea54"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> A small fix and then it will be ready to \ud83d\udea2 it.\r\n\r\nThanks, @aj-stein-nist ",
          "createdAt": "2023-12-12T03:53:01Z",
          "updatedAt": "2023-12-12T03:53:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5peqwk",
          "commit": {
            "abbreviatedOid": "7329b25"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2023-12-07T09:33:02Z",
          "updatedAt": "2023-12-07T09:33:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5phW5p",
          "commit": {
            "abbreviatedOid": "7329b25"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "A small fix and then it will be ready to \ud83d\udea2 it.",
          "createdAt": "2023-12-07T14:55:00Z",
          "updatedAt": "2023-12-07T14:56:27Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Per the [`kramdown-rfc` docs](https://github.com/cabo/kramdown-rfc/blob/367553a4f2994ca167e8e659ffb92e74febe76a0/README.md#References) and local testing, you need to flip the key and value.\r\n\r\n```suggestion\r\n  COSWID: RFC9393\r\n  CWT_CLAIMS_COSE: I-D.ietf-cose-cwt-claims-in-headers\r\n```\r\n\r\nTested this locally in the same container as GHA by using this branch, running `make clean`, then `make`. This suggestion will remove [the relevant build failures](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/actions/runs/7125650198/job/19401978042#step:6:35) and allow it to publish once reviewed and merged by others.",
              "createdAt": "2023-12-07T14:55:00Z",
              "updatedAt": "2023-12-07T14:57:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5p4-wy",
          "commit": {
            "abbreviatedOid": "d8d8695"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-12-12T03:53:38Z",
          "updatedAt": "2023-12-12T03:53:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 141,
      "id": "PR_kwDOIvmHss5hwAE6",
      "title": "Format and spellcheck fixes to #139",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/141",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A few kramdown and markdown fixes and a spellcheck",
      "createdAt": "2023-12-12T04:18:32Z",
      "updatedAt": "2023-12-12T16:14:43Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "scrapi-adoption-prep",
      "baseRefOid": "0b8c06e1b24d62c7f648a16bc27e8da1a3af9e45",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/scrapi-updates",
      "headRefOid": "4af1cefd021f257e073304bdbd8f0f64eea8b371",
      "closedAt": "2023-12-12T15:11:38Z",
      "mergedAt": "2023-12-12T15:11:38Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "cd9eb59d0d84d907db1e304568b8e3ffa0d4f33d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5p9hPv",
          "commit": {
            "abbreviatedOid": "d5eeb26"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-12T15:09:33Z",
          "updatedAt": "2023-12-12T15:09:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "PR_kwDOIvmHss5itk8Q",
      "title": "Add package.json with aasvg",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/142",
      "state": "MERGED",
      "author": "thgoebel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As suggested in https://github.com/martinthomson/i-d-template/issues/385#issuecomment-1564100412, there should be a `package.json`. Then running `make` will automatically install aasvg (assuming that npm is installed, which I am documenting in https://github.com/martinthomson/i-d-template/pull/419).\r\n\r\nWithout this (and without aasvg installed otherwise), running `make` will throw an error:\r\n\r\n```\r\n/usr/lib/ruby/3.1.0/open3.rb:222:in `spawn': No such file or directory - aasvg (Errno::ENOENT)\r\n        from /usr/lib/ruby/3.1.0/open3.rb:222:in `popen_run'\r\n        from /usr/lib/ruby/3.1.0/open3.rb:103:in `popen3'\r\n        from /usr/lib/ruby/3.1.0/open3.rb:290:in `capture3'\r\n        from /draft-ietf-scitt-architecture/lib/.gems/ruby/3.1.0/gems/kramdown-rfc2629-1.7.4/lib/kramdown-rfc2629.rb:557:in `svg_tool_process'\r\n        from /draft-ietf-scitt-architecture/lib/.gems/ruby/3.1.0/gems/kramdown-rfc2629-1.7.4/lib/kramdown-rfc2629.rb:506:in `call'\r\n[...]\r\n```",
      "createdAt": "2023-12-24T13:18:08Z",
      "updatedAt": "2024-01-03T16:55:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "0580ad7de21d197f02379b6d02741d192d8fe96d",
      "headRepository": "thgoebel/draft-ietf-scitt-architecture",
      "headRefName": "package-json",
      "headRefOid": "a81c96409b9b149c51866e674caa31b9ebc7b1f1",
      "closedAt": "2024-01-03T01:42:24Z",
      "mergedAt": "2024-01-03T01:42:24Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1fa26e514a52d4bbb8f035183be0834230a4b2e4"
      },
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for the contribution. I actually completed the supporting work, with package.json and other requirements, and it works partly. The SVG can be output by the CLI but Mermaid itself makes not-so-standard SVG files and fails tests later in the pipeline. That's why I voluntarily closed #134. More details there.\r\n\r\nIn the coming weeks I am more than happy to work with you on determining how hard it is to make upstream fixes to Mermaid but it won't be trivial.\r\n\r\n**EDIT:** People wisely told me I am being silly and this is a very different issue and I conflated two. That's very correct! Easy to test and review PR, apologies, @thgoebel.",
          "createdAt": "2023-12-24T14:08:24Z",
          "updatedAt": "2024-01-02T15:14:44Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I cloned fresh, and ran make, and I see several errors on the main branch... including this one.\r\n\r\n```\r\ncat draft-ietf-scitt-architecture.md  | kramdown-rfc --v3 | lib/trace.sh draft-ietf-scitt-architecture.xml -s venue /.../draft-ietf-scitt-architecture/lib/.venv/bin/python lib/add-note.py | lib/trace.sh draft-ietf-scitt-architecture.xml -s v2v3 /.../draft-ietf-scitt-architecture/lib/.venv/bin/xml2rfc -q --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/.../.cache/xml2rfc --v2v3 /dev/stdin -o /dev/stdout >draft-ietf-scitt-architecture.xml\r\n---\r\n- No link definition for link ID '@rfc2046' found on line 1098\r\n- No link definition for link ID '@iana.mediatypes' found on line 1099\r\n- No link definition for link ID '@rfc6838' found on line 1100\r\n- No link definition for link ID '[ this specification ]' found on line 1109\r\n- No link definition for link ID ' this specification ' found on line 1109\r\n- No link definition for link ID '[ this specification ]' found on line 1111\r\n- No link definition for link ID ' this specification ' found on line 1111\r\n/opt/homebrew/Cellar/ruby/3.2.2/lib/ruby/3.2.0/open3.rb:222:in `spawn': No such file or directory - aasvg (Errno::ENOENT)\r\n\tfrom /opt/homebrew/Cellar/ruby/3.2.2/lib/ruby/3.2.0/open3.rb:222:in `popen_run'\r\n\tfrom /opt/homebrew/Cellar/ruby/3.2.2/lib/ruby/3.2.0/open3.rb:103:in `popen3'\r\n\tfrom /opt/homebrew/Cellar/ruby/3.2.2/lib/ruby/3.2.0/open3.rb:290:in `capture3'\r\n\r\n```\r\n\r\nThis PR should be merged, and the other errors should be addressed before other PRs are accepted.",
          "createdAt": "2024-01-02T15:15:50Z",
          "updatedAt": "2024-01-02T15:16:27Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah I am confused as when working on previous PRs, I only knew things were not working because I got errors from SVGs rendered from `aasvg` but I am confused what the deal was, but I must not have been paying too close attention. Thanks, @OR13.",
          "createdAt": "2024-01-02T15:24:32Z",
          "updatedAt": "2024-01-02T15:24:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "The majority of other drafts I viewed didn't include package.json, which does require additional setup for the user. \r\nThis is an annoyance, and with Martin's comment, anything that can make the creation and testing of the specs prior to making a PR, the better.",
          "createdAt": "2024-01-03T01:42:07Z",
          "updatedAt": "2024-01-03T01:42:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rUpIC",
          "commit": {
            "abbreviatedOid": "a81c964"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-02T15:11:19Z",
          "updatedAt": "2024-01-02T15:11:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5rUwRR",
          "commit": {
            "abbreviatedOid": "a81c964"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-02T15:31:04Z",
          "updatedAt": "2024-01-02T15:31:08Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "We may want the latest stable release. Although I used the NPMJS Semver calculator, I didn't know you could use the two values of a SemVer version, so I guess it is the same thing. Nice!\r\n\r\n```suggestion\r\n    \"aasvg\": \"0.3.9\"\r\n```",
              "createdAt": "2024-01-02T15:31:04Z",
              "updatedAt": "2024-01-02T15:31:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rVBSQ",
          "commit": {
            "abbreviatedOid": "a81c964"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T16:16:01Z",
          "updatedAt": "2024-01-02T16:16:01Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "I can also do \"0.3.x\" to be more explicit. My reasoning (here, and in other software projects) is that any patch version will work (assuming semver). Any new checkout can just use the latest 0.3.x. On the other hand pinning an explicit patch version just means that you have to update, commit, and push it more often to stay up-to-date. And if you want that level of detailed control, you might as well commit the lock file.",
              "createdAt": "2024-01-02T16:16:01Z",
              "updatedAt": "2024-01-02T16:16:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rVC1F",
          "commit": {
            "abbreviatedOid": "a81c964"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T16:20:35Z",
          "updatedAt": "2024-01-02T16:20:36Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "You're all good, this is a personal preference thing. You actually made me read the `package.json` docs on this since I actually had never done it this way, and you are right (this is why I said \"I guess it is the same thing\") and approved also. I guess I can't \"resolve comment\" on this repo/org, but you can safely ignore this then, it will get merged shortly I have no doubt.\r\n\r\n(Sorry for the cross wires before, I am not sure how I conflated different issues in your very clear PR, but oh well, next time I will read better.)",
              "createdAt": "2024-01-02T16:20:35Z",
              "updatedAt": "2024-01-02T16:20:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rXVlw",
          "commit": {
            "abbreviatedOid": "a81c964"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-03T01:42:19Z",
          "updatedAt": "2024-01-03T01:42:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 143,
      "id": "PR_kwDOIvmHss5jETZ5",
      "title": "Improve introduction",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/143",
      "state": "MERGED",
      "author": "thgoebel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The previous introduction was very long, contained too much detail, and did not follow a clear logical structure (i.e. no clear chain-of-thought).\r\n\r\nTherefore here is my attempt at improving that:\r\n\r\n- start with a high-level scenario to motivate the problem\r\n- then provide a rough sketch of how the protocol works\r\n  -  This may be moved to Section 5 \"Architecture Overview\"? On the other hand, we do need the terminology to compare SCITT with CT, and the steps are a good way to introduce them concisely.\r\n- then state the security guarantees\r\n- end with comparing SCITT to CT (as per https://mailarchive.ietf.org/arch/msg/scitt/1oW4DRFFb1g230VmZVQVgj_Mdw8/ )\r\n  - Shameless plug: see [my blog](https://thore.io/posts/2023/07/how-certificates-are-born-data-structure-edition/) for an overview of X.509 certs, SCTs, and how they are constructed.\r\n\r\nI'm sure my attempt isn't perfect either, but I hope it's an incremental improvement and I welcome feedback :)\r\n\r\nClick below to expand the detailed analysis of why I dislike the old introduction:\r\n\r\n<details>\r\n\r\nA general pattern that I dislike across the introduction (but also in the rest of the document) is a tendancy to write long sentences. Sentences, that when rendered as TXT, are up to seven lines long. I consciously tried to keep it shorter.\r\nImho technical standards should be short, concise, approachable, and easily skimmable.\r\n\r\nAnother general pattern I dislike is the use of keywords (MAY, MUST) in the introduction. Imho that's bad practice -- the introduction should provide a rough overview, not specify anything binding.\r\n\r\nMore specific points (quote from the old text, followed by my comment/assessment, in order of appearance):\r\n\r\n> The second guarantee is achieved by storing the Signed Statement on an immutable, Append-only Log.\r\n\r\nEither the log is immutable or append-only (i.e., mutable with restrictions). It can't be both. => Remove \"immutable\".\r\n\r\n> Lastly, the Transparency Service verifies the identity of the Issuer, [...] Signed Statement is added to the Append-only Log.\r\n\r\nHow does this relate to the security guarantees?? I removed this sentence.\r\n\r\n> However, the range of use cases and applications in this document is broader, which requires more flexibility in how each Transparency Service is implemented and operates.\r\n\r\nStating the obvious, might as well delete.\r\n\r\n> Each service MAY enforce its own Registration Policies for authorizing entities to register their Signed Statements to the Append-only Log.\r\n\r\nWhy use the BCP 14 keywords in the introduction (here: MAY)? The purpose of an introduction should be to give a high level overview, not to specify something. This MAY-statement would better belong to Section 5.2.2.\r\n\r\nAlso, is this entire paragraph necessary for an introduction? Eight lines, just to say that Transparency Services can have policies. Imho policies are a detail that doesn't need to be in the introduction.\r\n\r\n> It is critical to provide interoperability for all Transparency Services instances as the composition of supply chain entities is ever-changing.\r\n\r\nRedundant. The whole points of IETF is to provide interoperability.\r\n\r\n> A Statements payload content is always opaque and MAY be encrypted when submitted to the Transparency Services. However the header metadata MUST be transparent in order to warrant trust for later processing.\r\n\r\nAgain, why use BCP 14 keywords (especially a binding MUST) in the introduction??\r\n\r\nAlso, this is again too much detail for the introduction.\r\n\r\n> However, third parties (such as Auditors) would be granted access as needed to attest to the validity of the Artifact, Subject or the entirety of the Transparency Service.\r\n\r\nStating the obvious. No access, no audit.\r\n\r\n> Independent third parties may also make Statements about an Artifact, published on other Transparency Services.\r\n\r\nRedundant, repeats what the same paragraph says earlier.\r\n\r\n> Breadth of verifier access is critical.\r\n\r\nStating the obvious. If there are no verifiers, we don't need SCITT.\r\n\r\n> As a result, the Transparency Service specified in this architecture caters to two types of audiences: [...]\r\n\r\nHow does this link to the previous sentence??\r\nWhy suddenly talk about issuers after starting the paragraph with  \"verifier access is critical\"?\r\n\r\n> The Transparency Services specified in this architecture are language independent and can be implemented alongside or within existing services.\r\n\r\nObvious. Of course it doesn't matter whether I implement it in C, Rust, or Python. This is why we write RFCs, to define standard interfaces.\r\n\r\n> The interoperability guaranteed by the Transparency Services is enabled via core components (architectural constituents).\r\n\r\nObvious. Again, IETF is all about interoperability.\r\n\r\n> Many of the data elements processed by the core components are based on the CBOR Signing and Encryption (COSE) standard specified in [RFC9052], which is used to produce Signed Statements about Artifacts and to build and maintain a Merkle tree that functions as an Append-only Log for corresponding Signed Statements.\r\n\r\nToo much detail for an introduction.\r\n\r\n</details>",
      "createdAt": "2024-01-02T16:57:53Z",
      "updatedAt": "2024-01-10T17:37:02Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "24f63ee8cfc2b99b937dd236cca3c886fd1218f9",
      "headRepository": "thgoebel/draft-ietf-scitt-architecture",
      "headRefName": "improve-introduction",
      "headRefOid": "13d1185cf6978426e4e5a49a139a10aeac1a50e3",
      "closedAt": "2024-01-10T17:35:51Z",
      "mergedAt": "2024-01-10T17:35:51Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "e85d13527ac8ff78a29d9a46cb4b609cff286692"
      },
      "comments": [
        {
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks a lot for your feedback!\r\n\r\nEspecially the points on producers vs consumers, the point that Issuers may not just be producers but also compliance auditors, pentesters, etc, and the point that Issuers merely commit to/endorse a value are good points.\r\nI tried to work this in.\r\n\r\nI moved the part on CT under \"Use cases\" where I thing it fits nicely.\r\n\r\nThe last paragraphs on the security guarantees could be moved into the \"Security Considerations\" section, I think? Maybe that's a future PR, I'm leaving it in the introduction for now.\r\n",
          "createdAt": "2024-01-03T16:39:24Z",
          "updatedAt": "2024-01-03T16:39:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> The last paragraphs on the security guarantees could be moved into the \"Security Considerations\" section, I think? Maybe that's a future PR, I'm leaving it in the introduction for now.\r\n\r\nSplitting this into smaller chunks does help make quicker progress. ",
          "createdAt": "2024-01-05T19:12:41Z",
          "updatedAt": "2024-01-05T19:12:41Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@thgoebel, might I suggest you carve this into smaller bites?\r\n- For instance, [the multi-role discussion](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/143#discussion_r1442993002) could be an isolated PR.\r\n- The discussion for [pulling Architectural diagram up](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/143#discussion_r1440011416) another isolated PR.\r\n- With those complete, it might be easier to reduce some of the intro text a bit more.",
          "createdAt": "2024-01-06T01:16:52Z",
          "updatedAt": "2024-01-06T01:16:52Z"
        },
        {
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good point, done. I opened a separate PR (#152) for the multi-role discussion and the protocol flow. I think both of them should be pulled down into the Architecture Overview (rather than the diagram being pulled up).\r\n\r\nWith the architecture flow gone, and thus the terms no longer introduced, I moved the security guarantees into its own subsection. They don't make sense in the introduction anymore.",
          "createdAt": "2024-01-06T10:45:59Z",
          "updatedAt": "2024-01-06T11:14:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rVT2-",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T17:13:41Z",
          "updatedAt": "2024-01-02T17:13:41Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n1. Verifiers consume the Transparent Statements, and by verifying them, are convinced of the authenticity and integrity of Statements about an Artifact.\r\n```",
              "createdAt": "2024-01-02T17:13:41Z",
              "updatedAt": "2024-01-02T17:14:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rVUg5",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T17:15:21Z",
          "updatedAt": "2024-01-02T17:15:22Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "trying to adjust the \"order\" comment, this currently reads as \"verify in [sequential] order\", instead of \"verify in order to\"",
              "createdAt": "2024-01-02T17:15:21Z",
              "updatedAt": "2024-01-02T17:15:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rVVtL",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T17:19:03Z",
          "updatedAt": "2024-01-02T17:19:04Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "```suggestion\r\n## Relation to Certificate Transparency\r\n\r\nSCITT is a generalisation of Certificate Transparency {{-CT}}, which can be interpreted as a transparency architecture for the supply chain of X.509 certificates.\r\n```",
              "createdAt": "2024-01-02T17:19:03Z",
              "updatedAt": "2024-01-02T17:19:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rVWRC",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T17:20:57Z",
          "updatedAt": "2024-01-02T17:20:57Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "In my current mental model, the issuer is the entity that commits to the statement, not necessarily the entity that first made the statement... I don't know if this distinction is worth preserving.",
              "createdAt": "2024-01-02T17:20:57Z",
              "updatedAt": "2024-01-02T17:20:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rVa4H",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T17:35:46Z",
          "updatedAt": "2024-01-02T17:35:46Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "That's an interesting point, given that there are many derivative software components from different entities, I think it is important to distinguish then (an Issuer can be the entity who made the software, someone who made a derivative, neither of those and someone who runs conformity/quality testing on software, etc).\r\n\r\nThanks for pointing this out, because I had not internalized this important distinction until now.",
              "createdAt": "2024-01-02T17:35:46Z",
              "updatedAt": "2024-01-02T17:36:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rV1NM",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T19:10:26Z",
          "updatedAt": "2024-01-02T19:10:27Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Yes, I agree with @OR13 on this one: the only thing we can prove for certain is that the Issuer committed the statement to the TS (and even that's not certain if you want to get all Red Team on us, but we have to draw a line at some point so in the model we assume use of the Issuer Signing Key is foolproof).\r\n\r\nAs Orie says, they might simply be endorsing a statement made by someone else.\r\nBut more importantly it's absolutely not necessarily the case that that Issuer released the Artifact: they might be making observations about someone else's work. \r\n\r\nI'll make a suggestion to this effect",
              "createdAt": "2024-01-02T19:10:26Z",
              "updatedAt": "2024-01-02T19:10:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rV2vD",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "A handful of things I think needed to go back (in suggestions in this review). There's a lot removed that I winced slightly at but on reflection think it's fine to remove, since the more formal parts of the spec should either make them clear or drop them.",
          "createdAt": "2024-01-02T19:15:34Z",
          "updatedAt": "2024-01-02T19:40:00Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n1. Issuers make Statements about Artifacts, for example: \"Issuer name\", \"Artifact type\", \"Artifact version\".\r\n```",
              "createdAt": "2024-01-02T19:15:34Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n```\r\n\r\nI would remove this line: it adds nothing and is arguably asking for trouble over definition of 'consumer' in particular. Plus what about the stages in the middle? Some people are fine calling these producers and consumers but many aren't.  The next line covers all of this without getting into trouble. ",
              "createdAt": "2024-01-02T19:30:11Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 95,
              "body": "```suggestion\r\nSCITT is a generalisation of Certificate Transparency {{-CT}}, which can be interpreted as a transparency architecture for the supply chain of X.509 certificates.\r\n\r\nHowever, the range of use cases and applications in this document is broader, which requires more flexibility in how each Transparency Service is implemented and operates.\r\n\r\nConsidering CT in terms of SCITT:\r\n```",
              "createdAt": "2024-01-02T19:34:02Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\n * CAs (Issuers) sign X.509 TBSCertificates (Artifacts) to produce X.509 certificates (Signed Statements).\r\n```",
              "createdAt": "2024-01-02T19:34:10Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 97,
              "body": "```suggestion\r\n * CAs then submit the certificates to one or more CT logs (Transparency Services).\r\n```",
              "createdAt": "2024-01-02T19:34:19Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n * The CT logs produce Signed Certificate Timestamps (Transparent Statements).\r\n```",
              "createdAt": "2024-01-02T19:34:25Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 99,
              "body": "```suggestion\r\n* The SCTs are checked by browsers (Verifiers), and the Append-only Log can be checked by Auditors.\r\n\r\nUnlike CT, where independent Auditors are responsible for enforcing the consistency of multiple independent instances of the same global Transparency Service, each Transparency Service is required to guarantee the consistency of its own Append-only Log (through the use of a consensus algorithm between replicas of the Transparency Service), but assume no consistency between different Transparency Services.\r\n```",
              "createdAt": "2024-01-02T19:34:31Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            },
            {
              "originalPosition": 75,
              "body": "Note I have reinstated this line in the 'relation to CT' section",
              "createdAt": "2024-01-02T19:37:15Z",
              "updatedAt": "2024-01-02T19:40:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rW2xN",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-02T22:08:17Z",
          "updatedAt": "2024-01-02T22:08:17Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "> Unlike CT, where independent Auditors are responsible for enforcing the consistency of multiple independent instances of the same global Transparency Service, each Transparency Service is required to guarantee the consistency of its own Append-only Log (through the use of a consensus algorithm between replicas of the Transparency Service), but assume no consistency between different Transparency Services.\r\n\r\nI already asked about this sentence [on the list](https://mailarchive.ietf.org/arch/msg/scitt/1oW4DRFFb1g230VmZVQVgj_Mdw8/) because it doesn't make sense to me.\r\nAlso it's one of these monster sentences that I don't like.\r\n\r\n> multiple independent instances of the same global Transparency Service,\r\n\r\nI thought every CT log was a single TS? I.e. there are many independent TS, not \"the same global\" one.\r\n\r\n> each Transparency Service is required to guarantee the consistency of its own Append-only Log\r\n\r\nThis seems to be true for both CT and SCITT? In both cases we hope that the tree is correctly constructed, but if we want to verify it, the auditors can check the consistency proofs. Note that \"consistency proofs\" only prove the append-only property of a specific tree, they say nothing about the \"consistency\" between the tree of CT log 1 and the tree of CT log 2.\r\n\r\n> through the use of a consensus algorithm between replicas of the Transparency Service\r\n\r\nFrom [Orie's reply](https://mailarchive.ietf.org/arch/msg/scitt/8IwqR-mw8lKwUHg5YT04CIlGrgQ/), this seems to be an implementation detail of a given TS implementation (that chooses to build it as a distributed system rather than a single DB on a single host).\r\n\r\nThis whole confusing sentence is what prompted me to ask about the CT--SCITT mapping in the first place :)\r\nWhat are \"instances\", what are \"replicas\", what's the difference? Again, see [the list](https://mailarchive.ietf.org/arch/msg/scitt/1oW4DRFFb1g230VmZVQVgj_Mdw8/).\r\n\r\nIf anything, we could add a sentence that CT consists of many *independent* TS, and that Verifiers may want to query all of them? Or there would need to be a federation mechanism, which isn't fully spec'ed I believe? Or maybe I still understand this wrong?",
              "createdAt": "2024-01-02T22:08:17Z",
              "updatedAt": "2024-01-02T22:14:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rXWMq",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T01:49:36Z",
          "updatedAt": "2024-01-03T01:49:36Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "spelling\r\n```suggestion\r\nSCITT is a generalization of Certificate Transparency {{-CT}}, which can be interpreted as a transparency architecture for the supply chain of X.509 certificates.\r\n```",
              "createdAt": "2024-01-03T01:49:36Z",
              "updatedAt": "2024-01-03T01:49:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rXXXL",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks @thgoebel for the PR to reduce and clarify the spec.\r\nAs you can see from the reviews, the clarity is appreciated, while trying to preserve the intent. \r\n\r\nI would normally [commit] suggestions to bring closure to this more quickly. \r\nIf you'd like to work through the comments, I can review again tomorrow and start applying some of the suggestions. \r\n\r\nI agree with your \"details\" comment to merge with the Architecture Overview. I don't know if we need to reiterate all the terminology first, as it becomes a long read just to get started. Rather, leave it for reference, the user can choose to jump ahead and read the first time. Subsequently, they can quickly point to the architecture overview. ",
          "createdAt": "2024-01-03T02:03:18Z",
          "updatedAt": "2024-01-03T02:55:16Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "If we trim line 132 above, the following 3 lines become orphaned. That may, or may not be a bad thing in the spirit of reduction to create focus, while still maintaining enough context for the goal",
              "createdAt": "2024-01-03T02:03:18Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            },
            {
              "originalPosition": 21,
              "body": "agreeing with the points that the issuer is simply \"owing\" the statement being made about an artifact, not limited to a producer\r\n- Producers of artifacts make statements about their artifacts (Wabbit Networks (issuer) produced some software)\r\n- Auditors make statements about artifacts produced by others (\"ScanAuditing\" (issuer) attested to an artifact's release process )\r\n- Security companies make statements about the current known quality of artifacts (\"CogsWell Security\" (issuer) found the net-montior (artifact) shipped by Wabbit Networks is now known to have a vulnerability and no longer meets X123 compliance requirements)\r\n- Consumers make statements about the artifacts they consume, creating a history of their decisions (ACME Rockets (issuer) evaluated the net-monitor software on January 2nd 2024, found it met their security requirements and deployed it)",
              "createdAt": "2024-01-03T02:12:31Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            },
            {
              "originalPosition": 21,
              "body": "I would elaborate \"Issuer name\", \"Artifact type\", \"Artifact version\" as these read like placeholders.",
              "createdAt": "2024-01-03T02:14:43Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            },
            {
              "originalPosition": 29,
              "body": "minor consistency nit: \r\n- when creating single-sentence bullets, we haven't ended with periods",
              "createdAt": "2024-01-03T02:19:15Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            },
            {
              "originalPosition": 22,
              "body": "When reviewing the document, we often skip to the [architectural overview (visual)](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-architecture-overview)\r\nRather than split a textual flow with the visual flow, could these be merged?\r\nMove the visual up to the introduction and provide a textual summary?",
              "createdAt": "2024-01-03T02:22:27Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            },
            {
              "originalPosition": 24,
              "body": "I'm assuming lines 144-147 are additional text to the numbered bullet on line 143, rather than additional numbered lines? Could the numbered items be summarized more succinctly? ",
              "createdAt": "2024-01-03T02:25:00Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            },
            {
              "originalPosition": 32,
              "body": "I wonder if this could be changed to a bulleted list:\r\n```suggestion\r\nAn entity can take on multiple roles, for example:\r\n\r\n- A Verifier may make new Statements for what they verified\r\n- An Issuer can make multiple Statements about the same Artifact\r\n- An Issuer can make amended Statements about the same Artifact as their view changes over time\r\n- Multiple Issuers can make different, even conflicting Statements, about the same Artifact where another verifier may choose which Issuers they trust\r\n- Multiple Issuers can make the same Statement about a single Artifact, affirming multiple Issuers agree\r\n```",
              "createdAt": "2024-01-03T02:29:23Z",
              "updatedAt": "2024-01-03T02:55:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rbv74",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T15:32:04Z",
          "updatedAt": "2024-01-03T15:32:04Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "I suggest we remove any reference to concrete deployment models from the architecture.\r\n\r\nThe transparency service is a single logical entity that maintains a log.\r\n\r\nhow that is implemented behind the scenes is not relevant to the architecture.",
              "createdAt": "2024-01-03T15:32:04Z",
              "updatedAt": "2024-01-03T15:32:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rph1V",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T14:18:39Z",
          "updatedAt": "2024-01-05T14:18:40Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "This is good.",
              "createdAt": "2024-01-05T14:18:39Z",
              "updatedAt": "2024-01-05T14:18:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rp4uN",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T15:11:32Z",
          "updatedAt": "2024-01-05T15:11:33Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "A few nits:\r\n\r\n- Imho the bullets are not examples of \"an entity taking on multiple roles at the same time\", only the first one is. The others are examples of what a given role can do.\r\n- And even the first bullet is imprecise: the Verifier cannot make Statements, because by design the Issuer does that.  Entity != role.\r\n- The second and third bullet are kind the same / the third is a specification of the second.\r\n\r\nIterated proposal:\r\n\r\n```\r\nAn entity can take on multiple roles.\r\nFor example, an entity can first act as a Verifier, and later act as an Issuer by making a Statement about the verification outcome.\r\n\r\nIssuers are free to do any Statements. In particular:\r\n\r\n- An Issuer can make multiple Statements about the same Artifact. For example, an Issuer can make amended Statements about the same Artifact as their view changes over time\r\n- Multiple Issuers can make different, even conflicting Statements, about the same Artifact. Verifiers can choose which Issuers they trust\r\n- Multiple Issuers can make the same Statement about a single Artifact, affirming multiple Issuers agree\r\n```\r\n\r\nWhile I like this, I feel like it is getting too much for the introduction again. Can we somehow fit these as clarifying examples into section 2 or  5?",
              "createdAt": "2024-01-05T15:11:33Z",
              "updatedAt": "2024-01-05T15:11:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rsBG5",
          "commit": {
            "abbreviatedOid": "8bb7e24"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T19:17:04Z",
          "updatedAt": "2024-01-05T19:17:04Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "The above looks like a cleaner update. \r\nI'd remove the following line, as the bullets say the same, and the wording of \"free to do any\" would need updates.\r\n> Issuers are free to do any Statements. In particular:",
              "createdAt": "2024-01-05T19:17:04Z",
              "updatedAt": "2024-01-06T00:39:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rud18",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-06T11:04:25Z",
          "updatedAt": "2024-01-06T11:04:26Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Pulled out to #152",
              "createdAt": "2024-01-06T11:04:25Z",
              "updatedAt": "2024-01-06T11:04:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rud2O",
          "commit": {
            "abbreviatedOid": "c297587"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-06T11:04:37Z",
          "updatedAt": "2024-01-06T11:04:38Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Pulled out to #152",
              "createdAt": "2024-01-06T11:04:38Z",
              "updatedAt": "2024-01-06T11:04:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFYN3",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:24:58Z",
          "updatedAt": "2024-01-10T14:24:58Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Its my understanding that CT includes modified certificates in the log.\r\n\r\nSo I might expect the following alignment:\r\n\r\n```\r\nTBSCertificates -> Certificate -> Deterministically Broken Cert -> Log Entry\r\nStatement --> Signed Statement -> Log Entry\r\n```\r\n\r\nI am not a CT expert, but I would focus on what goes on the log and make it clear that Logs are about \"what goes on them\".\r\n\r\n\r\n\r\n",
              "createdAt": "2024-01-10T14:24:58Z",
              "updatedAt": "2024-01-10T14:24:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFYXt",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-10T14:25:16Z",
          "updatedAt": "2024-01-10T14:25:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sFbew",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "It seems to me that @thgoebel did address all the comments (including moving some parts to #152). Are there any objection left to merge?",
          "createdAt": "2024-01-10T14:31:04Z",
          "updatedAt": "2024-01-10T14:31:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sFf25",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:39:16Z",
          "updatedAt": "2024-01-10T14:39:16Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "The tree leaves store the TBSCertificate, among other things:\r\nhttps://datatracker.ietf.org/doc/html/rfc9162#name-merkle-tree-leaves",
              "createdAt": "2024-01-10T14:39:16Z",
              "updatedAt": "2024-01-10T14:39:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sGoyy",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM -  great simplification thanks!",
          "createdAt": "2024-01-10T16:53:09Z",
          "updatedAt": "2024-01-10T16:53:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sGxVw",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks, @thgoebel for the updates. This is a good baseline we can tweak further in subsequent PRs.",
          "createdAt": "2024-01-10T17:10:59Z",
          "updatedAt": "2024-01-10T17:10:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sGxpi",
          "commit": {
            "abbreviatedOid": "13d1185"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:11:44Z",
          "updatedAt": "2024-01-10T17:11:44Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "@OR13, if you're satisfied, can you mark this resolved?",
              "createdAt": "2024-01-10T17:11:44Z",
              "updatedAt": "2024-01-10T17:11:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 144,
      "id": "PR_kwDOIvmHss5jKM3w",
      "title": "Add more details to Privacy Considerations",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/144",
      "state": "MERGED",
      "author": "thgoebel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR elaborates on the privacy analysis a bit.\r\n\r\n1. Describe why it is important (because we cannot delete items from the log)\r\n2. Remove the BCP 14 keyword (MUST NOT). \r\n    - Both the Privacy and Security Considerations sections should have the character of an analysis. They should be recommendations, or highlight gotchas to implementors. Anything binding should be in the main body of the RFC.\r\n    - Yes, this would need to be fixed in the Security Considerations, too.\r\n3. Expand the \"Unless advertised by a Transparency Service\" phrase into a paragraph about access control. This way it's more actionable. (Why would you advertise it? When would it be okay to advertise?)\r\n\r\n",
      "createdAt": "2024-01-03T17:48:22Z",
      "updatedAt": "2024-01-10T14:43:08Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "1fa26e514a52d4bbb8f035183be0834230a4b2e4",
      "headRepository": "thgoebel/draft-ietf-scitt-architecture",
      "headRefName": "privacy",
      "headRefOid": "4f3f0fa871b9b633205f4eba00ab101185c93406",
      "closedAt": "2024-01-10T14:39:50Z",
      "mergedAt": "2024-01-10T14:39:50Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "e316032028f888b013213a3a314a4e8dd609a6a4"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Authors: (@fournet, @ad-l, @henkbirkholz, @yogeshbdeshpande, @OR13), I'm inclined to merge this as is. Any disagreements, or additional changes? We can iterate afterward, but seems like a good baseline to add",
          "createdAt": "2024-01-09T04:45:42Z",
          "updatedAt": "2024-01-09T04:45:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> Authors: (@fournet, @ad-l, @henkbirkholz, @yogeshbdeshpande, @OR13), I'm inclined to merge this as is. Any disagreements, or additional changes? We can iterate afterward, but seems like a good baseline to add\r\n\r\nYes. this looks pretty stable and uncontroversial. Thanks a ton, @thgoebel.",
          "createdAt": "2024-01-10T14:38:23Z",
          "updatedAt": "2024-01-10T14:38:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rdO9p",
          "commit": {
            "abbreviatedOid": "4d73126"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T17:53:00Z",
          "updatedAt": "2024-01-03T17:53:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nOnce a Signed Statement is inserted into the Append-only Log maintained by a Transparency Service, it cannot be removed from the Log.\r\n```",
              "createdAt": "2024-01-03T17:53:00Z",
              "updatedAt": "2024-01-03T17:53:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rdSSb",
          "commit": {
            "abbreviatedOid": "1c6f34d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T18:03:09Z",
          "updatedAt": "2024-01-03T18:03:09Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I am not particularly clear about the connect between line 936 start and end of 934, so I recommend avoiding Therefore and because.",
              "createdAt": "2024-01-03T18:03:09Z",
              "updatedAt": "2024-01-03T18:03:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rdS2c",
          "commit": {
            "abbreviatedOid": "1c6f34d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T18:04:55Z",
          "updatedAt": "2024-01-03T18:04:55Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nUsually Transparency Services are publicly accessible, hence Issuers should treat Signed Statements that they registered (rendering them as Transparent Statements) as public.\r\n```",
              "createdAt": "2024-01-03T18:04:55Z",
              "updatedAt": "2024-01-03T18:04:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rdT1r",
          "commit": {
            "abbreviatedOid": "1c6f34d"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T18:08:00Z",
          "updatedAt": "2024-01-03T18:08:01Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nWhile this can be used to limit who can read the Log, however it may also limit the usefulness of the system.\r\n```",
              "createdAt": "2024-01-03T18:08:01Z",
              "updatedAt": "2024-01-03T18:08:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rdZ8J",
          "commit": {
            "abbreviatedOid": "1c6f34d"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T18:25:56Z",
          "updatedAt": "2024-01-03T18:25:56Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "True. Reordered and clarified (Right to be Forgotten, hence need for deletion if private data is inserted).",
              "createdAt": "2024-01-03T18:25:56Z",
              "updatedAt": "2024-01-03T18:27:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5reqLf",
          "commit": {
            "abbreviatedOid": "def5eb6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, @thgoebel \r\nI few nits before approving.",
          "createdAt": "2024-01-03T22:57:56Z",
          "updatedAt": "2024-01-03T23:10:25Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nTransparency Services are often publicly accessible.\r\nIssuers should treat Signed Statements (rendering them as Transparent Statements) as publicly accessible.\r\n```",
              "createdAt": "2024-01-03T22:57:56Z",
              "updatedAt": "2024-01-03T23:10:25Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nTransparency Services can have an authorization policy controlling who can access the Append-only Log.\r\n```",
              "createdAt": "2024-01-03T23:05:32Z",
              "updatedAt": "2024-01-05T15:48:48Z"
            },
            {
              "originalPosition": 14,
              "body": "I would remove this sentence as there are multiple ways to remediate this scenario, including redaction, which may be implementation-specific. \r\nWhile important to highlight information should be assumed public, we also want to avoid analysis paralysis of not publishing information, because it can't be recalled.\r\nYou might want to highlight detached payloads, or encryption as better ways ensure a Transparency Service is enabling verification of content, without actually containing the content. ",
              "createdAt": "2024-01-03T23:09:32Z",
              "updatedAt": "2024-01-03T23:10:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rqJ1C",
          "commit": {
            "abbreviatedOid": "6918c6e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T15:51:39Z",
          "updatedAt": "2024-01-05T15:51:39Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-05T15:51:39Z",
              "updatedAt": "2024-01-05T15:51:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rqKGL",
          "commit": {
            "abbreviatedOid": "4f3f0fa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-05T15:52:18Z",
          "updatedAt": "2024-01-05T15:52:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5rqKYK",
          "commit": {
            "abbreviatedOid": "def5eb6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T15:53:03Z",
          "updatedAt": "2024-01-05T15:53:03Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I've removed line 941 to move the PR forward. ",
              "createdAt": "2024-01-05T15:53:03Z",
              "updatedAt": "2024-01-05T15:53:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rud_P",
          "commit": {
            "abbreviatedOid": "def5eb6"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-06T11:08:44Z",
          "updatedAt": "2024-01-06T11:08:44Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Good point!",
              "createdAt": "2024-01-06T11:08:44Z",
              "updatedAt": "2024-01-06T11:08:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFfhP",
          "commit": {
            "abbreviatedOid": "4f3f0fa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-10T14:38:38Z",
          "updatedAt": "2024-01-10T14:38:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5rdPS_",
          "commit": {
            "abbreviatedOid": "4f3f0fa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-03T17:54:01Z",
          "updatedAt": "2024-01-10T14:38:49Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "definitely not : )\r\n\r\nThe privacy model for SCITT is access controlled log.\r\n\r\nThe log can contain private information.\r\n\r\nA receipt only proves inclusion, when combined with the original signed statement, private information is available.\r\n\r\naccess to signed statements is outside the scope of scitt (currently), as is access to the original statements (artifacts).\r\n\r\nYou can imagine it working like this:\r\n\r\n```\r\nhttps://artifact.transparency.example/some-container\r\nhttps://signed.artifact.transparency.example/some-signed-statement\r\nhttps://scitt.transparency.example/receipts/receipt-for-some-signed-statement\r\n```\r\n\r\nSCITT does not define artifact repo APIs, because its meant to be exposed in the existing artifact repo APIs.",
              "createdAt": "2024-01-03T17:54:21Z",
              "updatedAt": "2024-01-10T14:38:49Z"
            },
            {
              "originalPosition": 7,
              "body": "put another way, any filtering of messages counts as creating a new logical \"append only log\".",
              "createdAt": "2024-01-03T17:56:08Z",
              "updatedAt": "2024-01-10T14:38:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 145,
      "id": "PR_kwDOIvmHss5jK6FF",
      "title": "Add identifier examples",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/145",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR addresses:\r\n\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/155\r\n\r\nRelated issues:\r\n\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/154",
      "createdAt": "2024-01-03T20:55:08Z",
      "updatedAt": "2024-01-18T21:15:49Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "24f63ee8cfc2b99b937dd236cca3c886fd1218f9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat/identifiers-examples",
      "headRefOid": "35cad4aff47c9de034a48c4d868d8667d3383d49",
      "closedAt": "2024-01-10T14:43:57Z",
      "mergedAt": "2024-01-10T14:43:57Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "fce8fcd6f8c081575d582c6780136b0a74cb3dc2"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Some additional details on the construction and use can be found here: https://github.com/transmute-industries/cose/blob/47e85916346af8560f3559ac28e98ad796dd0d34/src/scitt/identifiers/scitt-identifiers.test.ts\r\n\r\nI'm not including these in the PR, because I don't understand the security properties required by \"SCITT Identifiers\", but if the code I wrote covers the security properties, I am happy to do a follow up PR, after this one is merged.",
          "createdAt": "2024-01-03T21:23:13Z",
          "updatedAt": "2024-01-03T21:23:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rezf_",
          "commit": {
            "abbreviatedOid": "ffbea42"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-03T23:47:57Z",
          "updatedAt": "2024-01-03T23:47:57Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-03T23:47:57Z",
              "updatedAt": "2024-01-03T23:47:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5re6El",
          "commit": {
            "abbreviatedOid": "1a44233"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-04T00:13:45Z",
          "updatedAt": "2024-01-04T00:13:46Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nSCITT Identifiers are primarily meant to be understood by humans and secondarily meant to be understood by machines, as such we define text encodings for message identifiers first, and then provide binary translations according to standard transformations for URLs and URNs to binary formats.\r\nTODO add a normative reference for how this is done.\r\n```",
              "createdAt": "2024-01-04T00:13:46Z",
              "updatedAt": "2024-01-04T00:14:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5re6Jz",
          "commit": {
            "abbreviatedOid": "1a44233"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-04T00:14:23Z",
          "updatedAt": "2024-01-04T00:14:23Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nFor each SCITT conceptual message, we define a Data URL format according to {{-DataURLs}}, a URN format according to {{-URNs}} and a URL format according to {{URLs}}.\r\n```",
              "createdAt": "2024-01-04T00:14:23Z",
              "updatedAt": "2024-01-04T00:14:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5re7t9",
          "commit": {
            "abbreviatedOid": "1a44233"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\nI pushed several markdown and spelling fixes",
          "createdAt": "2024-01-04T00:15:59Z",
          "updatedAt": "2024-01-04T00:15:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5rkLyg",
          "commit": {
            "abbreviatedOid": "ae99c9b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM for the consistency of CBOR structures",
          "createdAt": "2024-01-04T17:15:05Z",
          "updatedAt": "2024-01-05T16:31:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5r-I8e",
          "commit": {
            "abbreviatedOid": "3fd632e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T15:49:28Z",
          "updatedAt": "2024-01-09T15:49:29Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "```suggestion\r\n~~~\r\n```",
              "createdAt": "2024-01-09T15:49:29Z",
              "updatedAt": "2024-01-09T15:49:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r__hq",
          "commit": {
            "abbreviatedOid": "35cad4a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T20:26:28Z",
          "updatedAt": "2024-01-09T20:26:28Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "@fournet @ad-l per our call today, please make sure these are the security properties you want for \"identifiers\" for cose sign 1 messages.",
              "createdAt": "2024-01-09T20:26:28Z",
              "updatedAt": "2024-01-09T20:26:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sAAfP",
          "commit": {
            "abbreviatedOid": "35cad4a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T20:27:29Z",
          "updatedAt": "2024-01-09T20:27:30Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "@fournet @ad-l if you have use cases for this, please suggest them here.\r\n\r\nIf you have security concerns with this, please also leave suggestions.",
              "createdAt": "2024-01-09T20:27:30Z",
              "updatedAt": "2024-01-09T20:27:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFhWO",
          "commit": {
            "abbreviatedOid": "35cad4a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:42:00Z",
          "updatedAt": "2024-01-10T14:42:00Z",
          "comments": [
            {
              "originalPosition": 123,
              "body": "As there are open suggestions anymore and the feedback from @fournet was addressed by @OR13, I am moving on with approval and merge.",
              "createdAt": "2024-01-10T14:42:00Z",
              "updatedAt": "2024-01-10T14:42:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFiRF",
          "commit": {
            "abbreviatedOid": "35cad4a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-10T14:43:45Z",
          "updatedAt": "2024-01-10T14:43:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 146,
      "id": "PR_kwDOIvmHss5jLfC2",
      "title": "Markdown and spelling fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/146",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-04T00:11:19Z",
      "updatedAt": "2024-01-04T00:19:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "feat/identifiers-examples",
      "baseRefOid": "81cf90bf7aaa210216a26bba5e7a10cd2b13bd68",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/identifers-examples",
      "headRefOid": "0e261ec4489157589e46b38b9932ddd7de0572f6",
      "closedAt": "2024-01-04T00:11:56Z",
      "mergedAt": "2024-01-04T00:11:56Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1a442337bb4a52425023c2716f6535382418eda7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 147,
      "id": "PR_kwDOIvmHss5jUVMb",
      "title": "Fix broken refs",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/147",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-05T14:31:11Z",
      "updatedAt": "2024-01-18T21:16:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "1fa26e514a52d4bbb8f035183be0834230a4b2e4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "fix/refs",
      "headRefOid": "b4ded43f26539366c9aa155f7f9c1a551cb2c64c",
      "closedAt": "2024-01-05T15:47:46Z",
      "mergedAt": "2024-01-05T15:47:46Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "bded7531b6c922f827369405c72a60dcf793902f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rqIGc",
          "commit": {
            "abbreviatedOid": "b4ded43"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-05T15:47:41Z",
          "updatedAt": "2024-01-05T15:47:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 149,
      "id": "PR_kwDOIvmHss5jV0hr",
      "title": "Remove SCRAPI References",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/149",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a simple dependency management PR to decouple SCRAPI from the architecture spec. See #148 \r\nSCRAPI can be a layer above, and reference the architecture (dependency) as in HTTP implementation. \r\nDecoupling allows us to move forward with the architecture doc, continuing to iterate on SCRAPI independently.\r\n\r\n",
      "createdAt": "2024-01-05T18:48:52Z",
      "updatedAt": "2024-01-18T21:16:12Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "bded7531b6c922f827369405c72a60dcf793902f",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/remove-scrapi-refs",
      "headRefOid": "e4b8083556842b2d065210e8427420a96d9ba48d",
      "closedAt": "2024-01-06T00:13:16Z",
      "mergedAt": "2024-01-06T00:13:16Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "fd258c3fd05cf56a7ff0a298cce7fefbbd31e81d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rsFWU",
          "commit": {
            "abbreviatedOid": "e4b8083"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-05T19:29:26Z",
          "updatedAt": "2024-01-05T19:29:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 150,
      "id": "PR_kwDOIvmHss5jV_4r",
      "title": "Draft Cleanup",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/150",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Cleaning up loose ends to orphaned references and older terms.",
      "createdAt": "2024-01-05T19:29:28Z",
      "updatedAt": "2024-01-18T21:15:51Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "fd258c3fd05cf56a7ff0a298cce7fefbbd31e81d",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/cleanup",
      "headRefOid": "3f5edb5b7e1cbd86a1cbfe7561735111e6482696",
      "closedAt": "2024-01-06T01:42:18Z",
      "mergedAt": "2024-01-06T01:42:18Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "24f63ee8cfc2b99b937dd236cca3c886fd1218f9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5rsGBj",
          "commit": {
            "abbreviatedOid": "61d69f8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T19:30:35Z",
          "updatedAt": "2024-01-05T19:30:35Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I would try to cut this ref out as well... one less thing to block the arch",
              "createdAt": "2024-01-05T19:30:35Z",
              "updatedAt": "2024-01-05T19:30:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rsGm4",
          "commit": {
            "abbreviatedOid": "61d69f8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T19:31:42Z",
          "updatedAt": "2024-01-05T19:31:42Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-05T19:31:42Z",
              "updatedAt": "2024-01-05T19:31:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rsGs1",
          "commit": {
            "abbreviatedOid": "61d69f8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-05T19:32:02Z",
          "updatedAt": "2024-01-05T19:32:02Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "Lets not make SCRAPI a normative dependency of the architecture.",
              "createdAt": "2024-01-05T19:32:02Z",
              "updatedAt": "2024-01-05T19:32:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rtioO",
          "commit": {
            "abbreviatedOid": "61d69f8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-06T00:03:46Z",
          "updatedAt": "2024-01-06T00:03:46Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "+1, this gets cleaned up with #149",
              "createdAt": "2024-01-06T00:03:46Z",
              "updatedAt": "2024-01-06T00:03:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5rtrLG",
          "commit": {
            "abbreviatedOid": "3f5edb5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-06T01:20:04Z",
          "updatedAt": "2024-01-06T01:20:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 152,
      "id": "PR_kwDOIvmHss5jYDwz",
      "title": "Add Architecture details",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/152",
      "state": "CLOSED",
      "author": "thgoebel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "terminology"
      ],
      "body": "This PR builds on top of #143 to pull out a few things. (logically on top, not on top in terms of git :) )",
      "createdAt": "2024-01-06T10:56:36Z",
      "updatedAt": "2024-01-19T15:49:41Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e5f7401e147492fd310cff844cc3d5bc08d681d5",
      "headRepository": "thgoebel/draft-ietf-scitt-architecture",
      "headRefName": "architecture-details",
      "headRefOid": "98491d81d7289aa8c0cea2eb8f48aaddae3d18ca",
      "closedAt": "2024-01-19T15:49:41Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing PR based on discussion on the call.",
          "createdAt": "2024-01-19T15:49:41Z",
          "updatedAt": "2024-01-19T15:49:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5r6C98",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, @thgoebel \r\nA few specific feedback items on the first half. The 2nd half could likely be split (again) and more easily merged.",
          "createdAt": "2024-01-09T04:18:55Z",
          "updatedAt": "2024-01-09T04:31:42Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n1. Transparency Services evaluate Signed Statements against Registration Policies, counter-signing them if accepted\r\n1. Successfully registered Transparent Statements return Receipts to the issuer\r\n```",
              "createdAt": "2024-01-09T04:18:55Z",
              "updatedAt": "2024-01-09T04:31:42Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-09T04:19:09Z",
              "updatedAt": "2024-01-09T04:31:42Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n1. Verifiers query a Transparency Service for one or more Transparent Statement associated with a Subject\r\n1. By verifying the Transparent Statement payloads, the verifier may be convinced to the authenticity and integrity of an Artifact\r\n```",
              "createdAt": "2024-01-09T04:24:07Z",
              "updatedAt": "2024-01-10T14:45:47Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIssuers commit to a Statement by signing it and by registering it with a Transparency Service.\r\n```",
              "createdAt": "2024-01-09T04:25:20Z",
              "updatedAt": "2024-01-09T04:31:42Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nThey are not necessarily the first ones nor the only ones who register Signed Statements on one or more Transparency Services.\r\n```",
              "createdAt": "2024-01-09T04:26:04Z",
              "updatedAt": "2024-01-09T04:31:42Z"
            },
            {
              "originalPosition": 18,
              "body": "For the various pieces of feedback above, you may want to split out multiple roles from above. \r\nNote: we are having a conversation about terminology associated with RATS and other IETF Specs. See #120 and the latest [IETF SCITT Meeting notes](https://datatracker.ietf.org/wg/scitt/meetings/) ",
              "createdAt": "2024-01-09T04:30:07Z",
              "updatedAt": "2024-01-09T04:31:42Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nMultiple Issuers can make different, even conflicting Statements, about the same Artifact.\r\nVerifiers can choose which Issuers they trust.\r\n```",
              "createdAt": "2024-01-09T04:30:45Z",
              "updatedAt": "2024-01-09T04:31:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r7nQ2",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T09:53:09Z",
          "updatedAt": "2024-01-09T09:53:09Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@SteveLasker Your suggestion at line 387 is not correct. A Verifier need not and should not query the Transparency Service. That is the whole point of the Append only log is that N- Independent Entities (receiving Transparent Statements) need to need to check the log, but just use the Transparent statment possessing the receipt to Verify the presence of the Statement in the log.",
              "createdAt": "2024-01-09T09:53:09Z",
              "updatedAt": "2024-01-09T09:53:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r7pl9",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T09:57:58Z",
          "updatedAt": "2024-01-09T09:57:58Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "The example does not seem to be right in the `context` that normally the expectation is that not each Verifier to submit again new statements about Verification outcome, as this will explode the `n` statements.\r\n\r\nYes, in theory one can do that, but generally not advisable. I would prefer something on the lines that:\r\n\r\nAn entity can perform multiple roles, examples A Verifier can also be an Auditor where after Verification it can perform a detailed auditing of the log for specific aspects on a specific Artifact statements.\r\n",
              "createdAt": "2024-01-09T09:57:58Z",
              "updatedAt": "2024-01-09T09:57:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r7_iS",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T10:46:28Z",
          "updatedAt": "2024-01-09T10:46:29Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Here I intentionally said \"Statement\" rather than \"Signed Statement\". If Alice and Bob sign the same statement, the Signed Statements will differ. But what I care about is the Statement that Alice and Bob agree on.\r\n\r\nI rephrased this to clarify it.",
              "createdAt": "2024-01-09T10:46:29Z",
              "updatedAt": "2024-01-09T10:46:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r8AzQ",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T10:49:25Z",
          "updatedAt": "2024-01-09T10:49:25Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Moved to https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/153.\r\n\r\nStill, I prefer not to have a newline here. To me, the sentence \"Verifiers can choose which Issuers they trust\" is closely linked to the previous \"conflicting Statements\". When on its own paragraph, this sentence seems to be coming out of the blue, with little context.",
              "createdAt": "2024-01-09T10:49:25Z",
              "updatedAt": "2024-01-09T10:49:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r8Cc3",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T10:53:07Z",
          "updatedAt": "2024-01-09T10:53:07Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Since that discussion is ongoing, I would leave it as-is for now. And update it later in a separate PR :)",
              "createdAt": "2024-01-09T10:53:07Z",
              "updatedAt": "2024-01-09T10:53:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r8KT7",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T11:11:49Z",
          "updatedAt": "2024-01-09T11:11:49Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I added a better example for the \"Verifier + Issuer\" case, and added your \"Verifier + Auditor\" case as well.",
              "createdAt": "2024-01-09T11:11:49Z",
              "updatedAt": "2024-01-09T11:11:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r_tVR",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T19:39:54Z",
          "updatedAt": "2024-01-09T19:39:55Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@yogeshbdeshpande, I believe we're mixing multiple scenarios here. \r\nAn issuer registers Signed Statements and gets a Receipt. How does a verifier get all the receipts?\r\nA verifier may not have access to the Receipts, and simply wants to get the current status for an artifact. What Statements have been made by Issuers they trust? Have any of the Issuers made amended statements that should be known? By querying the feed, based on the subject, they can see a wholistic picture and decide if the artifact meets their needs. ",
              "createdAt": "2024-01-09T19:39:55Z",
              "updatedAt": "2024-01-09T19:39:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r_xCA",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T19:49:26Z",
          "updatedAt": "2024-01-09T19:49:26Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Thanks, @thgoebel. The nit I was looking to change was \"publish\" vs. \"register\". The process by which Signed Statements get added to the Append-only Log is through a registration policy. For consistency, we use \"register\" as opposed to publish, post, submit, etc. \r\n\r\nA verifier doesn't necessarily need to see agreement between various Issuers. A verifier can choose to trust, and filter in/out specific Issuers. An issuer may trust Alice and Bob, but statements made by Chuck are ignored. Whether they're malicious, or not relevant to the verifiers scenarios aren't overly important as there are scenarios where different issuers can make valid, yet conflicting statements based on a particular scenario or environment. ",
              "createdAt": "2024-01-09T19:49:26Z",
              "updatedAt": "2024-01-09T19:49:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r_zpo",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T19:56:53Z",
          "updatedAt": "2024-01-09T19:56:53Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Note, the newline is PR feedback friendly, and markdown will put this on the same line. ",
              "createdAt": "2024-01-09T19:56:53Z",
              "updatedAt": "2024-01-09T19:56:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5r_01D",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-09T20:00:00Z",
          "updatedAt": "2024-01-09T20:00:00Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Ah oops, I thought there was a blank line inbetween. Fixed, added that newline.",
              "createdAt": "2024-01-09T20:00:00Z",
              "updatedAt": "2024-01-09T20:00:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFjoX",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:46:15Z",
          "updatedAt": "2024-01-10T14:46:16Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@thgoebel accept or dismiss this suggestion please : )",
              "createdAt": "2024-01-10T14:46:16Z",
              "updatedAt": "2024-01-10T14:46:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFlu7",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T14:49:29Z",
          "updatedAt": "2024-01-10T14:49:29Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "> 1. By verifying the Transparent Statement payloads, the verifier may be convinced to the authenticity and integrity of an Artifact\r\n\r\nThis means effectively verifying `Statement playload`, which is not a thing. Did you mean `Signed Statement` instead of `Transparent Statement payloads`?",
              "createdAt": "2024-01-10T14:49:29Z",
              "updatedAt": "2024-01-10T17:52:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFtM4",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T15:02:52Z",
          "updatedAt": "2024-01-10T15:02:52Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "this seems resloved. @SteveLasker could you please resolve, if it is? ",
              "createdAt": "2024-01-10T15:02:52Z",
              "updatedAt": "2024-01-10T15:02:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sFuM9",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T15:04:48Z",
          "updatedAt": "2024-01-10T15:04:48Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I think @SteveLasker's main concern is having a bullet on how the Verifier obtains the Transparent Statement?\r\nMaybe we can list the different options here. Querying the TS, getting it from the Issuer directly, any others?",
              "createdAt": "2024-01-10T15:04:48Z",
              "updatedAt": "2024-01-10T15:04:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sF2pZ",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T15:20:14Z",
          "updatedAt": "2024-01-10T15:20:14Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "> I think @SteveLasker's main concern is having a bullet on how the Verifier obtains the Transparent Statement?\r\nMaybe we can list the different options here. Querying the TS, getting it from the Issuer directly, any others?\r\n\r\nOkay. But how is that related to the new item?\r\n\r\n> 1. By verifying the Transparent Statement payloads, the verifier may be convinced to the authenticity and integrity of an Artifact",
              "createdAt": "2024-01-10T15:20:14Z",
              "updatedAt": "2024-01-10T15:20:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sG3DS",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "thgoebel",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:24:33Z",
          "updatedAt": "2024-01-10T17:24:33Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "This \"new\" item is just my proposal pulled down and slightly edited (\"payload\" added, \"s/of Statements about an Artifact/of an Artifact\"). They are related in that you first need to obtain the Transparent Statement before you can verify it :)\r\n\r\nI pushed an update for this.  @SteveLasker please review.",
              "createdAt": "2024-01-10T17:24:33Z",
              "updatedAt": "2024-01-10T17:25:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sHEPo",
          "commit": {
            "abbreviatedOid": "a28e3a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:51:47Z",
          "updatedAt": "2024-01-10T17:51:47Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "oh! I misread the suggestion scope. Sorry. So my question was targeted at you in the end! I'll chime in again, if this item stalls.",
              "createdAt": "2024-01-10T17:51:47Z",
              "updatedAt": "2024-01-10T17:51:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sHFfc",
          "commit": {
            "abbreviatedOid": "98491d8"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-10T17:55:03Z",
          "updatedAt": "2024-01-10T17:55:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5tQRRb",
          "commit": {
            "abbreviatedOid": "98491d8"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This description seems to duplicate what we say in the Terminology and, as it stands, the two are not aligned.  My preference would be to instead improve the Terminology if need be, and then avoid the duplication.",
          "createdAt": "2024-01-19T15:11:13Z",
          "updatedAt": "2024-01-19T15:11:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 153,
      "id": "PR_kwDOIvmHss5jkFya",
      "title": "Add section on multiple statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/153",
      "state": "MERGED",
      "author": "thgoebel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-09T10:43:53Z",
      "updatedAt": "2024-01-10T14:59:52Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "24f63ee8cfc2b99b937dd236cca3c886fd1218f9",
      "headRepository": "thgoebel/draft-ietf-scitt-architecture",
      "headRefName": "multiple-statements",
      "headRefOid": "52fad0082d887054821fd59137a54badfc03bc38",
      "closedAt": "2024-01-10T14:59:05Z",
      "mergedAt": "2024-01-10T14:59:05Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "e5f7401e147492fd310cff844cc3d5bc08d681d5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5r_rh0",
          "commit": {
            "abbreviatedOid": "2c77279"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-09T19:34:59Z",
          "updatedAt": "2024-01-09T19:34:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sAuMW",
          "commit": {
            "abbreviatedOid": "52fad00"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-09T22:30:54Z",
          "updatedAt": "2024-01-09T22:30:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sFVnr",
          "commit": {
            "abbreviatedOid": "52fad00"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-10T14:20:01Z",
          "updatedAt": "2024-01-10T14:20:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sFqaF",
          "commit": {
            "abbreviatedOid": "52fad00"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-10T14:58:01Z",
          "updatedAt": "2024-01-10T14:58:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 156,
      "id": "PR_kwDOIvmHss5jnG8i",
      "title": "Update architecture diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/156",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This pull request:\r\n\r\n- clarifies that multiple receipts are possible\r\n- clarifies that issuers are not always artifact producers\r\n- clarifies that transparency services are not artifact repositories\r\n- clarifies that verifiers are not always relying parties\r\n- clarifies that relying parties care about artifact transparency (not just verifying transparent statements)\r\n\r\n![Screenshot 2024-01-09 at 1 06 39\u202fPM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/38bfad0b-28ee-429b-9bb8-5db7cc22e108)\r\n",
      "createdAt": "2024-01-09T19:04:44Z",
      "updatedAt": "2024-02-16T00:48:14Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "24f63ee8cfc2b99b937dd236cca3c886fd1218f9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat/less-dids",
      "headRefOid": "35178e842e018487b699dbf04201e65984221a40",
      "closedAt": "2024-01-19T15:49:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "> What I don't like\r\n> \r\n> * The one diagram we have will look overly complicated.\r\n\r\nSometimes things get more complicated before they get simpler.\r\n\r\n> Is this the only diagram, or could this show an enhanced scenario, in addition to the basic workflow without two transparency services?\r\n\r\nI don't understand your comment, if you want to introduce a simpler diagram, raise a PR : )\r\n\r\n> * We haven't defined Relying Parties. Are these RATS references?\r\n> \r\n\r\nWe expect it to be defined based on the calls we are on, I saved the group a round trip to the diagram here, but if you object, we can simply remove the text from the diagram. Are you asking me to remove the text from the diagram?\r\n\r\n> I would approve the text updates, but think we should discuss the complexity of the diagram before merging as-is\r\n\r\nYou know \"discuss\" is code for block at IETF right ? : )\r\n\r\nCan you restate your comment here in terms of:\r\n\r\nWhat changes you need to see to approve and merge?\r\n\r\nAsking for discussion is the same thing as saying, lets not merge until discussion, you should request changes.",
          "createdAt": "2024-01-10T14:34:09Z",
          "updatedAt": "2024-01-10T14:34:09Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> > What I don't like\r\n> > \r\n> > * The one diagram we have will look overly complicated.\r\n> \r\n> Sometimes things get more complicated before they get simpler.\r\n\r\nSince I had volunteered in the past and the diagram will spur related cleanup, if we merge this one I am willing to break it out into a simpler one. The diagram update clarifies a lot of terminology and concept questions in the currently published diagram I didn't understand and per our discussion of #120 this clears a lot of that up.\r\n\r\nSo to recap, if we merge this one, I can PR a simpler one after this one is merged in. ",
          "createdAt": "2024-01-10T14:42:30Z",
          "updatedAt": "2024-01-10T14:42:30Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is this the only diagram, or could this show an enhanced scenario, in addition to the basic workflow without two transparency services?\r\n> I don't understand your comment, if you want to introduce a simpler diagram, raise a PR : )\r\n\r\nI was suggesting we keep/update the existing diagram as the basic flow. Possibly pulled up to the intro. Than, add your diagram  to explain the more real-world capabilities supported. \r\n\r\nLooks like @aj-stein-nist is volunteering to do that, so I'm good with this incremental PR.",
          "createdAt": "2024-01-10T16:59:25Z",
          "updatedAt": "2024-01-10T16:59:25Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't understand the word \"Verify\" here, but that may be RATS terminology I'm not familiar with.\r\n",
          "createdAt": "2024-01-11T12:46:11Z",
          "updatedAt": "2024-01-11T12:46:11Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "![Screenshot 2024-01-13 at 8 58 49\u202fAM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/42a6d9fd-90de-4a85-929e-08d606536c78)\r\n\r\n\r\nI made some adjustments to the bottom based on feedback from @henkbirkholz and others.\r\n\r\n- Removed Auditor (a special case of verifier)\r\n- Clarified that SCITT verifiers perform several actions that distinguish them from OAuth or RATS verifiers.\r\n\r\nAs a general comment, we seem to have a mix of supply chain specific roles, like `Producer`, `Integrator` and `Distributor`, `Auditor?` and security oriented roles such as `Issuer`, `Verifier` and `Relying Parties`.\r\n\r\nIf its possible I think we should strive to not have this mix in our primary diagram.\r\n\r\nWe could conform to the supply chain specific terminology through the following changes.\r\n\r\n- `Issuer` -> `Producer`\r\n- `Verifier` -> `Auditor`\r\n- `Relying Party` -> `Consumer`\r\n\r\nAlternatively we could conform to the security terminology:\r\n\r\n- `Producers` -> `Claims Providers`\r\n- `Integrators` -> `Relying Party`\r\n- `Distributors` -> `Relying Party`\r\n\r\n",
          "createdAt": "2024-01-13T15:06:15Z",
          "updatedAt": "2024-01-13T15:06:15Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "If we are going to possibly merge #161 in the future it seems good to merge this now or pull in changes before that is pulled in since that diagram appears to be based on significant changes from that.",
          "createdAt": "2024-01-17T14:49:43Z",
          "updatedAt": "2024-01-17T14:49:43Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> illustrates one pattern of multiple registration, among others. Do we need this complexity here? Should we add other diagrams in the Federation section?\r\n\r\nI am OK with `Issuer` to `Producer` however, I am not convinced that we should change `Relying Party` to anything else, as Relying party is more generic and also Consumer seems to mean that one consuming the Artefact which may not be necessarily true.\r\n\r\nAlso I do not agree with `Verifier` to `Auditor` change, would like to know more on the reason/rationale for this change.\r\n\r\nAn `Auditor` is a much more restrictive role however, a `Verifier` is a role performed by an entity (essentially `software`) which perfroms Cryptographic Verification of the Presence of a `Signed Statement` inside the log.",
          "createdAt": "2024-01-19T14:21:59Z",
          "updatedAt": "2024-01-19T14:21:59Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "![Screenshot 2024-01-19 at 9 15 52\u202fAM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/e2a717b7-a416-4d7e-8482-d82d7afadc05)\r\n",
          "createdAt": "2024-01-19T15:16:08Z",
          "updatedAt": "2024-01-19T15:16:08Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreement to split this out into two actions:\r\n- Update the first diagram to represent transparency service as plural (@yogeshbdeshpande)\r\n- Add the dual implementation for identity documents and artifacts as an additional diagram\r\n- Remove terminology changes, to track as a separate PR\r\n\r\n@yogeshbdeshpande to take the pen on the next steps",
          "createdAt": "2024-01-19T15:49:59Z",
          "updatedAt": "2024-01-19T15:49:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5r_otW",
          "commit": {
            "abbreviatedOid": "9f87bad"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Verbiage in the 2nd half reduces text for simplicity - big \ud83d\udc4d \r\n\r\nWhat I like about the updated diagram:\r\n- Shows the correlation of an artifact repository (storage) with the Transparency Service\r\n- An identity document, to abstract any specific format\r\n- The concept of Integrators and Distributors, or re-distributors\r\n\r\nWhat I don't like\r\n- The one diagram we have will look overly complicated. Is this the only diagram, or could this show an enhanced scenario, in addition to the basic workflow without two transparency services?\r\n- We haven't defined Relying Parties. Are these RATS references?\r\n\r\nI would approve the text updates, but think we should discuss the complexity of the diagram before merging as-is",
          "createdAt": "2024-01-09T19:26:57Z",
          "updatedAt": "2024-01-09T19:34:13Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "```suggestion\r\n- The Identifier of the Issuer, in the header of Signed Statements, MUST be included and match the `ts_identifier` field of the Receipt structure\r\n```",
              "createdAt": "2024-01-09T19:26:57Z",
              "updatedAt": "2024-01-09T19:34:13Z"
            },
            {
              "originalPosition": 118,
              "body": "\ud83d\udc4d for clarity",
              "createdAt": "2024-01-09T19:27:19Z",
              "updatedAt": "2024-01-09T19:34:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sARGt",
          "commit": {
            "abbreviatedOid": "9f87bad"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-09T21:08:48Z",
          "updatedAt": "2024-01-09T21:08:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5sGsje",
          "commit": {
            "abbreviatedOid": "592e97a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with new PR incremental updates to include a basic flow, and this more real-world capabilities of SCITT",
          "createdAt": "2024-01-10T17:01:03Z",
          "updatedAt": "2024-01-10T17:01:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5tPFXK",
          "commit": {
            "abbreviatedOid": "35178e8"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This is a change of terminology. Let's confirm we agree on it, and update the Terminology section accordingly. In pariticular, so far we agreed not to separate verifiers and relying parties. Let's also double-check those terms are Ok wrt RATS.\r\n\r\nThis illustrates one pattern of multiple registration, among others. Do we need this complexity here? Should we add other diagrams in the Federation section?\r\n\r\nThe diagram is not consistent on the flow of identity documents, which (I guess) should all flow to Verifiers and to Auditors.",
          "createdAt": "2024-01-19T13:46:38Z",
          "updatedAt": "2024-01-19T13:46:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 157,
      "id": "PR_kwDOIvmHss5jrcDm",
      "title": "Interactive content PR for questions and comments",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/157",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-10T12:21:41Z",
      "updatedAt": "2024-02-16T00:48:28Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "24f63ee8cfc2b99b937dd236cca3c886fd1218f9",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "henk/editorial-pass",
      "headRefOid": "f2f379e462a88eb7d608057b42c252b3bbf3368f",
      "closedAt": "2024-01-30T16:04:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "This makes changes inconsistent with style throughout the doc. Suggest we either fix all references or close this PR to maintain consistency.",
          "createdAt": "2024-01-10T17:06:52Z",
          "updatedAt": "2024-01-10T17:06:52Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "This PR is intended to discuss style proposals directly on text in order to derive issues from the discussion here.",
          "createdAt": "2024-01-18T13:17:39Z",
          "updatedAt": "2024-01-18T13:17:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5sGtLJ",
          "commit": {
            "abbreviatedOid": "f2f379e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:02:23Z",
          "updatedAt": "2024-01-10T17:02:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Artifact is defined in terminology, which we've said we want to keep Capatilized. ",
              "createdAt": "2024-01-10T17:02:23Z",
              "updatedAt": "2024-01-10T17:02:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sGt8Z",
          "commit": {
            "abbreviatedOid": "f2f379e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:04:03Z",
          "updatedAt": "2024-01-10T17:04:04Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Same note about capitalizing termonilogy. \r\nhttps://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-terminology\r\n> When used in text, the corresponding terms are capitalized. ",
              "createdAt": "2024-01-10T17:04:04Z",
              "updatedAt": "2024-01-10T17:04:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5sGuo0",
          "commit": {
            "abbreviatedOid": "f2f379e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-10T17:05:30Z",
          "updatedAt": "2024-01-10T17:05:30Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Throughout the doc, we removed punctuation on single-sentence lines. If we want change that, we should do a single sweep for consistency",
              "createdAt": "2024-01-10T17:05:30Z",
              "updatedAt": "2024-01-10T17:05:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tDi1B",
          "commit": {
            "abbreviatedOid": "f2f379e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T13:11:18Z",
          "updatedAt": "2024-01-18T13:11:18Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Exactly.\r\nBut a) this this the abstract and b) how do we deal with usage of capitalized terms in the text before they are introduced in the terminology Section?",
              "createdAt": "2024-01-18T13:11:18Z",
              "updatedAt": "2024-01-18T13:11:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tDjAg",
          "commit": {
            "abbreviatedOid": "f2f379e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T13:11:43Z",
          "updatedAt": "2024-01-18T13:11:43Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "see https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/157#discussion_r1457420130",
              "createdAt": "2024-01-18T13:11:43Z",
              "updatedAt": "2024-01-18T13:11:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tDlTh",
          "commit": {
            "abbreviatedOid": "f2f379e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T13:16:50Z",
          "updatedAt": "2024-01-18T13:16:50Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "> Throughout the doc, we removed punctuation on single-sentence lines.\r\nI am relatively certain this is not true :sweat_smile: Two examples to counter: line 201 (was 203) and line 386 (was 383).\r\nWhat I did here was just to add periods to complete sentences that appear in itemized lists.",
              "createdAt": "2024-01-18T13:16:50Z",
              "updatedAt": "2024-01-18T13:16:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 161,
      "id": "PR_kwDOIvmHss5kQxIY",
      "title": "X509 Signing Flow",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/161",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "An example workflow for signing with X.509\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/499276a2-c64e-4d82-af61-9737e5784ff7)\r\n",
      "createdAt": "2024-01-17T01:16:14Z",
      "updatedAt": "2024-02-08T16:12:41Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e85d13527ac8ff78a29d9a46cb4b609cff286692",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "x509-example",
      "headRefOid": "6ff550d4b3060f3f794286c1e5048d0c7e338da0",
      "closedAt": "2024-02-08T16:12:41Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "How does hash or sign for statement payload type change the sign action? It is always the same action, correct?",
          "createdAt": "2024-01-17T13:41:17Z",
          "updatedAt": "2024-01-17T13:41:17Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> How does hash or sign for statement payload type change the sign action? It is always the same action, correct?\r\n\r\nGreat question, and I need to elaborate on the text. It's not [Hash] or [Sign], rather what is sent to the signing process.\r\nThe payload to be signed is either the entire file contents (json, yaml, XML, pdf, ...) or a hash of the contents. \r\nSome payloads will themselves be hashes, such as an OCI Image or OCI Index manifest, and those could also be the content. \r\nWhatever is sent to the signing process is also what becomes the payload in the COSE_Sign1 envelope. \r\nThe circled part of the flow may not properly represent that\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/c00891a2-2e52-4819-b145-523d69e8bda0)\r\n\r\n",
          "createdAt": "2024-01-17T15:29:28Z",
          "updatedAt": "2024-01-17T15:29:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the artifact goes to the hash, which then goes to the \"envelope\".\r\n\r\nIts weird to see issuer, repeated.",
          "createdAt": "2024-01-17T15:55:42Z",
          "updatedAt": "2024-01-17T15:57:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the artifact goes to the hash, which then goes to the \"envelope\".\r\n\r\nThis reflects the concept that an entity (issuer) makes a statement (sbom, quality, compliance) about an artifact. The binder is the `subject`. The verifier can query the feed, based on the subject of the artifact.\r\n\r\n> Its weird to see issuer, repeated.\r\n\r\nWhere is issuer repeated? Are you referring to it being at the top, and then a property on the CWT_Claims? ",
          "createdAt": "2024-01-17T16:31:45Z",
          "updatedAt": "2024-01-17T16:32:01Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't know if it would help others, but, for me, it would really help if we take a tangible example of a BOM or similar artifact and talk about it in a more detailed diagram/explanation outside the scope of the PR to understand how this diagram helps.",
          "createdAt": "2024-01-17T16:46:59Z",
          "updatedAt": "2024-01-17T16:46:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Here's the [Supply Chain Scenario from scitt.io](https://scitt.io/supply-chain) highlights multiple statements for a single artifact. \r\nIt also discusses promoting a series of statements across different transparency services. The software vendor(s) and companies that consume vendor software into their private environment. \r\n\r\n",
          "createdAt": "2024-01-17T20:42:51Z",
          "updatedAt": "2024-01-17T20:42:51Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated the diagram to show a hash or the full content of the statement goes into the signing stage, and the payload and the correlation between the receipt and the transparent statement. I'm also experimenting with numbered references:\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/499276a2-c64e-4d82-af61-9737e5784ff7)\r\n",
          "createdAt": "2024-01-18T16:10:47Z",
          "updatedAt": "2024-01-18T20:04:46Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Converting back to a draft, pending some updates",
          "createdAt": "2024-01-18T21:42:22Z",
          "updatedAt": "2024-01-18T21:42:22Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Per the last paragraph of Section 5 (emphasis mine) \r\n> This section describes at a high level, the three main roles and associated processes in SCITT: **Issuers and the Signed Statement issuance process**, Transparency Service and the Signed Statement Registration process, as well as Verifiers of the Transparent Statements and the Receipt validation process.\r\n\r\nI'd propose to move this Section after 5.1.1. and create a segue from 5.1.1 to the new 5.2.2\r\n\r\nMaybe we should discuss the explicit structure of these sections more today?",
          "createdAt": "2024-01-19T09:31:28Z",
          "updatedAt": "2024-01-19T09:31:28Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR should be closed.\r\n\r\nA new PR should be raised containing the following text:\r\n\r\n> When Signed Statements or Receipts are issued with certificates, the x5t (34) protected header parameter MUST be present, as defined in { Section 2 of RFC9360 }.\r\n\r\nThen later when describing verification the following text should be added:\r\n\r\n> When verifying Signed Statements and Receipts, the x5t (34), kid (4), and cwt claims (15) MUST be used to retrieve the verification key associated with the COSE Sign1. If a verifier is not able to obtain a verification key or certificate through the use of these hints, they MUST treat the signature as INVALID as described in { Section 4.4 of RFC9052 } and { Section 8.1 of RFC9052 }.\r\n",
          "createdAt": "2024-02-01T20:08:20Z",
          "updatedAt": "2024-02-01T20:09:07Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "To focus on draft 5, I'm going to close this PR, and revive when it's more complete.",
          "createdAt": "2024-02-08T16:12:41Z",
          "updatedAt": "2024-02-08T16:12:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5vMT9e",
          "commit": {
            "abbreviatedOid": "6ff550d"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-06T15:08:33Z",
          "updatedAt": "2024-02-06T15:08:33Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "This is not what we believe happens.  We simply can return the receipt, why roundtrip the signed statement and serialize it again with the receipt?",
              "createdAt": "2024-02-06T15:08:33Z",
              "updatedAt": "2024-02-06T15:08:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vgCBM",
          "commit": {
            "abbreviatedOid": "6ff550d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T16:12:17Z",
          "updatedAt": "2024-02-08T16:12:17Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Good clarifying point on not round-tripping the Signed Statement and a potentially large payload. See #176 for an update to return receipts.",
              "createdAt": "2024-02-08T16:12:17Z",
              "updatedAt": "2024-02-08T16:12:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 163,
      "id": "PR_kwDOIvmHss5kbDQB",
      "title": "Overhaul of Section 5.1.1.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/163",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "* Renamed to: Structure and Content of Signed Statements\r\n* Updated content based on this thread: https://mailarchive.ietf.org/arch/browse/scitt/?gbt=1&index=ON3uw6WDeC8o62bPgSt8RWNWg9M\r\n* Added `x5t` and made both CWT_Claims `iss` and `sub` mandatory as per the output of discussions\r\n* added refs and figure label (which are missing all over the place)\r\n\r\n",
      "createdAt": "2024-01-18T13:03:27Z",
      "updatedAt": "2024-02-01T19:28:20Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e85d13527ac8ff78a29d9a46cb4b609cff286692",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "henk-x5t-1",
      "headRefOid": "5e50e36981c92e51ea3a82f42b535ecd891ad283",
      "closedAt": "2024-01-30T15:22:48Z",
      "mergedAt": "2024-01-30T15:22:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f505a011279d3c2f8b2f5e3c9d537a0af6388953"
      },
      "comments": [
        {
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "body": "LGTM",
          "createdAt": "2024-01-30T15:23:42Z",
          "updatedAt": "2024-01-30T15:23:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5tEGhq",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:19:38Z",
          "updatedAt": "2024-01-18T14:19:39Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nAn Subject identifier is also required to be included in the COSE envelope. The CBOR map that constitutes the corresponding `CWT Claims` value MUST include the `Subject Claim` (Claim label 2, see {{IANA.cwt}}) where the value MUST represent the Subject identifier.\r\n```",
              "createdAt": "2024-01-18T14:19:38Z",
              "updatedAt": "2024-01-18T14:19:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEHYp",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:20:35Z",
          "updatedAt": "2024-01-18T14:20:35Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "are additional properties allowed here? I think they should be.",
              "createdAt": "2024-01-18T14:20:35Z",
              "updatedAt": "2024-01-18T14:20:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEL91",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:28:30Z",
          "updatedAt": "2024-01-18T14:28:30Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Do we want to make registering identity documents mandatory prior to accepting signed statements from issuers?\r\n\r\nThis makes the replay verification simple, find the public key in the log, then find each signature.",
              "createdAt": "2024-01-18T14:28:30Z",
              "updatedAt": "2024-01-18T14:28:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tENvP",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:31:32Z",
          "updatedAt": "2024-01-18T14:31:32Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nAt least one identifier for an identity document MUST be included in the protected header of the COSE envelope.\r\n```",
              "createdAt": "2024-01-18T14:31:32Z",
              "updatedAt": "2024-01-18T14:35:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEOeX",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:32:53Z",
          "updatedAt": "2024-01-18T14:32:53Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "they were not allowed previously. While that does not make a lot of sense, I kept it that way for now.",
              "createdAt": "2024-01-18T14:32:53Z",
              "updatedAt": "2024-01-18T14:32:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEPND",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:34:14Z",
          "updatedAt": "2024-01-18T14:34:14Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I would very, very much like that. They'll be used in Registration Policies and those also should be registered. So - yeah +1 (to automation, resilience, and transparency!)",
              "createdAt": "2024-01-18T14:34:14Z",
              "updatedAt": "2024-01-18T14:34:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEPuv",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:35:06Z",
          "updatedAt": "2024-01-18T14:35:06Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "reasoning being that `iss` and `kid` are alternative names for `x5t` so logically, if `iss` and `x5t` are present, we are allowing / requiring multiple identifiers.",
              "createdAt": "2024-01-18T14:35:06Z",
              "updatedAt": "2024-01-18T14:35:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEQBQ",
          "commit": {
            "abbreviatedOid": "c4c384a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:35:37Z",
          "updatedAt": "2024-01-18T14:35:37Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "So including several (potential conflicting identity document identifier is fine? Or do we want text, if there are multiple they MUST relate to the same identity document?",
              "createdAt": "2024-01-18T14:35:37Z",
              "updatedAt": "2024-01-18T14:35:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEQcY",
          "commit": {
            "abbreviatedOid": "f8180c5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:36:23Z",
          "updatedAt": "2024-01-18T14:36:23Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-18T14:36:23Z",
              "updatedAt": "2024-01-18T14:36:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEQ3-",
          "commit": {
            "abbreviatedOid": "f8180c5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:37:07Z",
          "updatedAt": "2024-01-18T14:37:07Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Let people reflect the graphs that exist today... even if they are not great. Policy can be used to adjust this, we don't need normative guidance here.",
              "createdAt": "2024-01-18T14:37:07Z",
              "updatedAt": "2024-01-18T14:37:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEXHt",
          "commit": {
            "abbreviatedOid": "f53bc2f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T14:48:09Z",
          "updatedAt": "2024-01-18T14:48:09Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I am happy whenever we can stay less prescriptive. okay",
              "createdAt": "2024-01-18T14:48:09Z",
              "updatedAt": "2024-01-18T14:48:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tElM0",
          "commit": {
            "abbreviatedOid": "88e992a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T15:11:53Z",
          "updatedAt": "2024-01-18T15:11:53Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "If my registration policy accepts your message, I see no reason for us to say more.\r\n\r\nThe industry pressure for multiple receipts will cause the alignment here, and I doubt we can normatively capture all the possible ways to indirectly refer to an \"identity document\".",
              "createdAt": "2024-01-18T15:11:53Z",
              "updatedAt": "2024-01-18T15:11:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEmH6",
          "commit": {
            "abbreviatedOid": "88e992a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T15:13:27Z",
          "updatedAt": "2024-01-18T15:13:27Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nTransparency Services MUST specify their supported signature algorithms in their Registration Policies.\r\n```\r\n\r\n[edit, Henk] capitalized Registration Policies",
              "createdAt": "2024-01-18T15:13:27Z",
              "updatedAt": "2024-01-19T08:24:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tEpT3",
          "commit": {
            "abbreviatedOid": "88e992a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T15:18:57Z",
          "updatedAt": "2024-01-18T15:18:58Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nThe `kid` header parameter MUST be present when the `x5t` header parameter is not present.\r\nKey discovery protocols are out-of-scope of this document.\r\n```\r\n\r\n[edit, Henk] line wrap!",
              "createdAt": "2024-01-18T15:18:57Z",
              "updatedAt": "2024-01-19T08:24:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tGNFS",
          "commit": {
            "abbreviatedOid": "88e992a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A few nits for formatting and a question regarding how detailed we need/should be about signed statements.",
          "createdAt": "2024-01-18T18:38:28Z",
          "updatedAt": "2024-01-18T18:56:55Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "A bit of tweaking as an Issuer can produce signed statements, which they may submit to any number of transparency services. The registration policy may fail if it doesn't support a type of identity, but as worded it sounds like you can't sign a statement, as opposed to the TS doesn't have to accept it.\r\nI was trying to find an alternative way to say this, but is this sentence needed at all?\r\n```suggestion\r\n```",
              "createdAt": "2024-01-18T18:38:29Z",
              "updatedAt": "2024-01-18T18:56:56Z"
            },
            {
              "originalPosition": 35,
              "body": "added line wrapping for PR feedback\r\n```suggestion\r\nTransparency Services MUST support the capability to associate an X.509v3 certificate with a Signed Statement using a hash (thumbprint) of the certificate as specified in {{Section 2 of RFC9360}} by supporting the `x5t` COSE header parameter.\r\nThe `x5t` COSE header parameter MUST be included in the protected header of a Signed Statement's COSE envelope.\r\nThe mechanisms for how Transparency Services obtain corresponding X.509v3 certificates, e.g., as part of enforcing a Registration Policy, is out-of-scope of this document.\r\n```",
              "createdAt": "2024-01-18T18:40:03Z",
              "updatedAt": "2024-01-18T18:56:56Z"
            },
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nIssuers MUST rotate verification keys for signature checking in well-defined cryptoperiods (see {{KEY-MANAGEMENT}}).\r\n```",
              "createdAt": "2024-01-18T18:42:23Z",
              "updatedAt": "2024-01-18T18:56:56Z"
            },
            {
              "originalPosition": 41,
              "body": "@OR13, doesn't this pull in the standardization of registration policies, if we say they must specify their supported algorithms?",
              "createdAt": "2024-01-18T18:44:08Z",
              "updatedAt": "2024-01-18T18:56:56Z"
            },
            {
              "originalPosition": 46,
              "body": "Line formatting for PR feedback and consistency\r\n```suggestion\r\nAn Issuer identifier and a Subject identifier are required to be included in the COSE envelope. Consequently, the protected header of a Signed Statement MUST include the `CWT Claims` header parameter as specified in {{Section 2 of CWT_CLAIMS_COSE}}.\r\nThe CBOR map that constitutes the corresponding `CWT Claims` value MUST include the `Issuer Claim` (Claim label 1) and the `Subject Claim` (Claim label 2) {{IANA.cwt}}.\r\n```",
              "createdAt": "2024-01-18T18:53:01Z",
              "updatedAt": "2024-01-18T18:56:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tGUjM",
          "commit": {
            "abbreviatedOid": "88e992a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T18:58:37Z",
          "updatedAt": "2024-01-18T18:58:37Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "nit: line wrap sentences, please.",
              "createdAt": "2024-01-18T18:58:37Z",
              "updatedAt": "2024-01-18T18:58:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tHf59",
          "commit": {
            "abbreviatedOid": "28a8624"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T22:49:13Z",
          "updatedAt": "2024-01-18T22:49:13Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nThe `x5t` COSE header parameter MUST be included in the protected header of a Signed Statement's COSE envelope.\r\nWhen `x5t` is present, `iss` MUST be a string with a value between 1 and 8192 characters in length that fits the regular expression of a distinguished name.\r\n```",
              "createdAt": "2024-01-18T22:49:13Z",
              "updatedAt": "2024-01-18T22:49:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tHrBD",
          "commit": {
            "abbreviatedOid": "28a8624"
          },
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T23:38:56Z",
          "updatedAt": "2024-01-18T23:38:56Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I suggest specifying the second sentence (on line 374) as:\r\n`When `x5t` is present, `iss` MUST be the {{!RFC 4514}} string representation of the subject distinguished name of the certificate whose thumbprint is included in `x5t`.\r\n`",
              "createdAt": "2024-01-18T23:38:56Z",
              "updatedAt": "2024-01-18T23:39:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tL8Gq",
          "commit": {
            "abbreviatedOid": "1ce8d52"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Addressed some feedback and added a suggestion",
          "createdAt": "2024-01-19T08:17:22Z",
          "updatedAt": "2024-01-19T08:26:57Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "With the \"new\" title and structure I felt that this lead-in sentence now felt off. Less, crisp text is better. Any objections?",
              "createdAt": "2024-01-19T08:17:22Z",
              "updatedAt": "2024-01-19T08:26:57Z"
            },
            {
              "originalPosition": 36,
              "body": ":+1: ",
              "createdAt": "2024-01-19T08:18:27Z",
              "updatedAt": "2024-01-19T08:26:57Z"
            },
            {
              "originalPosition": 26,
              "body": "Good. I agree. Maybe some Security Considerations? Created #170 as a reminder.",
              "createdAt": "2024-01-19T08:22:22Z",
              "updatedAt": "2024-01-19T08:26:57Z"
            },
            {
              "originalPosition": 69,
              "body": "17h later, it still makes no sense, changed it via suggestion feature.",
              "createdAt": "2024-01-19T08:25:55Z",
              "updatedAt": "2024-01-19T08:26:57Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\n   34 => COSE_CertHash   ; x5t, hash of an X.509 certificate\r\n   * int => any\r\n}\r\n~~~\r\n{: #fig-signed-statement title=\"CDDL definition for SCITT Signed Statements\"}\r\n```",
              "createdAt": "2024-01-19T08:26:25Z",
              "updatedAt": "2024-01-19T08:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5tQVYv",
          "commit": {
            "abbreviatedOid": "1ce8d52"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T15:16:42Z",
          "updatedAt": "2024-01-19T15:16:42Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "If there are no objections, this suggestion is good to go.",
              "createdAt": "2024-01-19T15:16:42Z",
              "updatedAt": "2024-01-19T15:16:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uWSRB",
          "commit": {
            "abbreviatedOid": "3dec6de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T13:52:54Z",
          "updatedAt": "2024-01-30T13:52:54Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Last open item for discussion today",
              "createdAt": "2024-01-30T13:52:54Z",
              "updatedAt": "2024-01-30T13:52:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uWWbb",
          "commit": {
            "abbreviatedOid": "88e992a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T13:59:20Z",
          "updatedAt": "2024-01-30T13:59:20Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "its ok to say MUST and leave it to implementations to decide how",
              "createdAt": "2024-01-30T13:59:20Z",
              "updatedAt": "2024-01-30T13:59:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uXPup",
          "commit": {
            "abbreviatedOid": "5e50e36"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-30T15:19:36Z",
          "updatedAt": "2024-01-30T15:19:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uXQmD",
          "commit": {
            "abbreviatedOid": "5e50e36"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-30T15:20:46Z",
          "updatedAt": "2024-01-30T15:20:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uXRKd",
          "commit": {
            "abbreviatedOid": "5e50e36"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-30T15:21:34Z",
          "updatedAt": "2024-01-30T15:21:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uXSPy",
          "commit": {
            "abbreviatedOid": "5e50e36"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-01-30T15:23:00Z",
          "updatedAt": "2024-01-30T15:23:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 164,
      "id": "PR_kwDOIvmHss5kd0zj",
      "title": "Quick spelling and formatting fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/164",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-18T21:13:32Z",
      "updatedAt": "2024-01-18T21:15:32Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e85d13527ac8ff78a29d9a46cb4b609cff286692",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve-spelling-and-formatting",
      "headRefOid": "e68a571328dbee0bbbd000c968381f9c9fc41869",
      "closedAt": "2024-01-18T21:14:34Z",
      "mergedAt": "2024-01-18T21:14:34Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "6f6b778ea511e6b577d118d5716b398a937574eb"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 165,
      "id": "PR_kwDOIvmHss5keL7W",
      "title": "Clarify Feed and Subject",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/165",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Explains Feed as the logical collection, with `CWT_Claims sub` (Subject) as the property to represent the collection.",
      "createdAt": "2024-01-18T22:30:36Z",
      "updatedAt": "2024-02-01T19:19:48Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6f6b778ea511e6b577d118d5716b398a937574eb",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/feed-subject",
      "headRefOid": "80a15258b6db950db839baa0201ef7c8316128ee",
      "closedAt": "2024-02-01T19:19:48Z",
      "mergedAt": "2024-02-01T19:19:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "5de0d640d0bc43fe8f62a398dcb4f8b9fa9e7666"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> For simplicity, I would prefer to keep only one of the two in the Terminology.\r\n\r\nThat seems pretty reasonable to me. Are there any reasons to keep both?",
          "createdAt": "2024-01-19T14:14:57Z",
          "updatedAt": "2024-01-19T14:14:57Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> > For simplicity, I would prefer to keep only one of the two in the Terminology.\r\n> \r\n> That seems pretty reasonable to me. Are there any reasons to keep both?\r\n\r\nWhile I'd agree less is more, this keeps coming back when we try to explain it.\r\n\r\n- A feed is a known concept for a collection of related data\r\n- We're using CWT_Claims `sub`, which also makes sense to align with existing specs\r\n- We avoided Artifact ID\r\n\r\nAttempting to describe a collection of statements as a subject doesn't resonate.\r\n\r\nWe can keep Feed as the concept, and simply say CWT_Claims `sub` is how you set an identifier for the feed.\r\nHow does that work?",
          "createdAt": "2024-01-19T22:16:19Z",
          "updatedAt": "2024-01-19T22:16:19Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Then we should deprecate the term feed in discussions, too, and just explain how a subject is used as a subject in this context?",
          "createdAt": "2024-01-30T13:45:50Z",
          "updatedAt": "2024-01-30T13:45:50Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated to merge in PR feedback",
          "createdAt": "2024-01-31T04:44:59Z",
          "updatedAt": "2024-01-31T04:44:59Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz, @OR13, @fournet, PTAL as I've made some updates.    ",
          "createdAt": "2024-01-31T21:06:49Z",
          "updatedAt": "2024-01-31T21:06:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5tPiTr",
          "commit": {
            "abbreviatedOid": "09d3412"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "For simplicity, I would prefer to keep only one of the two in the Terminology. ",
          "createdAt": "2024-01-19T14:13:00Z",
          "updatedAt": "2024-01-19T14:13:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uWOfH",
          "commit": {
            "abbreviatedOid": "09d3412"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Feed stills seems to be a superfluous term.",
          "createdAt": "2024-01-30T13:46:42Z",
          "updatedAt": "2024-01-30T13:46:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uXUEH",
          "commit": {
            "abbreviatedOid": "09d3412"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I will revise my suggestion to something that is mergable",
          "createdAt": "2024-01-30T15:25:26Z",
          "updatedAt": "2024-01-30T15:28:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uXYRn",
          "commit": {
            "abbreviatedOid": "09d3412"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T15:31:08Z",
          "updatedAt": "2024-01-30T15:31:08Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n: An unordered collection of arbitrary data (artifacts, signed statements, receipts, or other data) related to the text identifiers, observed by the transparency service in the `sub` field of the CWT Claim property of the protected header of Signed Statements.\r\n```",
              "createdAt": "2024-01-30T15:31:08Z",
              "updatedAt": "2024-01-30T15:31:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uXZxX",
          "commit": {
            "abbreviatedOid": "09d3412"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T15:33:18Z",
          "updatedAt": "2024-01-30T15:33:18Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n: This term has the same definition as in RFC8392. Issuer's use `sub` to identify the entity about which they are making signed statements. Transparency services use `sub` to identify the entity about which they are issuing a receipt.\r\n```",
              "createdAt": "2024-01-30T15:33:18Z",
              "updatedAt": "2024-01-30T15:36:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 167,
      "id": "PR_kwDOIvmHss5kez6V",
      "title": "Add remote signing diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/167",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "![Screenshot 2024-01-18 at 6 30 50\u202fPM](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/8295856/7100c0bc-b69e-43a1-93cc-df5de200c004)\r\n",
      "createdAt": "2024-01-19T00:29:59Z",
      "updatedAt": "2024-02-01T19:28:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6f6b778ea511e6b577d118d5716b398a937574eb",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat/diagrams",
      "headRefOid": "460a44466bbb7f5e588b3461310725255144030c",
      "closedAt": "2024-02-01T19:22:45Z",
      "mergedAt": "2024-02-01T19:22:45Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f97acc29a758af130fc91768512e47260d016f9c"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "The diagram reflects my intention.",
          "createdAt": "2024-01-30T16:21:49Z",
          "updatedAt": "2024-01-30T16:21:49Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Here's a slightly modified view to remove the lines behind, add arrows consistenty\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/3a6ddbde-c1ee-4e39-9744-cac35a74ecdd)\r\n",
          "createdAt": "2024-01-31T00:10:15Z",
          "updatedAt": "2024-01-31T00:10:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5uWKbN",
          "commit": {
            "abbreviatedOid": "4a3f4f3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T13:40:09Z",
          "updatedAt": "2024-01-30T13:40:09Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nStatements, such as digital artifacts or structured data regarding artifacts, can be too large or too sensitive to be send to a remote Transparency Services over the Internet.\r\nIn these cases a statement can also be hash, which becomes the payload included in COSE to-be-signed bytes.\r\nA Signed Statement (cose-sign1) MUST be produced from the to-be-signed bytes according to {{Section 4.4 of RFC9052}}.\r\n```",
              "createdAt": "2024-01-30T13:40:09Z",
              "updatedAt": "2024-01-30T16:06:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uWKm0",
          "commit": {
            "abbreviatedOid": "4a3f4f3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T13:40:31Z",
          "updatedAt": "2024-01-30T13:40:31Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": ":+1:",
              "createdAt": "2024-01-30T13:40:31Z",
              "updatedAt": "2024-01-30T13:40:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uWZJr",
          "commit": {
            "abbreviatedOid": "4a3f4f3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T14:03:08Z",
          "updatedAt": "2024-01-30T14:03:08Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Wait, how is this PR related to #155?",
              "createdAt": "2024-01-30T14:03:08Z",
              "updatedAt": "2024-01-30T14:03:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uXxtx",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2024-01-30T16:08:54Z",
          "updatedAt": "2024-01-30T16:08:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uX0Nj",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-30T16:12:33Z",
          "updatedAt": "2024-01-30T16:12:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uX2I0",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:15:52Z",
          "updatedAt": "2024-01-30T16:15:52Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "```suggestion\r\n'-----+-------'         '----------------'\r\n```",
              "createdAt": "2024-01-30T16:15:52Z",
              "updatedAt": "2024-01-30T16:15:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uX3Wf",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:17:09Z",
          "updatedAt": "2024-01-30T16:17:09Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Minor fix to differentiate lines \"behind\", vs. from. \r\nIn this case, I believe @OR13 is showing the COSE Sign 1 Document comes from the Sign process.",
              "createdAt": "2024-01-30T16:17:09Z",
              "updatedAt": "2024-01-30T16:17:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uX42K",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:18:47Z",
          "updatedAt": "2024-01-30T16:18:48Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "As a \"document\", should this have rounded corners?\r\nI have time this afternoon to review and make PRs to tweak before approving.",
              "createdAt": "2024-01-30T16:18:47Z",
              "updatedAt": "2024-01-30T16:18:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uX7PW",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:22:47Z",
          "updatedAt": "2024-01-30T16:22:48Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "The lines are correct as they are.",
              "createdAt": "2024-01-30T16:22:47Z",
              "updatedAt": "2024-01-30T16:22:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uX-lX",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:27:56Z",
          "updatedAt": "2024-01-30T16:27:56Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "\r\n\r\nThis box represents a concept for an identity document, not a concrete identity document such as a certificate.\r\n\r\nI don't intend to update the PR, but you are welcome to.",
              "createdAt": "2024-01-30T16:27:56Z",
              "updatedAt": "2024-01-30T16:27:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uYAE8",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:30:19Z",
          "updatedAt": "2024-01-30T16:30:19Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "As the Identity Document pre-exists outside of that data flow, I'd be okay with keeping that box different.",
              "createdAt": "2024-01-30T16:30:19Z",
              "updatedAt": "2024-01-30T16:30:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uYBUF",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:32:01Z",
          "updatedAt": "2024-01-30T16:32:01Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I very much liked the First part of the Daigram!",
              "createdAt": "2024-01-30T16:32:01Z",
              "updatedAt": "2024-01-30T16:32:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uYCY9",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:33:10Z",
          "updatedAt": "2024-01-30T16:33:11Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "The Header part and the \"To be Signed bytes are mis-leading to me\"",
              "createdAt": "2024-01-30T16:33:11Z",
              "updatedAt": "2024-01-30T16:33:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uYDOG",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:34:34Z",
          "updatedAt": "2024-01-30T16:34:34Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Specially the `Payload` sections `Arrow` enters into the Header section. What are we trying to depict?",
              "createdAt": "2024-01-30T16:34:34Z",
              "updatedAt": "2024-01-30T16:34:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uYEPP",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:36:29Z",
          "updatedAt": "2024-01-30T16:36:36Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Also if I am not mis-taken `To be signed bytes` in our case is actually the `payload` ?\r\n\r\nIf it is, then can we keep the two same so as to logically link the two sections of the diagrams without physically linking them?",
              "createdAt": "2024-01-30T16:36:29Z",
              "updatedAt": "2024-01-30T16:36:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ucIXP",
          "commit": {
            "abbreviatedOid": "66b59aa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I've added #173 to cleanup a few elements",
          "createdAt": "2024-01-31T04:23:21Z",
          "updatedAt": "2024-01-31T04:23:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5utWub",
          "commit": {
            "abbreviatedOid": "460a444"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-01T19:16:39Z",
          "updatedAt": "2024-02-01T19:16:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 168,
      "id": "PR_kwDOIvmHss5ke6oo",
      "title": "Formatting fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/168",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-19T01:10:39Z",
      "updatedAt": "2024-01-19T01:15:43Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "feat/diagrams",
      "baseRefOid": "f7d1c4574b9ce24b0bef5b6efc31e865c102d6ef",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/167-update",
      "headRefOid": "5c82147c8f40c3e2f6ed97ba8c359c8bc20b49ba",
      "closedAt": "2024-01-19T01:10:45Z",
      "mergedAt": "2024-01-19T01:10:45Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "4a3f4f35f10ef05fcc1672b8819cf3fd53c59160"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 169,
      "id": "PR_kwDOIvmHss5ke8Uc",
      "title": "Nit formatting and spelling fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/169",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-19T01:21:28Z",
      "updatedAt": "2024-01-19T01:22:21Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6f6b778ea511e6b577d118d5716b398a937574eb",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/formatting-fixes",
      "headRefOid": "2540c48bec12fd2403edf4b49d36db724a030f5f",
      "closedAt": "2024-01-19T01:22:08Z",
      "mergedAt": "2024-01-19T01:22:08Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "aae7d8cf21aae5437463ea904516077452614f1a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 171,
      "id": "PR_kwDOIvmHss5lE4yd",
      "title": "Add Multiplicity Diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/171",
      "state": "MERGED",
      "author": "yogeshbdeshpande",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-25T15:10:18Z",
      "updatedAt": "2024-01-31T19:30:49Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "aae7d8cf21aae5437463ea904516077452614f1a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "re-architect",
      "headRefOid": "f82d40fbf2c89499155aa6345551f9e9d9678a05",
      "closedAt": "2024-01-31T19:30:45Z",
      "mergedAt": "2024-01-31T19:30:45Z",
      "mergedBy": "yogeshbdeshpande",
      "mergeCommit": {
        "oid": "854b1a3f90825fbf59206f27217f6c3f0513b2b5"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> Thanks, @yogeshbdeshpande I [merged a few formatting fixes](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/172) ![image](https://private-user-images.githubusercontent.com/7647382/299720950-5d377d64-c851-4aa0-8d3a-4cb56476a5af.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDYxOTg5NjQsIm5iZiI6MTcwNjE5ODY2NCwicGF0aCI6Ii83NjQ3MzgyLzI5OTcyMDk1MC01ZDM3N2Q2NC1jODUxLTRhYTAtOGQzYS00Y2I1NjQ3NmE1YWYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDEyNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAxMjVUMTYwNDI0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NzFiY2E4MjgyYmZkNGRlNmRmNThhZGZkNWM2M2I5MjQxNmU2NjdiMzdjMDBkYWY5MDcwMzNlZjk1YjRkNTg2YiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.Hur3SfeNsya6qXWlJFMnbMsy1h14EyXveW3NGwx83KE)\r\n\r\n@SteveLasker \"Awesome\" Thank you for this, will merge when others Approve it!",
          "createdAt": "2024-01-25T16:05:09Z",
          "updatedAt": "2024-01-25T16:05:09Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am not entirely sure how the title of this PR matches the content, but I am okay with the layout changes/polish.",
          "createdAt": "2024-01-30T13:43:11Z",
          "updatedAt": "2024-01-30T13:43:11Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz  it added an \"s\" to Receipts\"... implying that a signed statement can have multiple receipts from the same TS.",
          "createdAt": "2024-01-30T14:10:47Z",
          "updatedAt": "2024-01-30T14:10:47Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "okay. That change was literally lost on me. Maybe @thomas-fossati would like to leave his mark with some layered boxes that show multiplicity in the ascii/aasvg art?",
          "createdAt": "2024-01-30T14:13:39Z",
          "updatedAt": "2024-01-30T14:13:39Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "NONE",
          "body": "> okay. That change was literally lost on me. Maybe @thomas-fossati would like to leave his mark with some layered boxes that show multiplicity in the ascii/aasvg art?\r\n\r\nNot sure what the wider context is, but if you need layered boxes you can take a look at https://github.com/ietf-rats-wg/architecture/blob/master/composite-attester.txt, which renders as https://www.rfc-editor.org/rfc/rfc9334.html#figure-4\r\n",
          "createdAt": "2024-01-30T14:22:51Z",
          "updatedAt": "2024-01-30T14:22:51Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "based on commit: [0b2d7cc27f3166c05104ce4f16bdc3302227ec17](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/171/commits/0b2d7cc27f3166c05104ce4f16bdc3302227ec17) this is the current view. @yogeshbdeshpande, can you fix the output of `make`?\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/7d4ec205-6b82-4af0-987f-28812dc3e1a7)\r\n\r\nI can take a look later today.",
          "createdAt": "2024-01-31T15:24:58Z",
          "updatedAt": "2024-01-31T15:24:58Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker  noticed some inconcsistencies,  still working on the PR, will update shortly!",
          "createdAt": "2024-01-31T16:04:30Z",
          "updatedAt": "2024-01-31T16:04:42Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I've pushed some fixes:\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/bac27169-3ce2-443c-94dc-1233743af28b)",
          "createdAt": "2024-01-31T19:26:06Z",
          "updatedAt": "2024-01-31T19:26:06Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker Thank you for fixing the corners! LGTM!",
          "createdAt": "2024-01-31T19:27:28Z",
          "updatedAt": "2024-01-31T19:27:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5t6eCI",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks, @yogeshbdeshpande\r\nI [merged a few formatting fixes](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/172)\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/5d377d64-c851-4aa0-8d3a-4cb56476a5af)\r\n",
          "createdAt": "2024-01-25T15:40:33Z",
          "updatedAt": "2024-01-25T15:40:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uWNCb",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "If this PR is not intended to add things, but just to polish the diagram, I guess it is okay.",
          "createdAt": "2024-01-30T13:44:28Z",
          "updatedAt": "2024-01-30T13:44:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uWeUn",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-30T14:10:11Z",
          "updatedAt": "2024-01-30T14:10:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5uWwJR",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T14:36:45Z",
          "updatedAt": "2024-01-30T14:36:45Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n                        '----+----'                     |                 |\r\n                             |                  +-------+--------+        |\r\n                          .-' '---------------->+                |        |\r\n                         |   .--------.         |  Transparency  |        |\r\nTransparency -->         |  | Receipt  +-.      |    Services    |        |\r\n     Service             |   '+-------'  +<-----+                |        |\r\n                         |    | Receipt  |      +---------+------+        |\r\n                         |     '+-------'                 |               |\r\n                          '-. .-'                         |               |\r\n                             |                            |               |\r\n                             v                            |               |\r\n                       .-----+-----.                      |               |\r\n```\r\n\r\n*sigh* here my attempt at it then. Not that great, but it hopefully conveys the intent.",
              "createdAt": "2024-01-30T14:36:45Z",
              "updatedAt": "2024-01-30T14:36:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uX1Py",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:14:20Z",
          "updatedAt": "2024-01-30T16:14:20Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "this is again multiple receipts from the same TS... this is not very helpful.\r\n\r\nThe helpful thing, is to obtain multiple receipts from distinct TS (operated by different trusted authorities).",
              "createdAt": "2024-01-30T16:14:20Z",
              "updatedAt": "2024-01-30T16:14:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uX2bC",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-30T16:16:22Z",
          "updatedAt": "2024-01-30T16:16:22Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "while it says \"services\" on the right, I agree. Can that be compacted enough to be put into this diagram?",
              "createdAt": "2024-01-30T16:16:22Z",
              "updatedAt": "2024-01-30T16:16:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ucJGI",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T04:27:20Z",
          "updatedAt": "2024-01-31T04:27:20Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I think the multiple receipts was a mistake. In our discussions, we wanted to represent multiple transparency services. Each issues a single receipt for each signed statement. \r\n```suggestion\r\n                        '----+----'                     |                 |\r\n                             |               +----------+----+            |\r\n                          .-' '------------->+ Transparency  |            |\r\n                         |   .--------.      |               |            |\r\nTransparency -->         |  | Receipt  +<----+   Services    |            |\r\n     Service             |   '---+----'      +------------+--+            |\r\n                          '-. .-'                         |               |\r\n                             |                            |               |\r\n                             v                            |               |\r\n                       .-----+-----.                      |               |\r\n```",
              "createdAt": "2024-01-31T04:27:20Z",
              "updatedAt": "2024-01-31T04:27:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ucJYr",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T04:29:00Z",
          "updatedAt": "2024-01-31T04:29:00Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "@henkbirkholz, if you wanted to show the layered boxes around Transparency Services, instead of Receipt(s), that would work well",
              "createdAt": "2024-01-31T04:29:00Z",
              "updatedAt": "2024-01-31T04:29:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ueGDj",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T10:22:32Z",
          "updatedAt": "2024-01-31T10:22:32Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "@henkbirkholz : I wanted to show multiple Receipt instances and Multiple Transparency service instances, however the diagram became `clumsy`, so i sticked with plurality",
              "createdAt": "2024-01-31T10:22:32Z",
              "updatedAt": "2024-01-31T10:22:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uelS5",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T11:27:12Z",
          "updatedAt": "2024-01-31T11:27:12Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "@henkbirkholz @OR13 @SteveLasker : I have corrected the diagram to be more explicit!\r\n\r\nPlease have a look now!",
              "createdAt": "2024-01-31T11:27:12Z",
              "updatedAt": "2024-01-31T11:27:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ufF_3",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T12:44:10Z",
          "updatedAt": "2024-01-31T12:44:10Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "@SteveLasker how are multiple receipts from different TS a mistake?",
              "createdAt": "2024-01-31T12:44:10Z",
              "updatedAt": "2024-01-31T12:44:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ug1o5",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T15:29:26Z",
          "updatedAt": "2024-01-31T15:29:26Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Based on my understanding of our last discussion, we wanted to simplify #156 and agreed to show duplicity of Transparency Services. \r\nYes, each transparency service generates a different receipt for the same signed statement placed upon each TS. \r\nYes, one ore more entities can register the same signed statement on the same transparency service, producing multiple receipts for the same transparent statement. \r\nWe have discussed a TS can re-generate the receipt, so thinking more, it could have a multiplicity of receipts. \r\nMy gut is we should keep the first architecture overview relatively simple, letting readers digest the concepts. WIth incremental information, more details are exposed to the reader. \r\nJust my 2c. ",
              "createdAt": "2024-01-31T15:29:26Z",
              "updatedAt": "2024-01-31T15:29:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ui88S",
          "commit": {
            "abbreviatedOid": "e80d22e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-31T19:26:48Z",
          "updatedAt": "2024-01-31T19:26:48Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "@henkbirkholz, the way @yogeshbdeshpande added multiple receipts, each from a different Transparency Service resolved my concerns.  ",
              "createdAt": "2024-01-31T19:26:48Z",
              "updatedAt": "2024-01-31T19:26:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 172,
      "id": "PR_kwDOIvmHss5lFEhH",
      "title": "Architecture Overview aasvg fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/172",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "a few formatting fixes\r\n- Identity Documents are rounded as they're documents, as opposed to a process\r\n- corner fixes \r\n- centering text",
      "createdAt": "2024-01-25T15:36:42Z",
      "updatedAt": "2024-02-01T19:28:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "re-architect",
      "baseRefOid": "32520b4775885a363a1fceeb164e91822a4b2e19",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/aasvg-fixes",
      "headRefOid": "1abdb3d6d9c77900cc64ee97d7d4b36aaf68b08b",
      "closedAt": "2024-01-25T15:37:39Z",
      "mergedAt": "2024-01-25T15:37:39Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e80d22eb096239f921cc402f0765fd8cad9081c4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 173,
      "id": "PR_kwDOIvmHss5lhp3I",
      "title": "Remote Signing PR Tweaks",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/173",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updates #167 \r\n\r\n- Adds arrows\r\n- Avoids lines going behind diagrams\r\n- Makes Identity Document a rounded document type\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/bc89fc6a-4e65-4223-994b-a9cf2a76b2f9)\r\n",
      "createdAt": "2024-01-31T04:18:10Z",
      "updatedAt": "2024-02-01T19:28:03Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "feat/diagrams",
      "baseRefOid": "66b59aa496e2194d225d594b3918cf00347758f2",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/diagram-fixes",
      "headRefOid": "85efd0cf2b6c62c4e5456825efda34f6ef26f47d",
      "closedAt": "2024-01-31T21:02:24Z",
      "mergedAt": "2024-01-31T21:02:24Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "460a44466bbb7f5e588b3461310725255144030c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5ujJ5L",
          "commit": {
            "abbreviatedOid": "030cb19"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-31T19:53:45Z",
          "updatedAt": "2024-01-31T19:53:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ujbQ7",
          "commit": {
            "abbreviatedOid": "030cb19"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-31T20:32:51Z",
          "updatedAt": "2024-01-31T20:32:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 174,
      "id": "PR_kwDOIvmHss5lm99v",
      "title": "aasvg fixes to multiplicity drawing",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/174",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/bac27169-3ce2-443c-94dc-1233743af28b)\r\n",
      "createdAt": "2024-01-31T19:23:42Z",
      "updatedAt": "2024-02-01T19:28:24Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "re-architect",
      "baseRefOid": "126e8d69dd1caa59f6a7feb4603fa84c4ca95282",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve-fixes-to-171",
      "headRefOid": "e8d40f9f77518493e24ca1e335ab4354c9d630ee",
      "closedAt": "2024-01-31T19:24:53Z",
      "mergedAt": "2024-01-31T19:24:53Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f82d40fbf2c89499155aa6345551f9e9d9678a05"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 175,
      "id": "PR_kwDOIvmHss5lvj0y",
      "title": "Revert \"Clarify Feed and Subject\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/175",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reverts ietf-wg-scitt/draft-ietf-scitt-architecture#165",
      "createdAt": "2024-02-01T19:21:03Z",
      "updatedAt": "2024-02-01T19:27:51Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "5de0d640d0bc43fe8f62a398dcb4f8b9fa9e7666",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "revert-165-steve/feed-subject",
      "headRefOid": "9ad526393b87ec8ca43c8e84992070b896d9ca64",
      "closedAt": "2024-02-01T19:21:54Z",
      "mergedAt": "2024-02-01T19:21:54Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0973a2f38826003bf8181e7a116dcb6a33b0375b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 176,
      "id": "PR_kwDOIvmHss5lvmYT",
      "title": "Clarify feed is and Subject",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/176",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes accidental merger and reversion of #165\r\nSee #165 for the discussion",
      "createdAt": "2024-02-01T19:27:06Z",
      "updatedAt": "2024-02-16T00:47:58Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f97acc29a758af130fc91768512e47260d016f9c",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/feed-subject",
      "headRefOid": "e674b8c1c9b19dbbbe8fc75dd4ac993670438e3d",
      "closedAt": "2024-02-08T23:53:15Z",
      "mergedAt": "2024-02-08T23:53:15Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "fda6c5709b1436842889a5588246f7748d67be54"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressing @OR13's feedback, yes. We should capture those details, likely in SCRAPI. \r\nI've updated the PR to say it returns receipts, which defines the structure. I'd suggest the parameters and filters are part of the API.\r\n\r\nWith minimal edits, as this PR shuffled wording from Subject to Feed, I'm going to merge so we can focus on the larger changes in #179 ",
          "createdAt": "2024-02-08T23:53:07Z",
          "updatedAt": "2024-02-08T23:53:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5utqjc",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T19:44:45Z",
          "updatedAt": "2024-02-01T19:44:45Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: An unordered collection of arbitrary data (artifacts, signed statements, receipts, or other data) related to the text identifiers, observed by the transparency service in the `sub` field of the CWT Claim property of the protected header of Signed Statements.\r\n```",
              "createdAt": "2024-02-01T19:44:45Z",
              "updatedAt": "2024-02-01T19:44:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5utqvd",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Repeating my change request from https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/165#discussion_r1471449646",
          "createdAt": "2024-02-01T19:45:07Z",
          "updatedAt": "2024-02-01T19:45:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5utrGv",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T19:46:01Z",
          "updatedAt": "2024-02-01T19:46:01Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-01T19:46:01Z",
              "updatedAt": "2024-02-01T19:46:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5utsEK",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T19:48:32Z",
          "updatedAt": "2024-02-01T19:48:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "We can't say this, if we can't agree on what the data type of a feed or its items are.\r\n\r\nIt seems not likely to agree to a single definition of this, so I suggest leaving it up to implementations to process the feed as they see fit.",
              "createdAt": "2024-02-01T19:48:32Z",
              "updatedAt": "2024-02-01T19:48:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5utu0Q",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T19:52:11Z",
          "updatedAt": "2024-02-01T19:52:11Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n: This term has the same definition as in RFC8392, which relies on the definition in RFC7519. The \"sub\" (subject) claim identifies the principal that is the subject of the CWT.  The claims in a CWT are normally statements about the subject.  In SCITT, \"sub\" identifies the entity about which statements, and receipts are made. The subject value MUST either be scoped to be locally unique in the context of the issuer or be globally unique. The processing of this claim is generally application specific.  The \"sub\" value is a case-sensitive string containing a StringOrURI value.\r\n```",
              "createdAt": "2024-02-01T19:52:11Z",
              "updatedAt": "2024-02-01T19:55:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5utvOE",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T19:52:42Z",
          "updatedAt": "2024-02-01T19:52:42Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "It seems essential to repeat this definition based on the discussions we have had regarding identifiers and their duration.",
              "createdAt": "2024-02-01T19:52:42Z",
              "updatedAt": "2024-02-01T19:52:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uvcNM",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T23:43:32Z",
          "updatedAt": "2024-02-01T23:43:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "A feed returns the collection of signed statements (or transparent statements). It returns what's on the append-only log. \r\nIt simply returns what the transparency service persisted.",
              "createdAt": "2024-02-01T23:43:32Z",
              "updatedAt": "2024-02-01T23:43:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uvd4u",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T23:46:28Z",
          "updatedAt": "2024-02-01T23:46:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Unordered: \r\nThis isn't necessarily so. A transparency service may order them. They may even order by different parameters, which is implementation specific. Stating they're not ordered is an over-statement.\r\nThis looks like a lot of extra text, to demonstrate we really need to solve what gets persisted, and what gets returned.\r\n",
              "createdAt": "2024-02-01T23:46:28Z",
              "updatedAt": "2024-02-01T23:46:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uveEY",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T23:46:55Z",
          "updatedAt": "2024-02-01T23:46:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "And, this same text has to be fixed whether it's on the feed or the subject property. ",
              "createdAt": "2024-02-01T23:46:55Z",
              "updatedAt": "2024-02-01T23:46:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5uve7o",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T23:51:21Z",
          "updatedAt": "2024-02-01T23:51:21Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "done",
              "createdAt": "2024-02-01T23:51:21Z",
              "updatedAt": "2024-02-01T23:51:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vY5ip",
          "commit": {
            "abbreviatedOid": "fe88bd7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-07T21:06:43Z",
          "updatedAt": "2024-02-07T21:06:43Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "See https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/176/commits/e674b8c1c9b19dbbbe8fc75dd4ac993670438e3d for clarification \r\n\r\n> Feed:\r\n>\r\n> : A collection of Receipts, as recorded by the Transparency Service, based on filtering of properties from the envelope including, but not limited to the `sub` field of the `CWT_Claims`.",
              "createdAt": "2024-02-07T21:06:43Z",
              "updatedAt": "2024-02-07T21:06:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vZWfG",
          "commit": {
            "abbreviatedOid": "e674b8c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "We still need to explain what kind of interoperability is expected for feed.\n\nDoes every TS need to index the same way? \n\nDoes every TS have to support the same feed identifiers?\n\nAre there query parameters that must always be implemented consistently?\n\nThe more I think about this, the more I feel feed does not belong in the architecture.",
          "createdAt": "2024-02-07T22:26:51Z",
          "updatedAt": "2024-02-07T22:26:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 177,
      "id": "PR_kwDOIvmHss5lxJel",
      "title": "Consistency Fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/177",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A set of consistency fixes for the next draft.",
      "createdAt": "2024-02-01T23:55:16Z",
      "updatedAt": "2024-02-16T00:47:29Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f97acc29a758af130fc91768512e47260d016f9c",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/consistency-fixes",
      "headRefOid": "033b18c4a030ebf9d3e969536d640b2ea7af8d99",
      "closedAt": "2024-02-09T00:19:20Z",
      "mergedAt": "2024-02-09T00:19:20Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f640e0bd6b861249ad9622a08af6cee145886551"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/180 for discussion on the terminology. ",
          "createdAt": "2024-02-06T16:24:35Z",
          "updatedAt": "2024-02-06T16:24:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5uvhzC",
          "commit": {
            "abbreviatedOid": "787759c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-01T23:57:18Z",
          "updatedAt": "2024-02-01T23:57:18Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'm flagging the term \"Consumer\" as we previously had Producers and Consumers. Tagging for an alternative term.",
              "createdAt": "2024-02-01T23:57:18Z",
              "updatedAt": "2024-02-01T23:57:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5u1BMg",
          "commit": {
            "abbreviatedOid": "787759c"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-02T14:27:14Z",
          "updatedAt": "2024-02-02T14:28:15Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I would recommend this or I can drive alignment after these fixes are merged and continue the work in #120.\r\n\r\n```suggestion\r\nIssuers can register their Signed Statements on any Transparency Service, with the guarantee that all Verifiers and Relying Parties will be able to verify them.\r\n```",
              "createdAt": "2024-02-02T14:27:14Z",
              "updatedAt": "2024-02-02T14:28:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5u6CfJ",
          "commit": {
            "abbreviatedOid": "eaf583b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-03T01:17:45Z",
          "updatedAt": "2024-02-03T01:17:46Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "This sentence is poorly worded. Open to a suggestion, if needed",
              "createdAt": "2024-02-03T01:17:45Z",
              "updatedAt": "2024-02-03T01:17:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vMxv3",
          "commit": {
            "abbreviatedOid": "6b10363"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "I would start with the new roles that are needed... lets not add a bunch of TODOs.\r\n\r\ndefine the new roles you need, and then use them consistently throughout the document.",
          "createdAt": "2024-02-06T15:52:42Z",
          "updatedAt": "2024-02-08T23:10:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5vaPgm",
          "commit": {
            "abbreviatedOid": "787759c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T02:10:30Z",
          "updatedAt": "2024-02-08T02:10:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Thanks, @aj-stein-nist \r\nI reduced this PR to be more about consistency, and suggest we do a separate PR to resolve using Consumer or Relying Parties. I do think we can do something better, but would like to track that one separately.",
              "createdAt": "2024-02-08T02:10:30Z",
              "updatedAt": "2024-02-08T02:10:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vjB-K",
          "commit": {
            "abbreviatedOid": "512b847"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "It cuts out cruft, so I support this edit, just one minor nit (take or leave it, it's minor to me), before moving onto #179.",
          "createdAt": "2024-02-08T23:53:02Z",
          "updatedAt": "2024-02-08T23:53:53Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Not all verifiers will be \"[web] browsers\" per se.\r\n\r\n```suggestion\r\n- Signed Certificate Timestamps are checked by Verifiers.\r\n```",
              "createdAt": "2024-02-08T23:53:02Z",
              "updatedAt": "2024-02-08T23:53:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vjCf3",
          "commit": {
            "abbreviatedOid": "512b847"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T23:56:00Z",
          "updatedAt": "2024-02-08T23:56:00Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Great clarification ",
              "createdAt": "2024-02-08T23:56:00Z",
              "updatedAt": "2024-02-08T23:56:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 179,
      "id": "PR_kwDOIvmHss5mJgag",
      "title": "Massive Refactor",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Adjustments regarding registration policies.",
      "createdAt": "2024-02-06T14:09:49Z",
      "updatedAt": "2024-02-10T08:09:11Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f640e0bd6b861249ad9622a08af6cee145886551",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "policy-policy-policy",
      "headRefOid": "083c76e457207f45cd9c489f849aaa88acf05225",
      "closedAt": "2024-02-10T01:22:27Z",
      "mergedAt": "2024-02-10T01:22:27Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e3ae8a97b4406d05f60fbf3bdf0087d0b49cf057"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker I have made significant changes since your last review, including cutting out a lot of redundant text, and shuffling sections and section headers while eliminating the redundancy. \r\n\r\nI am dismissing your approval based on that, please give this another review. ",
          "createdAt": "2024-02-08T20:40:37Z",
          "updatedAt": "2024-02-08T20:40:37Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> I need more time to review , due to it's \"massiveness\", but a great start\r\n\r\nApologies for the scope creep of this PR (\"massive\"). This is all intended to be presentable on Monday. ",
          "createdAt": "2024-02-09T10:22:08Z",
          "updatedAt": "2024-02-09T10:22:08Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 and @SteveLasker : i shall review it later today!",
          "createdAt": "2024-02-09T14:31:22Z",
          "updatedAt": "2024-02-09T14:31:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5vYsET",
          "commit": {
            "abbreviatedOid": "45470fa"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "~A few nits, with LGTM~ removed LGTM as there were several subsequent edits",
          "createdAt": "2024-02-07T20:39:26Z",
          "updatedAt": "2024-02-09T16:17:54Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nThe most important function is to maintain a Registration Policy for the Append-only Log which is a verifiable data structure recording of the Signed Statements.\r\n```",
              "createdAt": "2024-02-07T20:39:26Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nThe second set of entries are Signed Statements for an additional domain-specific Registration Policy.\r\n```",
              "createdAt": "2024-02-07T20:40:18Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\r\nFor example, if a Transparency Service is implemented using a set of redundant replicas, each running within its own hardware-protected trusted execution environments (TEEs), then each replica can provide fresh Evidence or fresh Attestation Results about its TEEs.\r\nThe respective Evidence can show, for example, the binding of the hardware platform to the software that runs the Transparency Service, the long-term public key of the service, or the key used by the replica for signing Receipts.\r\nThe respective Attestation Result, for example, can show that the remote attestation Evidence was appraised by a trusted Verifier and complies with well-known Reference Values and Endorsements.\r\n```",
              "createdAt": "2024-02-07T20:44:09Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 168,
              "body": "```suggestion\r\nBefore a Signed Statement is registered, the trust anchor used to verify it MUST be registered (e.g., via a registered Registration Policy).\r\n```",
              "createdAt": "2024-02-07T20:47:15Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 170,
              "body": "Is this redundant with line [438](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R438)\r\n\r\n> The first entry that is added to the Append-only Log MUST be a Signed Statement including key material.",
              "createdAt": "2024-02-07T20:48:36Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 198,
              "body": "Minor nit:\r\n```suggestion\r\nTransparency Services can be deployed along side other data or object storage technologies.\r\n```",
              "createdAt": "2024-02-07T20:52:07Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 206,
              "body": "```suggestion\r\nFor example, a Transparency Service that is supporting a software package management system might be referenced from the APIs exposed for package management.\r\nProviding an ability to request a fresh receipt for a given software package, or to request a list of signed statements and Artifacts associated with a software package.\r\n```",
              "createdAt": "2024-02-07T20:53:05Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 218,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-07T20:53:23Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            },
            {
              "originalPosition": 111,
              "body": "A note that the section marked for deletion here is captured later [here](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R888)",
              "createdAt": "2024-02-07T20:54:48Z",
              "updatedAt": "2024-02-07T20:55:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vY8Y7",
          "commit": {
            "abbreviatedOid": "45470fa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-07T21:13:34Z",
          "updatedAt": "2024-02-07T21:13:34Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "Its not redundant, the referenced line is normative, this is informative.",
              "createdAt": "2024-02-07T21:13:34Z",
              "updatedAt": "2024-02-07T21:13:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vY8zo",
          "commit": {
            "abbreviatedOid": "45470fa"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-07T21:14:37Z",
          "updatedAt": "2024-02-07T21:14:37Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "I was just moving security considerations to that section, I did not attempt to actually improve the security considerations. ",
              "createdAt": "2024-02-07T21:14:37Z",
              "updatedAt": "2024-02-07T21:14:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vivP2",
          "commit": {
            "abbreviatedOid": "b6daef8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T22:30:59Z",
          "updatedAt": "2024-02-08T22:31:00Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "fore reviewers, this is a move, not an edit or deletion",
              "createdAt": "2024-02-08T22:30:59Z",
              "updatedAt": "2024-02-08T22:31:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5viyY4",
          "commit": {
            "abbreviatedOid": "b6daef8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I need more time to review , due to it's \"massiveness\", but a great start",
          "createdAt": "2024-02-08T22:42:07Z",
          "updatedAt": "2024-02-08T23:09:12Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "This sentence needs to be updated or removed as suggested\r\n```suggestion\r\n```",
              "createdAt": "2024-02-08T22:42:07Z",
              "updatedAt": "2024-02-08T23:08:44Z"
            },
            {
              "originalPosition": 130,
              "body": "**Reviewers note**: This section isn't deleted, rather moved to https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/179/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R540, not deleted",
              "createdAt": "2024-02-08T22:58:32Z",
              "updatedAt": "2024-02-08T23:08:44Z"
            },
            {
              "originalPosition": 185,
              "body": "Without assuming what you're suggesting, can you elaborate: \"layer violation\"? ",
              "createdAt": "2024-02-08T23:01:51Z",
              "updatedAt": "2024-02-08T23:08:44Z"
            },
            {
              "originalPosition": 78,
              "body": "There is a problem with the plurality of the sentence above. You have \"Signed Statement**s**\", yet you leave out \"**a** Registration Policy\", or Signed Statements for Registration Polic**ies**\"",
              "createdAt": "2024-02-08T23:05:27Z",
              "updatedAt": "2024-02-08T23:08:44Z"
            },
            {
              "originalPosition": 168,
              "body": "Did you mean to keep \"..\" at the end of the sentence? ",
              "createdAt": "2024-02-08T23:07:41Z",
              "updatedAt": "2024-02-08T23:08:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vnxLF",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "The biggest issue now that x5t is required is that the issuer for x509-signed claims is not specified. This needs to be solved before we can merge this",
          "createdAt": "2024-02-09T15:46:38Z",
          "updatedAt": "2024-02-10T01:21:50Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "make this an editor comment",
              "createdAt": "2024-02-09T15:46:38Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 54,
              "body": "Not clear what \"the second receipt will be over the first receipt\" means.",
              "createdAt": "2024-02-09T15:49:41Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 58,
              "body": "You have completely purged internal ledger consistency mechanisms in this PR but this seems unrelated to the primary goal of refactoring registration policies ",
              "createdAt": "2024-02-09T15:53:39Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 175,
              "body": "This is much weaker than the previous deleted statement about the transparency service key. It allows for instance a TS to sign each receipt with a different key. I don't think we intend to allow that",
              "createdAt": "2024-02-09T15:57:46Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 246,
              "body": "That is a lot of deleted text here, which against weakens the definition of a TS significantly. If your expectation is that anything that supports Merkle Tree proof of inclusion will meet these requirements, I don't think that is the case as the COMETRE ID doesn't have finality or consistency requirements to create new algorithms.",
              "createdAt": "2024-02-09T16:03:34Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 299,
              "body": "But at least their intended security properties are? If this is out of scope of SCITT then at least the COMETRE document must be much more specific about the minimum security properties of verifiable data structures. ",
              "createdAt": "2024-02-09T16:06:51Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 333,
              "body": "Not clear what this means ",
              "createdAt": "2024-02-09T16:08:52Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 336,
              "body": "That is a big TODO and since x5t is now mandatory it needs to be specified before this PR can be merged",
              "createdAt": "2024-02-09T16:09:38Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 351,
              "body": "Doesn't make sense, rephrase?",
              "createdAt": "2024-02-09T16:11:31Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            },
            {
              "originalPosition": 698,
              "body": "The non-x5t case is now underspecified if we only cite RFC9052 validation",
              "createdAt": "2024-02-09T16:13:41Z",
              "updatedAt": "2024-02-09T16:15:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voCjg",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:21:48Z",
          "updatedAt": "2024-02-09T16:21:49Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "yes, good for now. but you are correct",
              "createdAt": "2024-02-09T16:21:48Z",
              "updatedAt": "2024-02-09T16:21:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voD-e",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:25:05Z",
          "updatedAt": "2024-02-09T16:25:05Z",
          "comments": [
            {
              "originalPosition": 175,
              "body": "We can improve here, but \"service key\" was formerly introduced in English text as \"a service key, which is used to endorse the state of the Append-only Log in Receipts\". This language is less ambiguous and yes it allows also more freedom. This is certainly a topic we can pick up again on after version update.",
              "createdAt": "2024-02-09T16:25:05Z",
              "updatedAt": "2024-02-09T16:25:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voEIa",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:25:26Z",
          "updatedAt": "2024-02-09T16:25:27Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I am not clear about this statement! Yes, Transparency Service alters the Unprotected Header of Signed Statements by inserting Receipts, however Receipts are not stored in the log?",
              "createdAt": "2024-02-09T16:25:27Z",
              "updatedAt": "2024-02-09T16:25:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voEgs",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:26:12Z",
          "updatedAt": "2024-02-09T16:26:12Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "Security Requirements basically moved to the Security Considerations. Anything missing there can be added in future iterations.",
              "createdAt": "2024-02-09T16:26:12Z",
              "updatedAt": "2024-02-09T16:26:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voE0Q",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:26:49Z",
          "updatedAt": "2024-02-09T16:26:50Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nA Transparency Service MAY alter the contents of the unprotected header of Signed Statements, returned by the log.  The returned signed statement is thus different from the signed statement stored in the log\r\n```",
              "createdAt": "2024-02-09T16:26:50Z",
              "updatedAt": "2024-02-09T16:26:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voE_h",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:27:13Z",
          "updatedAt": "2024-02-09T16:27:14Z",
          "comments": [
            {
              "originalPosition": 299,
              "body": "Yes. That is a COMETRE task (or other Append-only Log specification text).",
              "createdAt": "2024-02-09T16:27:14Z",
              "updatedAt": "2024-02-09T16:27:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voF10",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:28:44Z",
          "updatedAt": "2024-02-09T16:28:44Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nHowever, the Registrations on a separate Transparency Service is generally disjoint, though it is possible to take a Transparent Statement(i.e. a Signed Statement with a Receipt in its unprotected header, from the first Transparency Service ) and register it on another Transparency Service, where the second receipt will be over the first Receipt in the unprotected header.\r\n```",
              "createdAt": "2024-02-09T16:28:44Z",
              "updatedAt": "2024-02-09T16:36:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vn_QT",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-02-09T16:14:23Z",
          "updatedAt": "2024-02-10T01:21:20Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Why is this in the terminology? ",
              "createdAt": "2024-02-09T16:14:23Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 36,
              "body": "Has it been relocated elsewhere in the document? ",
              "createdAt": "2024-02-09T16:15:15Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 45,
              "body": "Does it mean that unprotected headers are now also included in the receipt's signed information? This significantly complicates the interpretation of the resulting receipts by verifiers. I also don't think it should be discussed in the terminology.  ",
              "createdAt": "2024-02-09T16:17:16Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 54,
              "body": "This is new, and unclear to me. I guess the receipt should be on the on transparent statement registered at the first service (including its first receipt as untrusted header) not just on the first receipt. As discussed above, this complicates the interpretation of receipts by verifiers and auditors. ",
              "createdAt": "2024-02-09T16:20:14Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 63,
              "body": "I would rephrase to avoid claiming this is a generalization of CT",
              "createdAt": "2024-02-09T16:21:01Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 59,
              "body": "Why removing these two items? ",
              "createdAt": "2024-02-09T16:21:31Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 130,
              "body": "Where is the text that was above the CDDL? ",
              "createdAt": "2024-02-09T16:23:12Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 222,
              "body": "This description of initialization is new, and seems overly prescriptive. The first entry seems recursive, and does not say what kind of key materials are involved. In my opinion (and as written before) signed statement that document registration policies can be interleaved with other records. ",
              "createdAt": "2024-02-09T16:26:05Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 240,
              "body": "Are we requesting a separate statement that registers the issuer key? Also, this does not match the new description in initialization above. ",
              "createdAt": "2024-02-09T16:27:08Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            },
            {
              "originalPosition": 274,
              "body": "Why cutting this subsection? ",
              "createdAt": "2024-02-09T16:28:18Z",
              "updatedAt": "2024-02-09T16:28:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voF-X",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:29:01Z",
          "updatedAt": "2024-02-09T16:29:01Z",
          "comments": [
            {
              "originalPosition": 333,
              "body": "This text was inherited and we can easily remove the `value between 1 and 8192 characters in length that fits the regular expression of a distinguished name` part. The important part is, that `iss` must be present when `x5` is present. We simply did not remove the per-existing value constraint. Can do that now or later.",
              "createdAt": "2024-02-09T16:29:01Z",
              "updatedAt": "2024-02-09T16:29:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voGMS",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:29:30Z",
          "updatedAt": "2024-02-09T16:29:31Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "```suggestion\r\nAn important function of a Transparency Service is to maintain Registration Policies for the Append-only Log.\r\n```",
              "createdAt": "2024-02-09T16:29:30Z",
              "updatedAt": "2024-02-09T16:29:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voIMo",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:33:47Z",
          "updatedAt": "2024-02-09T16:33:47Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "its a move, under the definition of transparency",
              "createdAt": "2024-02-09T16:33:47Z",
              "updatedAt": "2024-02-09T16:33:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voIe9",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:34:27Z",
          "updatedAt": "2024-02-09T16:34:27Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "its a description of the CBOR labels we use in examples, which are \"requested\" and are not actually assigned.\r\n\r\n`394` is receipt.",
              "createdAt": "2024-02-09T16:34:27Z",
              "updatedAt": "2024-02-09T16:34:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voIia",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:34:34Z",
          "updatedAt": "2024-02-09T16:34:35Z",
          "comments": [
            {
              "originalPosition": 336,
              "body": "I would prefer release early, release often, The note should move to an issue, though.",
              "createdAt": "2024-02-09T16:34:34Z",
              "updatedAt": "2024-02-09T16:34:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voImc",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:34:40Z",
          "updatedAt": "2024-02-09T16:34:40Z",
          "comments": [
            {
              "originalPosition": 381,
              "body": "I thought when a `Payload` is a `hash` it cannot be `nil` ?",
              "createdAt": "2024-02-09T16:34:40Z",
              "updatedAt": "2024-02-09T16:34:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voI4U",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:35:10Z",
          "updatedAt": "2024-02-09T16:35:10Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "They have always been included, this is just making that explicit.",
              "createdAt": "2024-02-09T16:35:10Z",
              "updatedAt": "2024-02-09T16:35:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voLEb",
          "commit": {
            "abbreviatedOid": "b286635"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:40:11Z",
          "updatedAt": "2024-02-09T16:40:11Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "@OR13 : See if you like this text: We can merge this?",
              "createdAt": "2024-02-09T16:40:11Z",
              "updatedAt": "2024-02-09T16:40:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voLLR",
          "commit": {
            "abbreviatedOid": "b286635"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:40:26Z",
          "updatedAt": "2024-02-09T16:40:26Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I filed https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/183\r\n\r\nI am declining to apply this suggestion, lets discuss on issues first.",
              "createdAt": "2024-02-09T16:40:26Z",
              "updatedAt": "2024-02-09T16:40:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voLXa",
          "commit": {
            "abbreviatedOid": "b286635"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:40:51Z",
          "updatedAt": "2024-02-09T16:40:51Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "I just moved the text from the top here, I am declining to make changes to this part in this PR.",
              "createdAt": "2024-02-09T16:40:51Z",
              "updatedAt": "2024-02-09T16:40:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voL2y",
          "commit": {
            "abbreviatedOid": "b286635"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:41:41Z",
          "updatedAt": "2024-02-09T16:41:41Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "I grouped all the text regarding \"Signed Statments\" and \"Receipts\" next to \"CDDL\" and \"EDN\" for both.",
              "createdAt": "2024-02-09T16:41:41Z",
              "updatedAt": "2024-02-09T16:41:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voMq9",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:43:37Z",
          "updatedAt": "2024-02-09T16:43:38Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "as a general rule, you never know if anyone has altered an unprotected header... thats what unprotected means.\r\n\r\nwe do know that a \"receipt\" will be for whatever \"bytes\" \"go into the log\"... in many cases, that means just hashing, and then constructing a list of hashes (for RFC9162)... the details for this are described in the choice of verifiable data structure.",
              "createdAt": "2024-02-09T16:43:37Z",
              "updatedAt": "2024-02-09T16:43:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voNA9",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:44:28Z",
          "updatedAt": "2024-02-09T16:44:28Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "its a layer violation, the verifiable data structure controls these details, not SCITT.",
              "createdAt": "2024-02-09T16:44:28Z",
              "updatedAt": "2024-02-09T16:44:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voN3o",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:46:34Z",
          "updatedAt": "2024-02-09T16:46:35Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "its not clear what is \"TS\" and what is \"SCITT API\", querying history of signed statements might not be possible with \"adjacent services\" see https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/183",
              "createdAt": "2024-02-09T16:46:34Z",
              "updatedAt": "2024-02-09T16:46:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voN5e",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:46:39Z",
          "updatedAt": "2024-02-09T16:46:39Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Yes, below",
              "createdAt": "2024-02-09T16:46:39Z",
              "updatedAt": "2024-02-09T16:46:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voOAy",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:46:56Z",
          "updatedAt": "2024-02-09T16:46:56Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "No, that is not correct. TS produce receipts and not Transparent Statements",
              "createdAt": "2024-02-09T16:46:56Z",
              "updatedAt": "2024-02-09T16:46:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voO0i",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:48:50Z",
          "updatedAt": "2024-02-09T16:48:50Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "The section just aggregates \"policy\" stuff that was spread all over the document.\r\n",
              "createdAt": "2024-02-09T16:48:50Z",
              "updatedAt": "2024-02-09T16:48:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voROT",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:54:20Z",
          "updatedAt": "2024-02-09T16:54:20Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-09T16:54:20Z",
              "updatedAt": "2024-02-09T16:54:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voRTk",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:54:31Z",
          "updatedAt": "2024-02-09T16:54:31Z",
          "comments": [
            {
              "originalPosition": 240,
              "body": "Yes, the suggestion was that you cannot \"verify signed statements\", unless you have a key.",
              "createdAt": "2024-02-09T16:54:31Z",
              "updatedAt": "2024-02-09T16:54:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voTJC",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:58:55Z",
          "updatedAt": "2024-02-09T16:58:56Z",
          "comments": [
            {
              "originalPosition": 351,
              "body": "```suggestion\r\nA Receipt is a Signed Statement, (cose-sign1), with addition claims in its protected header related to verifying the inclusion proof in its unprotected header. See {{-COMETRE}}.\r\n```",
              "createdAt": "2024-02-09T16:58:55Z",
              "updatedAt": "2024-02-09T16:58:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voTM8",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:59:04Z",
          "updatedAt": "2024-02-09T16:59:04Z",
          "comments": [
            {
              "originalPosition": 351,
              "body": "@ad-l does this help?",
              "createdAt": "2024-02-09T16:59:04Z",
              "updatedAt": "2024-02-09T16:59:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voTVg",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T16:59:23Z",
          "updatedAt": "2024-02-09T16:59:23Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "There are two conflicting views on auditing in this document: receipt-based vs log-based. ",
              "createdAt": "2024-02-09T16:59:23Z",
              "updatedAt": "2024-02-09T16:59:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voTod",
          "commit": {
            "abbreviatedOid": "5ed9ea9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:00:07Z",
          "updatedAt": "2024-02-09T17:00:07Z",
          "comments": [
            {
              "originalPosition": 381,
              "body": "For a receipt, the verifiable data structure defines what this is... for RFC9162, the payload is \"computed from the inclusion proof\".",
              "createdAt": "2024-02-09T17:00:07Z",
              "updatedAt": "2024-02-09T17:00:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voVGN",
          "commit": {
            "abbreviatedOid": "cb28525"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:03:39Z",
          "updatedAt": "2024-02-09T17:03:39Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Raise a new issue",
              "createdAt": "2024-02-09T17:03:39Z",
              "updatedAt": "2024-02-09T17:03:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voaQe",
          "commit": {
            "abbreviatedOid": "cb28525"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:16:05Z",
          "updatedAt": "2024-02-09T17:16:06Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nNOTE: Please remove this comment before publishing.\r\n```",
              "createdAt": "2024-02-09T17:16:05Z",
              "updatedAt": "2024-02-09T17:16:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voaxn",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:17:26Z",
          "updatedAt": "2024-02-09T17:17:26Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "I don't see that. The ordering constraints of entries in the log, and the exclusive focus on keys, seems fresh. ",
              "createdAt": "2024-02-09T17:17:26Z",
              "updatedAt": "2024-02-09T17:17:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vobeg",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:19:16Z",
          "updatedAt": "2024-02-09T17:19:16Z",
          "comments": [
            {
              "originalPosition": 240,
              "body": "Sure, there are many other ways for verifiers to get the key (e.g. certs in untrusted headers); the reliance on a separate, earlier transparent statement is new, and arguably too specific. ",
              "createdAt": "2024-02-09T17:19:16Z",
              "updatedAt": "2024-02-09T17:19:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vochl",
          "commit": {
            "abbreviatedOid": "cb28525"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:22:02Z",
          "updatedAt": "2024-02-09T17:22:02Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "Or goes to the COMETRE I-D, of course. I forgot to mention that.",
              "createdAt": "2024-02-09T17:22:02Z",
              "updatedAt": "2024-02-09T17:22:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5voe6D",
          "commit": {
            "abbreviatedOid": "e861889"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:27:32Z",
          "updatedAt": "2024-02-09T17:27:32Z",
          "comments": [
            {
              "originalPosition": 481,
              "body": "Discuss the possible issue on this issue!",
              "createdAt": "2024-02-09T17:27:32Z",
              "updatedAt": "2024-02-09T17:27:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vogOd",
          "commit": {
            "abbreviatedOid": "cb28525"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T17:30:56Z",
          "updatedAt": "2024-02-09T17:30:56Z",
          "comments": [
            {
              "originalPosition": 695,
              "body": "Revisit ### Validation {#validation} section fully: After refactor",
              "createdAt": "2024-02-09T17:30:56Z",
              "updatedAt": "2024-02-09T17:30:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vohUU",
          "commit": {
            "abbreviatedOid": "e861889"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Subject to addressing the issues opened by this PR: This PR can be taken forward!",
          "createdAt": "2024-02-09T17:33:35Z",
          "updatedAt": "2024-02-09T17:33:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5vpovM",
          "commit": {
            "abbreviatedOid": "e861889"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T20:58:46Z",
          "updatedAt": "2024-02-09T20:58:46Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Discussed in the editors meeting. Marking resolved as different implementations have different formats",
              "createdAt": "2024-02-09T20:58:46Z",
              "updatedAt": "2024-02-09T20:58:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqAxv",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:26:47Z",
          "updatedAt": "2024-02-09T22:26:47Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Editors meeting note: please open an issue/PR if you'd like revisit. ",
              "createdAt": "2024-02-09T22:26:47Z",
              "updatedAt": "2024-02-09T22:26:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqBCN",
          "commit": {
            "abbreviatedOid": "e861889"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:28:09Z",
          "updatedAt": "2024-02-09T22:28:09Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Removing the TODO, as the potential change can be tracked as a new issue/pr.\r\n```suggestion\r\n```",
              "createdAt": "2024-02-09T22:28:09Z",
              "updatedAt": "2024-02-09T22:28:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqBWG",
          "commit": {
            "abbreviatedOid": "3ab4cf9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:29:46Z",
          "updatedAt": "2024-02-09T22:29:46Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "This was the outcome of IETF 118, to formalize the initialization. Please open a new PR/Issue for any proposed changes.",
              "createdAt": "2024-02-09T22:29:46Z",
              "updatedAt": "2024-02-09T22:29:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqBhN",
          "commit": {
            "abbreviatedOid": "3ab4cf9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:30:42Z",
          "updatedAt": "2024-02-09T22:30:42Z",
          "comments": [
            {
              "originalPosition": 240,
              "body": "Editors meeting note: Please open a new issue/pr for any suggestions.",
              "createdAt": "2024-02-09T22:30:42Z",
              "updatedAt": "2024-02-09T22:30:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqB_7",
          "commit": {
            "abbreviatedOid": "3ab4cf9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:33:09Z",
          "updatedAt": "2024-02-09T22:33:09Z",
          "comments": [
            {
              "originalPosition": 274,
              "body": "Editors meeting note: With all the MAYs, these are great implementation-specific capabilities. \r\nPlease open an issue/PR with new suggestions.",
              "createdAt": "2024-02-09T22:33:09Z",
              "updatedAt": "2024-02-09T22:33:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqCeA",
          "commit": {
            "abbreviatedOid": "3ab4cf9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:35:48Z",
          "updatedAt": "2024-02-09T22:35:48Z",
          "comments": [
            {
              "originalPosition": 333,
              "body": "See #188 ",
              "createdAt": "2024-02-09T22:35:48Z",
              "updatedAt": "2024-02-09T22:35:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqCv8",
          "commit": {
            "abbreviatedOid": "3ab4cf9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:37:08Z",
          "updatedAt": "2024-02-09T22:37:09Z",
          "comments": [
            {
              "originalPosition": 334,
              "body": "```suggestion\r\n```\r\nSee #188",
              "createdAt": "2024-02-09T22:37:08Z",
              "updatedAt": "2024-02-09T22:37:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqDDn",
          "commit": {
            "abbreviatedOid": "09eb700"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T22:38:35Z",
          "updatedAt": "2024-02-09T22:38:35Z",
          "comments": [
            {
              "originalPosition": 695,
              "body": "See #190 ",
              "createdAt": "2024-02-09T22:38:35Z",
              "updatedAt": "2024-02-09T22:38:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqJ3F",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T23:16:48Z",
          "updatedAt": "2024-02-09T23:16:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Editors meeting note: please open a PR/Issue if needed. ",
              "createdAt": "2024-02-09T23:16:48Z",
              "updatedAt": "2024-02-09T23:16:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqKPJ",
          "commit": {
            "abbreviatedOid": "f550223"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T23:18:50Z",
          "updatedAt": "2024-02-09T23:18:51Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Editors meeting note:\r\nTransparent statements are a result of the \"client\" stapling the receipt to their local copy of the signed statement.\r\nA client can resubmit the signed statement, with the receipt in the unprotected header. \r\n",
              "createdAt": "2024-02-09T23:18:50Z",
              "updatedAt": "2024-02-09T23:18:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqKYT",
          "commit": {
            "abbreviatedOid": "e861889"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T23:19:52Z",
          "updatedAt": "2024-02-09T23:19:53Z",
          "comments": [
            {
              "originalPosition": 481,
              "body": "See #189 ",
              "createdAt": "2024-02-09T23:19:52Z",
              "updatedAt": "2024-02-09T23:19:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqKu-",
          "commit": {
            "abbreviatedOid": "87a637b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T23:22:33Z",
          "updatedAt": "2024-02-09T23:22:33Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "```suggestion\r\n- SCTs are checked by Verifiers\r\n```",
              "createdAt": "2024-02-09T23:22:33Z",
              "updatedAt": "2024-02-09T23:22:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqLHn",
          "commit": {
            "abbreviatedOid": "d004c2e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T23:25:38Z",
          "updatedAt": "2024-02-09T23:25:38Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "```suggestion\r\nFrom here on a Transparency Service can check Signed Statements on registration via policy (that is at minimum key material and typically a Registration Policy) and is therefore in a reliable state to register Signed Statements about Artifacts or a new Registration Policy.\r\n```",
              "createdAt": "2024-02-09T23:25:38Z",
              "updatedAt": "2024-02-09T23:25:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqzRB",
          "commit": {
            "abbreviatedOid": "083c76e"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-10T07:27:30Z",
          "updatedAt": "2024-02-10T07:27:30Z",
          "comments": [
            {
              "originalPosition": 280,
              "body": "The restriction on the first entry doesn't make sense to me. Why are we being so specific about the log contents ?",
              "createdAt": "2024-02-10T07:27:30Z",
              "updatedAt": "2024-02-10T07:27:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqzW6",
          "commit": {
            "abbreviatedOid": "083c76e"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-10T07:31:20Z",
          "updatedAt": "2024-02-10T07:31:21Z",
          "comments": [
            {
              "originalPosition": 282,
              "body": "This seems way too prescriptive. We just wouldn't do it this way at all",
              "createdAt": "2024-02-10T07:31:21Z",
              "updatedAt": "2024-02-10T07:31:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vqzjv",
          "commit": {
            "abbreviatedOid": "083c76e"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-10T07:39:49Z",
          "updatedAt": "2024-02-10T07:39:49Z",
          "comments": [
            {
              "originalPosition": 390,
              "body": "That x5t is mandatory and kid is optional is very frustrating. It would be more helpful if was just one or the other must be present",
              "createdAt": "2024-02-10T07:39:49Z",
              "updatedAt": "2024-02-10T07:39:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vq121",
          "commit": {
            "abbreviatedOid": "083c76e"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-10T07:47:09Z",
          "updatedAt": "2024-02-10T07:47:09Z",
          "comments": [
            {
              "originalPosition": 556,
              "body": "How does a transparency service signal that it is using a proof format that is not currently registered  in the draft (ie not RFC9162_SHA256) ?",
              "createdAt": "2024-02-10T07:47:09Z",
              "updatedAt": "2024-02-10T07:47:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5vq-JI",
          "commit": {
            "abbreviatedOid": "083c76e"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-10T08:09:11Z",
          "updatedAt": "2024-02-10T08:09:11Z",
          "comments": [
            {
              "originalPosition": 325,
              "body": "Overly specifying initialization precedures can introduce operational compexities. Can we solve the boot straping problem by just having a null registration policy with a use-once restriction ?",
              "createdAt": "2024-02-10T08:09:11Z",
              "updatedAt": "2024-02-10T08:09:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 181,
      "id": "PR_kwDOIvmHss5mVy_f",
      "title": "Remove roles from the Arch Diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/181",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-08T07:18:21Z",
      "updatedAt": "2024-02-16T00:47:54Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f97acc29a758af130fc91768512e47260d016f9c",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/arch-diagram",
      "headRefOid": "ef9096cf5d9b2c74711c93edd1c9ade1796866c0",
      "closedAt": "2024-02-08T23:45:45Z",
      "mergedAt": "2024-02-08T23:45:45Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e4b8ac883ba25fb212749adb879e8dcce0d0d68f"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "There's more to clarify. I made this PR small for incremental improvements.\r\nI agree we should clarify Consumer, Verifier, Relying Parties, Auditor, ..in a separate PR that replaces terminology consistent. ",
          "createdAt": "2024-02-08T17:00:53Z",
          "updatedAt": "2024-02-08T17:02:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5vgLLa",
          "commit": {
            "abbreviatedOid": "ef9096c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I think the PR I proposed here: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/156\r\n\r\nwas better...\r\n\r\nMy PR also better addressed the dangling Producer / Consumer language.\r\n\r\nRelying parties are Consumers.\r\n\r\nHowever, Removing the roles is probably easier than getting consensus to fix them.\r\n\r\nA follow up PR should remove Issuer, Verifier and Auditor, since they are now also ungrounded in the architecture, like Consumer.\r\n\r\n",
          "createdAt": "2024-02-08T16:28:06Z",
          "updatedAt": "2024-02-08T16:28:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 182,
      "id": "PR_kwDOIvmHss5mb2ha",
      "title": "Merging in main for full review",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/182",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-09T00:18:26Z",
      "updatedAt": "2024-02-09T00:23:45Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "policy-policy-policy",
      "baseRefOid": "b6daef8b4e8218a6f1e90cac10016800d257c4ba",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "f640e0bd6b861249ad9622a08af6cee145886551",
      "closedAt": "2024-02-09T00:23:45Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 191,
      "id": "PR_kwDOIvmHss5mhn_7",
      "title": "Complete Laskers address info",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/191",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-09T23:14:44Z",
      "updatedAt": "2024-02-16T00:47:27Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f640e0bd6b861249ad9622a08af6cee145886551",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/address",
      "headRefOid": "cc4efd020b70fcef02e15f664a381dad287de9d8",
      "closedAt": "2024-02-09T23:14:51Z",
      "mergedAt": "2024-02-09T23:14:51Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "469f96fb680e2494edfb85660ee9bba7ca28cbe1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 193,
      "id": "PR_kwDOIvmHss5mh2FH",
      "title": "Fix idnits for 05 submission",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/193",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-10T01:33:57Z",
      "updatedAt": "2024-02-16T00:47:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e3ae8a97b4406d05f60fbf3bdf0087d0b49cf057",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/draft-05",
      "headRefOid": "ed6b9cb4209a89517131de5920107f755fb8ebe8",
      "closedAt": "2024-02-10T01:34:03Z",
      "mergedAt": "2024-02-10T01:34:03Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d52fee989bfad67075287cdb7f134189b2cae56a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 194,
      "id": "PR_kwDOIvmHss5mqxua",
      "title": "Remove Initialization and Registration policy sections",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/194",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Per decision in today's interim meeting, remove these sections from the architecture for the time being.",
      "createdAt": "2024-02-12T18:48:24Z",
      "updatedAt": "2024-02-12T22:14:41Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d52fee989bfad67075287cdb7f134189b2cae56a",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "194-interim-meeting-rec-remove-sections",
      "headRefOid": "fb6455c2a7762f164754a1cdbe42d7b5add08b6d",
      "closedAt": "2024-02-12T22:14:28Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Per questions from others, I was under the impression this would be merged *and then* @JAG-UK would be adding relevant information for a second pass. Jon had asked for volunteer on this bit to make way for his follow-on changes. This PR only addresses that request for volunteer to remove the parts.",
          "createdAt": "2024-02-12T22:00:46Z",
          "updatedAt": "2024-02-12T22:00:46Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "A note that we're removing for a more crisply defined scope. To ease concerns, I'd be ok with waiting for @JAG-UK's PR ",
          "createdAt": "2024-02-12T22:13:50Z",
          "updatedAt": "2024-02-12T22:13:50Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> A note that we're removing for a more crisply defined scope. To ease concerns, I'd be ok with waiting for @JAG-UK's PR\r\n\r\nLet it be so.",
          "createdAt": "2024-02-12T22:14:40Z",
          "updatedAt": "2024-02-12T22:14:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 195,
      "id": "PR_kwDOIvmHss5mq2XE",
      "title": "Update Federation Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/195",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In case there is no rough consensus to keep federation section, I raised https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/196 to remove it.",
      "createdAt": "2024-02-12T19:00:47Z",
      "updatedAt": "2024-02-16T00:47:45Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d52fee989bfad67075287cdb7f134189b2cae56a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat/federation-federation-federation",
      "headRefOid": "146e8c93df402f2405eaddc07845dd536ded51e0",
      "closedAt": "2024-02-16T00:03:20Z",
      "mergedAt": "2024-02-16T00:03:20Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "146e8c93df402f2405eaddc07845dd536ded51e0"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd suggest we've had a few different conversations about federation of everything in a transparency service, vs. selective promotion of a subset of information across Transparency Services. \r\nThe later being the ability for a consumer of one or more Transparency Services to promote the content for a subset of their software. \r\nMicrosoft ships lots of software, However a consumer may only want to promote the Office suite of products into their Transparency Service for internal validation.\r\n\r\nI'd suggest the wording, as current, isn't well defined and I'd vote to cut this section until more well defined.",
          "createdAt": "2024-02-12T22:10:57Z",
          "updatedAt": "2024-02-12T22:10:57Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "If this PR is dropped then we should create an issue to address the underspecification of unpotected headers at registration, especially the idea to preserve unprotected headers. Federation is a simple use case that highlights this problem",
          "createdAt": "2024-02-13T15:26:57Z",
          "updatedAt": "2024-02-13T15:26:57Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "> Federation is a simple use case that highlights this problem\r\n\r\nIts not simple, and we have seen no implementation support for it to date.",
          "createdAt": "2024-02-15T14:22:20Z",
          "updatedAt": "2024-02-15T14:22:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5v0TKe",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-12T19:04:31Z",
          "updatedAt": "2024-02-12T19:04:32Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "We will need to register header parameters if we decide to keep this advice, and this section.",
              "createdAt": "2024-02-12T19:04:31Z",
              "updatedAt": "2024-02-12T19:04:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v0T3a",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "If we are at the point where we need to start from scratch on configuration/registration policy and scrap the initialization section, I personally do not see how we can keep federation and not just remove it (not to drive you and others mad, we can always add back later).",
          "createdAt": "2024-02-12T19:06:32Z",
          "updatedAt": "2024-02-12T19:06:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5v1vH0",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-12T21:26:41Z",
          "updatedAt": "2024-02-12T21:26:41Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Sees a bit weird to say \"this is difficult, here's something you COULD/SHOULD do\", as opposed to be more definitive, to make it easy for what to do. .\r\nMy vote is to cut until this scenario is better defined. ",
              "createdAt": "2024-02-12T21:26:41Z",
              "updatedAt": "2024-02-12T22:14:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v89mn",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think the new text is too specific. To me (and as in the prior text) Federation refers to having multiple TS, and one TS accepting receipts from another TS at registration time is just an advanced case, for which we don't have clarity yet. As discussed earlier, letting the TS decide what unprotected headers to authenticate in its receipts is a major complication. \r\n\r\nMy preference would be (1) keep a general placeholder on Federation --- better than nothing; or else (2) cut the section. But this leaves many questions unanswered, starting with the two TS in the arch diagram. ",
          "createdAt": "2024-02-13T15:24:25Z",
          "updatedAt": "2024-02-13T15:24:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5v8-QR",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:25:32Z",
          "updatedAt": "2024-02-13T15:25:33Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Having content in unprotected header like receipts that expire and be refreshed sounds odd.  As to why being able to confirm that you saw a version may cause problems where content is recorded on multiple SCITT instances.  As each receipt is distinct, now this may snap that order matters. ",
              "createdAt": "2024-02-13T15:25:32Z",
              "updatedAt": "2024-02-13T15:25:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wOuVP",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T14:20:13Z",
          "updatedAt": "2024-02-15T14:20:14Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I would like to to hear from implementers how they handle federation with multiple receipts, without recording the unprotected header in a tamper evident way.\r\n\r\nIf the answer is, no implementations support this, and we don't want to define it in the architecture, the whole federation section should be removed IMO.",
              "createdAt": "2024-02-15T14:20:13Z",
              "updatedAt": "2024-02-15T14:20:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wOvJa",
          "commit": {
            "abbreviatedOid": "146e8c9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T14:21:39Z",
          "updatedAt": "2024-02-15T14:21:39Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "There is no other place to put receipts, without breaking the signature of the signed statement.\r\n\r\nAnd as soon as you put anything in the unprotected header, the bytes of the entire message, have been changed.",
              "createdAt": "2024-02-15T14:21:39Z",
              "updatedAt": "2024-02-15T14:21:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 196,
      "id": "PR_kwDOIvmHss5mq3E6",
      "title": "Remove Federation Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/196",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In case there is no consensus to remove Federation, I raised https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/195 to update it.",
      "createdAt": "2024-02-12T19:02:46Z",
      "updatedAt": "2024-02-16T04:10:53Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d52fee989bfad67075287cdb7f134189b2cae56a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat/alternative-federation",
      "headRefOid": "44b15b2a78761a2f0a97e21665cf2ad742fc7ee7",
      "closedAt": "2024-02-16T00:03:17Z",
      "mergedAt": "2024-02-16T00:03:17Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "5a6fc246aabf625e2eb8c305bbdb48d0d143cb9b"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd suggest we've had a few different conversations about federation of everything in a transparency service, vs. selective promotion of a subset of information across Transparency Services.\r\nThe latter is the ability for a consumer of one or more Transparency Services to promote the content for a subset of their software.\r\nMicrosoft ships lots of software, However, a consumer may only want to promote the Office suite of products into their Transparency Service for internal validation.\r\n\r\nI'd suggest the wording, as current, isn't well defined and I'd vote to cut this section until more well defined.",
          "createdAt": "2024-02-12T22:12:39Z",
          "updatedAt": "2024-02-12T22:12:39Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "If this is merged then we likely need additional text in the claim registration section to describe what a TS should do with existing receipts already attached to the claim.",
          "createdAt": "2024-02-13T15:28:55Z",
          "updatedAt": "2024-02-13T15:28:55Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> If this is merged then we likely need additional text in the claim registration section to describe what a TS should do with existing receipts already attached to the claim.\r\n\r\nThanks, @ad-l \r\nWould you like to initiate that PR?",
          "createdAt": "2024-02-16T00:03:06Z",
          "updatedAt": "2024-02-16T00:03:06Z"
        },
        {
          "author": "johnandersen777",
          "authorAssociation": "NONE",
          "body": "Where are we doing the consensus discussion on federation? I feel like I haven\u2019t seen discussion on the list recently",
          "createdAt": "2024-02-16T01:15:19Z",
          "updatedAt": "2024-02-16T01:15:30Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi, John,\r\nWe've been discussing in these PRs and IETF calls. We're working towards a WG Last Call at 119, trimming elements that we don't feel are coming to closure. I know you've been doing some great work, and we can bring this back in with more clarity if you'd like to make a PR/Proposal.\r\n",
          "createdAt": "2024-02-16T04:10:52Z",
          "updatedAt": "2024-02-16T04:10:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5v0TBL",
          "commit": {
            "abbreviatedOid": "44b15b2"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-12T19:04:09Z",
          "updatedAt": "2024-02-12T19:04:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5v2FL-",
          "commit": {
            "abbreviatedOid": "44b15b2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-12T22:12:49Z",
          "updatedAt": "2024-02-12T22:12:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 197,
      "id": "PR_kwDOIvmHss5mtFRN",
      "title": "Clarify client and issuer",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/197",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #102, #186 and #189",
      "createdAt": "2024-02-13T04:04:39Z",
      "updatedAt": "2024-02-28T23:28:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d52fee989bfad67075287cdb7f134189b2cae56a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/client-issuer-roles",
      "headRefOid": "e79adaf111d51d302be12dacdd29450295812c38",
      "closedAt": "2024-02-20T15:13:17Z",
      "mergedAt": "2024-02-20T15:13:17Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d7290b31c299b90b30412f4d9c101f151d188d1a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5v39j0",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T06:16:40Z",
          "updatedAt": "2024-02-13T06:16:44Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Is a Verifier a Client? If not, does a Verifier use a Client? I bring this up because in my prior work on this I presented a updated diagram to confirm my understanding and I was corrected on this point. However, this seems an important place to clarify this and/or in the definition of Verifier, otherwise the clarification is not in the current draft of the document.",
              "createdAt": "2024-02-13T06:16:40Z",
              "updatedAt": "2024-02-13T06:16:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v7oOO",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:11:44Z",
          "updatedAt": "2024-02-13T13:11:44Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I would simply write that the Issuer may or may not be the client that submits the signed claim to a TS for registration. (The proposed text suggests the client may also sign, which seems irrelevant here.)",
              "createdAt": "2024-02-13T13:11:44Z",
              "updatedAt": "2024-02-13T13:11:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v7_XH",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:49:29Z",
          "updatedAt": "2024-02-13T13:49:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "If you read the original report in #102, your recommendation (from my perspective, others can feel free to disagree) further confuses the purpose of the original request for clarification: what a client (what is doing it) is unclear. Casually blurring the line between what is doing and who is doing (issuer, verifier has been unclear to me if it what or who) is part of the problem here.",
              "createdAt": "2024-02-13T13:49:29Z",
              "updatedAt": "2024-02-13T13:49:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v8-pI",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:26:12Z",
          "updatedAt": "2024-02-13T15:26:13Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "lets take a normative definition of client from another spec if we can... perhaps\r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc6749#section-1.1\r\n\r\n```\r\nclient\r\n      An application making protected resource requests on behalf of the\r\n      resource owner and with its authorization.  The term \"client\" does\r\n      not imply any particular implementation characteristics (e.g.,\r\n      whether the application executes on a server, a desktop, or other\r\n      devices).\r\n\r\n```",
              "createdAt": "2024-02-13T15:26:12Z",
              "updatedAt": "2024-02-13T15:26:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v8_sy",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:28:00Z",
          "updatedAt": "2024-02-13T15:28:01Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-13T15:28:01Z",
              "updatedAt": "2024-02-13T15:28:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v8_vc",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:28:04Z",
          "updatedAt": "2024-02-13T15:28:05Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-13T15:28:05Z",
              "updatedAt": "2024-02-13T15:28:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v8_2G",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:28:14Z",
          "updatedAt": "2024-02-13T15:28:15Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "less confusing to just say nothing here.",
              "createdAt": "2024-02-13T15:28:14Z",
              "updatedAt": "2024-02-13T15:28:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9AAy",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:28:32Z",
          "updatedAt": "2024-02-13T15:28:32Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I like this suggestion Orie.",
              "createdAt": "2024-02-13T15:28:32Z",
              "updatedAt": "2024-02-13T15:28:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9Ab-",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:29:14Z",
          "updatedAt": "2024-02-13T15:29:14Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "This is registration policy details.... and interacts with all the other requirements we have for registration policies.... starting to feel like its better to say nothing here.",
              "createdAt": "2024-02-13T15:29:14Z",
              "updatedAt": "2024-02-13T15:29:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9BYi",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:30:05Z",
          "updatedAt": "2024-02-13T15:30:05Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Must a client authenticate?\r\n",
              "createdAt": "2024-02-13T15:30:05Z",
              "updatedAt": "2024-02-13T15:30:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9HYW",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:38:25Z",
          "updatedAt": "2024-02-13T15:38:25Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "the definition is OAuth specific (\"protected resource\" is an OAuth term) and needs to be adapted.\r\n\r\n>An application making registration requests to a Transparency Service on behalf of a person holding a signed statement.",
              "createdAt": "2024-02-13T15:38:25Z",
              "updatedAt": "2024-02-13T15:40:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9H85",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:39:23Z",
          "updatedAt": "2024-02-13T15:39:23Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Re my previous recommendation around RP was based in the applicability of OAUTH terms and concepts, so in that vein, I support this definition of client for the time being.",
              "createdAt": "2024-02-13T15:39:23Z",
              "updatedAt": "2024-02-13T15:39:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9Jp6",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:42:20Z",
          "updatedAt": "2024-02-13T15:42:31Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "With my proposed definition above I would just add \r\n\r\n> (who may or may not be the Issuer of the statement)\r\n\r\nat the end of my proposed definition above ",
              "createdAt": "2024-02-13T15:42:20Z",
              "updatedAt": "2024-02-13T15:42:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9LQD",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:44:41Z",
          "updatedAt": "2024-02-13T15:44:41Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Not that I have a definitive answer, but I can envision some uses where authentication is not desirable, but it really depends on what authentication means in this context.",
              "createdAt": "2024-02-13T15:44:41Z",
              "updatedAt": "2024-02-13T15:44:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9LhZ",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:44:57Z",
          "updatedAt": "2024-02-13T15:44:57Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I still have concerns given the explanations to answer and fully resolve 102, but my questions have been answered and they are outside the scope of my support of the PR recommendation and tentative changes proposed in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/197/files#r1488069804.\r\n\r\n(Note to Steve as it is your PR: I cannot resolve this comment because sadly I did not create it as  part of a formal review in GitHub, so I cannot close it and mark it no longer relevant, apologies.)",
              "createdAt": "2024-02-13T15:44:57Z",
              "updatedAt": "2024-02-13T15:46:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v919b",
          "commit": {
            "abbreviatedOid": "4eab6e7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:48:22Z",
          "updatedAt": "2024-02-13T16:48:22Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I've updated above text",
              "createdAt": "2024-02-13T16:48:22Z",
              "updatedAt": "2024-02-13T16:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsN0Y",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T14:51:05Z",
          "updatedAt": "2024-02-20T14:51:05Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Are you intending to make all SCITT clients OAUTH clients?\r\n\r\nSeems like you just want to borrow the definition",
              "createdAt": "2024-02-20T14:51:05Z",
              "updatedAt": "2024-02-20T14:51:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsO1X",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T14:52:07Z",
          "updatedAt": "2024-02-20T14:52:07Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "The current suggested text is likely to trigger a \"should be a normative reference\" comment.",
              "createdAt": "2024-02-20T14:52:07Z",
              "updatedAt": "2024-02-20T14:52:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsXbp",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:04:46Z",
          "updatedAt": "2024-02-20T15:04:46Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "agreed with Orie",
              "createdAt": "2024-02-20T15:04:46Z",
              "updatedAt": "2024-02-20T15:04:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsX8_",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:05:37Z",
          "updatedAt": "2024-02-20T15:05:37Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "A client is an initiator in a protocol interaction. I do not see how that is relevant to scitt? ",
              "createdAt": "2024-02-20T15:05:37Z",
              "updatedAt": "2024-02-20T15:05:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsYat",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:06:25Z",
          "updatedAt": "2024-02-20T15:06:25Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Why make this confusing? Is that an oauth thing?",
              "createdAt": "2024-02-20T15:06:25Z",
              "updatedAt": "2024-02-20T15:06:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsZZb",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:08:04Z",
          "updatedAt": "2024-02-20T15:08:04Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-20T15:08:04Z",
              "updatedAt": "2024-02-20T15:08:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsZ0F",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-20T15:08:47Z",
          "updatedAt": "2024-02-20T15:08:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5wsadm",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:09:52Z",
          "updatedAt": "2024-02-20T15:09:53Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n: an application making protected Transparency Service resource requests on behalf of the resource owner and with its authorization.\r\n```",
              "createdAt": "2024-02-20T15:09:53Z",
              "updatedAt": "2024-02-20T15:09:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsanv",
          "commit": {
            "abbreviatedOid": "1954827"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:10:08Z",
          "updatedAt": "2024-02-20T15:10:09Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-20T15:10:09Z",
              "updatedAt": "2024-02-20T15:10:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsbC3",
          "commit": {
            "abbreviatedOid": "125cc38"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:10:52Z",
          "updatedAt": "2024-02-20T15:10:52Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nThe term \"Client\" does not imply any particular implementation characteristics (e.g., whether the application executes on a server, a desktop, or other devices).\r\n```",
              "createdAt": "2024-02-20T15:10:52Z",
              "updatedAt": "2024-02-20T15:10:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsbOD",
          "commit": {
            "abbreviatedOid": "be434b0"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:11:10Z",
          "updatedAt": "2024-02-20T15:11:10Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-20T15:11:10Z",
              "updatedAt": "2024-02-20T15:11:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsbU7",
          "commit": {
            "abbreviatedOid": "125cc38"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:11:21Z",
          "updatedAt": "2024-02-20T15:11:22Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I believe this role is outside the scope of SCITT and hence this PR should be abandoned!",
              "createdAt": "2024-02-20T15:11:21Z",
              "updatedAt": "2024-02-20T15:11:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wscPv",
          "commit": {
            "abbreviatedOid": "e79adaf"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-20T15:12:51Z",
          "updatedAt": "2024-02-20T15:12:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5wscaw",
          "commit": {
            "abbreviatedOid": "41c463d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "good enough",
          "createdAt": "2024-02-20T15:13:08Z",
          "updatedAt": "2024-02-20T15:13:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 198,
      "id": "PR_kwDOIvmHss5mtG2A",
      "title": "Clarify getting a receipt is async registration",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/198",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-13T04:15:25Z",
      "updatedAt": "2024-02-16T00:01:49Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d52fee989bfad67075287cdb7f134189b2cae56a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/receipt-async",
      "headRefOid": "1d5468bb10899c1c814304e5b67555fd68ea1322",
      "closedAt": "2024-02-15T23:56:00Z",
      "mergedAt": "2024-02-15T23:56:00Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "3a2dedea5e1e7aa340e2bc7306a15d3e7d6776dd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5v391y",
          "commit": {
            "abbreviatedOid": "82db70c"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-02-13T06:17:34Z",
          "updatedAt": "2024-02-13T06:17:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Minor grammar issue, but worth fixing:\r\n\r\n```suggestion\r\nWhen asynchronous, the Transparency Service MUST return an identifier used to retrieve the Receipt.\r\n```",
              "createdAt": "2024-02-13T06:17:34Z",
              "updatedAt": "2024-02-13T06:17:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v7t2B",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-02-13T13:21:48Z",
          "updatedAt": "2024-02-13T13:21:54Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Where is this identifier defined? What does it identify? There is a potential ambiguity between identifying a registration event (later authenticated by the receipt) or more loosely just a signed statement, which may then be registered later, or refer to an earlier registration, possibly subsumed by others. Unless/until we agree on registration-event identifiers, I suggest we cut this sentence. ",
              "createdAt": "2024-02-13T13:21:48Z",
              "updatedAt": "2024-02-13T13:21:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9Dyy",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:32:26Z",
          "updatedAt": "2024-02-13T15:32:26Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "there are examples in the appendix, this sentence seems to imply that they would be used.",
              "createdAt": "2024-02-13T15:32:26Z",
              "updatedAt": "2024-02-13T15:32:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9EJS",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:33:01Z",
          "updatedAt": "2024-02-13T15:33:01Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "this seems good",
              "createdAt": "2024-02-13T15:33:01Z",
              "updatedAt": "2024-02-13T15:33:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9FHg",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:34:41Z",
          "updatedAt": "2024-02-13T15:34:42Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "in an asynchronous flow like when batch writing, you need an identifier to use to retrieve the receipt when it eventually becomes available,.",
              "createdAt": "2024-02-13T15:34:41Z",
              "updatedAt": "2024-02-13T15:34:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9GQS",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:36:38Z",
          "updatedAt": "2024-02-13T15:36:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "The simpler way to prevent confusion is to remove this sentence. Why is it required in the arch? ",
              "createdAt": "2024-02-13T15:36:38Z",
              "updatedAt": "2024-02-13T15:36:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9JRm",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:41:42Z",
          "updatedAt": "2024-02-13T15:41:42Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Could we write \"correlator\" instead of identifier to side-step this issue? ",
              "createdAt": "2024-02-13T15:41:42Z",
              "updatedAt": "2024-02-13T15:41:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wCPXS",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T08:18:09Z",
          "updatedAt": "2024-02-14T08:18:09Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Could we fiip the sense and instead say\r\n\r\n```suggestion\r\nThe Transparency Service MUST be able to provide a receipt for all registered statements. A receipt for a signed statement MAY be provided asyncrhously```",
              "createdAt": "2024-02-14T08:18:09Z",
              "updatedAt": "2024-02-14T08:18:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wCPqG",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T08:18:53Z",
          "updatedAt": "2024-02-14T08:18:53Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "\r\nI think this just brings what has been said previously closer together but the adjacency makes it easire to digest.\r\n\r\nThis could be tightened by adding\r\n\r\n\"Asynchronously obtained receipts MUST be demonstrably equivelent to a receipt obtained at the point of registration\"",
              "createdAt": "2024-02-14T08:18:53Z",
              "updatedAt": "2024-02-14T08:18:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wCQsR",
          "commit": {
            "abbreviatedOid": "4fcb0e1"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T08:21:29Z",
          "updatedAt": "2024-02-14T08:21:29Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I think this cements the relationship between signed statements and transparent statements and makes the 'recursive' case more natural to think about",
              "createdAt": "2024-02-14T08:21:29Z",
              "updatedAt": "2024-02-14T08:21:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wTCoK",
          "commit": {
            "abbreviatedOid": "23888d0"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-15T23:00:16Z",
          "updatedAt": "2024-02-15T23:01:33Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Minor capitalization and spelling issues, but not blocking\r\n\r\n```suggestion\r\nThe Transparency Service MUST be able to provide a receipt for all registered Statements. A receipt for a Signed Statement MAY be provided asynchronously.\r\n```",
              "createdAt": "2024-02-15T23:00:16Z",
              "updatedAt": "2024-02-15T23:02:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wTNvV",
          "commit": {
            "abbreviatedOid": "4cdf618"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-15T23:42:28Z",
          "updatedAt": "2024-02-15T23:42:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5wTOnV",
          "commit": {
            "abbreviatedOid": "4cdf618"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T23:47:12Z",
          "updatedAt": "2024-02-15T23:47:12Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nThe Transparency Service MUST be able to provide a receipt for all registered Statements.\r\nA receipt for a Signed Statement MAY be provided asynchronously.\r\n```",
              "createdAt": "2024-02-15T23:47:12Z",
              "updatedAt": "2024-02-15T23:47:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 201,
      "id": "PR_kwDOIvmHss5mwgmT",
      "title": "Jag uk/clarify initialization",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/201",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Retains the concepts and many of the same words as before, but addresses concerns form the mailing list and interim call",
      "createdAt": "2024-02-13T14:16:07Z",
      "updatedAt": "2024-02-28T23:28:29Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d52fee989bfad67075287cdb7f134189b2cae56a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/clarify-initialization",
      "headRefOid": "062b4b059b594046c0baeb38448aac119c36dbb3",
      "closedAt": "2024-02-20T15:59:22Z",
      "mergedAt": "2024-02-20T15:59:22Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "ac638ab0ab360eea5d417b893ba4d2304ec399f3"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I've merged in suggestions. Please re-review, with LGTM or actionable suggestions.",
          "createdAt": "2024-02-16T00:17:00Z",
          "updatedAt": "2024-02-16T00:17:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5v8wXp",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:04:22Z",
          "updatedAt": "2024-02-13T15:04:22Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "not to challenge our long standing tradition of using the term \"Append-only log\", but technically the Receipt depends on a verifiable data structure, of which an append only log (such as a merkle tree), is just one form.",
              "createdAt": "2024-02-13T15:04:22Z",
              "updatedAt": "2024-02-13T15:04:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9K6S",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:44:10Z",
          "updatedAt": "2024-02-13T15:44:11Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nRegistration Policies MUST be made transparent and available to all clients of the Transparency Service by registering them as Signed Statements on the Append-only Log.\r\n```",
              "createdAt": "2024-02-13T15:44:11Z",
              "updatedAt": "2024-02-13T15:44:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9LAn",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:44:21Z",
          "updatedAt": "2024-02-13T15:44:21Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Simpler",
              "createdAt": "2024-02-13T15:44:21Z",
              "updatedAt": "2024-02-13T15:44:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9LcM",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:44:54Z",
          "updatedAt": "2024-02-13T15:44:54Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "This is a deadlock... can't register a policy without a policy.",
              "createdAt": "2024-02-13T15:44:54Z",
              "updatedAt": "2024-02-13T15:44:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9Me4",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:45:36Z",
          "updatedAt": "2024-02-13T15:45:37Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I think the distinction between Mandatory and Optional is more confusing here... I prefer to see all Policies as implementation specific.",
              "createdAt": "2024-02-13T15:45:36Z",
              "updatedAt": "2024-02-13T15:45:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9M4q",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:45:54Z",
          "updatedAt": "2024-02-13T15:45:54Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "This is all that needs to be said.",
              "createdAt": "2024-02-13T15:45:54Z",
              "updatedAt": "2024-02-13T15:45:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9QbC",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:49:48Z",
          "updatedAt": "2024-02-13T15:49:48Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I support this recommendation.",
              "createdAt": "2024-02-13T15:49:48Z",
              "updatedAt": "2024-02-13T15:49:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v9fPt",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T16:09:52Z",
          "updatedAt": "2024-02-13T16:09:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5v-pau",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T18:45:08Z",
          "updatedAt": "2024-02-13T18:45:08Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nTransparency Services MUST feature an Append-only Log.\r\nThe Append-only Log is the verifiable data structure that registers Signed Statements and supports the production of Receipts.\r\n```",
              "createdAt": "2024-02-13T18:45:08Z",
              "updatedAt": "2024-02-13T18:45:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5v-q4m",
          "commit": {
            "abbreviatedOid": "9808f2e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T18:47:38Z",
          "updatedAt": "2024-02-13T18:47:38Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "A registration policy is just another signed statement, so how do we release the deadlock?",
              "createdAt": "2024-02-13T18:47:38Z",
              "updatedAt": "2024-02-13T18:47:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wBDmq",
          "commit": {
            "abbreviatedOid": "9808f2e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T04:05:26Z",
          "updatedAt": "2024-02-14T04:05:26Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": ":+1: Verification is covered elsewhere, minimizing the text needed here",
              "createdAt": "2024-02-14T04:05:26Z",
              "updatedAt": "2024-02-14T04:05:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wBEU-",
          "commit": {
            "abbreviatedOid": "9808f2e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T04:10:38Z",
          "updatedAt": "2024-02-14T05:47:19Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "To release the deadlock, suggesting we remove this line, and either:\r\n\r\n- [ ]  make registration policies suggested, but optional\r\n- [ ] keep the initialization of the Transparency Service to include a Signed Statement representing the configuration and registration policy.\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-02-14T04:10:38Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            },
            {
              "originalPosition": 34,
              "body": "Reviewing [draft 5](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-05.html), I couldn't find any text that states a receipt has a pointer to a registration policy, or another statement. \r\nUntil we can clarify that, I'd suggest we remove this sentance\r\n```suggestion\r\n```",
              "createdAt": "2024-02-14T05:38:36Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nTransparency Services MUST, at a minimum, perform the following checks before registering a Signed Statement:\r\n```",
              "createdAt": "2024-02-14T05:40:29Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            },
            {
              "originalPosition": 42,
              "body": "minimizing",
              "createdAt": "2024-02-14T05:40:39Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            },
            {
              "originalPosition": 59,
              "body": "Per [this comment](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/201/files#r1488113904), I'd suggest removing lines 405-408",
              "createdAt": "2024-02-14T05:42:47Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nSince a Registration Policy is required prior to the registration of any Signed Statements, a means is required to configure the first Registration Policy that is not the standard issuance of a Signed Statement.\r\nTransparency Services MUST support at least one of these methods:\r\n```",
              "createdAt": "2024-02-14T05:45:23Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            },
            {
              "originalPosition": 33,
              "body": "I just noticed this [initialization proposal below](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/201/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R412): \r\n\r\n> Since a Registration Policy is required prior to the registration of any Signed Statements, a means is required to configure the first Registration Policy that is not the standard issuance of a Signed Statement.\r\n> Transparency Services MUST support at least one of these methods:",
              "createdAt": "2024-02-14T05:46:55Z",
              "updatedAt": "2024-02-14T05:47:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wQLa4",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T16:24:48Z",
          "updatedAt": "2024-02-15T16:24:48Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Happy to take alternative wording. I was re-using this wording from Draft-05 to minimise noise",
              "createdAt": "2024-02-15T16:24:48Z",
              "updatedAt": "2024-02-15T16:24:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wQLuA",
          "commit": {
            "abbreviatedOid": "270e6e2"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T16:25:21Z",
          "updatedAt": "2024-02-15T16:25:21Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I propose to resolve this comment given the presence of the Initialization section unless @OR13 still objects",
              "createdAt": "2024-02-15T16:25:21Z",
              "updatedAt": "2024-02-15T16:25:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wQM3L",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T16:27:17Z",
          "updatedAt": "2024-02-15T16:27:18Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I am super curious. Can someone illustrate a scenario where it is bad to not have a registration policy (e.g., key material to check signatures) in the Append-only Log before allowing Signed Statements to be registered? This is an honest question.",
              "createdAt": "2024-02-15T16:27:17Z",
              "updatedAt": "2024-02-15T16:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wS74P",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T22:40:37Z",
          "updatedAt": "2024-02-15T22:40:38Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I don't think it's a question of being bad. It's a chick-egg scenario. If a registration policy is just a signed statement, then how do you get the first signed statement into other Append-only Log if all registrations must be evaluated against a registration policy (which is just another signed statement)?",
              "createdAt": "2024-02-15T22:40:37Z",
              "updatedAt": "2024-02-15T22:40:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wS8JG",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T22:41:40Z",
          "updatedAt": "2024-02-15T22:41:40Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nBefore a Signed Statement is registered, the trust anchor used to verify its Issuer MUST be registered with the Transparency Service.\r\n```",
              "createdAt": "2024-02-15T22:41:40Z",
              "updatedAt": "2024-02-15T22:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wS8Nz",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T22:41:57Z",
          "updatedAt": "2024-02-15T22:41:57Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-15T22:41:57Z",
              "updatedAt": "2024-02-15T22:41:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wS8R7",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T22:42:10Z",
          "updatedAt": "2024-02-15T22:42:10Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-15T22:42:10Z",
              "updatedAt": "2024-02-15T22:42:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wS8Yp",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T22:42:34Z",
          "updatedAt": "2024-02-15T22:42:35Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-15T22:42:34Z",
              "updatedAt": "2024-02-15T22:42:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wTS09",
          "commit": {
            "abbreviatedOid": "95f89a1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-16T00:09:34Z",
          "updatedAt": "2024-02-16T00:09:34Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Based on this section, I believe Jon's resolved the deadlock: \r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/201/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R409",
              "createdAt": "2024-02-16T00:09:34Z",
              "updatedAt": "2024-02-16T00:09:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wTT8Q",
          "commit": {
            "abbreviatedOid": "aa1bd2b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-16T00:15:44Z",
          "updatedAt": "2024-02-16T00:15:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5wTanQ",
          "commit": {
            "abbreviatedOid": "aa1bd2b"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-16T00:50:25Z",
          "updatedAt": "2024-02-16T00:50:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5wsez3",
          "commit": {
            "abbreviatedOid": "aa1bd2b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:15:31Z",
          "updatedAt": "2024-02-20T15:15:31Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "yes",
              "createdAt": "2024-02-20T15:15:31Z",
              "updatedAt": "2024-02-20T15:15:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5wsfT0",
          "commit": {
            "abbreviatedOid": "aa1bd2b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:16:00Z",
          "updatedAt": "2024-02-20T15:16:00Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nTypical representations of a trust anchor include certificates or key material, e.g., a raw public key. The `x5t` and `kid` Claims in the protected header of Signed Statements can be used as hints for discovering trust anchors.\r\n```",
              "createdAt": "2024-02-20T15:16:00Z",
              "updatedAt": "2024-02-20T15:16:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ws45D",
          "commit": {
            "abbreviatedOid": "aa1bd2b"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:53:29Z",
          "updatedAt": "2024-02-20T15:53:29Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nThe Transparency Service MUST authenticate the Issuer of Signed Statements by validating the COSE signature and checking the identity of the issuer through one of its configured trust anchors, using the `x5t` and `kid` headers in the protected header as hints. For instance, for X.509 signed claims the Transparency Service must validate a complete certificate chain from the certificate identified by `x5t` to one of the trusted root authority certificate of the Transparency Service.\r\n```",
              "createdAt": "2024-02-20T15:53:29Z",
              "updatedAt": "2024-02-20T15:53:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ws5oL",
          "commit": {
            "abbreviatedOid": "ea32355"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:54:45Z",
          "updatedAt": "2024-02-20T15:54:45Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "yes\r\n[edit] let me elaborate: I really like the flow of systemic conclusions. Signature Checking, Identity Checking via certification paths that are trust anchors. Starting point is x5t and kid. No notes",
              "createdAt": "2024-02-20T15:54:45Z",
              "updatedAt": "2024-02-20T15:56:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ws6Dy",
          "commit": {
            "abbreviatedOid": "ea32355"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:55:25Z",
          "updatedAt": "2024-02-20T15:55:25Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\n````\r\nnow redundant with my proposed text",
              "createdAt": "2024-02-20T15:55:25Z",
              "updatedAt": "2024-02-20T15:55:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ws7Lk",
          "commit": {
            "abbreviatedOid": "ea32355"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "yes",
          "createdAt": "2024-02-20T15:57:14Z",
          "updatedAt": "2024-02-20T15:57:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ws7RN",
          "commit": {
            "abbreviatedOid": "aa1bd2b"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-20T15:57:23Z",
          "updatedAt": "2024-02-20T15:57:23Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I will give it a \ud83d\udc4d but the use of the word is traipsing into configuration/policy territory that we have been trying to avoid.",
              "createdAt": "2024-02-20T15:57:23Z",
              "updatedAt": "2024-02-20T15:57:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5ws8Iv",
          "commit": {
            "abbreviatedOid": "062b4b0"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-20T15:58:45Z",
          "updatedAt": "2024-02-20T15:58:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 202,
      "id": "PR_kwDOIvmHss5n7Na-",
      "title": "Grammar fix: add missing verb in Section 4.2",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/202",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Upon re-reading the draft to submit an unrelated PR, I noticed there is a missing verb in paragraph about Signed Statements.",
      "createdAt": "2024-02-26T14:44:29Z",
      "updatedAt": "2024-02-26T15:43:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "ac638ab0ab360eea5d417b893ba4d2304ec399f3",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "chore-grammar-section-4.2",
      "headRefOid": "1a9b5e5816fef4b34a720fdd57ea4a5e51232aed",
      "closedAt": "2024-02-26T15:43:37Z",
      "mergedAt": "2024-02-26T15:43:37Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "2dc09afb15d8efc208225f4c495e0657b0c65ed8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xUBUB",
          "commit": {
            "abbreviatedOid": "1a9b5e5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-02-26T14:46:04Z",
          "updatedAt": "2024-02-26T14:46:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xUnl5",
          "commit": {
            "abbreviatedOid": "1a9b5e5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nThanks for the polish @aj-stein-nist ",
          "createdAt": "2024-02-26T15:43:23Z",
          "updatedAt": "2024-02-26T15:43:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 203,
      "id": "PR_kwDOIvmHss5n71La",
      "title": "Fix unordered list rendering in Section 4",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/203",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "While working on a unrelated PR, I noticed that lists that do not have a newline between the list and previous paragraph. The end result is in local testing, and presuming upcoming publication to datatracker.ietf.org, the lists will not render correctly. I added newlines and also change the equivalent Markdown syntax to match preexisting lists from other sections in the draft that have been around longer.\r\n\r\nBefore:\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/94922603/1049fcfc-964f-4b53-8658-9306316b4077)\r\n\r\nAfter:\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/94922603/e1d859df-3873-49de-9920-30d2253e83f3)\r\n\r\n",
      "createdAt": "2024-02-26T16:02:58Z",
      "updatedAt": "2024-02-26T17:55:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2dc09afb15d8efc208225f4c495e0657b0c65ed8",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "chore-formatting-ul-spacing",
      "headRefOid": "ac0d8f9f9bb41cf847b1b694bbbb9d12a2928e3c",
      "closedAt": "2024-02-26T17:55:26Z",
      "mergedAt": "2024-02-26T17:55:26Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1fccf4cf20f5171a44ac274e79f9b2beedbd827a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xWJWp",
          "commit": {
            "abbreviatedOid": "ac0d8f9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nThanks, @aj-stein-nist ",
          "createdAt": "2024-02-26T17:55:14Z",
          "updatedAt": "2024-02-26T17:55:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 204,
      "id": "PR_kwDOIvmHss5n9cXb",
      "title": "Fix typo singed-signed",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/204",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I found another typo, to make review simple and not mix it in with a more substantive editorial PR that is pending, I am fixing this misspelling in a separate PR for review and likely approval. Correct singed->signed in Section 6.2.2.",
      "createdAt": "2024-02-26T19:53:45Z",
      "updatedAt": "2024-02-26T20:14:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "1fccf4cf20f5171a44ac274e79f9b2beedbd827a",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "chore-grammar-typo-6.2.2",
      "headRefOid": "90a6fdaabddc575c6c248a2406e0bd7ac5aabf1a",
      "closedAt": "2024-02-26T20:14:31Z",
      "mergedAt": "2024-02-26T20:14:31Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e1a921c94a227abba3f216e53b82f490e21cf013"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xXNP_",
          "commit": {
            "abbreviatedOid": "90a6fda"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-26T20:14:26Z",
          "updatedAt": "2024-02-26T20:14:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 205,
      "id": "PR_kwDOIvmHss5n9dzD",
      "title": "Clarify usage of Verifier and Relying Party",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/205",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Closes #120.\r\n",
      "createdAt": "2024-02-26T19:58:02Z",
      "updatedAt": "2024-02-28T20:49:11Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "18449b2a2656da4bc7b75d66eb590135b40b8cb9",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "120-clarify-verifier-relying-party",
      "headRefOid": "81c74c0ee21ee302230f138ff6a81862788c2c9f",
      "closedAt": "2024-02-28T20:49:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "Generally the PR is straightforward (replacing Client with RP), but I am not sure there is consensus on using \"relying party\", as the usage of the term is fairly removed from the definition in other RFCs.\r\n\r\nFrom RFC7521:\r\n>   The entity that creates and signs or integrity-protects the assertion\r\n>   is typically known as the \"Issuer\", and the entity that consumes the\r\n>   assertion and relies on its information is typically known as the\r\n>   \"Relying Party\".  In the context of this document, the authorization\r\n>   server acts as a relying party.\r\n\r\nthe client in SCITT does not consume the statement/assertion, so in my opinion the closest analogy to Relying Party in SCITT would be the verifier, not the client.\r\n\r\nFrom RFC9334:\r\n>In Remote ATtestation procedureS (RATS), one peer (the \"Attester\") produces believable information about itself (\"Evidence\") to enable a remote peer (the \"Relying Party\") to decide whether or not to consider that Attester a trustworthy peer. Remote attestation procedures are facilitated by an additional vital party (the \"Verifier\").\r\n\r\nIf we translate this to SCITT, Attester = Issuer, Evidence = Statement, Relying Party = Verifier, Verifier = Transparency Service.\r\nSo I would understand and probably agree to use \"Relying Party\" as a substitute for \"Verifier\" but using it as a replacement for \"Client\" is just more confusing to me\r\n",
          "createdAt": "2024-02-27T16:06:21Z",
          "updatedAt": "2024-02-27T16:06:21Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> From RFC7521:\r\n> \r\n> > The entity that creates and signs or integrity-protects the assertion\r\n> > is typically known as the \"Issuer\", and the entity that consumes the\r\n> > assertion and relies on its information is typically known as the\r\n> > \"Relying Party\".  **In the context of this document, the authorization\r\n> > server acts as a relying party.**\r\n\r\nI added emphasis but maybe it is unclear what is \"the software or tool\" proxying an entity and what requirements are similar are dissimilar for Issuers versus Auditors versus Verifiers.\r\n\r\n> From RFC9334:\r\n> \r\n> > In Remote ATtestation procedureS (RATS), one peer (the \"Attester\") produces believable information about itself (\"Evidence\") to enable **a remote peer (the \"Relying Party\") to decide whether or not to consider that Attester a trustworthy peer. Remote attestation procedures are facilitated by an additional vital party (the \"Verifier\").**\r\n\r\nI added emphasis again, but this appears to be talking about software by term \"remote peer\" which I would use describe software/tool, not a person/organizational entity with a role.\r\n\r\nSo on that note,\r\n\r\n> If we translate this to SCITT, Attester = Issuer, Evidence = Statement, Relying Party = Verifier, Verifier = Transparency Service. So I would understand and probably agree to use \"Relying Party\" as a substitute for \"Verifier\" but using it as a replacement for \"Client\" is just more confusing to me\r\n\r\nI am confused how we think Verifier is both \"client\" and \"Transparency Service\" at the same time. Can you elaborate further?",
          "createdAt": "2024-02-27T16:30:06Z",
          "updatedAt": "2024-02-27T16:30:06Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "A secondary point, and I want feedback from the editors, authors, and larger community: whether this spec is similar or aligned to OAuth, is this materially important? Whether it is similar or aligned to RATS, is this important? The latter seems important, but I have not received explicit feedback on this and I have asked a few times (prior to creating this PR, which is still in draft).\r\n\r\nAnswering this question is important to the relevance and need of this PR, more so the content. I am open to continuing on it or closing it accordingly.\r\n\r\nAs an aside, I find \"what is a TS Client\" if we want to keep this wording and what it does and not does is most important. I am not sure that *is* within the scope of this issue, but much needed. I can pose questions to the authors of this draft here or elsewhere, but the implication of this issue as reported is that conceptually what a \"TS Client\" is and is not (at an architecture level, not implementation level) needs clearing up or I would not volunteer on this PR or propose one for another issue (contingent on feedback).",
          "createdAt": "2024-02-27T16:40:05Z",
          "updatedAt": "2024-02-27T16:40:05Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker per discussion, I removed draft state as we want to move this along more quickly.",
          "createdAt": "2024-02-27T20:11:52Z",
          "updatedAt": "2024-02-27T20:11:52Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "As I review recommended changes, it appear the current response to this PR is to add definitions of relying party and keep client, which was not the goal of #120 as I interpret it and not my goal in adapting this PR. If that is what is intended, I would rather close this PR. After that, I would like to revisit adapting 120 with feedback from the original author or create a new, focused issue on this and bring up those points in the PR.\r\n\r\nAt this juncture, the original intent of this PR appears to have become muddled and I have missed the goal of my recommended change. Barring contrary feedback, I will close the PR in the next day or so.",
          "createdAt": "2024-02-27T21:13:16Z",
          "updatedAt": "2024-02-27T21:13:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "In an attempt to clarify the replacement of Verifier with Relying Party, while maintaining Client, I've made a PR to this PR: https://github.com/aj-stein-nist/draft-ietf-scitt-architecture/pull/1\r\n\r\nTo see the combination of AJs #205 with main: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/compare/main...SteveLasker:steve/120?expand=1",
          "createdAt": "2024-02-28T00:48:52Z",
          "updatedAt": "2024-02-28T00:48:52Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Given aj-stein-nist/draft-ietf-scitt-architecture#1 and my interpretation of these changes, I am going to move forward with my recommendation to close this PR. It would appear that the use of term Client is preferred and adding more usage of the term Relying Party as a synonym for client, instead of replacing it, is causing more problems than is solves in my proposed change and @SteveLasker's counter-PR.\r\n\r\nI thought this could help address problems with fresh terminology around \"what does a Client even do?\" in this spec and clearly delineate that from *my confusion* over Verifier roles, but I feel neither PR is helping with that, so considered this closed.",
          "createdAt": "2024-02-28T20:49:11Z",
          "updatedAt": "2024-02-28T20:49:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xZTd_",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks, @aj-stein-nist for trying to clarify Client, Verifier and Relying Party. \r\nReferencing [RATS Terminology](https://www.rfc-editor.org/rfc/rfc9334.html#name-roles), the Relying Party is a Consumer while an Attestor is the Producer of information. All interactions with the Transparency Service require a Client, which almost always requires access rights to write, and may require access rights to read. \r\nI'd suggest keeping Client, and making Verifier and Relying Party synonymous, or replace Verifier with Relying Party. ",
          "createdAt": "2024-02-27T03:42:49Z",
          "updatedAt": "2024-02-27T04:04:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Adding Relying Party is a good addition. However, I wouldn't remove Client as the application/process/entity that initiates the interaction. \r\nA Relying Part is a client of the Transparency service. A relying Party would need credentials to access the Transparency service.\r\nA Relying Party is a consumer and/or verifier.",
              "createdAt": "2024-02-27T03:42:49Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 19,
              "body": "\ud83d\udc4d Where Client should be kept above to differentiate a role in the Client-Server model, this is a great clarification to say Registration Policies must be made available to Relying Parties, which is the whole point of a TS.",
              "createdAt": "2024-02-27T03:44:06Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 28,
              "body": "This is one I'd suggest not changing. A Client authentication is required to write to the TS. While some Transparency Services may support anonymous, others may require Client Authentication to read. \r\nSo, I'd reject this change.",
              "createdAt": "2024-02-27T03:45:41Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 31,
              "body": "This one is even more different. A Relying Party is a consumer of information. Issuer verification is done on registration, which is initiated by a producer. \r\nSo, I'd also reject this change. ",
              "createdAt": "2024-02-27T03:46:48Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 40,
              "body": "reject: The Relying party is synonymous with Verifier, as opposed to the identity used to register a Signed Statement, signed by an Issuer.",
              "createdAt": "2024-02-27T03:48:05Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 47,
              "body": "Not related to this PR, but contextual to the comments. I'd suggest we remove this one and not suggest that signed statements should be put directly on the log. Latest discussions reflect receipts are placed on the append-only log, avoiding all concerns of PII or redaction concerns. The Transparency Service may implement additional storage solutions that carry the signed statement, but not in the append-only log.",
              "createdAt": "2024-02-27T03:50:53Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 49,
              "body": "This one is a bit more nuanced, as a Relying party can get receipts, as do clients that register signed statements. \r\nHowever, the context here is registration, which is done by a publisher, who published signed statements from an issuer. The publisher may also be a relying party on consumption, but in different phases of the workflow, the Client plays different roles, where's different hats.",
              "createdAt": "2024-02-27T03:52:43Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            },
            {
              "originalPosition": 61,
              "body": "\ud83d\udc4e as relying parties are consumers, and don't submit Signed Statements for Registration.",
              "createdAt": "2024-02-27T03:53:33Z",
              "updatedAt": "2024-02-27T04:04:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xd96C",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:32:09Z",
          "updatedAt": "2024-02-27T14:32:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This PR is still in draft, but I intend to argue here, mailing list, and heaven forbid editor meetings if invited that if client is vague, we should use a precise term and build the necessary semantics around it (while avoiding the implementation-specific details not part of the architecture).",
              "createdAt": "2024-02-27T14:32:09Z",
              "updatedAt": "2024-02-27T14:32:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xd-89",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:33:53Z",
          "updatedAt": "2024-02-27T14:33:53Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Part of the original report from a community reviewer and implementer is that \"client\" as-is is vague and not precise. Casual use of client, in addition to more precision about what this Relying Party does, seems very important to clarifying this person's understanding of the architecture. Same goes for me as well. \ud83d\ude04 ",
              "createdAt": "2024-02-27T14:33:53Z",
              "updatedAt": "2024-02-27T14:33:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeCnB",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:38:10Z",
          "updatedAt": "2024-02-27T14:38:10Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I am saying we replace the term client with Relying Party like other standards.\r\n\r\nCasual usage of client has not helped thus -far, and we should be more specific with a precise term. Additionally, the SCITT architecture is not always a traditional client-server architecture (more complex real-world use cases will function as a multi-layered distributed system), so implying that with use of the word client can further confuse unless we plan to address that.",
              "createdAt": "2024-02-27T14:38:10Z",
              "updatedAt": "2024-02-27T14:38:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeC7v",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:38:42Z",
          "updatedAt": "2024-02-27T14:38:42Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Ditto with my comments above: Relying Party will be a specific term to mean client without using the loaded word client.",
              "createdAt": "2024-02-27T14:38:42Z",
              "updatedAt": "2024-02-27T14:38:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeDXD",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:39:21Z",
          "updatedAt": "2024-02-27T14:39:21Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Relying Party will be synonymous with client/Client as we use it today, not Verifier or Issue or other entity.",
              "createdAt": "2024-02-27T14:39:21Z",
              "updatedAt": "2024-02-27T14:39:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeDj1",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:39:41Z",
          "updatedAt": "2024-02-27T14:39:41Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "I'll defer on that one.",
              "createdAt": "2024-02-27T14:39:41Z",
              "updatedAt": "2024-02-27T14:39:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xerOA",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T15:29:49Z",
          "updatedAt": "2024-02-27T15:29:49Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Relying Party is a client, not an entity like an Auditor or other form of consumer.",
              "createdAt": "2024-02-27T15:29:49Z",
              "updatedAt": "2024-02-27T15:29:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgjha",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:49:37Z",
          "updatedAt": "2024-02-27T17:49:37Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n: a relying party depends on or is a Verifier of Signed or Transparent Statements.\r\n```",
              "createdAt": "2024-02-27T17:49:37Z",
              "updatedAt": "2024-02-27T17:49:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgkjj",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:50:54Z",
          "updatedAt": "2024-02-27T17:50:54Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nRegistration Policies MUST be made transparent and available to all Relying Parties of the Transparency Service by registering them as Signed Statements on the Append-only Log, and distributing associated Receipts.\r\nDistribution of Receipts is out of scope for this document.```",
              "createdAt": "2024-02-27T17:50:54Z",
              "updatedAt": "2024-02-27T18:24:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xglVb",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:51:54Z",
          "updatedAt": "2024-02-27T17:51:54Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n1. **Client authentication:** A client application authenticates with the Transparency Service, to Register Signed Statements on behalf of one or more issuers.\r\n```",
              "createdAt": "2024-02-27T17:51:54Z",
              "updatedAt": "2024-02-27T17:51:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgl1f",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:52:33Z",
          "updatedAt": "2024-02-27T17:52:34Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n1. **Issuer Verification:** The Transparency Service MUST perform resolution of the Issuer's identity.\r\n```",
              "createdAt": "2024-02-27T17:52:33Z",
              "updatedAt": "2024-02-27T17:52:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgnE4",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:54:10Z",
          "updatedAt": "2024-02-27T17:54:10Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nClient applications MAY register Signed Statements on behalf of one or more Issuers.\r\nClient applications MAY request Receipts regardless of the identity of the Issuer of the associated Signed Statement.\r\n```",
              "createdAt": "2024-02-27T17:54:10Z",
              "updatedAt": "2024-02-27T18:29:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgn-l",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:55:17Z",
          "updatedAt": "2024-02-27T17:55:17Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nTransparency Services MAY return Receipts to client applications synchronously or asynchronously.\r\n```",
              "createdAt": "2024-02-27T17:55:17Z",
              "updatedAt": "2024-02-27T17:55:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgpcb",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:57:08Z",
          "updatedAt": "2024-02-27T17:57:08Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\r\n### Transparency Service Client Applications\r\n```",
              "createdAt": "2024-02-27T17:57:08Z",
              "updatedAt": "2024-02-27T17:57:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgpwh",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:57:32Z",
          "updatedAt": "2024-02-27T17:57:32Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nAuthentication of client applications is out of scope for this document.\r\n```",
              "createdAt": "2024-02-27T17:57:32Z",
              "updatedAt": "2024-02-27T17:57:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgrXb",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T17:59:37Z",
          "updatedAt": "2024-02-27T17:59:37Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nTransparency Services MUST authenticate both client applications and the Issuer of signed statements in order to ensure that implementation specific authentication and authorization policies are enforced.\r\nThe specification of authentication and authorization policies is out of scope for this document.\r\n```",
              "createdAt": "2024-02-27T17:59:37Z",
              "updatedAt": "2024-02-27T17:59:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xgr2z",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I object to this pull request, unless my suggestions are applied.\r\n\r\nI would like to see the PR moved out of draft, before additional reviews are gathered.",
          "createdAt": "2024-02-27T18:00:14Z",
          "updatedAt": "2024-02-27T18:00:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xg6Ma",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T18:19:16Z",
          "updatedAt": "2024-02-27T18:19:17Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yes, by giving a \ud83d\udc4d, I was agreeing with you in this context Relying Party was a more narrow clarification \ud83d\ude04 ",
              "createdAt": "2024-02-27T18:19:16Z",
              "updatedAt": "2024-02-27T18:19:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xhBIq",
          "commit": {
            "abbreviatedOid": "4377953"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T18:27:11Z",
          "updatedAt": "2024-02-27T18:27:11Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I believe the added definition of Client solves the gap. As the Issuer isn't the identity that interacts with the Transparency Service, we need a way to describe that entity. A Verifier, Relying Party and Auditor all interact with the Transparency Service through a client. The client is what is authorized to write/read to/from the TS.",
              "createdAt": "2024-02-27T18:27:11Z",
              "updatedAt": "2024-02-27T18:27:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xjRFk",
          "commit": {
            "abbreviatedOid": "81c74c0"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T00:30:36Z",
          "updatedAt": "2024-02-28T00:30:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nClient:\r\n```",
              "createdAt": "2024-02-28T00:30:36Z",
              "updatedAt": "2024-02-28T00:30:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xjROn",
          "commit": {
            "abbreviatedOid": "81c74c0"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T00:31:24Z",
          "updatedAt": "2024-02-28T00:31:24Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Personally, I'd like to keep Client as defined and add Relying Party. I'd decline this suggestion, here.",
              "createdAt": "2024-02-28T00:31:24Z",
              "updatedAt": "2024-02-28T00:31:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xjRW0",
          "commit": {
            "abbreviatedOid": "81c74c0"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T00:32:01Z",
          "updatedAt": "2024-02-28T00:32:01Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe term \"Client\" does not imply any particular implementation characteristics (e.g., whether the application executes on a server, a desktop, or other devices).\r\n```",
              "createdAt": "2024-02-28T00:32:01Z",
              "updatedAt": "2024-02-28T00:32:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 207,
      "id": "PR_kwDOIvmHss5n9yDT",
      "title": "Remove unclear usage of Consumers and consumers from draft",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/207",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Closes #206.\r\n\r\nRelated mailing list thread: https://mailarchive.ietf.org/arch/msg/scitt/yTaAi3l-q2TZVLNH4Wp36rR232Q/.",
      "createdAt": "2024-02-26T20:55:44Z",
      "updatedAt": "2024-02-27T15:56:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "18449b2a2656da4bc7b75d66eb590135b40b8cb9",
      "headRepository": "aj-stein-nist/draft-ietf-scitt-architecture",
      "headRefName": "206-remove-consumer",
      "headRefOid": "9e2f0c9a851df758e61ec2eb40176dd7b55aae5e",
      "closedAt": "2024-02-27T15:21:26Z",
      "mergedAt": "2024-02-27T15:21:26Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "4275a4d28cf6852942f1f7b1765bef70588e0121"
      },
      "comments": [
        {
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "body": "these changes make sense to me",
          "createdAt": "2024-02-27T15:56:42Z",
          "updatedAt": "2024-02-27T15:56:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xXpLE",
          "commit": {
            "abbreviatedOid": "49e4d67"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T21:12:40Z",
          "updatedAt": "2024-02-26T21:12:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I see what you're trying to clean up, however adding Issuers here feels out of place.\r\nI think this sentence is trying to say there are publishers and consumers. \r\nPublishers surface as an Issuer signed the statement\r\nA consumer surfaces as a verifier can retrieve information from the ledger, or evaluate the receipt. \r\nAdding issuers and verifiers in this sentence feels a bit confusing.\r\n\r\n```suggestion\r\nSCITT achieves this by having producers publish information in a Transparency Service, where Verifiers can check the information.\r\n```",
              "createdAt": "2024-02-26T21:12:40Z",
              "updatedAt": "2024-02-26T21:12:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xYGJa",
          "commit": {
            "abbreviatedOid": "49e4d67"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-26T22:08:55Z",
          "updatedAt": "2024-02-26T22:08:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "So my previous version of this comment, as flippant as it was, did not make sense. I am ok with taking this change and not sure where I was going with that previous comment. \ud83d\ude05 ",
              "createdAt": "2024-02-26T22:08:55Z",
              "updatedAt": "2024-02-26T22:13:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xZESD",
          "commit": {
            "abbreviatedOid": "f762435"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T02:24:04Z",
          "updatedAt": "2024-02-27T02:28:15Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This sentence is a throwaway, better to delete it",
              "createdAt": "2024-02-27T02:24:04Z",
              "updatedAt": "2024-02-27T02:28:15Z"
            },
            {
              "originalPosition": 15,
              "body": "I would rephrase this.\n\nDownstream artifacts, are built from upstream artifacts.\n\nTraceability and quality control in supply chains becomes more difficult, as the number of components and contributors to an artifact increases.\n\n",
              "createdAt": "2024-02-27T02:27:31Z",
              "updatedAt": "2024-02-27T02:28:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xZG5f",
          "commit": {
            "abbreviatedOid": "f762435"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T02:34:40Z",
          "updatedAt": "2024-02-27T02:34:40Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I am fine with that. I will leave out for feedback with a suggestion, and if no one else votes up your comment or replies with yay/nay commentary, I shall remove.\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-02-27T02:34:40Z",
              "updatedAt": "2024-02-27T02:36:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xZHZg",
          "commit": {
            "abbreviatedOid": "f762435"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T02:37:23Z",
          "updatedAt": "2024-02-27T02:37:23Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I was trying to stay in scope, I will admit it is awkward. I will rephrase given your feedback.",
              "createdAt": "2024-02-27T02:37:23Z",
              "updatedAt": "2024-02-27T02:37:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xZJBn",
          "commit": {
            "abbreviatedOid": "f762435"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T02:46:06Z",
          "updatedAt": "2024-02-27T02:46:06Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I made another attempt in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/207/commits/11b19c34e128846112b37aac52e0d5d7b06b8514. Feel free to re-open if you feel it is not resolved.",
              "createdAt": "2024-02-27T02:46:06Z",
              "updatedAt": "2024-02-27T02:46:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xZYSM",
          "commit": {
            "abbreviatedOid": "11b19c3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with some comments to accept/reject",
          "createdAt": "2024-02-27T04:09:56Z",
          "updatedAt": "2024-02-27T04:11:32Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Always difficult to have abstract (\"these\", \"they\", references, even in the same paragraph \r\nAssuming you're going to lean into Relying Parties as the synonym to Consumer and Verifier, I'd suggest:\r\n```suggestion\r\nSCITT provides a way for Relying Parties to obtain this information in a way that is \"transparent\", that is, parties cannot lie about the information that they publish without it being detected.\r\n```",
              "createdAt": "2024-02-27T04:09:56Z",
              "updatedAt": "2024-02-27T04:11:32Z"
            },
            {
              "originalPosition": 29,
              "body": "I could go either way: \"Verifiers\", or \"Relying Parties\". Choose to merge/keep what you'd like in this PR.\r\n```suggestion\r\nSCITT achieves this by having producers publish information in a Transparency Service, where Relying Parties can check the information.\r\n```",
              "createdAt": "2024-02-27T04:10:50Z",
              "updatedAt": "2024-02-27T04:11:32Z"
            },
            {
              "originalPosition": 38,
              "body": "nice clarification... \ud83d\udc4d ",
              "createdAt": "2024-02-27T04:11:12Z",
              "updatedAt": "2024-02-27T04:11:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xd7VL",
          "commit": {
            "abbreviatedOid": "11b19c3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:28:11Z",
          "updatedAt": "2024-02-27T14:28:11Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "In this context, I specifically did not mean Relying Parties, I was mirroring preexisting usage of the term \"parties\" to be different actors/stakeholders in a software supply chain. This usage was elsewhere in the introduction when discussing a high-level, so I thought this would be ok.",
              "createdAt": "2024-02-27T14:28:11Z",
              "updatedAt": "2024-02-27T14:28:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xd8NI",
          "commit": {
            "abbreviatedOid": "11b19c3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:29:30Z",
          "updatedAt": "2024-02-27T14:29:30Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "I thought `Verifiers verify and validate Transparent Statements, verifying ...\" would be unpleasantly redundant but the other usage of \"consume\" didn't describe what they are doing with it, so I hope others enjoy that tweak as well.",
              "createdAt": "2024-02-27T14:29:30Z",
              "updatedAt": "2024-02-27T14:29:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xd82I",
          "commit": {
            "abbreviatedOid": "11b19c3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T14:30:29Z",
          "updatedAt": "2024-02-27T14:30:30Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Ditto with above, I did not mean to change Verifiers or other entity to be Client or Relying Party (that is really another PR), but to say parties in line with other usages of it like actor/stakeholder that was previously existing in other parts of the introduction.",
              "createdAt": "2024-02-27T14:30:30Z",
              "updatedAt": "2024-02-27T14:30:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeeqW",
          "commit": {
            "abbreviatedOid": "11b19c3"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T15:14:20Z",
          "updatedAt": "2024-02-27T15:14:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xek4m",
          "commit": {
            "abbreviatedOid": "9e2f0c9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T15:21:07Z",
          "updatedAt": "2024-02-27T15:21:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 208,
      "id": "PR_kwDOIvmHss5n9zcm",
      "title": "Update Verification Section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/208",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #190 ",
      "createdAt": "2024-02-26T20:59:28Z",
      "updatedAt": "2024-02-28T23:28:25Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e1a921c94a227abba3f216e53b82f490e21cf013",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/issue-190",
      "headRefOid": "2e56211e63777b26af298d2dde0c9471bb673bbc",
      "closedAt": "2024-02-27T15:31:12Z",
      "mergedAt": "2024-02-27T15:31:12Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "75f711737ad2eec19571605d87c6eb367a688b2e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xZB0f",
          "commit": {
            "abbreviatedOid": "27d682a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T02:14:22Z",
          "updatedAt": "2024-02-27T02:14:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xZZcw",
          "commit": {
            "abbreviatedOid": "27d682a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T04:16:29Z",
          "updatedAt": "2024-02-27T04:16:29Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "The above two lines are simply separated sentences for clarity, no meaningful change.\r\nThe previous line [678](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/208/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1L678) was removed as it's been edited to a lack of clarity, and redundant with line [225](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/208/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1L225)\r\n\r\n> Receipt:\r\n: a Receipt is a cryptographic proof that a Signed Statement is recorded in the Append-only Log.\r\nReceipts are based on Signed Inclusion Proofs as described in COSE Signed Merkle Tree Proofs {{-COMETRE}}.",
              "createdAt": "2024-02-27T04:16:29Z",
              "updatedAt": "2024-02-27T04:18:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xemrQ",
          "commit": {
            "abbreviatedOid": "27d682a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T15:23:42Z",
          "updatedAt": "2024-02-27T15:23:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xen3a",
          "commit": {
            "abbreviatedOid": "27d682a"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T15:25:40Z",
          "updatedAt": "2024-02-27T15:25:40Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I agree, but would prefer \"For example, an API may indicate if ...\" to avoid a nominal sentence. ",
              "createdAt": "2024-02-27T15:25:40Z",
              "updatedAt": "2024-02-27T15:25:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeou5",
          "commit": {
            "abbreviatedOid": "27d682a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T15:27:03Z",
          "updatedAt": "2024-02-27T15:27:04Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nAPIs exposing verification logic for Transparent Statements may provide more details than a single boolean result.\r\n```",
              "createdAt": "2024-02-27T15:27:04Z",
              "updatedAt": "2024-02-27T15:27:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xepw3",
          "commit": {
            "abbreviatedOid": "27d682a"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T15:28:28Z",
          "updatedAt": "2024-02-27T15:28:28Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nFor example, an API may indicate if the signature on the Receipt or Signed Statement is valid, if claims related to the validity period are valid, or if the inclusion proof in the Receipt is valid.\r\n```",
              "createdAt": "2024-02-27T15:28:28Z",
              "updatedAt": "2024-02-27T15:28:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xeqB9",
          "commit": {
            "abbreviatedOid": "4a7bc93"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-27T15:28:41Z",
          "updatedAt": "2024-02-27T15:28:41Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nFor example, an API may indicate the signature on the Receipt or Signed Statement is valid if claims related to the validity period are valid, or if the inclusion proof in the Receipt is valid.\r\n```",
              "createdAt": "2024-02-27T15:28:41Z",
              "updatedAt": "2024-02-27T15:28:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xerZG",
          "commit": {
            "abbreviatedOid": "2e56211"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T15:29:59Z",
          "updatedAt": "2024-02-27T15:29:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xesj1",
          "commit": {
            "abbreviatedOid": "2e56211"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-27T15:30:52Z",
          "updatedAt": "2024-02-27T15:30:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 209,
      "id": "PR_kwDOIvmHss5n91QZ",
      "title": "Update COMETRE reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/209",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Was pointing to the draft",
      "createdAt": "2024-02-26T21:02:28Z",
      "updatedAt": "2024-02-26T21:03:54Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e1a921c94a227abba3f216e53b82f490e21cf013",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/fix-cometre-ref",
      "headRefOid": "11188847b272da82ce7dc4cd7953f1e2f6bc5e8a",
      "closedAt": "2024-02-26T21:03:53Z",
      "mergedAt": "2024-02-26T21:03:53Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "18449b2a2656da4bc7b75d66eb590135b40b8cb9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 210,
      "id": "PR_kwDOIvmHss5oNbvg",
      "title": "Replace Verifier with Relying Party, keeping Client",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/210",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is an alternate proposal to #205 to close #120\r\n\r\nThis PR:\r\n- Keeps **Client as** : _an application making protected Transparency Service resource requests on behalf of the resource owner and with its authorization._\r\n- Replaces **Verifier** with **Relying Party**:  _a relying party depends on Signed or Transparent Statements to verify an Artifact._, ",
      "createdAt": "2024-02-28T19:17:10Z",
      "updatedAt": "2024-02-29T22:53:59Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "75f711737ad2eec19571605d87c6eb367a688b2e",
      "headRepository": "SteveLasker/draft-ietf-scitt-architecture",
      "headRefName": "steve/120",
      "headRefOid": "c713deb6ee918b6556aaec66ac78b2c36829aac5",
      "closedAt": "2024-02-29T22:53:59Z",
      "mergedAt": "2024-02-29T22:53:59Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "eca62297d601a62901911f0ed2f86dc4aa20a6d7"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @aj-stein-nist \r\nDefinitely looking for more input, and I\u2019m also ok to close the PRs and issue and use the existing terminology. \r\nMy main concern is a Relying Party is a consumer of information. They rely on the receipts and signed statements from the Transparency Service. Which makes it a good candidate to replace Verifier\r\nIf we replace Client with Relying Party, this confuses what we call the entity that registers signed statements. They are not the issuer, as the issuer signs statements, but is not the entity with access rights to the Transparency Service. Both the producer and consumer need access rights. That was what we had as client. ",
          "createdAt": "2024-02-28T22:15:25Z",
          "updatedAt": "2024-02-28T22:15:25Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "There is still additional work that needs to be done.\r\n\r\nClient applications submit signed statements, and obtain receipts, so they can include transparent statements in downstream products.\r\n\r\nA consumer of a downstream product is a relying party, they either verify the transparent statements themselves, or they delegate the verification role to the \"verifier\" role.\r\n\r\n",
          "createdAt": "2024-02-28T23:20:00Z",
          "updatedAt": "2024-02-28T23:20:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xsLQy",
          "commit": {
            "abbreviatedOid": "9fa8c19"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I wrote some of my thoughts on https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/205#issuecomment-1969893968 and aj-stein-nist/ietf-wg-scitt#1, but for me Client was going to replace Relying Party (Client==RP), so I am not sure if making Verifier==RP is what my intent was when I revived the issue, so I will leave to others to decide.",
          "createdAt": "2024-02-28T20:52:52Z",
          "updatedAt": "2024-02-28T20:52:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xtBsu",
          "commit": {
            "abbreviatedOid": "9fa8c19"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T23:14:14Z",
          "updatedAt": "2024-02-28T23:14:14Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nSCITT provides a way for Relying Parties to obtain this information in a way that is \"transparent\", that is, parties cannot lie about the information that they publish without it being detected.\r\n```",
              "createdAt": "2024-02-28T23:14:14Z",
              "updatedAt": "2024-02-28T23:14:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xtB_b",
          "commit": {
            "abbreviatedOid": "db71913"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T23:15:01Z",
          "updatedAt": "2024-02-28T23:15:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nSCITT achieves this by having producers publish information in a Transparency Service, where Relying Parties can check the information.\r\n```",
              "createdAt": "2024-02-28T23:15:01Z",
              "updatedAt": "2024-02-28T23:15:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5xtCiA",
          "commit": {
            "abbreviatedOid": "c713deb"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T23:17:22Z",
          "updatedAt": "2024-02-28T23:17:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xzmrF",
          "commit": {
            "abbreviatedOid": "c713deb"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T16:33:51Z",
          "updatedAt": "2024-02-29T16:33:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 211,
      "id": "PR_kwDOIvmHss5oPbSs",
      "title": "Update CODEOWNERS ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/211",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Update CODEOWNERS to reflect the authors, editor, and active contributors for PR reviews",
      "createdAt": "2024-02-29T03:04:29Z",
      "updatedAt": "2024-03-06T16:59:45Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "75f711737ad2eec19571605d87c6eb367a688b2e",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/codeowners",
      "headRefOid": "984d14ac5a00443b8a07f45886192a8a05172f93",
      "closedAt": "2024-02-29T22:53:24Z",
      "mergedAt": "2024-02-29T22:53:24Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "74e2c3a7a924e32036b7a3be9375db8c86ac6be0"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker : I think, this file is autogenerated ?\r\n\r\nCould you please figure out correct way to express contribution ?",
          "createdAt": "2024-02-29T15:12:07Z",
          "updatedAt": "2024-02-29T15:12:07Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> @SteveLasker : I think, this file is autogenerated ?\r\n> \r\n> Could you please figure out correct way to express contribution ?\r\n\r\nI have written a few of them and built automation around them for other non-IETF projects. tl;dr they are not auto-generated.\r\n\r\nhttps://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners\r\n\r\nI don't understand the question about contribution or I would try to answer it, sorry.",
          "createdAt": "2024-02-29T15:15:17Z",
          "updatedAt": "2024-02-29T15:15:17Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "- If this is a tooling question:\r\n\r\n> I think, this file is autogenerated ?\r\n\r\nThe default template does generate on first instance, and has a make command:\r\n```\r\n# Automatically generated CODEOWNERS\r\n# Regenerate with `make update-codeowners`\r\n```\r\n\r\nHowever, it does **not** auto-generate on each `make`.\r\nIn the last Architecture Editors meeting, we agreed to be more transparent about who we seek feedback using the GitHub shields for PR Reviews. \r\n\r\n\r\n- If you approve of A.J. being a PR reviewer please LGTM or reject with reasons. \r\n\r\n\r\n",
          "createdAt": "2024-02-29T15:32:47Z",
          "updatedAt": "2024-02-29T15:32:47Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah, I see. If you are going to do that [the relevant Makefile](https://github.com/martinthomson/i-d-template/blob/80f7f2ec576473b034965880f62eb22ce4d1bf39/setup.mk#L52) calls a Python script [that reads the draft itself after converting it xml2rfc during build](https://github.com/martinthomson/i-d-template/blob/80f7f2ec576473b034965880f62eb22ce4d1bf39/setup-codeowners.py) so adding anyone who is not author is moot. I now get what Yogesh was saying. \ud83d\ude06 (So much for me being \"so skilled in automating these CODEOWNER files\" but not reading the i-d-template repo.)\r\n\r\nI defer to you all if that is worth it, but it seems it will only look at authors, not contributors, so manually adding me to the contributor section in the draft will not work either, so up to you all if you trust me (and maybe Orie if he is already a contributor), but as built the i-d-template repo will not do that for you.",
          "createdAt": "2024-02-29T15:53:31Z",
          "updatedAt": "2024-02-29T15:54:00Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Ah, I see. ... so adding anyone who is not author is moot. \r\n\r\nAs far as I can tell, that code only gets called if you explicitly call `make update-codeowners`, which would then need to be a PR which we'd reject.\r\n\r\nThis allows us to reflect additional GitHub reviewers and won't get clobbered.\r\n",
          "createdAt": "2024-02-29T15:57:32Z",
          "updatedAt": "2024-02-29T15:57:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5xt2_s",
          "commit": {
            "abbreviatedOid": "984d14a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I am honored but I think we need existing reviewers to endorse me to make official. \ud83d\ude01",
          "createdAt": "2024-02-29T03:06:59Z",
          "updatedAt": "2024-02-29T03:06:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xzWkz",
          "commit": {
            "abbreviatedOid": "984d14a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T16:05:34Z",
          "updatedAt": "2024-02-29T16:05:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xznGA",
          "commit": {
            "abbreviatedOid": "984d14a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T16:34:36Z",
          "updatedAt": "2024-02-29T16:34:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5xzvZK",
          "commit": {
            "abbreviatedOid": "984d14a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-02-29T16:48:11Z",
          "updatedAt": "2024-02-29T16:48:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 212,
      "id": "PR_kwDOIvmHss5oVNvv",
      "title": "Restoring Append-only security requirements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/212",
      "state": "MERGED",
      "author": "fournet",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See issue  #199 \r\n\r\nThe requirements in ### Append-only Log are restored (and much simplified) from earlier drafts, notably what used to be in ### Append-only Log Security Requirements.\r\n\r\nThe other changes are minor changes for uniformity about the Append-only Log. \r\n ",
      "createdAt": "2024-02-29T19:24:55Z",
      "updatedAt": "2024-03-06T16:59:49Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "eca62297d601a62901911f0ed2f86dc4aa20a6d7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "199-restore-log-consistency-append-only-requirements-in-architecture-413",
      "headRefOid": "7c2470f970071b24b168018221759242558ef568",
      "closedAt": "2024-03-01T20:43:53Z",
      "mergedAt": "2024-03-01T20:43:53Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "2741750932208b315ae580b73b43e37f6a6cf4b9"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Not sure why the CI is failing, but I don't think that should block merging PRs, anyone can fix this after merging by running:\r\n\r\n```\r\nmake fix-lint\r\n```",
          "createdAt": "2024-02-29T20:30:08Z",
          "updatedAt": "2024-02-29T20:30:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5x1T6s",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:22:07Z",
          "updatedAt": "2024-02-29T20:22:08Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "I wonder if the Log is allowed to accumulate anything OTHER than \"Signed Statements\"... for example certificates, or JWTs.",
              "createdAt": "2024-02-29T20:22:07Z",
              "updatedAt": "2024-02-29T20:22:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1V_e",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:27:47Z",
          "updatedAt": "2024-02-29T20:27:48Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I can imagine readers might get hung up on \"universally-verifiable proof of registration\".\r\n\r\nI wonder if we should define SCITT receipts as \"proof of registration\" that build on COSE receipts, which are signed inclusion proofs.\r\n\r\n",
              "createdAt": "2024-02-29T20:27:47Z",
              "updatedAt": "2024-02-29T20:27:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1Www",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:29:12Z",
          "updatedAt": "2024-02-29T20:29:13Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-29T20:29:12Z",
              "updatedAt": "2024-02-29T20:29:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1WzQ",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T20:29:18Z",
          "updatedAt": "2024-02-29T20:29:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5x1o-2",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:15:22Z",
          "updatedAt": "2024-02-29T21:15:22Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "I preferred the previous version as it incorporates generating receipts. This also changes registered to accumulates, which only adds more concepts.",
              "createdAt": "2024-02-29T21:15:22Z",
              "updatedAt": "2024-02-29T21:15:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1w-C",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:38:18Z",
          "updatedAt": "2024-02-29T21:38:18Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Allowing the TS to use the log for audit information, in particular intermediate certificates or JWTs, is a pretty legitimate use case, so I would say yes",
              "createdAt": "2024-02-29T21:38:18Z",
              "updatedAt": "2024-02-29T21:38:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1xi4",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:40:03Z",
          "updatedAt": "2024-02-29T21:40:03Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Would you prefer \"offline verifiable\"? That captures the core requirement (you don't need any additional evidence to verify the proof) and I think more people would understand it.",
              "createdAt": "2024-02-29T21:40:03Z",
              "updatedAt": "2024-02-29T21:40:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x10Dk",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T21:47:41Z",
          "updatedAt": "2024-02-29T21:48:58Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nOptionally, the Ledger may also record other collateral information for Auditors, such as governance information, records of management operations or security incidents, intermediate certificates used for Issuer authentication, etc.\r\n\r\n```",
              "createdAt": "2024-02-29T21:47:41Z",
              "updatedAt": "2024-02-29T21:48:58Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n: once included in the verifiable data structure, a Signed Statement cannot be modified, deleted, or reordered; hence its Receipt provides an offline verifiable proof of registration. \r\n```",
              "createdAt": "2024-02-29T21:48:31Z",
              "updatedAt": "2024-02-29T21:48:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1-HM",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:16:52Z",
          "updatedAt": "2024-02-29T22:16:56Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Isn't this the only one we have defined? Why not put them in a table and make it small changes to add if there is presumably more than one? It seems we have COMETRE and the CCF profile for COMETER, so I am not sure why we would want to emphasize this when no public draft or IETF spec drafts an alternative one.\r\n\r\nAm I missing something?",
              "createdAt": "2024-02-29T22:16:52Z",
              "updatedAt": "2024-02-29T22:16:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2BYk",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:27:40Z",
          "updatedAt": "2024-02-29T22:27:40Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "So we are saying, @ad-l we MUST add alternatives data to Signed Statements? SHOULD?\r\n\r\nThis has been discussed a few times in calls and on the mailing list, why MUST or SHOULD it be in the log and not something computed and returned by the API? I do not oppose that change, but why open the door?\r\n\r\nAnd you want the certs and JWTs themselves in the log, @ad-l? I can understand signed or transparent statements if properly sealed, but this reads as using the log for generic storage. Beyond my personal opinion, I thought many in the group oppose this notion generally.",
              "createdAt": "2024-02-29T22:27:40Z",
              "updatedAt": "2024-02-29T22:27:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2Bq4",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:28:42Z",
          "updatedAt": "2024-02-29T22:28:42Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "If it is just a different kind of payload, why must we be explicit with this?",
              "createdAt": "2024-02-29T22:28:42Z",
              "updatedAt": "2024-02-29T22:28:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2Ep8",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:38:33Z",
          "updatedAt": "2024-02-29T22:40:41Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I like 'offline verifiable' a lot more than 'universally'",
              "createdAt": "2024-02-29T22:38:33Z",
              "updatedAt": "2024-02-29T22:40:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2RgM",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:33:10Z",
          "updatedAt": "2024-02-29T23:33:11Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Various implementations will support many different scenarios. I'd suggest change to 375/376 should be reverted, and not change the additional line 378\r\n",
              "createdAt": "2024-02-29T23:33:10Z",
              "updatedAt": "2024-02-29T23:39:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2SNc",
          "commit": {
            "abbreviatedOid": "9c5023b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:36:46Z",
          "updatedAt": "2024-02-29T23:36:47Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Proposal to revert this change, as \"accumulates\", as we've moved away from the Transparency Service recording Signed Statement contgents, as that may introduce PII or other redaction scenarios that would be impossible. Rather the Transparency Service registers signed statements, producing receipts.\r\n```suggestion\r\nThe Append-only Log is the verifiable data structure that records Signed Statements and supports the production of Receipts.\r\n```",
              "createdAt": "2024-02-29T23:36:47Z",
              "updatedAt": "2024-02-29T23:36:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2SiC",
          "commit": {
            "abbreviatedOid": "9c5023b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:38:19Z",
          "updatedAt": "2024-02-29T23:38:20Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\n: there is no fork in the Append-only Log.\r\nEveryone with access to its content sees the same collection of Signed Statements and can check that it is consistent with any Receipts they have verified.\r\n```",
              "createdAt": "2024-02-29T23:38:20Z",
              "updatedAt": "2024-02-29T23:38:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2S-Q",
          "commit": {
            "abbreviatedOid": "172aee2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:40:34Z",
          "updatedAt": "2024-02-29T23:40:34Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "```suggestion\r\n: once included in the verifiable data structure, a Signed Statement cannot be modified, deleted, or reordered; hence its Receipt provides an offline verifiable proof of registration.\r\n```",
              "createdAt": "2024-02-29T23:40:34Z",
              "updatedAt": "2024-02-29T23:40:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2TH8",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:41:15Z",
          "updatedAt": "2024-02-29T23:41:15Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "> I like 'offline verifiable' a lot more than 'universally'\r\n\r\nSuggested change added",
              "createdAt": "2024-02-29T23:41:15Z",
              "updatedAt": "2024-02-29T23:41:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5rP8",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T11:44:45Z",
          "updatedAt": "2024-03-01T11:44:46Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "We need to distinguish between the log and the verifiable data structure if we are doing this. A merkle based append only log is just a bunch of hashes. The signed statements are committed to it, not \"in it\". I strongly prefer the original wording.",
              "createdAt": "2024-03-01T11:44:45Z",
              "updatedAt": "2024-03-01T11:44:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5r7B",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T11:46:37Z",
          "updatedAt": "2024-03-01T11:46:37Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "This just isn't true tho is it ? If a service has a take down request or whatever, it is legaly obliged to destroy the statement. This is usually accomplished by deleting the pre-image or \"forgeting\" some encrypting key",
              "createdAt": "2024-03-01T11:46:37Z",
              "updatedAt": "2024-03-01T11:46:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5uh7",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T11:53:55Z",
          "updatedAt": "2024-03-01T11:53:55Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nonce included in the verifiable data structure, a Signed Statement cannot be modified, deleted, or reordered without invalidating the cryptographic proof backing its Receipt; hence its Receipt provides an offline verifiable proof of tamper evident registration.\r\n```",
              "createdAt": "2024-03-01T11:53:55Z",
              "updatedAt": "2024-03-01T11:53:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5vAC",
          "commit": {
            "abbreviatedOid": "372e7e8"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T11:55:11Z",
          "updatedAt": "2024-03-01T11:55:12Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nA receipt consists of an Transparency Service-specific inclusion proof for the Signed Statement, a signature by the Transparency Service of the state of the Append-only Log after the inclusion, and additional metadata (contained in the signature's protected headers) to assist in auditing.\r\n```",
              "createdAt": "2024-03-01T11:55:11Z",
              "updatedAt": "2024-03-01T11:55:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5vln",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T11:56:45Z",
          "updatedAt": "2024-03-01T11:56:45Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I also prefer offline verifiable though",
              "createdAt": "2024-03-01T11:56:45Z",
              "updatedAt": "2024-03-01T11:56:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5wmQ",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T11:59:33Z",
          "updatedAt": "2024-03-01T11:59:33Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nReceipts are based on Signed Inclusion Proofs, such as those as described in COSE Signed Merkle Tree Proofs {{-COMETRE}};\r\n```",
              "createdAt": "2024-03-01T11:59:33Z",
              "updatedAt": "2024-03-01T11:59:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5y_e",
          "commit": {
            "abbreviatedOid": "8093769"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:05:51Z",
          "updatedAt": "2024-03-01T12:05:52Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nThe security properties of the Append-only Log are determined by the choice of the verifiable data structure used by the Transparency Service to implement the Log.\r\n```",
              "createdAt": "2024-03-01T12:05:52Z",
              "updatedAt": "2024-03-01T12:05:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x529c",
          "commit": {
            "abbreviatedOid": "8093769"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:13:08Z",
          "updatedAt": "2024-03-01T12:13:08Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n: the Append-only Log includes sufficient information to enable authorised actors with access to its content to check that each included Signed Statement has been correctly registered.\r\n```",
              "createdAt": "2024-03-01T12:13:08Z",
              "updatedAt": "2024-03-01T12:13:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x55cD",
          "commit": {
            "abbreviatedOid": "8093769"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:19:49Z",
          "updatedAt": "2024-03-01T12:19:50Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I agree with @SteveLasker assessment and I would prefer the earlier `old` version of the text.\r\n\r\nIn fact I would re-phrase it to:\r\n`An Append-only Log is the verifiable data structure that registers Signed Statements and produces Receipts.` \r\n",
              "createdAt": "2024-03-01T12:19:50Z",
              "updatedAt": "2024-03-01T12:19:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x7hn_",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T15:32:43Z",
          "updatedAt": "2024-03-01T15:32:43Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Resolving as I've merged in the _offline verifiable_ change. Please re-open if folks don't agree.",
              "createdAt": "2024-03-01T15:32:43Z",
              "updatedAt": "2024-03-01T15:32:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x7qCJ",
          "commit": {
            "abbreviatedOid": "175e497"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T15:50:22Z",
          "updatedAt": "2024-03-01T15:50:23Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "This gives me something extra to think about, sounds like a generaly useful thing, but doesn't seem necessary architecture ?",
              "createdAt": "2024-03-01T15:50:22Z",
              "updatedAt": "2024-03-01T15:50:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x7rIi",
          "commit": {
            "abbreviatedOid": "11fa485"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T15:52:38Z",
          "updatedAt": "2024-03-01T15:52:38Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nA Receipt consists of an Transparency Service-specific inclusion proof for the Signed Statement, a signature by the Transparency Service of the state of the Append-only Log after the inclusion, and additional metadata (contained in the signature's protected headers) to assist in auditing.\r\n```",
              "createdAt": "2024-03-01T15:52:38Z",
              "updatedAt": "2024-03-01T15:52:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8aN8",
          "commit": {
            "abbreviatedOid": "34575ea"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T17:20:03Z",
          "updatedAt": "2024-03-01T17:20:03Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Resolving as not-needed, and implementation specific details.\r\n@ad-l, please re-open with comments and changes if you feel we need to keep it",
              "createdAt": "2024-03-01T17:20:03Z",
              "updatedAt": "2024-03-01T17:20:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8bBS",
          "commit": {
            "abbreviatedOid": "1fad15a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T17:22:05Z",
          "updatedAt": "2024-03-01T17:22:06Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Marking as resolved: Please see the files view for the most recent changes. ",
              "createdAt": "2024-03-01T17:22:05Z",
              "updatedAt": "2024-03-01T17:22:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8b3N",
          "commit": {
            "abbreviatedOid": "f9f36ad"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T17:24:20Z",
          "updatedAt": "2024-03-01T17:24:20Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "While COMETRE is currently the only one defined, the spec allows for more. Not sure the spec needs to list all the current and potential future implementations. \r\nTo get this merged, I'm deferring this to a potential new PR, if felt needed.",
              "createdAt": "2024-03-01T17:24:20Z",
              "updatedAt": "2024-03-01T17:24:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8qtJ",
          "commit": {
            "abbreviatedOid": "a956f71"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-03-01T17:57:13Z",
          "updatedAt": "2024-03-01T17:57:18Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This informative RFC is about trust anchor management and that is material to the changes being mad, did you or someone reviewing intend to remove it?\r\n\r\nSorry suggestions does not support adding back deleted lines anymore or I would just recommend it.",
              "createdAt": "2024-03-01T17:57:13Z",
              "updatedAt": "2024-03-01T17:57:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8ssE",
          "commit": {
            "abbreviatedOid": "a956f71"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T18:01:05Z",
          "updatedAt": "2024-03-01T18:01:05Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Trust Anchor Management is a vital part of SCITT story. I suggest we should retain it, perhaps needs to be referred from the section that talks about setting the Transparency Service with necessary Trust Anchors!",
              "createdAt": "2024-03-01T18:01:05Z",
              "updatedAt": "2024-03-01T18:01:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x81QD",
          "commit": {
            "abbreviatedOid": "a956f71"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T18:21:03Z",
          "updatedAt": "2024-03-01T18:21:03Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Good catch. I removed the reference as it was no longer in the doc, and called out as a make error:\r\n\r\nThe reference to RFC6024 was removed in [PR 201](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/201/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1L394)",
              "createdAt": "2024-03-01T18:21:03Z",
              "updatedAt": "2024-03-01T18:21:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9eHO",
          "commit": {
            "abbreviatedOid": "a956f71"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-01T20:17:38Z",
          "updatedAt": "2024-03-01T20:17:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5x9fH6",
          "commit": {
            "abbreviatedOid": "a956f71"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-01T20:19:31Z",
          "updatedAt": "2024-03-01T20:19:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5x9l4o",
          "commit": {
            "abbreviatedOid": "a956f71"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Tiny grammar nit",
          "createdAt": "2024-03-01T20:38:29Z",
          "updatedAt": "2024-03-01T20:40:21Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nA Receipt consists of a Transparency Service-specific inclusion proof for the Signed Statement, a signature by the Transparency Service of the state of the Append-only Log after the inclusion, and additional metadata (contained in the signature's protected headers) to assist in auditing.\r\n```",
              "createdAt": "2024-03-01T20:38:29Z",
              "updatedAt": "2024-03-01T20:40:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAjC4",
          "commit": {
            "abbreviatedOid": "7c2470f"
          },
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "These changes look good",
          "createdAt": "2024-03-02T21:46:30Z",
          "updatedAt": "2024-03-02T21:46:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 213,
      "id": "PR_kwDOIvmHss5oVYcQ",
      "title": "Registration auditability requirements (#200)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213",
      "state": "MERGED",
      "author": "ad-l",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "My take on trying to make registration auditable. This is still very open-ended in terms of implementation choice",
      "createdAt": "2024-02-29T19:57:16Z",
      "updatedAt": "2024-03-04T15:40:05Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "2741750932208b315ae580b73b43e37f6a6cf4b9",
      "headRepository": "ad-l/draft-ietf-scitt-architecture",
      "headRefName": "200_auditable_registration",
      "headRefOid": "80c4ff9cc82a6a35f9dd9abb3d57d5f744c0687b",
      "closedAt": "2024-03-04T15:40:05Z",
      "mergedAt": "2024-03-04T15:40:04Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "b0fdcdc766835d5cb7fa1984dccd9cd66ded782a"
      },
      "comments": [
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "> This item: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213/files#r1508145284\r\n> I would approve the PR if `x5chain` support was a SHOULD, but I do not believe both `x5t` and `x5chain` should be MTI.\r\n\r\nI have made `x5chain` optional, but still supported\r\n",
          "createdAt": "2024-02-29T21:33:01Z",
          "updatedAt": "2024-02-29T21:36:16Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Steve,\r\n\r\n \r\n\r\nIs it too late to add another service API to SCRAPI:\r\n\r\n \r\n\r\n3.2.5.  Retrieve Registration Policy \r\n\r\n \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Steve Lasker ***@***.***> \r\nSent: Saturday, March 2, 2024 11:57 AM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Comment ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Registration auditability requirements (#200) (PR #213)\r\n\r\n \r\n\r\n@SteveLasker commented on this pull request.\r\n\r\n  _____  \r\n\r\nIn draft-ietf-scitt-architecture.md <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#discussion_r1510005167> :\r\n\r\n>  \r\n-- A built-in default Registration Policy\r\n-- Acceptance of a first Signed Statement whose payload is a valid Registration Policy, without performing registration checks\r\n-- An out-of-band authenticated management interface\r\n+- A built-in default Registration Policy and initial list of trust anchors;\r\n\r\nlooking for feedback with a +1 or -1 to merge or discard\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#discussion_r1510005167> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NBA3KIBZBUTMUQSES3YWIAHJAVCNFSM6AAAAABEAR4LZOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTSMJSGY4TEMRRGU> .\r\nYou are receiving this because you commented.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-03-02T17:44:05Z",
          "updatedAt": "2024-03-02T17:44:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it too late to add another service API to SCRAPI:\r\n\r\nHi, @rjb4standards,\r\nOnce the Architecture is settled, we plan to put more focus on SCRAPI, and yes, we can certainly add/edit/remove.",
          "createdAt": "2024-03-03T17:53:36Z",
          "updatedAt": "2024-03-03T17:53:36Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards this PR contains guidance for SCRAPI enabling registration policies to be retrieved:\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/1/files#diff-44525cf8ba2e274f5663e0df19272962aed2b9a06e0fefee5b33bfd7ef23cdf7R167\r\n\r\nIt also adds optional endpoints for retrieving signature and payloads, not just receipts.",
          "createdAt": "2024-03-03T18:01:29Z",
          "updatedAt": "2024-03-03T18:01:29Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @SteveLasker \r\n\r\n@OR13 I'm still not sure how the architecture handles a revoked certificate used to sign the registry log. Would a new log be started with a different signing key and the old log would remain available for reference - with a warning that the signing key has been revoked or is expired? Still trying to figure out implementation details so that REA can support the initiative. I assume the results of a SCRAPI query would contain a warning that the returned results are from a log that has a revoked signing key.",
          "createdAt": "2024-03-04T11:39:23Z",
          "updatedAt": "2024-03-04T11:39:23Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "SCITT does not have any messages currently related to revoked certificates.\n\nWhat messages do you propose?",
          "createdAt": "2024-03-04T12:42:57Z",
          "updatedAt": "2024-03-04T12:42:57Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "It can be as simple as a warning in response to a query i.e. \u201cWarning: The signing certificate has been revoked or has expired\u201d  \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Orie Steele ***@***.***> \r\nSent: Monday, March 4, 2024 7:43 AM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Registration auditability requirements (#200) (PR #213)\r\n\r\n \r\n\r\nSCITT does not have any messages currently related to revoked certificates.\r\n\r\nWhat messages do you propose?\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#issuecomment-1976500815> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NEZ5CZX4YAJ6SU5D4DYWRT5ZAVCNFSM6AAAAABEAR4LZOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZWGUYDAOBRGU> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-03-04T12:50:15Z",
          "updatedAt": "2024-03-04T12:50:15Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "Dealing with expired or revoked TS certificates should be straightforward, as you can always obtain a fresh receipt for a previously registered transparent statement. For issuer certificate this is a non-issue as SCITT only guarantees the issuer certificate was valid at registration.",
          "createdAt": "2024-03-04T12:55:02Z",
          "updatedAt": "2024-03-04T12:55:02Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, Antoine.\r\n\r\n \r\n\r\nIs this also the case when the certificate used to maintain log integrity has been revoked or has expired. I\u2019m presuming the registry log integrity is also maintained using a digital certificate \u2013 correct?\r\n\r\n \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Antoine Delignat-Lavaud ***@***.***> \r\nSent: Monday, March 4, 2024 7:55 AM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Registration auditability requirements (#200) (PR #213)\r\n\r\n \r\n\r\nDealing with expired or revoked TS certificates should be straightforward, as you can always obtain a fresh receipt for a previously registered transparent statement. For issuer certificate this is a non-issue as SCITT only guarantees the issuer certificate was valid at registration.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#issuecomment-1976522162> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NC574JIMV62PP4CRRLYWRVLFAVCNFSM6AAAAABEAR4LZOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZWGUZDEMJWGI> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-03-04T12:58:58Z",
          "updatedAt": "2024-03-04T12:58:58Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "> Thanks, Antoine. Is this also the case when the certificate used to maintain log integrity has been revoked or has expired. I\u2019m presuming the registry log integrity is also maintained using a digital certificate \u2013 correct?\r\n\r\nYes, that's what I called the \"TS certificates\", i.e. the certificate used to sign the COSE receipt/countersignature.  That's the only certificate relying parties would care about - if there are other internal certificates it's up to the TS implementation to expose the details to auditors through the audit API",
          "createdAt": "2024-03-04T13:32:13Z",
          "updatedAt": "2024-03-04T13:32:13Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Antoine,\r\n\r\n \r\n\r\nWhat is the set of criteria that the TS should use during the registration policy evaluation?\r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n  \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\n <http://www.reliableenergyanalytics.com/> http://www.reliableenergyanalytics.com\r\n\r\nEmail:  ***@***.***> ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Antoine Delignat-Lavaud ***@***.***> \r\nSent: Monday, March 4, 2024 8:50 AM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Mention ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Registration auditability requirements (#200) (PR #213)\r\n\r\n \r\n\r\n@ad-l commented on this pull request.\r\n\r\n  _____  \r\n\r\nIn draft-ietf-scitt-architecture.md <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#discussion_r1511191215> :\r\n\r\n>  \r\n #### Mandatory Registration Checks\r\n \r\n-Transparency Services MUST, at a minimum, perform the following checks before registering a Signed Statement:\r\n+During registration, a Transparency Services MUST, at a minimum, authenticate the Issuer of the Signed Statement by validating the COSE signature and checking the identity of the issuer against one of its configured trust anchors, using the `x5t` (34), `x5chain`(33) and `kid`(4) protected headers of the Signed Statement as hints.\r\n+For instance, in order to authenticate X.509 Signed Statements, the Transparency Service MUST build and validate a complete certificate chain from the Issuer's certificate identified by `x5t`, to one of the root certificates most recently registered as a trust anchor of the Transparency Service.\r\n+\r\n+The Transparency Service MUST evaluate the registration policy that was most recently added to the Append-only Log.\r\n\r\nSee the updated comment thread on line 403 (now 405) about possible weakening of this requirement\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#discussion_r1511191215> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NDGWUDQ6V6SQ2ZFPXTYWR32HAVCNFSM6AAAAABEAR4LZOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTSMJUGM2TSOJSG4> .\r\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-03-04T13:56:20Z",
          "updatedAt": "2024-03-04T13:56:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5x1Njh",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:05:42Z",
          "updatedAt": "2024-02-29T20:05:42Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nFor instance, a trust anchor could be an X.509 root certificate, the discovery URL of an OpenID Connect identity provider, or any other COSE compatible PKI trust anchor.\r\n```",
              "createdAt": "2024-02-29T20:05:42Z",
              "updatedAt": "2024-02-29T20:05:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1N8z",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:06:42Z",
          "updatedAt": "2024-02-29T20:06:42Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "are you sure you want both `x5t` and `x5chain` ?",
              "createdAt": "2024-02-29T20:06:42Z",
              "updatedAt": "2024-02-29T20:06:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1OUa",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:07:38Z",
          "updatedAt": "2024-02-29T20:07:38Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nDuring registration, a Transparency Services MUST, at a minimum, authenticate the Issuer of the Signed Statement by validating the COSE signature and checking the identity of the issuer against one of its configured trust anchors, using the `x5t` (34), `x5chain`(33) and `kid`(4) protected headers of the Signed Statement as hints.\r\n```",
              "createdAt": "2024-02-29T20:07:38Z",
              "updatedAt": "2024-02-29T20:07:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1OdN",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:07:59Z",
          "updatedAt": "2024-02-29T20:08:00Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Lets be sure people don't assume JOSE is supported.",
              "createdAt": "2024-02-29T20:07:59Z",
              "updatedAt": "2024-02-29T20:08:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1PiZ",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:10:49Z",
          "updatedAt": "2024-02-29T20:10:49Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nFor instance, in order to authenticate X.509 Signed Statements, the Transparency Service MUST build and validate a complete certificate chain from the Issuer's certificate identified by `x5t`, to one of the root certificates most recently registered as a trust anchor of the Transparency Service.\r\n```",
              "createdAt": "2024-02-29T20:10:49Z",
              "updatedAt": "2024-02-29T20:11:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1Qpi",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:13:21Z",
          "updatedAt": "2024-02-29T20:13:22Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "can we define \"recent\", is that a logical time or lamport time? \r\n\r\nWhat is an \"instance-specific registration check\" ?",
              "createdAt": "2024-02-29T20:13:21Z",
              "updatedAt": "2024-02-29T20:13:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1RB_",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:14:09Z",
          "updatedAt": "2024-02-29T20:14:09Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Consider adding a \"SHOULD when\", or \"MUST when\" after this MAY.",
              "createdAt": "2024-02-29T20:14:09Z",
              "updatedAt": "2024-02-29T20:14:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1RoD",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:15:51Z",
          "updatedAt": "2024-02-29T20:15:51Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I'd prefer a simpler normative requirement for this, if one is possible... but since its a SHOULD its not mandatory to support, so I don't object to the ambiguity",
              "createdAt": "2024-02-29T20:15:51Z",
              "updatedAt": "2024-02-29T20:16:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1SjZ",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T20:18:22Z",
          "updatedAt": "2024-02-29T20:18:22Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "I object to this change.\r\n\r\nthe purpose of MTI is to reduce optionality, this change increases implementer burden, and provides additional optionality.\r\n\r\nI'd be fine with SHOULD... but not MUST for `x5chain`",
              "createdAt": "2024-02-29T20:18:22Z",
              "updatedAt": "2024-02-29T20:18:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1TEE",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This item: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213/files#r1508145284\r\n\r\nIs my only blocking comment.\r\n\r\nI would approve the PR if `x5chain` support was a SHOULD, but I do not believe both `x5t` and `x5chain` should be MTI.",
          "createdAt": "2024-02-29T20:19:47Z",
          "updatedAt": "2024-02-29T20:19:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5x1sI1",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:24:15Z",
          "updatedAt": "2024-02-29T21:24:16Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "The benefit of \"x5chain\" is that you don't have to find or communicate the Issuer certificate to the relying party or the auditor if they want to re-check the signature. I don't see the harm in supporting it",
              "createdAt": "2024-02-29T21:24:15Z",
              "updatedAt": "2024-02-29T21:24:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1sxI",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:26:06Z",
          "updatedAt": "2024-02-29T21:26:06Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "recent = latest added to the append only log, do you think this needs to be explicit?\r\n\r\n\"instance-specific registration check\" just means \"registration policy\"",
              "createdAt": "2024-02-29T21:26:06Z",
              "updatedAt": "2024-02-29T21:26:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1tFn",
          "commit": {
            "abbreviatedOid": "c4ed10a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:26:57Z",
          "updatedAt": "2024-02-29T21:26:57Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nThe Transparency Service MUST evaluate the registration policy that was most recently added to the Append-only Log.\r\n```",
              "createdAt": "2024-02-29T21:26:57Z",
              "updatedAt": "2024-02-29T21:27:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1t6A",
          "commit": {
            "abbreviatedOid": "3324807"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:29:10Z",
          "updatedAt": "2024-02-29T21:29:10Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I agreee it is phrased ambiguously, trying to avoid being too prescriptive on implementers and giving them several possible opt-outs. If you think you can do better please provide an alternative",
              "createdAt": "2024-02-29T21:29:10Z",
              "updatedAt": "2024-02-29T21:29:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1uGY",
          "commit": {
            "abbreviatedOid": "3324807"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:29:45Z",
          "updatedAt": "2024-02-29T21:29:45Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\nSupport for `x5t` is mandatory to implement.\r\n```",
              "createdAt": "2024-02-29T21:29:45Z",
              "updatedAt": "2024-02-29T21:29:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1uZk",
          "commit": {
            "abbreviatedOid": "1c797fd"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:30:38Z",
          "updatedAt": "2024-02-29T21:30:38Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n- Support for `x5t` is mandatory to implement.\r\n```",
              "createdAt": "2024-02-29T21:30:38Z",
              "updatedAt": "2024-02-29T21:30:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x1uyt",
          "commit": {
            "abbreviatedOid": "feae0aa"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:31:46Z",
          "updatedAt": "2024-02-29T21:31:46Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "```suggestion\r\n- Support for `kid` and `x5chain` is optional.\r\n```",
              "createdAt": "2024-02-29T21:31:46Z",
              "updatedAt": "2024-02-29T21:31:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2EhA",
          "commit": {
            "abbreviatedOid": "47ca4c2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T22:38:03Z",
          "updatedAt": "2024-02-29T22:38:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5x2FP2",
          "commit": {
            "abbreviatedOid": "47ca4c2"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:40:48Z",
          "updatedAt": "2024-02-29T23:06:36Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "If we are to add things like this we need some requirements language (MUST/SHOULD/MAY) and then we need to be particular about it.\r\n\r\nAre we at that point as a working group we can actually do that?",
              "createdAt": "2024-02-29T22:40:48Z",
              "updatedAt": "2024-02-29T23:06:37Z"
            },
            {
              "originalPosition": 5,
              "body": "The colon was to preface the list below, no? What does this have to do with the linked issue and audibility? I wouldn't block over this but it doesn't seem immediately helpful or I'd ignore it.\r\n\r\n```suggestion\r\nThere are many parties who publish information about artifacts:\r\n```",
              "createdAt": "2024-02-29T22:50:55Z",
              "updatedAt": "2024-02-29T23:06:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x2aOX",
          "commit": {
            "abbreviatedOid": "47ca4c2"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T00:18:12Z",
          "updatedAt": "2024-03-01T00:18:12Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "That text was already there, I only extended it to cover both registration policy and trust anchors (which was implicit before). But your point still stands that this text does not really use proper normative language, maybe create a separate issue about it?",
              "createdAt": "2024-03-01T00:18:12Z",
              "updatedAt": "2024-03-01T00:18:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x5zQZ",
          "commit": {
            "abbreviatedOid": "47cc0a3"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:06:33Z",
          "updatedAt": "2024-03-01T12:06:33Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "nice",
              "createdAt": "2024-03-01T12:06:33Z",
              "updatedAt": "2024-03-01T12:06:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x52Ik",
          "commit": {
            "abbreviatedOid": "47cc0a3"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:10:56Z",
          "updatedAt": "2024-03-01T12:10:57Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "I don't think this MUST is compatible with an eventualy consistent world.",
              "createdAt": "2024-03-01T12:10:56Z",
              "updatedAt": "2024-03-01T12:10:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x6DCa",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:43:19Z",
          "updatedAt": "2024-03-01T12:43:20Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I still don't see the utility of requirement to apply registration policies *on registration* for interoperability. Provided we are clear about the difference between a database of transparent statements and the verifiable datastracture that makes them tamper evident, there is no realy value in requiring a check before entry. And this apparent losening actually allows for more powerful retrospective analysis based on transparent statements about policy. Transparent retrospective policies can perfectly well reference the commitments of signed statements to append only logs even after the pre image data has been put beyond use (to counter posoning or satisfy legal requests). \r\n\r\n```suggestion\r\nTransparency Services MUST maintain Registration Policies that govern whether or not a given Signed Statement is acceptable.\r\nThese policies may retrospectively apply to previously registered signed statements that have been redacted.\r\n```",
              "createdAt": "2024-03-01T12:43:19Z",
              "updatedAt": "2024-03-01T17:28:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x6HJN",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:51:24Z",
          "updatedAt": "2024-03-01T12:51:24Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nTransparency Services MUST ensure that for any Transparent Statment they accept, enough information is made available to Auditors (either in the Append-only Log and retrievable through audit APIs, or included in the Receipt) to identify and recover the Transparent Statements describing the registration policy and trust anchors that are applicable to the Transparent Statement.\r\n```",
              "createdAt": "2024-03-01T12:51:24Z",
              "updatedAt": "2024-03-01T16:11:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x6Ha5",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T12:52:06Z",
          "updatedAt": "2024-03-01T12:52:06Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Because this allows for retrospective interpretation of policies and avoids the various bootstraping issues.",
              "createdAt": "2024-03-01T12:52:06Z",
              "updatedAt": "2024-03-01T12:52:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x69wb",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T14:19:34Z",
          "updatedAt": "2024-03-01T14:19:35Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Might want to remove the ` ``` ` from the code block at the end or this will junk it up.",
              "createdAt": "2024-03-01T14:19:34Z",
              "updatedAt": "2024-03-01T16:11:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x6-2w",
          "commit": {
            "abbreviatedOid": "47ca4c2"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T14:21:44Z",
          "updatedAt": "2024-03-01T14:21:44Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "We say default in the preexisting language and indicates you propose adding \"and initial list of trust anchors;\" to the end and that would be default too, correct? I am saying if we are going to say that we ought to be explicit about if we are committing to that.\r\n\r\nI for one am saying I am not sure we should, we see what others say.",
              "createdAt": "2024-03-01T14:21:44Z",
              "updatedAt": "2024-03-01T14:21:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x7AOw",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T14:23:50Z",
          "updatedAt": "2024-03-01T14:23:50Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Very useful perspective you might want to clean up the code block offset at the bottom for merge.\r\n\r\n```suggestion\r\nTransparency Services MUST maintain Registration Policies which govern whether or not a given Signed Statement is considered acceptable. These policies may retrospectively apply to previously registered signed statements which have been redacted.\r\n```",
              "createdAt": "2024-03-01T14:23:50Z",
              "updatedAt": "2024-03-01T17:28:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x7yyK",
          "commit": {
            "abbreviatedOid": "47cc0a3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T16:08:43Z",
          "updatedAt": "2024-03-01T16:08:43Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nThe Transparency Service MUST evaluate the Registration Policy that was most recently added to the Append-only Log.\r\n```",
              "createdAt": "2024-03-01T16:08:43Z",
              "updatedAt": "2024-03-01T16:08:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x71Ud",
          "commit": {
            "abbreviatedOid": "5dbddb4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T16:14:08Z",
          "updatedAt": "2024-03-01T16:14:08Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Would prefer text that isn't conversational, discussing problems, as opposed to stating how the spec provides solutions.",
              "createdAt": "2024-03-01T16:14:08Z",
              "updatedAt": "2024-03-01T16:14:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x734w",
          "commit": {
            "abbreviatedOid": "47cc0a3"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T16:19:38Z",
          "updatedAt": "2024-03-01T16:19:38Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I could live with this I think.\r\n\r\n```suggestion\r\nThe trust anchor used to verify its Issuer SHOULD be registered with the Transparency Service making it available for Auditors.\r\nIt MAY be registered at any time.\r\n```",
              "createdAt": "2024-03-01T16:19:38Z",
              "updatedAt": "2024-03-02T08:40:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8DXB",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T16:43:21Z",
          "updatedAt": "2024-03-01T16:43:21Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "If we need to be specific about ranges of time, lamport order is pretty rigid and also essentially up to the transparency service. Can we do something like \"Mininum Merge Delay\" for CT logs ?\r\n\r\n```suggestion\r\nIf the transparency service subjects signed statements to registration policies at time of registration, it MUST declare the maximum delay from accepting the policy to it being applicable to future statements.\r\n``` \r\n",
              "createdAt": "2024-03-01T16:43:21Z",
              "updatedAt": "2024-03-01T16:43:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8eHG",
          "commit": {
            "abbreviatedOid": "5dbddb4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T17:29:38Z",
          "updatedAt": "2024-03-01T17:29:39Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nThe operator of a Transparency Service MAY update the Registration Policy or the trust anchors of a Transparency Service at any time.\r\n```",
              "createdAt": "2024-03-01T17:29:38Z",
              "updatedAt": "2024-03-01T17:29:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8fmR",
          "commit": {
            "abbreviatedOid": "6fd5e3f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T17:32:24Z",
          "updatedAt": "2024-03-01T17:32:25Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Reviving Orie's [comment](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/213#discussion_r1508140415) as GitHub hid it after fixing some formatting changes",
              "createdAt": "2024-03-01T17:32:25Z",
              "updatedAt": "2024-03-01T17:32:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x8f3N",
          "commit": {
            "abbreviatedOid": "6fd5e3f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T17:33:06Z",
          "updatedAt": "2024-03-01T17:33:06Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-03-01T17:33:06Z",
              "updatedAt": "2024-03-01T17:33:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9YYd",
          "commit": {
            "abbreviatedOid": "6fd5e3f"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:02:02Z",
          "updatedAt": "2024-03-01T20:02:02Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I agree Steve. The party operating the Transparency Service and Registry must implement an auditable process for integrity verification. A lot can happen before an item is inserted into the block chain or database.\r\n\r\nFYI: I'm meeting with the FCC on March 21 to talk about SCITT and the need for a Trust Registry for the US Cyber Trust Mark. Hopefully we will have the architecture close by the time I have this meeting.",
              "createdAt": "2024-03-01T20:02:02Z",
              "updatedAt": "2024-03-01T20:02:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9gwL",
          "commit": {
            "abbreviatedOid": "47cc0a3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:23:30Z",
          "updatedAt": "2024-03-01T20:23:30Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "its vague enough to be eventually true.",
              "createdAt": "2024-03-01T20:23:30Z",
              "updatedAt": "2024-03-01T20:23:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9qJC",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:48:13Z",
          "updatedAt": "2024-03-01T20:48:13Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I don't this we should write MUST statements regarding Transparency Service policies like this.\r\n\r\nI think policies should be out of scope.\r\n\r\nI'd object to making this normative requirement.",
              "createdAt": "2024-03-01T20:48:13Z",
              "updatedAt": "2024-03-01T20:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9pX8",
          "commit": {
            "abbreviatedOid": "6fd5e3f"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:45:28Z",
          "updatedAt": "2024-03-01T20:54:22Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nRegistration Policies and trust anchors MUST be made transparent and available to all authorised clients of the Transparency Service by registering them as Signed Statements on the Append-only Log.\r\n```",
              "createdAt": "2024-03-01T20:45:28Z",
              "updatedAt": "2024-03-01T20:54:22Z"
            },
            {
              "originalPosition": 17,
              "body": "I think we'll find pushback from the user community if ANY client can get hold of ALL trust anchor details without even a nod to auth.",
              "createdAt": "2024-03-01T20:46:34Z",
              "updatedAt": "2024-03-01T20:54:22Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nDuring registration, a Transparency Service MUST, at a minimum, authenticate the Issuer of the Signed Statement by validating the COSE signature and checking the identity of the issuer against one of its configured trust anchors, using the `x5t` (34), `x5chain`(33) or `kid`(4) protected headers of the Signed Statement as hints.\r\n```",
              "createdAt": "2024-03-01T20:47:46Z",
              "updatedAt": "2024-03-01T20:54:22Z"
            },
            {
              "originalPosition": 37,
              "body": "This sentence is redundant. Support the removal.",
              "createdAt": "2024-03-01T20:49:00Z",
              "updatedAt": "2024-03-01T20:54:22Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n```\r\n\r\nSuggest complete removal. This sentence doesn't add anything and the ambiguity just makes it confusing. The document already has the requirement to register and make the trust anchors transparent, that's enough.",
              "createdAt": "2024-03-01T20:52:50Z",
              "updatedAt": "2024-03-01T20:54:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9s8K",
          "commit": {
            "abbreviatedOid": "6fd5e3f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:55:35Z",
          "updatedAt": "2024-03-01T20:55:35Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nTransparency Services MUST maintain Registration Policies.\r\n```",
              "createdAt": "2024-03-01T20:55:35Z",
              "updatedAt": "2024-03-01T20:55:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9tB2",
          "commit": {
            "abbreviatedOid": "6fd5e3f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:55:55Z",
          "updatedAt": "2024-03-01T20:55:55Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Rely on definitions, instead of repeating purpose of defined terms.",
              "createdAt": "2024-03-01T20:55:55Z",
              "updatedAt": "2024-03-01T20:55:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9tYW",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T20:56:57Z",
          "updatedAt": "2024-03-01T20:56:57Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Would a revoked \"trust anchor\" certificate have any effect on the statements contained on the chain? Would all of the statement still remain valid in the event of a revoked certificate?",
              "createdAt": "2024-03-01T20:56:57Z",
              "updatedAt": "2024-03-01T20:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x9-5N",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:35:43Z",
          "updatedAt": "2024-03-01T21:35:43Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Well I know there has been chatter about encoding a hash of the cert chain versus the whole thing and now this question posed by Dick. This leads to a problem, what if the certificates no longer exist, are not just recorded but presently invalid?",
              "createdAt": "2024-03-01T21:35:43Z",
              "updatedAt": "2024-03-01T21:35:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x-CTm",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:41:35Z",
          "updatedAt": "2024-03-01T21:41:36Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Spot on AJ. Another problem we see is the inability to verify a certificate using OSCP. Things go wrong. What is the \"failsafe\" position in the \"state machine\" for the Transparency Service when things go wrong?",
              "createdAt": "2024-03-01T21:41:35Z",
              "updatedAt": "2024-03-01T21:41:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x_WP7",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T01:09:36Z",
          "updatedAt": "2024-03-02T01:09:37Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Suggestion to revert this line, and revert the addtions below for the trust anchors.\r\n```suggestion\r\n- A built-in default Registration Policy\r\n```",
              "createdAt": "2024-03-02T01:09:37Z",
              "updatedAt": "2024-03-02T01:10:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x_WU7",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T01:10:41Z",
          "updatedAt": "2024-03-02T01:10:42Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n- Acceptance of a first Signed Statement whose payload is a valid Registration Policy, without performing registration checks\r\n```",
              "createdAt": "2024-03-02T01:10:41Z",
              "updatedAt": "2024-03-02T01:10:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5x_WWD",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T01:10:55Z",
          "updatedAt": "2024-03-02T01:10:56Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\n- An out-of-band authenticated management interface\r\n```",
              "createdAt": "2024-03-02T01:10:55Z",
              "updatedAt": "2024-03-02T01:10:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yADLu",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T08:42:00Z",
          "updatedAt": "2024-03-02T08:42:01Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "SHOULD works for me. I only used MUST because I thought there was an appetite for normative requirements here",
              "createdAt": "2024-03-02T08:42:00Z",
              "updatedAt": "2024-03-02T08:42:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAMUR",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-03-02T12:23:06Z",
          "updatedAt": "2024-03-02T12:28:37Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n```\r\nI propose we remove the last remark on retrospective applications of policies. As detailed in the mail thread, this remark generally applies to some other policies that may be supported by the TS, but not to the registration policy as defined in the architecture. If need be, let's open a separate issue or PR to explain them in relation to auditing. ",
              "createdAt": "2024-03-02T12:23:06Z",
              "updatedAt": "2024-03-02T12:28:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yARWM",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T14:45:42Z",
          "updatedAt": "2024-03-02T14:45:42Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "yep, agree. especially if we get ories change below (for line 389 -> \"Transparency Services MUST maintain Registration Policies.\")",
              "createdAt": "2024-03-02T14:45:42Z",
              "updatedAt": "2024-03-02T14:45:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAV33",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T16:57:12Z",
          "updatedAt": "2024-03-02T16:57:12Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "looking for feedback with a +1 or -1 to merge or discard ",
              "createdAt": "2024-03-02T16:57:12Z",
              "updatedAt": "2024-03-02T16:57:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAjFp",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T21:48:02Z",
          "updatedAt": "2024-03-02T21:48:02Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Good catch",
              "createdAt": "2024-03-02T21:48:02Z",
              "updatedAt": "2024-03-02T21:48:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAjIM",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T21:50:01Z",
          "updatedAt": "2024-03-02T21:50:01Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "+1 on reverting",
              "createdAt": "2024-03-02T21:50:01Z",
              "updatedAt": "2024-03-02T21:50:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAjIk",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T21:50:18Z",
          "updatedAt": "2024-03-02T21:50:18Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "+1",
              "createdAt": "2024-03-02T21:50:18Z",
              "updatedAt": "2024-03-02T21:50:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAjI1",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T21:50:30Z",
          "updatedAt": "2024-03-02T21:50:30Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "+1 ",
              "createdAt": "2024-03-02T21:50:30Z",
              "updatedAt": "2024-03-02T21:50:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yAjJY",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "bobmartin3000",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "These changes seem appropriate",
          "createdAt": "2024-03-02T21:51:03Z",
          "updatedAt": "2024-03-02T21:51:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5yGKGX",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T12:39:59Z",
          "updatedAt": "2024-03-04T12:39:59Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Yes, I mean default trust anchors. Would you prefer this:\r\n```suggestion\r\n- A built-in default Registration Policy and default trust anchors;\r\n```",
              "createdAt": "2024-03-04T12:39:59Z",
              "updatedAt": "2024-03-04T12:40:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGLnb",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T12:43:16Z",
          "updatedAt": "2024-03-04T12:43:16Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "-1 the trust anchors are as important (in fact probably more important) than the registration policy for trusting the TS. Imagine the operator adds his own self-signed root CA suddenly, then he can impersonate any issuer",
              "createdAt": "2024-03-04T12:43:16Z",
              "updatedAt": "2024-03-04T12:43:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGLqw",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T12:43:22Z",
          "updatedAt": "2024-03-04T12:43:23Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "-1 see above",
              "createdAt": "2024-03-04T12:43:23Z",
              "updatedAt": "2024-03-04T12:43:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGL3C",
          "commit": {
            "abbreviatedOid": "e4d7d9a"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T12:43:47Z",
          "updatedAt": "2024-03-04T12:43:47Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "+0 on this one I think \"management interface\" might be enough",
              "createdAt": "2024-03-04T12:43:47Z",
              "updatedAt": "2024-03-04T13:36:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGOF6",
          "commit": {
            "abbreviatedOid": "189bd1f"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T12:48:22Z",
          "updatedAt": "2024-03-04T12:48:22Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "It is completely OK if the certificate used to sign a statement is revoked or expires after the statement is registered. The point of the \"SHOULD\" is that the evidence to prove that the certificate was valid (e.g. the intermediate CAs, the valid OCSP certificate with a timestamp around registration time) should be available to Auditors so they can retrospectively verify that the signature was valid at registration.",
              "createdAt": "2024-03-04T12:48:22Z",
              "updatedAt": "2024-03-04T12:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGmWd",
          "commit": {
            "abbreviatedOid": "1d2a203"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T13:37:31Z",
          "updatedAt": "2024-03-04T13:37:32Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "+1 revert. A TS impersonating an  issuer sounds like an attack to me, so why would I trust any anchors it self registers ?",
              "createdAt": "2024-03-04T13:37:32Z",
              "updatedAt": "2024-03-04T13:37:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGog4",
          "commit": {
            "abbreviatedOid": "3e363a6"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T13:41:46Z",
          "updatedAt": "2024-03-04T13:41:46Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "@robinbryce if you are concerned about the lack of prescribed window for applying policy updates this could be weakened\r\n```suggestion\r\nThe Transparency Service MUST evaluate the most recently registered Registration Policy for which a Receipt has been distributed.\r\n```\r\nThis allows more asynchronous registration policy update, the TS can withhold the Receipt until it is ready to enable the new policy",
              "createdAt": "2024-03-04T13:41:46Z",
              "updatedAt": "2024-03-04T13:41:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yGtB3",
          "commit": {
            "abbreviatedOid": "47cc0a3"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T13:50:14Z",
          "updatedAt": "2024-03-04T13:50:14Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "See the updated comment thread on line 403 (now 405) about possible weakening of this requirement",
              "createdAt": "2024-03-04T13:50:14Z",
              "updatedAt": "2024-03-04T13:50:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yG3uA",
          "commit": {
            "abbreviatedOid": "3e363a6"
          },
          "author": "fournet",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I suggested a couple of improvements, but overall I support this PR. ",
          "createdAt": "2024-03-04T14:05:22Z",
          "updatedAt": "2024-03-04T14:11:52Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I am not sure what distribution means. I suggest instead \r\n```suggestion\r\nThe Transparency Service MUST apply the Registration Policy that was most recently added to the Append-only Log at the time of registration. \r\n```",
              "createdAt": "2024-03-04T14:05:22Z",
              "updatedAt": "2024-03-04T14:11:52Z"
            },
            {
              "originalPosition": 36,
              "body": "This seems overly permissive. I would assume these privileged actions to be authorized in an implementation-specific manner. ",
              "createdAt": "2024-03-04T14:07:55Z",
              "updatedAt": "2024-03-04T14:11:52Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nTransparency Services MUST ensure that for any Signed Statement they register, enough information is made available to Auditors (either in the Append-only Log and retrievable through audit APIs, or included in the Receipt) to authenticate and retrieve the Transparent Statements describing the registration policy and trust anchors that apply to this registration. \r\n```",
              "createdAt": "2024-03-04T14:10:05Z",
              "updatedAt": "2024-03-04T14:11:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yHR2H",
          "commit": {
            "abbreviatedOid": "3e363a6"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T14:48:39Z",
          "updatedAt": "2024-03-04T14:48:39Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "@fournet it just means the transperency service is allowed to hang registration policy validation off the act of receipt production. In the sense that its not a transparent statement until a receipt is in the un protected header.",
              "createdAt": "2024-03-04T14:48:39Z",
              "updatedAt": "2024-03-04T14:48:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yHVVp",
          "commit": {
            "abbreviatedOid": "3e363a6"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T14:53:50Z",
          "updatedAt": "2024-03-04T14:53:51Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "FAOD: I'm essentially ok with this PR for what that is worth. If we get something like ad suggests, which I belive avoids all the bootstrappy and ordering implications, I think I'm starting to like registration policies. But as long as they block registration, I'm anticipating many \"well intentioned\" and also \"good\" implementations wont benefit much from them.",
              "createdAt": "2024-03-04T14:53:51Z",
              "updatedAt": "2024-03-04T14:53:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yHoIl",
          "commit": {
            "abbreviatedOid": "3e363a6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T15:20:34Z",
          "updatedAt": "2024-03-04T15:20:34Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nThe Transparency Service MUST evaluate the Registration Policy that was most recently added to the Append-only Log at the time of registration.\r\n```",
              "createdAt": "2024-03-04T15:20:34Z",
              "updatedAt": "2024-03-04T15:20:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yHqso",
          "commit": {
            "abbreviatedOid": "3e363a6"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T15:24:57Z",
          "updatedAt": "2024-03-04T15:24:57Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "@fournet\r\n```suggestion\r\nThe operator of a Transparency Service MAY request to update the Registration Policy or the trust anchors of a Transparency Service at any time.\r\n```",
              "createdAt": "2024-03-04T15:24:57Z",
              "updatedAt": "2024-03-04T15:24:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yHx1p",
          "commit": {
            "abbreviatedOid": "509c935"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\n",
          "createdAt": "2024-03-04T15:36:46Z",
          "updatedAt": "2024-03-04T15:36:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 215,
      "id": "PR_kwDOIvmHss5onnr6",
      "title": "spelling and formatting for 06",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/215",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-04T17:37:16Z",
      "updatedAt": "2024-03-06T16:59:58Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "b0fdcdc766835d5cb7fa1984dccd9cd66ded782a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/draft06",
      "headRefOid": "9e3587907bad6a63ecc395745c031c5365ede544",
      "closedAt": "2024-03-04T17:38:27Z",
      "mergedAt": "2024-03-04T17:38:27Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "66463b96dedc838b8ad7156eb3a5e854c6768dd1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5yI1gg",
          "commit": {
            "abbreviatedOid": "9e35879"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T17:39:07Z",
          "updatedAt": "2024-03-04T17:39:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think in British style of writing, `authorised` is a valid word.",
              "createdAt": "2024-03-04T17:39:07Z",
              "updatedAt": "2024-03-04T17:39:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yI1x3",
          "commit": {
            "abbreviatedOid": "9e35879"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T17:39:43Z",
          "updatedAt": "2024-03-04T17:39:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "However, if we are consistently following US style of writing, then I am fine with the change as well!",
              "createdAt": "2024-03-04T17:39:43Z",
              "updatedAt": "2024-03-04T17:39:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5yI129",
          "commit": {
            "abbreviatedOid": "9e35879"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-03-04T17:39:54Z",
          "updatedAt": "2024-03-04T17:39:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 217,
      "id": "PR_kwDOIvmHss5o3eie",
      "title": "Converge duplicative definitions of Relying Parties",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/217",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #216 ",
      "createdAt": "2024-03-06T16:59:26Z",
      "updatedAt": "2024-05-25T16:02:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "66463b96dedc838b8ad7156eb3a5e854c6768dd1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/216",
      "headRefOid": "73ac04643ea812640343f4d8f3600fa991791eae",
      "closedAt": "2024-03-12T18:56:01Z",
      "mergedAt": "2024-03-12T18:56:01Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "14f60858c94b2b1c49433fcd2932d6ffad2ac44f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5zG4Nf",
          "commit": {
            "abbreviatedOid": "dfba349"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-12T14:09:22Z",
          "updatedAt": "2024-03-12T14:09:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5zIaAd",
          "commit": {
            "abbreviatedOid": "dfba349"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T16:31:47Z",
          "updatedAt": "2024-03-12T16:31:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: a Relying Parties consumes Transparent Statements, verifying their proofs and inspecting the Statement payload, either before using corresponding Artifacts, or later to audit an Artifact's provenance on the supply chain.\r\n```",
              "createdAt": "2024-03-12T16:31:47Z",
              "updatedAt": "2024-03-12T16:31:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5zIaRf",
          "commit": {
            "abbreviatedOid": "dfba349"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T16:32:16Z",
          "updatedAt": "2024-03-12T16:32:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Note a Relying Party gets what is returned by the Transparency Service",
              "createdAt": "2024-03-12T16:32:16Z",
              "updatedAt": "2024-03-12T16:32:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5zKUVJ",
          "commit": {
            "abbreviatedOid": "dfba349"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T18:55:31Z",
          "updatedAt": "2024-03-12T18:55:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "goo catch",
              "createdAt": "2024-03-12T18:55:31Z",
              "updatedAt": "2024-03-12T18:55:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 218,
      "id": "PR_kwDOIvmHss5pY7w-",
      "title": "Fix examples and verification sections",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/218",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-12T15:00:57Z",
      "updatedAt": "2024-03-12T19:49:11Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "66463b96dedc838b8ad7156eb3a5e854c6768dd1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/fix-sample",
      "headRefOid": "bf166effdb06ccba32d7eaf52dc0fc25b4c3c2ec",
      "closedAt": "2024-03-12T19:49:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker This seems to duplicate #217. I would suggest you please proceed 217 and then rebase 218 only to introduce the `Delta`",
          "createdAt": "2024-03-12T16:34:30Z",
          "updatedAt": "2024-03-12T16:34:30Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> @SteveLasker This seems to duplicate #217. I would suggest you please proceed 217 and then rebase 218 only to introduce the `Delta`\r\n\r\nThanks, @yogeshbdeshpande. This became a dupe of #219\r\n\r\n",
          "createdAt": "2024-03-12T19:49:11Z",
          "updatedAt": "2024-03-12T19:49:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 219,
      "id": "PR_kwDOIvmHss5pZdTd",
      "title": "Apply feedback from editors call (Fix examples and verification sections)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/219",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Adjusts text around CDDL and EDN\r\n- Adjusts text regarding Validation",
      "createdAt": "2024-03-12T15:46:26Z",
      "updatedAt": "2024-05-25T16:02:27Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "66463b96dedc838b8ad7156eb3a5e854c6768dd1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat-example-readability",
      "headRefOid": "653a3a364020c5d84af15a07b15af65145993334",
      "closedAt": "2024-03-13T19:45:10Z",
      "mergedAt": "2024-03-13T19:45:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "fa79d103837881f12e24bd857bcfa95fe2a3116a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5zJpBm",
          "commit": {
            "abbreviatedOid": "7930b5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, nice and clear changes",
          "createdAt": "2024-03-12T18:03:20Z",
          "updatedAt": "2024-03-12T18:03:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5zKfCn",
          "commit": {
            "abbreviatedOid": "1ca506e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-12T19:09:36Z",
          "updatedAt": "2024-03-12T19:09:36Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "a reviewers note that this is not a new section, but rather a re-ordering. See line [538](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/219/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1L538) for reference",
              "createdAt": "2024-03-12T19:09:36Z",
              "updatedAt": "2024-03-12T19:09:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5zK8hg",
          "commit": {
            "abbreviatedOid": "653a3a3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-12T19:47:38Z",
          "updatedAt": "2024-03-12T19:47:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 220,
      "id": "PR_kwDOIvmHss5p0WlP",
      "title": "Add any to the unprotected header.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/220",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Making the unprotected header consistent with the protected header",
      "createdAt": "2024-03-16T07:25:47Z",
      "updatedAt": "2024-05-25T16:02:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "fa79d103837881f12e24bd857bcfa95fe2a3116a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/unprotected-any",
      "headRefOid": "cc5292daa813eb097d59ded648ab6d3928aa870f",
      "closedAt": "2024-03-20T05:38:48Z",
      "mergedAt": "2024-03-20T05:38:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5ztiHx",
          "commit": {
            "abbreviatedOid": "cc5292d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-16T20:16:16Z",
          "updatedAt": "2024-03-16T20:16:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5ztqDp",
          "commit": {
            "abbreviatedOid": "cc5292d"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-16T23:54:11Z",
          "updatedAt": "2024-03-16T23:54:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 225,
      "id": "PR_kwDOIvmHss5rlh-N",
      "title": "Add Registered Signed Statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/225",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #221 ",
      "createdAt": "2024-04-03T15:43:09Z",
      "updatedAt": "2024-04-15T14:24:33Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/221-registered-signed-statement",
      "headRefOid": "47c21c683eab651fa17da723cef6ef824f7aae49",
      "closedAt": "2024-04-15T14:24:33Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Feedback from @henkbirkholz, \"Registered\" is a superset of \"Signed\", as it includes the meaning of \"Signed\", making it redundant and long. Simplifying with \"Registered Statement\" would accomplish the same result with fewer words. ",
          "createdAt": "2024-04-05T16:08:57Z",
          "updatedAt": "2024-04-05T16:08:57Z"
        },
        {
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed on 09/04 I don't think the new terminology for registered signed statement is necessary. From an external point of view users should only consider signed statements and transparent statements.",
          "createdAt": "2024-04-09T14:21:02Z",
          "updatedAt": "2024-04-09T14:21:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Consider re-wording a transparent statement as a state that comes after registration and the append-only log. Not just when it's stapled to the signed statement",
          "createdAt": "2024-04-09T14:21:17Z",
          "updatedAt": "2024-04-09T14:21:17Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss52OTfN",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-05T15:04:52Z",
          "updatedAt": "2024-04-05T15:04:53Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n: a Signed Statement that has passed the Registration Policy, has been committed to the Append-only Log.\r\n```",
              "createdAt": "2024-04-05T15:04:52Z",
              "updatedAt": "2024-04-05T15:04:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52OT3E",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-05T15:05:40Z",
          "updatedAt": "2024-04-05T15:05:40Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "counter signatures are a different thing.. the definition of registration is inclusion in the log... not signing receipts.",
              "createdAt": "2024-04-05T15:05:40Z",
              "updatedAt": "2024-04-05T15:05:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52OUO9",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-05T15:06:26Z",
          "updatedAt": "2024-04-05T15:06:26Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "I think is in an improvement",
              "createdAt": "2024-04-05T15:06:26Z",
              "updatedAt": "2024-04-05T15:06:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52OVfG",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think we should not confuse people by saying \"counter-signature\" when we do not mean to imply https://datatracker.ietf.org/doc/html/rfc9338",
          "createdAt": "2024-04-05T15:08:27Z",
          "updatedAt": "2024-04-05T15:08:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss52b0O_",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-08T17:20:51Z",
          "updatedAt": "2024-04-08T17:20:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I see your point. However, is there a scenario by which a statement is recorded in the log that wasn't counter-signed? A TS must be able to return receipts, that would represent the counter-signature (notarization). Seems we should incorporate that. ",
              "createdAt": "2024-04-08T17:20:51Z",
              "updatedAt": "2024-04-08T17:20:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52jQJ8",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T12:49:17Z",
          "updatedAt": "2024-04-09T12:49:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Technically there can be lots of statements in the log, for which no signed inclusion proof has yet or ever will be produced.\n\nA signed inclusion proof is a kind of counter signature, but we also use the term receipt for it... Less terms is better, if we can avoid using the word counter signature, we should.",
              "createdAt": "2024-04-09T12:49:17Z",
              "updatedAt": "2024-04-09T12:49:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52jY44",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:05:24Z",
          "updatedAt": "2024-04-09T13:05:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Russ told us that a countersignature is a countersignature :-) By which he means that it is just that, add more data to it and it becomes its own thing - hence Receipt.",
              "createdAt": "2024-04-09T13:05:24Z",
              "updatedAt": "2024-04-09T13:05:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52jZoq",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:06:54Z",
          "updatedAt": "2024-04-09T13:06:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I do not think, there is a need of a Registered Signed Statement in the specification. It will be more confusing than doing anything good!.\r\n\r\nWe have `Signed Statement` and we have `Transparent Statement` \r\n\r\nThey are good enough concepts, no need to introduce this new term.\r\n\r\nI strongly suggest we drop this Pull Request!",
              "createdAt": "2024-04-09T13:06:54Z",
              "updatedAt": "2024-04-09T13:06:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52jZ2L",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:07:15Z",
          "updatedAt": "2024-04-09T13:07:15Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n: a Signed Statement that has passed the Registration Policy and has been committed to the Append-only Log.\r\n```\r\nwhy the semicolon?",
              "createdAt": "2024-04-09T13:07:15Z",
              "updatedAt": "2024-04-09T13:07:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52jyff",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think, we should drop the PR!",
          "createdAt": "2024-04-09T13:48:39Z",
          "updatedAt": "2024-04-09T13:48:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss52kAWQ",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T14:05:26Z",
          "updatedAt": "2024-04-09T14:05:27Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nRegistered Statement:\r\n```\r\nRegistered means signed.",
              "createdAt": "2024-04-09T14:05:26Z",
              "updatedAt": "2024-04-09T14:05:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53IJ6A",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-12T22:55:00Z",
          "updatedAt": "2024-04-12T22:55:00Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "I copied this to a separate PR: #229 ",
              "createdAt": "2024-04-12T22:55:00Z",
              "updatedAt": "2024-04-12T22:55:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53KctL",
          "commit": {
            "abbreviatedOid": "f909c82"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T10:53:44Z",
          "updatedAt": "2024-04-13T10:53:44Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yep, we won't counter sign until a receipt is asked for (if ever is). The VDS is updated waaaaay before that",
              "createdAt": "2024-04-13T10:53:44Z",
              "updatedAt": "2024-04-13T10:53:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 227,
      "id": "PR_kwDOIvmHss5r8GT4",
      "title": "Add appendix section on term disambiguation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/227",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "cc @henkbirkholz will need you to review this.",
      "createdAt": "2024-04-07T17:15:18Z",
      "updatedAt": "2024-05-25T16:01:33Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "feat-terms",
      "headRefOid": "d2605be065760ec198469385ccc69d4c4be90ea9",
      "closedAt": "2024-04-17T17:40:26Z",
      "mergedAt": "2024-04-17T17:40:26Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d8c7fc4f55ace7855d98037d4439dd9aeac2815d"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Action item for @henkbirkholz to make some proposals",
          "createdAt": "2024-04-09T14:46:55Z",
          "updatedAt": "2024-04-09T14:46:55Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "[ac14a34](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/227/commits/ac14a34ee3b4f0136eeb1ffe45be02997a1e4ef2) is a larger refactoring of the text originally created by Orie and modified by other contributors during review. The main goals were to shorten the section and to change the stance on SCITT & RATS verifier and relying party relationships. I also added a more thorough disambiguation of the term \"attestation\" at the end based on the text Orie wrote. Please review the changes in [ac14a34](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/227/commits/ac14a34ee3b4f0136eeb1ffe45be02997a1e4ef2).",
          "createdAt": "2024-04-16T10:42:24Z",
          "updatedAt": "2024-04-16T10:42:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Ad discussed on the editors call, we'll review and merge in 24 hours with no objections.",
          "createdAt": "2024-04-16T14:11:08Z",
          "updatedAt": "2024-04-16T14:11:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss52bONx",
          "commit": {
            "abbreviatedOid": "07873c3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks, @OR13 \r\nA few nits for review, and some spelling and markdown that I've already committed. ",
          "createdAt": "2024-04-08T15:56:00Z",
          "updatedAt": "2024-04-08T17:16:12Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "The statement refers to the artifact, with the subject.\r\n```suggestion\r\nThe term \"subject\" provides an identifier of the issuer's choosing to refer to a given artifact, and ensures that all associated statements can be attributed to the identifier chosen by the issuer.\r\n```",
              "createdAt": "2024-04-08T15:56:00Z",
              "updatedAt": "2024-04-08T17:16:12Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nIn simpler language, a statement could be some vendor-specific software bill of materials (SBOM), or results from a model checker, or static analyzer, where the issuer identifies themselves using the `iss` claim, and the specific software that was analyzed using the `sub` claim.\r\n```",
              "createdAt": "2024-04-08T15:58:30Z",
              "updatedAt": "2024-04-08T17:16:12Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nIn {{-rats-arch}} and {{-draft-ietf-rats-eat}}, when conveying Digital Letters of Approval (DLOA), these claims are typically issued by a RATS Verifier, not a RATS attester, whereas Software Manifests (manifests) are issued by the software manufacturer.\r\n```",
              "createdAt": "2024-04-08T15:59:39Z",
              "updatedAt": "2024-04-08T17:16:12Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n{{FIPS.201}} defines \"assertion\" as \"A verifiable statement from an IdP to an RP that contains information about an end user\".\r\n```",
              "createdAt": "2024-04-08T17:13:10Z",
              "updatedAt": "2024-04-08T17:16:12Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n{{NIST.SP.800-63-3}} defines \"assertion\" as \"A statement from a verifier to an RP that contains information about a subscriber.\r\nAssertions may also contain verified attributes.\"\r\n```",
              "createdAt": "2024-04-08T17:13:27Z",
              "updatedAt": "2024-04-08T17:16:12Z"
            },
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nThis document uses the term Statement to refer to potentially unsecured data and associated claims, and Signed Statement and Receipt to refer to assertions from an Issuer, or the transparency service.\r\n```",
              "createdAt": "2024-04-08T17:14:43Z",
              "updatedAt": "2024-04-08T17:16:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52b0xs",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-04-08T17:22:13Z",
          "updatedAt": "2024-04-08T17:22:19Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Can someone explain to me what an NCCoE implementation guide regarding \"Security Practice Guide for VMware Hybrid Cloud Infrastructure as a Service (IaaS) Environments\" has to do with SCITT?\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-04-08T17:22:13Z",
              "updatedAt": "2024-04-08T17:22:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52jQOj",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T12:49:25Z",
          "updatedAt": "2024-04-09T13:01:52Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "yeah... I am not sure about the Verifier part, honestly. A SCITT Verifier should be trustworthy and should take on the role of an RFC9334 Attester. A SCITT Verifier is not conducting the appraisal of RFC9334 Evidence, I think.",
              "createdAt": "2024-04-09T12:49:25Z",
              "updatedAt": "2024-04-09T13:01:52Z"
            },
            {
              "originalPosition": 41,
              "body": "The act of producing Evidence is comparable with the act of issuance, but it is quite specific subset (which distinguishes it from \"self-assertion\"/\"self-signing\" aka a NIST 1st party attestation).",
              "createdAt": "2024-04-09T12:52:50Z",
              "updatedAt": "2024-04-09T13:01:52Z"
            },
            {
              "originalPosition": 43,
              "body": "I agree that the process steps are semantically similar and the sequence of similar steps is the same, but you achieve very different goals here. Also EAT just repeats RFC9334 here.",
              "createdAt": "2024-04-09T12:54:33Z",
              "updatedAt": "2024-04-09T13:01:52Z"
            },
            {
              "originalPosition": 44,
              "body": "The actual correct term is \"Appraisal Policy for Evidence\", which also shows that the output (Attestation Result) is intended to solve a different problem. By introducing this whole analogy here, we come dangerously close to implying that \"Evidence\" is an analog to \"NIST 1st-party Attestation\" (which it is not, but semantically very different things).",
              "createdAt": "2024-04-09T12:57:19Z",
              "updatedAt": "2024-04-09T13:03:21Z"
            },
            {
              "originalPosition": 6,
              "body": "your answer is where the ref is used. In this PR that is line 951, currently.",
              "createdAt": "2024-04-09T12:58:07Z",
              "updatedAt": "2024-04-09T13:01:52Z"
            },
            {
              "originalPosition": 55,
              "body": "And ISO 17000 Attestation is the basis for NIST Attestation (https://www.nist.gov/itl/executive-order-improving-nations-cybersecurity/software-supply-chain-security-guidance-2), which, e.g., conflicts with IETF RFC9334 Evidence or TCG Attestation. There be dragons.",
              "createdAt": "2024-04-09T13:01:34Z",
              "updatedAt": "2024-04-09T13:01:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j3sK",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:56:16Z",
          "updatedAt": "2024-04-09T13:56:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "more detailed answer: because NIST defined \"assertion\" and \"attestation\" which are terms that need disambiguation in the context of SCITT.",
              "createdAt": "2024-04-09T13:56:16Z",
              "updatedAt": "2024-04-09T13:56:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j4qZ",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:57:48Z",
          "updatedAt": "2024-04-09T13:57:48Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Not sure what to do with this comment... resolve it?",
              "createdAt": "2024-04-09T13:57:48Z",
              "updatedAt": "2024-04-09T13:57:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j5R2",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:58:46Z",
          "updatedAt": "2024-04-09T13:58:47Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "^ can you suggest text / changes? The goal of this section is specifically to avoid dangerous implications, and I am not a RATS expert : )",
              "createdAt": "2024-04-09T13:58:46Z",
              "updatedAt": "2024-04-09T13:58:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j5n9",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:59:18Z",
          "updatedAt": "2024-04-09T13:59:19Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Lets identify them, and explain their conflict, thats the purpose of this section.",
              "createdAt": "2024-04-09T13:59:19Z",
              "updatedAt": "2024-04-09T13:59:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j6B6",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T13:59:53Z",
          "updatedAt": "2024-04-09T13:59:53Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Not sure what to do with this comment. resolve it?",
              "createdAt": "2024-04-09T13:59:53Z",
              "updatedAt": "2024-04-09T13:59:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j6xc",
          "commit": {
            "abbreviatedOid": "3f6835a"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T14:01:06Z",
          "updatedAt": "2024-04-09T14:01:06Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I think, we should write a generic statement on Disambiguation. Otherwise, this list can keep evolving and we never finish the document!",
              "createdAt": "2024-04-09T14:01:06Z",
              "updatedAt": "2024-04-09T14:01:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52j61F",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T14:01:12Z",
          "updatedAt": "2024-04-09T14:01:12Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": ">  A SCITT Verifier is not conducting the appraisal of RFC9334 Evidence, I think.\r\n\r\nWhy not, a SCITT verifier checks signatures and applies registration policy or verifier policy to the resulting claim set... If this is not compatible, what causes the incompatibility?",
              "createdAt": "2024-04-09T14:01:12Z",
              "updatedAt": "2024-04-09T14:01:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52kW4Y",
          "commit": {
            "abbreviatedOid": "3f6835a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-09T14:36:45Z",
          "updatedAt": "2024-04-09T14:36:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss52kXLD",
          "commit": {
            "abbreviatedOid": "3f6835a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T14:37:13Z",
          "updatedAt": "2024-04-09T14:37:13Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "A RATS Verifier consumes Evidence from the Issuer (the Attester). A Signed Statement is not Evidence, you can add Evidence to it, if the TS takes on the role of Attester.",
              "createdAt": "2024-04-09T14:37:13Z",
              "updatedAt": "2024-04-09T14:37:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss52kaks",
          "commit": {
            "abbreviatedOid": "3f6835a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-09T14:42:12Z",
          "updatedAt": "2024-04-09T14:42:12Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "@henkbirkholz can you make a suggestion for a change?",
              "createdAt": "2024-04-09T14:42:12Z",
              "updatedAt": "2024-04-09T14:42:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53bjri",
          "commit": {
            "abbreviatedOid": "ac14a34"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T13:48:20Z",
          "updatedAt": "2024-04-16T13:48:20Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nThe terms \"verifier\" and \"relying party\" are used interchangeably through the document. While these terms are related to \"Verifier\" and \"Relying Party\" as used in {{RFC9334}}, they do not imply the processing of RATS conceptual messages, such as Evidence or Attestation Results that are specific to remote attestation. A SCITT \"verifier\" and \"relying party\" and \"issuer\" of Receipts or Statements might take on the role of a RATS \"Attester\". Correspondingly, all RATS conceptual messages, such as Evidence and Attestation Results, can be the content of SCITT Statements and a SCITT \"verifier\" can also take on the role of a RATS \"Verifier\" to, for example, conduct the procedure of Appraisal of Evidence as a part of a SCITT \"verifier\"'s verification capabilities.\r\n```",
              "createdAt": "2024-04-16T13:48:20Z",
              "updatedAt": "2024-04-16T13:48:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53bkB_",
          "commit": {
            "abbreviatedOid": "ac14a34"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T13:48:53Z",
          "updatedAt": "2024-04-16T13:48:53Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nIn simpler language, a SCITT Statement could be some vendor-specific software bill of materials (SBOM), results from a model checker, static analyzer, or RATS Evidence about the authenticity of an SBOM creation process, where the issuer identifies themselves using the `iss` claim, and the specific software that was analyzed as the subject using the `sub` claim.\r\n```",
              "createdAt": "2024-04-16T13:48:53Z",
              "updatedAt": "2024-04-16T13:50:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53blu9",
          "commit": {
            "abbreviatedOid": "ac14a34"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T13:51:29Z",
          "updatedAt": "2024-04-16T13:51:29Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nIn {{RFC7523}}, the Authorization Server (AS) verifies Private Key JWT client authentication requests, and issues access tokens to clients configured to use \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\". This means the AS initially acts as a \"verifier\", and then later as an \"issuer\". This mirrors how Signed Statements are verified before Receipts are issued by a Transparency Service.\r\n```",
              "createdAt": "2024-04-16T13:51:29Z",
              "updatedAt": "2024-04-16T13:51:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53bnJy",
          "commit": {
            "abbreviatedOid": "ac14a34"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T13:53:38Z",
          "updatedAt": "2024-04-16T13:53:38Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nNIST guidance \"Software Supply Chain Security Guidance EO 14028\" uses the definition from {{ISO.17000.2020}}, which states that an \"attestation\" is \"The issue of a statement, based on a decision, that fulfillment of specified requirements has been demonstrated.\". In the RATS context, a \"NIST attestation\" is similar to a RATS \"Endorsement\". Occasionally, RATS Evidence and RATS Attestation Results or the procedures of creating these conceptual messages are referred to as \"attestation\" or (in cases of the use as a verb) \"to attest\". The stand-alone use of \"attestation\" and \"to attest\" is discouraged outside a well-defined context, such as specification text that highlights the application of terminology, explicitly. Correspondingly, it is often useful for the intended audience to qualify the term \"attestation\" to avoid confusion and ambiguity.\r\n```",
              "createdAt": "2024-04-16T13:53:38Z",
              "updatedAt": "2024-04-16T13:53:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53bokW",
          "commit": {
            "abbreviatedOid": "ac14a34"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T13:55:24Z",
          "updatedAt": "2024-04-16T13:55:24Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "We've got lots of detail on RATS here, but did we clearly communicate how \"attestation\" is related to scitt signed statements and receipts?\r\n\r\nPerhaps we should say: Issuer issue/assert signed statements, the do not attest them. Transparency services issue/assert receipts, they do not attest them. ",
              "createdAt": "2024-04-16T13:55:24Z",
              "updatedAt": "2024-04-16T13:56:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53b0iK",
          "commit": {
            "abbreviatedOid": "ac14a34"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T14:13:38Z",
          "updatedAt": "2024-04-16T14:13:38Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "> Perhaps we should say: Issuer issue/assert signed statements, the do not attest them\r\n\r\n\"to attest\"? Hm... not recommending that phrasing. Yes, we communicated how RATS conceptual relate to SCITT above. Here we basically say: attestation can be a confusing term, take care using it.",
              "createdAt": "2024-04-16T14:13:38Z",
              "updatedAt": "2024-04-16T14:13:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53ezQi",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T20:41:39Z",
          "updatedAt": "2024-04-16T20:41:40Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "@henkbirkholz, I'm resolving per today's discussion. Please re-activate if needed. ",
              "createdAt": "2024-04-16T20:41:39Z",
              "updatedAt": "2024-04-16T20:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53ezgE",
          "commit": {
            "abbreviatedOid": "d3a6549"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T20:42:21Z",
          "updatedAt": "2024-04-16T20:42:21Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "@henkbirkholz, I'm resolving per today's conversation. Please activate if needed. ",
              "createdAt": "2024-04-16T20:42:21Z",
              "updatedAt": "2024-04-16T20:42:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 229,
      "id": "PR_kwDOIvmHss5sLUlh",
      "title": "Update diagram lines",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/229",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Minor tweak to separating the lines for different properties\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/e5ca06a8-1cd5-47ab-a711-671133f6a9ae)\r\n\r\n",
      "createdAt": "2024-04-09T21:00:41Z",
      "updatedAt": "2024-04-16T14:32:54Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/diagram-update",
      "headRefOid": "c30bcbb49149a50ceaa8221fbb72ae2b8f1a6986",
      "closedAt": "2024-04-16T14:32:39Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I am not trying to be pedantic and onerous here, so I apologize in advance. Don't you have to \"envelope\" the statements with encoding and signing and the arrows cannot, in fact, be separated?\r\n\r\nActually, you bring up a great point. I originally only separated the Transparent Statement as there are separate properties for the receipt in the unprotected header and the signed statement. \r\nLet me take another pass on it. Thanks, @aj-stein-nist, great catch.",
          "createdAt": "2024-04-15T19:35:45Z",
          "updatedAt": "2024-04-15T19:35:45Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated to reflect: \r\n- Issuers make Statements about Artifacts\r\n- Issuers, through Identity Documents sign the payload and protected header to create Signed Statements, which are COSE Sign1 envelopes\r\n- A transparent statement is a Signed Statement with the receipt in the unprotected header\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/fbd12024-2313-4233-97f6-7f4f10167179)\r\n",
          "createdAt": "2024-04-15T21:57:13Z",
          "updatedAt": "2024-04-15T21:57:13Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "What are statements? ... forget about SCITT for a second and just consider COSE.\r\n\r\nCOSE has Payloads (content with a way to express its media type)\r\nCOSE has Claims (Something an issuer says about a subject, or more formally, predicates asserted by issuers).\r\n\r\nSCITT has Statements, which have become a confusing mix of both Claims and Payloads.\r\n\r\nIMO:\r\n\r\nA Statement is a COSE Envelope with claims in the header, and an artifact in the payload.\r\nA Signed Statement is just a Statements with a Signature.\r\n\r\n",
          "createdAt": "2024-04-16T14:20:52Z",
          "updatedAt": "2024-04-16T14:22:51Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Delete the arrow from \"Identity Document\" to \"Signed Statement\", that has no label (preserve the arrow that says \"COSE Signing\").",
          "createdAt": "2024-04-16T14:32:52Z",
          "updatedAt": "2024-04-16T14:32:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss53UOgj",
          "commit": {
            "abbreviatedOid": "0b241a3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I am not trying to be pedantic and onerous here, so I apologize in advance. Don't you have to \"envelope\" the statements with encoding and signing and the arrows cannot, in fact, be separated?",
          "createdAt": "2024-04-15T17:32:56Z",
          "updatedAt": "2024-04-15T17:33:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 230,
      "id": "PR_kwDOIvmHss5sgkI7",
      "title": "Remove distributed from intro",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/230",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addressing feedback to the SCITT alias\r\n> 1)\tThe introduction discusses distributed, but there is no real discussion of how or what that means and it leads readers to set an expectation that is incorrect.  This word should be deleted.",
      "createdAt": "2024-04-12T16:11:34Z",
      "updatedAt": "2024-05-25T16:02:21Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/review-feedback-1",
      "headRefOid": "7e2a924a5fcffee286078352ae2cad8409834f09",
      "closedAt": "2024-04-16T14:52:31Z",
      "mergedAt": "2024-04-16T14:52:31Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a66e55bac2c69edab186f329d15feeeb20b36ba7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss53RjNI",
          "commit": {
            "abbreviatedOid": "7e2a924"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-15T13:18:36Z",
          "updatedAt": "2024-04-15T13:18:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53cCFh",
          "commit": {
            "abbreviatedOid": "7e2a924"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-16T14:33:56Z",
          "updatedAt": "2024-04-16T14:33:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53cCLJ",
          "commit": {
            "abbreviatedOid": "7e2a924"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "simplification",
          "createdAt": "2024-04-16T14:34:04Z",
          "updatedAt": "2024-04-16T14:34:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 231,
      "id": "PR_kwDOIvmHss5shRnW",
      "title": "issuer authentication is temporal and subjective",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/231",
      "state": "MERGED",
      "author": "robinbryce",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Hi all,\r\n\r\nThis PR comes from a place that agrees: If using an identity scheme, then yes, it must be used in maner consistent with that scheme, But aslo that\r\n\r\n1. There is no identity scheme we could all agree on as universally applicable or agreable, further, the space continues to evolve.\r\n\r\nAnd,\r\n\r\n2. The trustworthiness or otherwise of issuers identity, in the context of a transparency ledger, is temporal and subjective in nature. It's just a question of time frame. This means that regardless of registration time checks, relying parties, auditors and general consumers will have to re evaluate regardless. And will do so according to their own subjective context. Remembering that \"It can never be assumed that some Issuers and some Transparency Services will not be corrupt.\". And also \"A Verifier SHOULD validate a Transparent Statement originating from a given Issuer\" ... \"and would not depend on any other Issuer or Transparency Services.\"\r\n\r\nIt does seem obvious that,\r\n\r\n3. Syntactic validation of the issuer identity claims makes good sense and supports interoperability.\r\n\r\nBut,\r\n\r\n4. Specifying a single identity scheme in the core architecture as \"minimally required\" does not meaningfully help interoperability when there is no single agreeable scheme, and especially when a TS may be used to underpin identity schemes themselves.\r\n\r\nRegarding the burden on Relying Parties and Auditors,\r\n\r\n5. The definition for \"Relying Party\" states \"a Relying Parties consumes Transparent Statements, verifying their proofs and inspecting the Statement payload, either before using corresponding Artifacts, or later to audit an Artifact's provenance on the supply chain\". IOW: Relying parties are already expected to deeply consider statements. Assessing the identity asserted by the issuer, at the time the artifact is being considered, seems to be a natural and useful part of that process.\r\n6. Registration Auditability: Requiring that Transparency Services \"enough information is made available to Auditors\" ... \"to authenticate and retrieve the Transparent Statements\" is essentially impossible to specify at this level, imposes un-bounded maintenance and storage issues on implementations, and represents a significant layering violation in the architecture.\r\n\r\n",
      "createdAt": "2024-04-12T18:12:25Z",
      "updatedAt": "2024-04-17T17:43:06Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "91383884bcb3a8cdf2b6db7bca4204fbeec853a9",
      "headRepository": "robinbryce/draft-ietf-scitt-architecture",
      "headRefName": "robin/issuer-authentication-is-temporal-and-subjective",
      "headRefOid": "78008ea71b41200eff8941ca56e1addcbdc25e1d",
      "closedAt": "2024-04-17T17:43:06Z",
      "mergedAt": "2024-04-17T17:43:06Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "3ab2dd2d6623b4f81d63dad3a850320cb5908ca3"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Editors meeting: will wait 24hours for reviews, with merger if no objections.",
          "createdAt": "2024-04-16T14:51:45Z",
          "updatedAt": "2024-04-16T14:51:45Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Per the editors meeting, I've merged the discussed changes and resolved the discussed topics. \r\nI've opened #236 to track the MUST/Should discussion, which wasn't part of this PR.\r\nPlease review and we'll merge Wednesday morning US Pacific time if there are no objections. I'll incorporate agreed suggestions as well.",
          "createdAt": "2024-04-17T04:30:56Z",
          "updatedAt": "2024-04-17T04:32:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging with no other feedback.",
          "createdAt": "2024-04-17T17:43:04Z",
          "updatedAt": "2024-04-17T17:43:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss53KlU7",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-13T13:30:43Z",
          "updatedAt": "2024-04-13T13:34:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Why not should? What happens if this guidance is ignored?",
              "createdAt": "2024-04-13T13:30:43Z",
              "updatedAt": "2024-04-13T13:34:54Z"
            },
            {
              "originalPosition": 15,
              "body": "Better to reference an RFCs.. also validation vs verification.",
              "createdAt": "2024-04-13T13:31:40Z",
              "updatedAt": "2024-04-13T13:34:54Z"
            },
            {
              "originalPosition": 19,
              "body": "I think roots can be regular public keys in second cases, even when x509 is used... But it would be good to check with experts on this",
              "createdAt": "2024-04-13T13:33:27Z",
              "updatedAt": "2024-04-13T13:34:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53KncA",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T14:19:16Z",
          "updatedAt": "2024-04-13T14:19:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Yes, I think SHOULD is better for a Relying Party (if MAY is good enough they are not really Relying). The use of MAY regarding registration policy reflects my understanding of those as a very open ended beast. It is not clear to me that a Registration Policy is the only legitemate way to communicate that information ?",
              "createdAt": "2024-04-13T14:19:16Z",
              "updatedAt": "2024-04-13T14:25:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53KvDs",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T15:34:23Z",
          "updatedAt": "2024-04-13T15:34:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nTransparency Services MUST also maintain a list of trust anchors, which SHOULD be used by Relying Parties to authenticate Issuers, and which MAY be included in a registration policy statement.\r\n```",
              "createdAt": "2024-04-13T15:34:23Z",
              "updatedAt": "2024-04-13T15:34:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53KvFN",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with the suggested changes\r\n- [SHOULD ](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/231#discussion_r1564059711)\r\n- [Add RFCs](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/231#discussion_r1564034080)",
          "createdAt": "2024-04-13T15:35:32Z",
          "updatedAt": "2024-04-13T15:37:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53Kvoo",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T15:54:21Z",
          "updatedAt": "2024-04-13T15:54:21Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "re validation vs verification. \"by validating the COSE signature\" came from the original wording. Would \"by cryptographically verifying the COSE signature\" be better ?",
              "createdAt": "2024-04-13T15:54:21Z",
              "updatedAt": "2024-04-13T15:54:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53Kvvt",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T15:56:30Z",
          "updatedAt": "2024-04-13T15:56:30Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "If that passes muster with expert review, then I would happily take suggested wording to that effect",
              "createdAt": "2024-04-13T15:56:30Z",
              "updatedAt": "2024-04-13T15:56:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53K_S_",
          "commit": {
            "abbreviatedOid": "5bae4e8"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T22:42:28Z",
          "updatedAt": "2024-04-13T22:42:32Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "If we do not define in effective terms what a registration policy is and what are its minimal mandatory elements (not arguing with this I agree with that for now) generally, how can we make this change a MUST?",
              "createdAt": "2024-04-13T22:42:28Z",
              "updatedAt": "2024-04-13T22:42:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53K_gO",
          "commit": {
            "abbreviatedOid": "5bae4e8"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-13T22:55:46Z",
          "updatedAt": "2024-04-13T22:55:46Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "yep, good point. i would like it to be a SHOULD",
              "createdAt": "2024-04-13T22:55:46Z",
              "updatedAt": "2024-04-13T22:55:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53SwGv",
          "commit": {
            "abbreviatedOid": "5bae4e8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-15T15:18:22Z",
          "updatedAt": "2024-04-15T15:18:22Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I believe this is threading the needle, saying a registered statement must have enough info for it to be auditable, while leaving the details to be implementation-specific. Otherwise, what's the point? \r\nThe [Registration Policies section](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#name-registration-policies) defines this:\r\n> This specification leaves implementation, encoding and documentation of Registration Policies and trust anchors to the operator of the Transparency Service.",
              "createdAt": "2024-04-15T15:18:22Z",
              "updatedAt": "2024-04-15T15:18:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53S1vs",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-15T15:28:26Z",
          "updatedAt": "2024-04-15T15:28:26Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Yes, that was exactly the intent",
              "createdAt": "2024-04-15T15:28:26Z",
              "updatedAt": "2024-04-15T15:28:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53cD4n",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "good enough",
          "createdAt": "2024-04-16T14:36:40Z",
          "updatedAt": "2024-04-16T14:36:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53cGpC",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T14:40:50Z",
          "updatedAt": "2024-04-16T14:40:50Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "The introduction of commitments here is a concern.  Can we use an existing term instead of adding a new one.",
              "createdAt": "2024-04-16T14:40:50Z",
              "updatedAt": "2024-04-16T14:40:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53cIyL",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-04-16T14:44:04Z",
          "updatedAt": "2024-04-17T04:29:34Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Others are free to approve, I will not approve without the change below.\r\n\r\n```suggestion\r\nTransparency Services SHOULD ensure that for any Signed Statement they register, enough information is made available to Auditors (either in the Append-only Log and retrievable through audit APIs, or included in the Receipt) to reproduce the Registration checks that were defined by the Registration Policies at the time of Registration.\r\n```\r\n\r\nIf not, I expect a cross-linked PR to explicate all the registration policy specification that was removed in the past (for lack of alignment and ambiguity and generalities) and explicate it all. The WG considered this not ideal in previous editorial review, so I assume this alternative approach is unlikely. So I would change it to SHOULD.",
              "createdAt": "2024-04-16T14:44:04Z",
              "updatedAt": "2024-04-16T14:44:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53cLhF",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T14:48:11Z",
          "updatedAt": "2024-04-16T14:48:12Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nThe Issuer identity MUST be bound to the Signed Statement by including an identifier in the protected header.\r\n```",
              "createdAt": "2024-04-16T14:48:12Z",
              "updatedAt": "2024-04-16T14:48:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53cMWo",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-16T14:49:28Z",
          "updatedAt": "2024-04-16T14:49:28Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nIf the protected header includes multiple identifiers, all those that are registered by the Transparency Service MUST be checked.\r\n```",
              "createdAt": "2024-04-16T14:49:28Z",
              "updatedAt": "2024-04-16T14:49:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53gW6-",
          "commit": {
            "abbreviatedOid": "9ee87f9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-17T04:00:47Z",
          "updatedAt": "2024-04-17T04:00:47Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Agreed, a new term \"commitment\" is something we'd like to avoid\r\nCan folks please review the [suggestion from the editors meeting for using \"identifier'](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/231/files#r1567497546). Please +1, -1, or propose an alternative on that suggestion, .",
              "createdAt": "2024-04-17T04:00:47Z",
              "updatedAt": "2024-04-17T04:00:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53gXm1",
          "commit": {
            "abbreviatedOid": "5bae4e8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-17T04:04:45Z",
          "updatedAt": "2024-04-17T04:04:45Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "@aj-stein-nist, I agree the MUST/SHOULD warrants some more discussion. Purely from a focus of the changes in this PR perspective, can we open a separate PR for tracking the normative references without more clarity on details?",
              "createdAt": "2024-04-17T04:04:45Z",
              "updatedAt": "2024-04-17T04:04:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53gYno",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-17T04:09:27Z",
          "updatedAt": "2024-04-17T04:09:28Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Since we discussed \"identifier\" this morning, I committed the change. But, folks can still make suggestions for alternatives. ",
              "createdAt": "2024-04-17T04:09:27Z",
              "updatedAt": "2024-04-17T04:09:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53gYx2",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-17T04:10:20Z",
          "updatedAt": "2024-04-17T04:10:21Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nDuring registration, a Transparency Service MUST, at a minimum, syntactically check the Issuer of the Signed Statement by cryptographically verifying the COSE signature according to {{RFC9052}}.\r\n```",
              "createdAt": "2024-04-17T04:10:20Z",
              "updatedAt": "2024-04-17T04:10:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53gY_5",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-17T04:11:26Z",
          "updatedAt": "2024-04-17T04:11:26Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-04-17T04:11:26Z",
              "updatedAt": "2024-04-17T04:11:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53gZHD",
          "commit": {
            "abbreviatedOid": "03220eb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-17T04:12:08Z",
          "updatedAt": "2024-04-17T04:12:08Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-04-17T04:12:08Z",
              "updatedAt": "2024-04-17T04:12:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 233,
      "id": "PR_kwDOIvmHss5sib0q",
      "title": "Update Transparent Statement to Signed Statement. ",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/233",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "from [scitt alias feedback](https://mailarchive.ietf.org/arch/msg/scitt/O3nkTYsEqYzA-DF1wVW-Q7cpJn4/):\r\n> In section 4.1.1.2 it alludes that an auditor can mine the log to authenticate and retrieve the transparent statement.  Based on the last statement this has two problems.  The first it assumes that the signed statement is kept and that it can generate a new receipt (see 3) and produce a transparent statement.  If it could this would be equivalent to the original in intent but not binary equal.   The original receipt (or last created receipt from a refresh) is not required (or intended) to be kept in the ledger.  Generically then this is impossible and may be where we would leverage consistency proofs in a later version.\r\n\r\n\r\n\r\n",
      "createdAt": "2024-04-12T21:52:21Z",
      "updatedAt": "2024-05-25T16:02:19Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/review-feedback-5",
      "headRefOid": "198573fbacfae1790d4c6dd6e2ea93003f88895a",
      "closedAt": "2024-04-16T14:56:42Z",
      "mergedAt": "2024-04-16T14:56:42Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "7258bbbfa0750bacb412c46e2f8ac35d16bac215"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss53cPlF",
          "commit": {
            "abbreviatedOid": "198573f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-16T14:54:22Z",
          "updatedAt": "2024-04-16T14:54:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53cPrP",
          "commit": {
            "abbreviatedOid": "198573f"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "May be we have to tighten up the you can retrieve the signed statement to something in the future that may only get the hash",
          "createdAt": "2024-04-16T14:54:31Z",
          "updatedAt": "2024-04-16T14:54:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53cQrI",
          "commit": {
            "abbreviatedOid": "198573f"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "MUST and \"enough\" does not seem suffi",
          "createdAt": "2024-04-16T14:56:03Z",
          "updatedAt": "2024-04-16T14:56:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "MUST and \"enough\" does not seem sufficient for a requirement.",
              "createdAt": "2024-04-16T14:56:03Z",
              "updatedAt": "2024-04-16T14:56:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss53cQ3x",
          "commit": {
            "abbreviatedOid": "198573f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "more correct than before, still a MUST that is tad bit hard to follow. the change in this scope is okay",
          "createdAt": "2024-04-16T14:56:21Z",
          "updatedAt": "2024-04-16T14:56:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 235,
      "id": "PR_kwDOIvmHss5sizPl",
      "title": "Clarify Identifier Headings",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/235",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "documentation"
      ],
      "body": "A few headings start with \"For X...\"\r\nSimply adds what the For is relating to.",
      "createdAt": "2024-04-12T23:13:23Z",
      "updatedAt": "2024-05-25T16:02:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9935ce01c68229c31aa9c1f322acfb0aa0c587b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/clarify-identifier-headings",
      "headRefOid": "ea14520571c5fb6b6698d1be886263d1435122cf",
      "closedAt": "2024-04-16T14:58:09Z",
      "mergedAt": "2024-04-16T14:58:09Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "91383884bcb3a8cdf2b6db7bca4204fbeec853a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss53Rf2-",
          "commit": {
            "abbreviatedOid": "ea14520"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-15T13:13:57Z",
          "updatedAt": "2024-04-15T13:13:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss53cR1K",
          "commit": {
            "abbreviatedOid": "ea14520"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-16T14:57:51Z",
          "updatedAt": "2024-04-16T14:57:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 237,
      "id": "PR_kwDOIvmHss5tLZuj",
      "title": "Redistributing the content of the Feed definition back to subject (and removing the Feed definition)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/237",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "so that Feed can be defined in an adjacent I-D outside of the architecture.",
      "createdAt": "2024-04-19T13:58:49Z",
      "updatedAt": "2024-05-25T16:01:28Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "3ab2dd2d6623b4f81d63dad3a850320cb5908ca3",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "wo-feed",
      "headRefOid": "5d7868249ae31205ae0b4af55e1504c6f4b19a41",
      "closedAt": "2024-05-14T14:30:44Z",
      "mergedAt": "2024-05-14T14:30:44Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "dd05c9070e0397bfac980f2beb290e03daeb8c1b"
      },
      "comments": [
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "This looks great!",
          "createdAt": "2024-04-19T14:18:35Z",
          "updatedAt": "2024-04-19T14:18:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss535bDy",
          "commit": {
            "abbreviatedOid": "389c0cd"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-19T14:09:03Z",
          "updatedAt": "2024-04-19T14:09:03Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\n: an identifier that represents the organization, device, user or entity responsible for securing Statements about supply chain Artifacts and Receipts.\r\n```",
              "createdAt": "2024-04-19T14:09:03Z",
              "updatedAt": "2024-04-19T14:09:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss535cp0",
          "commit": {
            "abbreviatedOid": "389c0cd"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-19T14:11:45Z",
          "updatedAt": "2024-04-19T14:11:45Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n: an identifier that represents the organization, device, user, entity or Artifact about which Statements (and Receipts) are made and by which a logical collection of Statements can be grouped.\r\n```",
              "createdAt": "2024-04-19T14:11:45Z",
              "updatedAt": "2024-04-19T14:11:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss535c4k",
          "commit": {
            "abbreviatedOid": "389c0cd"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for doing this.  If in the future we get to a higher level abstract in the charter this can come back.",
          "createdAt": "2024-04-19T14:12:10Z",
          "updatedAt": "2024-04-19T14:12:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss535dOO",
          "commit": {
            "abbreviatedOid": "389c0cd"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-19T14:12:48Z",
          "updatedAt": "2024-04-19T14:12:48Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nIn these cases, distinct Issuers might agree to use `Subject` to create a coherent sequence of Signed Statements about the same Artifact and Verifiers can leverage `Subject` to ensure completeness and Non-equivocation across Statements by identifying all Transparent Statements related to a specific subject.\r\n```",
              "createdAt": "2024-04-19T14:12:48Z",
              "updatedAt": "2024-04-19T14:13:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss535eAA",
          "commit": {
            "abbreviatedOid": "389c0cd"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-19T14:14:16Z",
          "updatedAt": "2024-04-19T14:14:16Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Add an example after this, where the issuers are library authors and the subject is a library with multiple dependencies.",
              "createdAt": "2024-04-19T14:14:16Z",
              "updatedAt": "2024-04-19T14:14:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss535g6n",
          "commit": {
            "abbreviatedOid": "83cc763"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-04-19T14:18:55Z",
          "updatedAt": "2024-04-19T14:18:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss537SUh",
          "commit": {
            "abbreviatedOid": "83cc763"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-19T17:50:00Z",
          "updatedAt": "2024-04-19T17:50:00Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "replacing \"attesting\" with \"securing\" seems a bit confusing as what does \"securing mean\". Issuers make statements about artifacts. That is synonymous with Issuers attest...\r\n```suggestion\r\n: an identifier representing an organization, device, user, or entity securing Statements about supply chain Artifacts.\r\n```",
              "createdAt": "2024-04-19T17:50:00Z",
              "updatedAt": "2024-04-23T14:14:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54PveW",
          "commit": {
            "abbreviatedOid": "83cc763"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-23T14:11:04Z",
          "updatedAt": "2024-04-23T14:11:04Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I don't think we should us the word \"attest\"",
              "createdAt": "2024-04-23T14:11:04Z",
              "updatedAt": "2024-04-23T14:11:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54PykA",
          "commit": {
            "abbreviatedOid": "83cc763"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-23T14:15:39Z",
          "updatedAt": "2024-04-23T14:15:40Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I reverted 'attesting to' to 'securing'. @SteveLasker, that good enough?",
              "createdAt": "2024-04-23T14:15:40Z",
              "updatedAt": "2024-04-23T14:15:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54bL7-",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-24T16:33:26Z",
          "updatedAt": "2024-04-24T16:33:26Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n: an identifier that represents the organization, device, user, entity or Artifact about which Statements (and Receipts) are made and by which a logical collection of Statements, Receipts, Artifacts or additional relevant media can be grouped.\r\n```",
              "createdAt": "2024-04-24T16:33:26Z",
              "updatedAt": "2024-04-24T17:28:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54bMcW",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-24T16:34:21Z",
          "updatedAt": "2024-04-24T16:34:21Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Attempting to communicate that a subject can resolve to a collection of media, including but not limited to statements and receipts.",
              "createdAt": "2024-04-24T16:34:21Z",
              "updatedAt": "2024-04-24T16:34:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54bMr2",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-24T16:34:53Z",
          "updatedAt": "2024-04-24T16:34:53Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nIn these cases, distinct Issuers might agree to use `Subject` to create a coherent sequence of Signed Statements about the same Artifact and Verifiers can leverage `Subject` to ensure completeness and Non-equivocation across Statements by identifying all Transparent Statements associated to a specific subject.\r\n```",
              "createdAt": "2024-04-24T16:34:53Z",
              "updatedAt": "2024-04-24T16:34:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54bM1R",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "approved with nits",
          "createdAt": "2024-04-24T16:35:12Z",
          "updatedAt": "2024-04-24T16:35:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss54bcRi",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-24T17:06:22Z",
          "updatedAt": "2024-04-24T17:06:22Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Can you elaborate a bit. The subject is on the header of a statement. A statement payload can be anything, including a receipt that is re-registered. But, it's still a statement. ",
              "createdAt": "2024-04-24T17:06:22Z",
              "updatedAt": "2024-04-24T17:06:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss54bmqb",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-24T17:27:49Z",
          "updatedAt": "2024-04-24T17:27:49Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "its less to do with \"subject\" which is a text string... and more to do with \"logical collection of...\" which is limited to specific media types or is not... current text suggests its limited, I disagree with that.",
              "createdAt": "2024-04-24T17:27:49Z",
              "updatedAt": "2024-04-24T17:27:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss55ejOM",
          "commit": {
            "abbreviatedOid": "df63069"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-03T12:38:14Z",
          "updatedAt": "2024-05-03T12:38:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss56XHbG",
          "commit": {
            "abbreviatedOid": "df63069"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Overall, it looks good. I do find the `Subject` bit confusing. If that is cleared up, I would approve.",
          "createdAt": "2024-05-13T14:26:14Z",
          "updatedAt": "2024-05-13T14:26:42Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Do we not specifically mean `sub` and not `Subject` if we are specifically talking about the key name in the CWT? I would presume so since we fenced it like code syntax in backticks.\r\n\r\n```suggestion\r\nIt is possible that there are multiple Statements about the same Artifact.\r\nIn these cases, distinct Issuers might agree to use `sub` to create a coherent sequence of Signed Statements about the same Artifact and Verifiers can leverage `sub` to ensure completeness and Non-equivocation across Statements by identifying all Transparent Statements associated to a specific subject.\r\n```",
              "createdAt": "2024-05-13T14:26:14Z",
              "updatedAt": "2024-05-13T14:26:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56XIdL",
          "commit": {
            "abbreviatedOid": "df63069"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-13T14:27:53Z",
          "updatedAt": "2024-05-13T14:27:57Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Also does that not need to be fixed here?\r\n\r\n```suggestion\r\nIn SCITT Statements and Receipts, `sub` is a member of the COSE header parameter `15: CWT_Claims` within the protected header of a COSE envelope.\r\n```",
              "createdAt": "2024-05-13T14:27:53Z",
              "updatedAt": "2024-05-13T14:27:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56YWXO",
          "commit": {
            "abbreviatedOid": "59e3dd2"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Minor style formatting issue that can be committed before merge, but I am otherwise ok with these changes.",
          "createdAt": "2024-05-13T16:42:11Z",
          "updatedAt": "2024-05-13T16:42:36Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Minor, non-blocking recommendation to make the formatting consistent between iss and the following referenced to sub in code fences that designate it is syntax.\r\n\r\n```suggestion\r\nIn these cases, distinct Issuers (`iss`) might agree to use the `sub` CWT Claim to create a coherent sequence of Signed Statements about the same Artifact and Verifiers can leverage `sub` to ensure completeness and Non-equivocation across Statements by identifying all Transparent Statements associated to a specific subject.\r\n```",
              "createdAt": "2024-05-13T16:42:11Z",
              "updatedAt": "2024-05-13T16:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56bV2O",
          "commit": {
            "abbreviatedOid": "59e3dd2"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-13T23:46:30Z",
          "updatedAt": "2024-05-13T23:46:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss56d4LA",
          "commit": {
            "abbreviatedOid": "59e3dd2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Nice Work!\r\n\r\nLGTM!",
          "createdAt": "2024-05-14T08:27:46Z",
          "updatedAt": "2024-05-14T08:27:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss56g3LY",
          "commit": {
            "abbreviatedOid": "9214a52"
          },
          "author": "ad-l",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-14T13:47:16Z",
          "updatedAt": "2024-05-14T13:47:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss56hRX4",
          "commit": {
            "abbreviatedOid": "9214a52"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T14:19:37Z",
          "updatedAt": "2024-05-14T14:19:37Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n: an identifier that represents the organization, device, user, entity or Artifact about which Statements (and Receipts) are made and by which a logical collection of Statements can be grouped. A Subject refers to whatever the Issuer wants it to refer to. Examples include a Signed Statement or a Statement (payload of the Signed Statement) or a series of those.\r\n```",
              "createdAt": "2024-05-14T14:19:37Z",
              "updatedAt": "2024-05-14T14:22:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56hRyF",
          "commit": {
            "abbreviatedOid": "9214a52"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T14:20:06Z",
          "updatedAt": "2024-05-14T14:20:06Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "A little bit more colloquial, but maybe it is even better to be silent on this?",
              "createdAt": "2024-05-14T14:20:06Z",
              "updatedAt": "2024-05-14T14:20:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56hXNr",
          "commit": {
            "abbreviatedOid": "59607d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T14:26:12Z",
          "updatedAt": "2024-05-14T14:26:12Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I withdraw the suggestion.",
              "createdAt": "2024-05-14T14:26:12Z",
              "updatedAt": "2024-05-14T14:26:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56haeQ",
          "commit": {
            "abbreviatedOid": "9214a52"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T14:29:28Z",
          "updatedAt": "2024-05-14T14:29:28Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n: an identifier, defined by the Issuer, that represents the organization, device, user, entity, or Artifact about which Statements (and Receipts) are made and by which a logical collection of Statements can be grouped.\r\n```",
              "createdAt": "2024-05-14T14:29:28Z",
              "updatedAt": "2024-05-14T14:29:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 239,
      "id": "PR_kwDOIvmHss5vaYlh",
      "title": "Fix diagram, do imply ID docs inserted into TS",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/239",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Per discussion in today's editor meeting, fix the error in the diagram.",
      "createdAt": "2024-05-14T14:35:22Z",
      "updatedAt": "2024-05-14T18:39:45Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dd05c9070e0397bfac980f2beb290e03daeb8c1b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "chore-fix-diagram",
      "headRefOid": "ce89e598d1d60dbb22db76fe422437d8a144ceed",
      "closedAt": "2024-05-14T17:38:51Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "From the discussion today, the \"Identity Documents\" box refers to:\r\n\r\n**A.** Generally represent identity documents used for signing and verifying (private and public keys)\r\n**B.** Only represent the public key for verification\r\n**C.** Only represent the private key for signing\r\n\r\n**The Original drawing** represented A, but was missing an arrow into the Transparency Service, leaving interpretation there might be outbound content:\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/78a79843-3e8d-4a25-be19-be0d6d68e918)\r\n\r\n1. Sign the statement with a private key\r\n2. Both verify the signed statement using the public key from 1 above, and sign the receipt with a private key from a different identity document for the transparency service\r\n3. Verify the signed statement, or the receipt, with the public key of the identity\r\n4. Unsure what this represents as it seems duplicative with 1\r\n\r\n**This PR** resolves the directionality concern raised in the meeting, but didn't resolve the inconsistent use of identity documents representing the private and public keys:\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/10e2d039-d61f-4d9b-a8e7-b7a3248a714f)\r\n\r\n1. Sign the statement with a private key\r\n2. Removes the directionality, but removes the reference to the transparency service having the public key for verification\r\n3. Maintain the reference to verifying the signed statement, or the receipt, with the public key of the identity - Inconsistent with 2 above\r\n4. Unsure what this represents as it seems duplicative with 1\r\n\r\nIf we use **Identity Documents to represent Public Keys for verification only**, would this be the accurate image:\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/9ce078b4-32dc-44bc-8c2e-02ba8a9975de)\r\n\r\n1. -N/A\r\n2. Verify the signed statement using the public key from 1 above, although we removed the line for 1\r\n3. Maintain the reference to verifying the signed statement, or the receipt, with the public key of the identity \r\n4. Unsure what this represents as it seems duplicative with 1\r\n\r\nSuggestion to have Identity Documents represent the private and public keys used to represent an Identity, showing how Identity is key to signing and verification steps\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/3d60dd40-6739-481f-99ed-4efe3cb102a5)\r\n\r\n1. Sign the statement with a private key\r\n2. Both verify the signed statement using the public key from 1 above, and sign the receipt with a private key from a different identity document for the transparency service\r\n3. Verify the signed statement, or the receipt, with the public key of the identity\r\n4. removed as it was duplicative with 1\r\n\r\nTo elaborate a bit further, I've made PR #240 to represent the above, with a little more clarity the box of identity documents represents the ability to sign or verify\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/8c60f369-5921-4a4d-ab62-6bb09560226f)\r\n\r\n",
          "createdAt": "2024-05-14T17:23:16Z",
          "updatedAt": "2024-05-14T17:27:03Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "I saw the analysis, I am not sure I agree with the conclusions, but I am not going to hold up the WG effort on the draft over this. It is a minor detail. I am closing this now in favor of #240 anyway since this will not get merged. Thanks for the explanation and background.",
          "createdAt": "2024-05-14T17:38:51Z",
          "updatedAt": "2024-05-14T17:38:51Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss56hgfz",
          "commit": {
            "abbreviatedOid": "e3dd3b0"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-14T14:37:04Z",
          "updatedAt": "2024-05-14T14:37:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n        | Statement +<------------------'           |\r\n```",
              "createdAt": "2024-05-14T14:37:04Z",
              "updatedAt": "2024-05-14T14:37:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss56huOQ",
          "commit": {
            "abbreviatedOid": "ce89e59"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This PR should be merged.",
          "createdAt": "2024-05-14T14:54:50Z",
          "updatedAt": "2024-05-14T14:54:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss56jEqs",
          "commit": {
            "abbreviatedOid": "ce89e59"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This solves the directional flow issue raised in the editors meeting, but created inconsistency for using the identity documents for signing and verification.\r\n\r\nSee [comment on this PR](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/239#issuecomment-2110755927), and PR #240 for the suggestion",
          "createdAt": "2024-05-14T17:28:52Z",
          "updatedAt": "2024-05-14T17:28:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss56jkh-",
          "commit": {
            "abbreviatedOid": "ce89e59"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "The other suggestion is to simply add directionality at the TS, while maintaining the curve to the signed statement. \r\nSuggestions to lines 342 and 343\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/b973377e-6ede-409d-b744-1c6e70b62ea2)",
          "createdAt": "2024-05-14T18:38:17Z",
          "updatedAt": "2024-05-14T18:39:45Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The other suggestion is to simply add directionality at the TS, while maintaining the curve to the signed statement\r\n```suggestion\r\n        | Statement +<------------------'|          |\r\n```\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/b973377e-6ede-409d-b744-1c6e70b62ea2)\r\n\r\nWhich also needs the suggestion in line 343",
              "createdAt": "2024-05-14T18:38:17Z",
              "updatedAt": "2024-05-14T18:39:45Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n         '----+----'                     v          |\r\n```",
              "createdAt": "2024-05-14T18:38:52Z",
              "updatedAt": "2024-05-14T18:39:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 240,
      "id": "PR_kwDOIvmHss5vbhYp",
      "title": "Suggestion to PR #239",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/240",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR over #239 to clarify Identity Documents are used for Signing and Verifying in the Architecture conceptual diagram:\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/a404b2c2-4597-49e3-a8d9-29793a130139)\r\n\r\n1. Sign the statement with a private key\r\n2. Both verify the signed statement using the public key from 1 above, and sign the receipt with a private key from a different identity document for the transparency service\r\n3. Verify the signed statement, or the receipt, with the public key of the identity\r\n\r\n_Note: I've updated the diagram to reflect the latest pr_",
      "createdAt": "2024-05-14T17:22:48Z",
      "updatedAt": "2024-05-25T16:01:05Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dd05c9070e0397bfac980f2beb290e03daeb8c1b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/sign-verify-diagram",
      "headRefOid": "53479cff2e12d83536df1bbdefeecb113a3bbae8",
      "closedAt": "2024-05-21T14:26:10Z",
      "mergedAt": "2024-05-21T14:26:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a53bb6f5879432e0dae832de38da6b2e219e6641"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Instead of pulling Sign/Verify into the box, I'd but a\r\n```\r\nCOSE\r\nVerify\r\n```\r\nclose to where the number (2) is, right of the \"new\" straight arrow down.\r\n\r\nI get A.J.'s comment, but I do not hate this, too.",
          "createdAt": "2024-05-16T09:29:25Z",
          "updatedAt": "2024-05-16T09:29:25Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> 3. Verify the signed statement, or the receipt, with the public key of the identity\r\n\r\nI assume (3) also applies to the \"Verify Transparent Statement\" function?\r\n",
          "createdAt": "2024-05-16T10:08:03Z",
          "updatedAt": "2024-05-16T10:08:03Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> I assume (3) also applies to the \"Verify Transparent Statement\" function?\r\n\r\nOh, I fell in the trap of tracing the lines. Yes, (3) should be moved. I'll update",
          "createdAt": "2024-05-16T17:57:00Z",
          "updatedAt": "2024-05-16T17:57:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Instead of pulling Sign/Verify into the box, I'd but a\r\n> \r\n> ```\r\n> COSE\r\n> Verify\r\n> ```\r\n> \r\n> close to where the number (2) is, right of the \"new\" straight arrow down.\r\n\r\nHow's this look, w/comparison to the current draft. \r\nWith some thumbs up, I'll apply the change to the PR:\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/d77552ba-1eff-4e78-a8e1-08b66c976058)",
          "createdAt": "2024-05-16T18:20:09Z",
          "updatedAt": "2024-05-16T18:32:35Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> How's this look. If I get thumbs up, I'll apply the change to the PR\r\n\r\nBut you are not verifying the identity documents, you are verifying something related to those identity documents in the signed statement. This goes back to my preference of \"less is more\" and avoiding lines to convey this kind of complexity.",
          "createdAt": "2024-05-16T18:32:41Z",
          "updatedAt": "2024-05-16T18:32:41Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> But you are not verifying the identity documents, you are verifying something related to those identity documents in the signed statement. \r\n\r\nTrue, we're not _verifying_ the identity documents. The identity documents _are being used to_ sign or verify signed statements. I was intending the verbs to be applied to the directionality of the arrows\r\n\r\n> This goes back to my preference of \"less is more\" and avoiding lines to convey this kind of complexity.\r\n\r\nI'd be ok with removing the lines, but the identity documents box was added to help signify SCITT brings together a triple of Issuers making Statements about Artifacts\r\n\r\n",
          "createdAt": "2024-05-16T18:43:20Z",
          "updatedAt": "2024-05-16T18:43:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Would this help:\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/968c6679-549c-4aa4-a617-e45384740ea8)\r\n",
          "createdAt": "2024-05-16T19:10:38Z",
          "updatedAt": "2024-05-16T19:10:38Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Was `COSE signing` somehow bad? Would a complementary `COSE verifying` have worked?",
          "createdAt": "2024-05-17T10:20:00Z",
          "updatedAt": "2024-05-17T10:20:00Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> > But you are not verifying the identity documents, you are verifying something related to those identity documents in the signed statement.\r\n> \r\n> True, we're not _verifying_ the identity documents. The identity documents _are being used to_ sign or verify signed statements. I was intending the verbs to be applied to the directionality of the arrows\r\n\r\nAgain, then I would remove the line, it was the source of confusion. Because if you add the line, you start to need information beyond the visual semantics of a diagram. If anything, you are verifying the Signed Statement. I will mull over more constructive feedback for later today.\r\n",
          "createdAt": "2024-05-17T12:07:38Z",
          "updatedAt": "2024-05-17T12:07:38Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Was `COSE signing` somehow bad? Would a complementary `COSE verifying` have worked?\r\n\r\nNot at all, it just was a bit longer, trying to keep the image content smaller. I'll make a tweak, moving the box to the left.\r\n\r\n> then I would remove the line,\r\n\r\nWe either need to remove all the lines or keep them consistent. In PR #239, we removed the line to the Transparency Service which is used to verify signed statements from the issuer, and counter-sign statements from the Transparency Service, but left the line to the Transparent Statement.\r\n\r\n> you are verifying the Signed Statement\r\n\r\nYes, the notary, within the Transparency Service, verifies the identity of the signed statement, before counter-signing.  That's the left split of the \"to verify\" line.  \r\n\r\nThe other verify line could go to receipts which can be verified (but too crowded), or the Transparent Statement which is the Registered Statement (we didn't want to identify with a name) with the receipt attached. \r\n\r\nThe way I'm reading the lines is the thing at the source is used to apply to the directionality of the arrow. The Identity Documents are used to _close_ sign or _close_ verify the item at the end of the arrow.\r\n\r\nHere are two different versions:\r\n\r\n**A: Keeping the sign/verify identity references where they're used**\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/7f87f25d-36ed-4fd1-a9b7-10d8b4534077)\r\n\r\n**B: Removing the sign/verify from the Transparency Service.**\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/c8b8fba6-36fa-4cf4-a03a-e5637e9a3f56)\r\n\r\nWhile B is a bit cleaner, it completely removes the value the Transparency Service provides by validating the identity documents coming into the Transparency Service. It shows the Append-only Log is a collection of statements from anyone that has write access to the Transparency Service, with no pre-qualification shown, putting all the burden on verifiers to do all the work.  At that point, why do we issue counter-signed receipts? \r\n",
          "createdAt": "2024-05-17T16:40:18Z",
          "updatedAt": "2024-05-17T16:40:18Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I do not hate the new \"(A) right\"\r\n\r\n[edit] B -> A",
          "createdAt": "2024-05-21T12:03:35Z",
          "updatedAt": "2024-05-21T14:18:31Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging to make forward progress.\r\nDiscussion in the meeting to converge Envelope and Signed Statement in a separate PR.",
          "createdAt": "2024-05-21T14:26:06Z",
          "updatedAt": "2024-05-21T14:26:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss56jHUd",
          "commit": {
            "abbreviatedOid": "3c2ddc6"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I am a believer in the tenet of less is more. As I had indicated, I do strongly prefer my original change (remove the line that denotes a direct relationship between identity documents and the TS itself), and think the diagram, as an abstraction that papers over the mechanics of an architecture and conforming implementation, should convey the general message. It should not (maybe even must not) get into specifics of nitpicking details. So, I am not sure I like adding back the line with the arrow the subsequent commits.\r\n\r\nI presume others in the WG agreed this change, which more or less returns the diagram to the original state, is preferable. I disagree it better communicates the intent after listening to author's answers to an implementer's question, but I will accept it for now.",
          "createdAt": "2024-05-14T17:34:50Z",
          "updatedAt": "2024-05-14T17:36:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57TGij",
          "commit": {
            "abbreviatedOid": "53479cf"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "> I will mull over more constructive feedback for later today.\r\n\r\nI thought about it more and more and the only constructive feedback I have is to remove lines from identity documents except as an input to the envelope. You can add more clarifying detail as labels on the lines, but I still do not find that particularly helpful.\r\n\r\nSo I will convert my approval to comment. If others have consensus on this and approve with me, I can support that to move the work forward, but I would prefer we remove additional context if it is not core to the document.",
          "createdAt": "2024-05-21T13:09:40Z",
          "updatedAt": "2024-05-21T13:09:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57Tur0",
          "commit": {
            "abbreviatedOid": "53479cf"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-21T14:13:00Z",
          "updatedAt": "2024-05-21T14:13:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57Tyco",
          "commit": {
            "abbreviatedOid": "53479cf"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "sure, why not",
          "createdAt": "2024-05-21T14:18:50Z",
          "updatedAt": "2024-05-21T14:18:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 241,
      "id": "PR_kwDOIvmHss5vpEjg",
      "title": "Conslidate normative lanugage on x5t and x5chain usage (plus SecConSec content)",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/241",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #222 ",
      "createdAt": "2024-05-16T10:03:57Z",
      "updatedAt": "2024-05-25T16:01:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a53bb6f5879432e0dae832de38da6b2e219e6641",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "x5chain-usage",
      "headRefOid": "76dbc35803964ddcb024035bf74513ba36a32940",
      "closedAt": "2024-05-21T15:30:28Z",
      "mergedAt": "2024-05-21T15:30:28Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c908b73f459d8c817bbb7be7f0e4369e703bb0e1"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "good enough!",
          "createdAt": "2024-05-21T14:34:18Z",
          "updatedAt": "2024-05-21T14:34:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss561G0w",
          "commit": {
            "abbreviatedOid": "8556320"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-05-16T13:23:27Z",
          "updatedAt": "2024-05-21T15:02:52Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Genuine sounds subjective.\r\n\r\n```suggestion\r\nIn addition to performing chain validation in accordance with PKIX rules specified in {{-PKIX}}, auditors should explicitly verify the root certificates.\r\n```",
              "createdAt": "2024-05-16T13:23:27Z",
              "updatedAt": "2024-05-16T13:29:39Z"
            },
            {
              "originalPosition": 18,
              "body": "We also still have the term \"Claim\" in [the terminology section](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/x5chain-usage/draft-ietf-scitt-architecture.html#section-2). Should we not remove that and replace it with this wording? Because of his git diffs work I cannot recommend that here, or I would do it for you, but this seems like an important change to not cause confusion down the road.\r\n\r\n",
              "createdAt": "2024-05-16T13:29:33Z",
              "updatedAt": "2024-05-16T13:29:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss569VMx",
          "commit": {
            "abbreviatedOid": "8556320"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-17T10:08:45Z",
          "updatedAt": "2024-05-17T10:08:45Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Not much lost here. I'd be okay with that suggestion.",
              "createdAt": "2024-05-17T10:08:45Z",
              "updatedAt": "2024-05-17T10:08:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57ScAE",
          "commit": {
            "abbreviatedOid": "940c673"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T12:01:01Z",
          "updatedAt": "2024-05-21T12:01:02Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Let's solve this in under 10 min meeting time and move one.",
              "createdAt": "2024-05-21T12:01:02Z",
              "updatedAt": "2024-05-21T12:01:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57T32_",
          "commit": {
            "abbreviatedOid": "940c673"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T14:27:18Z",
          "updatedAt": "2024-05-21T14:27:18Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "This is a throwaway, consider just removing this normative statement.",
              "createdAt": "2024-05-21T14:27:18Z",
              "updatedAt": "2024-05-21T14:27:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57T4ZP",
          "commit": {
            "abbreviatedOid": "940c673"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-21T14:28:07Z",
          "updatedAt": "2024-05-21T14:28:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57T8A7",
          "commit": {
            "abbreviatedOid": "940c673"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T14:33:44Z",
          "updatedAt": "2024-05-21T14:33:44Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Keeping this line puts context to how multiple Signed Signed Statements can be used. \r\nChanging to a colocial \"can\" to keep the description, without making it vague normative language. \r\n```suggestion\r\nIssuers can produce Signed Statements about different Artifacts under the same Identity.\r\n```",
              "createdAt": "2024-05-21T14:33:44Z",
              "updatedAt": "2024-05-21T14:33:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57UC_d",
          "commit": {
            "abbreviatedOid": "a1c01b6"
          },
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T14:44:48Z",
          "updatedAt": "2024-05-21T14:44:48Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nAuditors MUST perform certification path validation in accordance with PKIX rules specified in {{-PKIX}}.\r\nIn particular, auditors MUST verify that certification paths chain to one or more trust anchors (often represented as root certificates).\r\n```",
              "createdAt": "2024-05-21T14:44:48Z",
              "updatedAt": "2024-05-21T14:50:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57UH17",
          "commit": {
            "abbreviatedOid": "135e89b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T14:52:31Z",
          "updatedAt": "2024-05-21T14:52:32Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Editors call: agreeing to the content, question if this is the correct section, which we can move in another PR.",
              "createdAt": "2024-05-21T14:52:31Z",
              "updatedAt": "2024-05-21T14:52:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57UNmG",
          "commit": {
            "abbreviatedOid": "135e89b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-21T15:01:45Z",
          "updatedAt": "2024-05-21T15:01:45Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Agreed to remove claims in the terminology section.",
              "createdAt": "2024-05-21T15:01:45Z",
              "updatedAt": "2024-05-21T15:01:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss57UN0o",
          "commit": {
            "abbreviatedOid": "135e89b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-21T15:02:08Z",
          "updatedAt": "2024-05-21T15:02:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57UOqo",
          "commit": {
            "abbreviatedOid": "b127acd"
          },
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-21T15:03:32Z",
          "updatedAt": "2024-05-21T15:03:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57UUun",
          "commit": {
            "abbreviatedOid": "76dbc35"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the update. With the last commits and merge, I am happy with this change and have no other objections.",
          "createdAt": "2024-05-21T15:13:42Z",
          "updatedAt": "2024-05-21T15:13:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 242,
      "id": "PR_kwDOIvmHss5vpKSA",
      "title": "Removed note on CWT Claims",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/242",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #234 ",
      "createdAt": "2024-05-16T10:13:26Z",
      "updatedAt": "2024-05-25T16:03:22Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "dd05c9070e0397bfac980f2beb290e03daeb8c1b",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "fix-cwt-note",
      "headRefOid": "49e65576d1c17cefe5b4df438ca28db9ce68eff4",
      "closedAt": "2024-05-21T14:13:52Z",
      "mergedAt": "2024-05-21T14:13:52Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "035dd4408fd645646140dde16f719912f5573373"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> To be clear, this removal means CWT is mandatory for SCITT implementation and is no longer under discussion and evaluation?\r\n\r\nThis is how a SCITT Signed Statement associates an Issuer making a statement about an Artifact, which has been core to the draft from the start. \r\n\r\nPreviously, these were properties in the protected header, aligned with DIDs: See [draft 03](https://www.ietf.org/archive/id/draft-ietf-scitt-architecture-03.html#name-signed-statement-envelope) The use of `cwt_claims` was to align with other existing standards, for _how_ we associate these concepts. \r\n\r\nAn alternative is to lift these two properties, independently, to the protected header. We already have an `* int => any` in the protected header for additional properties, reducing the duplicity of `* int => any` in the cwt_claims and protected header, potentially simplifing the model.\r\n\r\nThe approach of using cwt claims allows users to benefit from existing cwt libraries, which seemed the better of the choices.",
          "createdAt": "2024-05-16T17:54:06Z",
          "updatedAt": "2024-05-16T17:54:06Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> > To be clear, this removal means CWT is mandatory for SCITT implementation and is no longer under discussion and \r\n>\r\n> The approach of using cwt claims allows users to benefit from existing cwt libraries, which seemed the better of the choices.\r\n\r\nOK so the answer is yes then. I am happy with it, but this is a small, tight PR deleting the editors note, I wanted to understand the implication before I (and maybe others) understand before I approve. \ud83d\ude04 \r\n",
          "createdAt": "2024-05-16T18:20:30Z",
          "updatedAt": "2024-05-16T18:20:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5604gB",
          "commit": {
            "abbreviatedOid": "49e6557"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-16T13:02:17Z",
          "updatedAt": "2024-05-16T13:02:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss561Rev",
          "commit": {
            "abbreviatedOid": "49e6557"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "To be clear, this removal means CWT is mandatory for SCITT implementation and is no longer under discussion and evaluation?",
          "createdAt": "2024-05-16T13:33:32Z",
          "updatedAt": "2024-05-16T13:33:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss564UkI",
          "commit": {
            "abbreviatedOid": "49e6557"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-16T18:20:39Z",
          "updatedAt": "2024-05-16T18:20:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss57ToTJ",
          "commit": {
            "abbreviatedOid": "49e6557"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-21T14:02:56Z",
          "updatedAt": "2024-05-21T14:02:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 245,
      "id": "PR_kwDOIvmHss5wYdO9",
      "title": "Unify Signed Statement & Envelope",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/245",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "henkbirkholz"
      ],
      "labels": [],
      "body": "Resolving the duplicity of a Signed Statement, which is a COSE Envelope.\r\n\r\nNOTE: Updating the image to reflect the PR's current state\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/7647382/b0de8d83-dbc1-4d48-8042-a2c5ca93a3cc)\r\n",
      "createdAt": "2024-05-23T21:19:52Z",
      "updatedAt": "2024-10-15T16:04:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c908b73f459d8c817bbb7be7f0e4369e703bb0e1",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/unify-signed-statement-env",
      "headRefOid": "dbaf0ad65d16c7bfda3eed086e717328e5754fe2",
      "closedAt": "2024-06-18T14:18:05Z",
      "mergedAt": "2024-06-18T14:18:05Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "3124f380f72de49d5a69c1f94524d01b4084f6af"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM2",
          "createdAt": "2024-06-18T14:22:01Z",
          "updatedAt": "2024-06-18T14:22:01Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "LGTM2",
          "createdAt": "2024-06-18T15:28:43Z",
          "updatedAt": "2024-06-18T15:28:43Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM, but the PR is already merged!!! \ud83d\udcaf ",
          "createdAt": "2024-06-18T16:16:45Z",
          "updatedAt": "2024-06-18T16:16:45Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss57sfcT",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-23T22:49:04Z",
          "updatedAt": "2024-05-23T22:49:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss58KVty",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-28T14:57:11Z",
          "updatedAt": "2024-05-28T14:57:43Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\n      .---------.  \r\n     |  Artifact |\r\n      '----+----'\r\n           |\r\n           v                    .-----------.\r\n      .----+----.              |  Identity   |\r\n     | Statement |             |  Documents  |\r\n      '----+----'               '---+--+----'\r\n           |           cose sign    |  | cose verify\r\n           |    .------------------'|  |\r\n           |   |                    |  |\r\n           v   v                    |  |'----------.\r\n       .---+---+-----.              |  |            |\r\n      |    Signed     |             |  |            |\r\n      |   Statement   |             |  |            |\r\n      | (COSE_Sign1)  |             |  |            |\r\n       '-------+-----'              v  v            |\r\n```",
              "createdAt": "2024-05-28T14:57:11Z",
              "updatedAt": "2024-05-28T14:57:43Z"
            },
            {
              "originalPosition": 33,
              "body": "Maybe like this?",
              "createdAt": "2024-05-28T14:57:38Z",
              "updatedAt": "2024-05-28T14:57:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss58LuyV",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T17:14:20Z",
          "updatedAt": "2024-05-28T17:14:20Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Per conversation in today's editor's meeting:\r\nI like the change for changing line 342 to include (Cose_Sign1)\r\n\r\nI'd like to continue the discussion for an artifact going into Statement. \r\n- A statement (and its type) is opaque to SCITT and I would assume any statement that is a stand-alone element of content should know what Artifact it's a statement about. \r\n- Knowing what the artifact is about, as a separate reference to SCITT enables the service communicate to verifiers. The `cwt_clamins.sub` is the property, very similar to the content-type is lifted to communicate and other signing properties. \r\n\r\nIssuers make statements about artifacts, which may be software, hardware, physical goods, they all transcend this triple.",
              "createdAt": "2024-05-28T17:14:20Z",
              "updatedAt": "2024-05-28T17:14:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss58MBV5",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T17:55:09Z",
          "updatedAt": "2024-05-28T17:55:10Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I pushed the (COSE_Sign1) change\r\nI found 19 references to \"envelope\" in the architecture",
              "createdAt": "2024-05-28T17:55:09Z",
              "updatedAt": "2024-05-28T17:55:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RBA-",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T13:23:44Z",
          "updatedAt": "2024-06-14T13:23:44Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Yeah, this is great actually. When we did this the first time around, as implementors new to the cose landscape, the link with COSE_Sign1 wasn't super clear. We essentially *guessed* that was the right thing. It is really helpful to call out the link between an abstract notion of a signed statement and its concrete realisation like this.",
              "createdAt": "2024-06-14T13:23:44Z",
              "updatedAt": "2024-06-14T13:24:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RFSa",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T13:31:44Z",
          "updatedAt": "2024-06-14T13:31:44Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "This architectural model fits well within our own implementation as well:\r\nA \"Trust Declaration\" (statement) is accompanied by an artifact (payload, i.e. SBOM, etc.) that is signed by a trusted party requesting to have the signed statement registered in a Trust Registry. \r\n\r\n100% support this model.",
              "createdAt": "2024-06-14T13:31:44Z",
              "updatedAt": "2024-06-14T13:31:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RTnA",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T13:57:47Z",
          "updatedAt": "2024-06-14T13:57:47Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "This is a minor nit but I will repeat another time that one could consider: have you ever made a statement about an artifact (software) for which the artifact is *not a necessary input*? Do SCRM tools never talk about the creator of the artifact or their host organization that is logically related, and not an input? We as a group seem focused on SBOM and an implied invariant that I am not sure is true 100% of the time, is every statement an explicit output from directly processing the artifact itself as the input? From experience, it is not always. These line changes confuse that, and should not even be in the diagram in my opinion.\r\n\r\nThis does not change the COSE structure or the document, but these minor changes in the diagram over-specify imply overly specific requirements that lead people astray. I will just repeat this comment, again, as this is why I am going to argue for removal the diagram soon.",
              "createdAt": "2024-06-14T13:57:47Z",
              "updatedAt": "2024-06-14T13:59:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RV6a",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T14:02:03Z",
          "updatedAt": "2024-06-14T14:02:04Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I would be opposed to removal of this diagram becasue it is an actual reflection of how several existing \"Trust Registry\" implementations work today, making it easy to adopt the SCITT vision in the Software Supply Chain (SCRM) when the protocol is finalized.",
              "createdAt": "2024-06-14T14:02:03Z",
              "updatedAt": "2024-06-14T14:02:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RZ8X",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T14:09:36Z",
          "updatedAt": "2024-06-14T14:09:37Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "An implementation should be a reflection of the full draft, diagram or not, to be conformant, correct?\r\n\r\nI am not sure a diagram without the use of the COSE structures defined in CDDL and the other normative references would be effective to design a system. Is that not an issue here?\r\n\r\nTrust Registry is not a notion in this I-D or in IETF, do you mean a Transparency Service? That is what is defined in the spec. That we add terms and deviate from the core requirements of the spec is my main concern, and generates a lot of discussion and churn so that very protocol is not finalized.",
              "createdAt": "2024-06-14T14:09:37Z",
              "updatedAt": "2024-06-14T14:12:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RdGx",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T14:15:30Z",
          "updatedAt": "2024-06-14T14:15:30Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "A Trust Registry is an implementation of a \"Transparency Service\" that is used to register trusted statements following \"registration policy\" criteria expressed by the operator (Gatekeeper) of a generic Transparency Service.",
              "createdAt": "2024-06-14T14:15:30Z",
              "updatedAt": "2024-06-14T14:15:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RqkP",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T14:39:32Z",
          "updatedAt": "2024-06-14T14:39:32Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Sure, but if we continue to add additional terms and concepts in this discussion, the diagram, and/or spec overall, we run the risk of perpetuating the same problem I have cited before: we are muddling the spec. ",
              "createdAt": "2024-06-14T14:39:32Z",
              "updatedAt": "2024-06-14T14:39:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-RuDM",
          "commit": {
            "abbreviatedOid": "bb98652"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-14T14:46:18Z",
          "updatedAt": "2024-06-14T14:46:18Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "We do not need to make any changes to the architecture because a \"generic\" Transparency Service can be instantiated to serve as a \"Trust Registry\" that contains specific artifacts/payloads and signed statements based on registration policy, very similar to the way a \"Registry of Deeds\" and a \"Registry of Motor Vehicles\" are both \"Trust Anchors\" for different legal artifacts. These could both be implemented as SCITT \"Trust Registries\" that follow the generic Transparency Service protocol defined in SCITT. This is how I see SCITT being used broadly, in addition to a \"Trust Registry\" of trusted digital products, such as software and IoT devices.",
              "createdAt": "2024-06-14T14:46:18Z",
              "updatedAt": "2024-06-14T14:46:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss5-mp8k",
          "commit": {
            "abbreviatedOid": "dbaf0ad"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-17T23:17:46Z",
          "updatedAt": "2024-06-17T23:17:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5-std6",
          "commit": {
            "abbreviatedOid": "dbaf0ad"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Extensive review, LGTM",
          "createdAt": "2024-06-18T14:13:20Z",
          "updatedAt": "2024-06-18T14:13:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 246,
      "id": "PR_kwDOIvmHss5ziTkb",
      "title": "Capitalized Terms",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/246",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #243 ",
      "createdAt": "2024-06-25T18:49:49Z",
      "updatedAt": "2024-10-15T16:05:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "3124f380f72de49d5a69c1f94524d01b4084f6af",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "term-caps",
      "headRefOid": "ac6c6978134ca6edc8eab4c34b2e4c57ce9a0af5",
      "closedAt": "2024-07-02T14:12:46Z",
      "mergedAt": "2024-07-02T14:12:46Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "55a11cdea971942e45101f125439294d30c88a5a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss5_hrX9",
          "commit": {
            "abbreviatedOid": "62abc72"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-25T18:53:52Z",
          "updatedAt": "2024-06-25T18:53:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss5_9E5m",
          "commit": {
            "abbreviatedOid": "ac6c697"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-28T00:01:09Z",
          "updatedAt": "2024-06-28T00:01:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6ASJ6f",
          "commit": {
            "abbreviatedOid": "ac6c697"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-01T20:59:45Z",
          "updatedAt": "2024-07-01T20:59:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6AYvDN",
          "commit": {
            "abbreviatedOid": "ac6c697"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-02T14:10:04Z",
          "updatedAt": "2024-07-02T14:10:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 247,
      "id": "PR_kwDOIvmHss5z2MrZ",
      "title": "External CDDL files and include for #244",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/247",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "This change externalizes the two normative definitions for transparent and signed statements, respectively, and adds them to the final draft with the kramdown `includes` directive. This change allows developers to use a git sub-module or programmatically use the git version of the spec to have utilities for code generation and other capabilities use the definitions without more cumbersome extraction routines for the source Markdown or RFC XML representations of the spec.\r\n\r\nBelow is a local eval copy of the HTML representation of the draft with the `include`d files properly integrated.\r\n\r\n![image](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/assets/94922603/db28cebc-b351-4271-8f5f-751c6615879c)\r\n",
      "createdAt": "2024-06-28T04:51:01Z",
      "updatedAt": "2024-10-15T16:05:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "3124f380f72de49d5a69c1f94524d01b4084f6af",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "244-import-cddl-from-files",
      "headRefOid": "c6e3b387ef1b9c7470beaa5454cd86cc5e8d5224",
      "closedAt": "2024-07-02T01:46:50Z",
      "mergedAt": "2024-07-02T01:46:50Z",
      "mergedBy": "aj-stein-nist",
      "mergeCommit": {
        "oid": "06c5b29a0446895fc2a319b60a6eba227b2a5e0b"
      },
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "It seems you cannot batch suggestions on mobile GitHub app. I'll do it later this evening.",
          "createdAt": "2024-07-01T22:26:09Z",
          "updatedAt": "2024-07-01T22:26:09Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6ASM0i",
          "commit": {
            "abbreviatedOid": "f09f582"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I was expecting this to require changes to `make`, but this just worked. Thanks for the update, @aj-stein-nist \r\nLGTM with two line nits",
          "createdAt": "2024-07-01T21:09:18Z",
          "updatedAt": "2024-07-01T21:11:46Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-07-01T21:09:18Z",
              "updatedAt": "2024-07-01T21:11:46Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n}\r\n\r\n```",
              "createdAt": "2024-07-01T21:11:05Z",
              "updatedAt": "2024-07-01T21:11:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 248,
      "id": "PR_kwDOIvmHss50PBfB",
      "title": "Update draft-ietf-scitt-architecture.md",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/248",
      "state": "MERGED",
      "author": "roywill",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updated the auditor's definition",
      "createdAt": "2024-07-02T18:43:04Z",
      "updatedAt": "2024-07-02T18:45:51Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "issue-236",
      "baseRefOid": "3124f380f72de49d5a69c1f94524d01b4084f6af",
      "headRepository": "roywill/draft-ietf-scitt-architecture-Issue-45",
      "headRefName": "patch-3",
      "headRefOid": "b5dde619a9fcf33c790764c3448826467272ea2a",
      "closedAt": "2024-07-02T18:45:51Z",
      "mergedAt": "2024-07-02T18:45:51Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "9f0eb29d2190c1b5a04031f2934d9ccde9c72426"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6AbLNT",
          "commit": {
            "abbreviatedOid": "b5dde61"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-02T18:44:43Z",
          "updatedAt": "2024-07-02T18:44:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 249,
      "id": "PR_kwDOIvmHss50PDBS",
      "title": "Adjusting Definition of `Auditor`",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #236 ",
      "createdAt": "2024-07-02T18:46:56Z",
      "updatedAt": "2024-07-08T23:59:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "55a11cdea971942e45101f125439294d30c88a5a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-236",
      "headRefOid": "d1931c25156d53d5d0af03ac60a965321c3cea1e",
      "closedAt": "2024-07-08T14:56:47Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we have a term/role for the party that verifies signed statements and controls what goes into the registry/log.\r\n\r\nI think of this role as the Gatekeeper working on behalf of a Transparency Service provider.",
          "createdAt": "2024-07-02T18:50:52Z",
          "updatedAt": "2024-07-02T18:50:52Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> Do we have a term/role for the party that verifies signed statements and controls what goes into the registry/log.\r\n> \r\n> I think of this role as the Gatekeeper working on behalf of a Transparency Service provider.\r\n\r\nIf there is no structured way to publish a registration policy (even if it is a requirement), it is unclear how the specification could define such a role and document the requirements. To answer the question, there is no explicit term or role.",
          "createdAt": "2024-07-03T13:48:50Z",
          "updatedAt": "2024-07-03T13:48:50Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "In our case, the Transparency Service Operator performs a Gatekeeper function that enforces the Registration Policies. If everything provided in the evidence data (payload) needed to register a \u201ctrust declaration\u201d passes the Registration Policy criteria then the item is registered in the \u201cTrust Registry\u201d and placed on the Transparency Service Log.\r\n\r\n \r\n\r\nI think we need to define a \u201cGatekeeper\u201d role in SCITT that is responsible for ensuring that registration policies are being applied and implemented properly before registering a Signed Statement as trustworthy, according to registration policy. \r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n   \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\nhttps://businesscyberguardian.com/ \r\n\r\nEmail: ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: A.J. Stein ***@***.***> \r\nSent: Wednesday, July 3, 2024 9:44 AM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Comment ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Adjusting Definiion of `Auditor` to address #236 (PR #249)\r\n\r\n \r\n\r\n@aj-stein-nist commented on this pull request.\r\n\r\n  _____  \r\n\r\nIn draft-ietf-scitt-architecture.md <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249#discussion_r1664219377> :\r\n\r\n> @@ -199,7 +199,7 @@ Artifact:\r\n \r\n Auditor:\r\n \r\n-: an entity that checks the correctness and consistency of all Transparent Statements issued by a Transparency Service.\r\n+: an entity that can review entries of a Transparency Service's Append-only Log to prove the application and enforcment of Registration Policy during each Registration process step.\r\n\r\nIn the current state of the draft around the capabilities of a TS to publish the registration policy and no structured mechanism for an Auditor to understand it, it is unclear how this ability recommended in this change is possible.\r\n\r\nHow would an Auditor perform registration policy enforcement in actuality?\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249#discussion_r1664219377> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NFNHOAJHUHHW6DFYGDZKP5ZZAVCNFSM6AAAAABKIDP4P2VHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDCNJWGQ4TMNZRG4> .\r\nYou are receiving this because you commented.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-07-03T13:51:35Z",
          "updatedAt": "2024-07-03T13:51:35Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think we need to define a \u201cGatekeeper\u201d role in SCITT that is responsible for ensuring that registration policies are being applied and implemented properly before registering a Signed Statement as trustworthy, according to registration policy.\r\n\r\nIt would be helpful if that was discussed on the mailing list or opened in GitHub issues separate of this PR review.",
          "createdAt": "2024-07-03T14:56:57Z",
          "updatedAt": "2024-07-03T14:56:57Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Issue posted.\r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n   \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\nhttps://businesscyberguardian.com/ \r\n\r\nEmail: ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: A.J. Stein ***@***.***> \r\nSent: Wednesday, July 3, 2024 10:57 AM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Dick Brooks (REA) ***@***.***>; Comment ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Adjusting Definiion of `Auditor` to address #236 (PR #249)\r\n\r\n \r\n\r\nI think we need to define a \u201cGatekeeper\u201d role in SCITT that is responsible for ensuring that registration policies are being applied and implemented properly before registering a Signed Statement as trustworthy, according to registration policy.\r\n\r\nIt would be helpful if that was discussed on the mailing list or opened in GitHub issues separate of this PR review.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249#issuecomment-2206420899> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NFOT3DLH3DZL5AGTWDZKQGM5AVCNFSM6AAAAABKIDP4P2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDEMBWGQZDAOBZHE> .\r\nYou are receiving this because you commented.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-07-03T15:03:19Z",
          "updatedAt": "2024-07-03T15:03:19Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Referencing https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/236#issuecomment-2176325125, we agreed to tease out two different auditor roles. \r\nThis PR changes the definition for the auditor, rather than add a role. As such, I agree [this comment](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249#pullrequestreview-2156505210) from @aj-stein-nist \r\n\r\nFor the definition of a registration policy, the authors have agreed, (right or wrong), to leave that to each implementation. To define how their log is auditable and the formats they define.",
          "createdAt": "2024-07-04T18:01:06Z",
          "updatedAt": "2024-07-04T18:01:06Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, @aj-stein-nist please review the merged suggestion. If you can approve, or specify a new reason this shouldn't be merged, I'd like to get this in for the 120 cutoff.",
          "createdAt": "2024-07-06T16:23:22Z",
          "updatedAt": "2024-07-06T16:23:22Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> If there is no structured way to publish a registration policy (even if it is a requirement), it is unclear how the specification could define such a role and document the requirements. To answer the question, there is no explicit term or role.\r\n\r\nThat is nonsense. This is an architecture. It does not have to define how things look like. E.g. the RATS architecture defined \"Endorsements\" over six years ago when it was even in scope of charter. Now with rechartering first data models mature. So... the is a non sequitur. The lack of a structured way does not block how an architecture defines roles and requirements.",
          "createdAt": "2024-07-07T13:31:59Z",
          "updatedAt": "2024-07-07T13:31:59Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I object to the still remaining CR from A.J. I need to understand, if incorporate Orie's or Steve's suggestion (in order to address Orie' CR).",
          "createdAt": "2024-07-07T13:34:37Z",
          "updatedAt": "2024-07-07T13:34:37Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposed description of auditor does not consider verification of the process when a signed statement is rejected because the proposed description of auditor is only using data stored in the Transparency Service log for verification of the process. Verification also needs to include proof that the rejection process is also working to prevent materials from being posted that are not compliant with Registration Policies.\r\n\r\nIt is a matter of integrity to ensure that the registration process, which can produce both outcomes regarding a signed statement registration request, accepted and rejected, are working as expected. Using only log data for auditing purposes will not verify the \"rejected\" process because these rejected statements are never stored the registry log.",
          "createdAt": "2024-07-07T13:41:41Z",
          "updatedAt": "2024-07-07T13:41:41Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I object to the still remaining CR from A.J. I need to understand, if incorporate Orie's or Steve's suggestion (in order to address Orie' CR).\r\n\r\nYou can't audit a registration policy that is discussed throughout the document in a hand-waving fashion.\r\n\r\nKeeping the original definition or removing references to registration policy and I will approve the PR.",
          "createdAt": "2024-07-07T16:16:53Z",
          "updatedAt": "2024-07-07T16:16:53Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> That is nonsense. This is an architecture. It does not have to define how things look like. E.g. the RATS architecture defined \"Endorsements\" over six years ago when it was even in scope of charter. Now with rechartering first data models mature. So... the is a non sequitur. The lack of a structured way does not block how an architecture defines roles and requirements.\r\n\r\nYou can call it a non-sequitir, but I don't think that's very charitable. My comment is not out of left field and does follow the topic at hand.\r\n\r\nIf you are saying it is unclear because the data model will be defined later as the standards around the architecture emerges and solidifies, which I think is what Roy is alluding to with the encoding of the data comment, so be it. But I will point out the registration policy definition, not just as it pertains to the Auditor and other roles, has been minimized in several successions through editors and presumably WG consensus. So, it seems that, even at the architecture macro-level, no one really understands how it will work and who will work with it.\r\n\r\nI am comfortable approving the PR if it is removed from this role, since that is why I bring it up here. Or others can dismiss my objection and merge anyway. That is what consensus is about. \ud83d\ude04 ",
          "createdAt": "2024-07-07T16:22:17Z",
          "updatedAt": "2024-07-07T16:22:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you for the discussion and attempts to resolve this through a PR.\r\nWe do not have consensus amongst the authors and contributors to merge this as currently written.\r\n\r\nTo bring focus to what we're submitting for 120, I'm closing this issue:\r\n\r\n- It can be re-opened, with new changes\r\n- A new PR can be opened\r\n- It can be discussed on the mailing list\r\n- We can discuss at 120\r\n\r\n\r\n\r\n",
          "createdAt": "2024-07-08T14:56:47Z",
          "updatedAt": "2024-07-08T14:56:47Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Steve, please clarify. Are you saying we have no consensus that there are two distinct roles; one for enforcing registration policy during signed statement processing and another for verification that registration policy is being properly implemented?\r\n\r\nI'm unclear on what we have \"consensus on\" that has led to closure of this issue.",
          "createdAt": "2024-07-08T15:02:07Z",
          "updatedAt": "2024-07-08T15:02:07Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "body": "As I have mentioned just a few times.  The role or job of validating the consistency of the data structure used is obvious, but in the context of SCITT the validation of why a receipt was generated is the over arching topic discussed.  Proving that the evidence leveraged in that decision is also tied to the type of identity scheme used.\n\nIn other words, the job of validating the drivers license, passport, etc.  used to prove a human identity for a signature is what the courts are looking for.  Obviously, the integrity of the ledger (paper book) used is necessary.\n\nFrom: Dick Brooks (REA) ***@***.***>\nSent: Monday, July 8, 2024 8:03 AM\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\nCc: Roy Williams (E+P) ***@***.***>; Comment ***@***.***>\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Adjusting Definition of `Auditor` to address (PR #249)\n\n\nSteve, please clarify. Are you saying we have no consensus that there are two distinct roles; one for enforcing registration policy during signed statement processing and another for verification that registration policy is being properly implemented?\n\nI'm unclear on what we have \"consensus on\" that has led to closure of this issue.\n\n-\nReply to this email directly, view it on GitHub<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249#issuecomment-2214364618>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJP7OQFMJQLQIEH7J2V6VSTZLKSYNAVCNFSM6AAAAABKIDP4P2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDEMJUGM3DINRRHA>.\nYou are receiving this because you commented.Message ID: ***@***.******@***.***>>\n",
          "createdAt": "2024-07-08T15:07:17Z",
          "updatedAt": "2024-07-08T15:07:17Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> As I have mentioned just a few times. The role or job of validating the consistency of the data structure used is obvious, but in the context of SCITT the validation of why a receipt was generated is the over arching topic discussed.\r\n\r\nYou have emphasized this verbally in editors meetings and in writing, but there is still questions and comments where I infer there is ambiguity or confusion. If not for others, I will be clear about my perspective: it is not obvious to me.\r\n\r\n> Proving that the evidence leveraged in that decision is also tied to the type of identity scheme used. In other words, the job of validating the drivers license, passport, etc. used to prove a human identity for a signature is what the courts are looking for.\r\n\r\nYou have repeated this analogy a few times. But to extend this analogy, it would _seem_ (to me, maybe not others) you are talking about the verification of individual statements and artifacts about them, _not_ the integrity of paper-based ledgers. DLT has verifiable data structures, double-book accounting and legal custody documents on paper, as far as I know, do not. This analogy being used conflates multiple concepts and actions by an \"actor\" (human or automation system), which is why I have had reservations about it for quite some time.\r\n\r\nOn that note, I will take this discussion to the mailing list later this week and point back to this as part of a discussion about actions, capabilities, and roles. I do not expect a change now, but perhaps a discussion during 120 and changes to the draft could help assuage my confusion, and potentially others. It seems mostly authors discuss this, and there is hardly any feedback outside the editors and authors, via GitHub or the mailing list.",
          "createdAt": "2024-07-08T17:01:20Z",
          "updatedAt": "2024-07-08T17:01:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> Steve, please clarify. Are you saying we have no consensus that there are two distinct roles; one for enforcing registration policy during signed statement processing and another for verification that registration policy is being properly implemented?\r\n> \r\n> I'm unclear on what we have \"consensus on\" that has led to the closure of this issue.\r\n\r\n@rjb4standards: there was no consensus for this PR getting merged in time for the 120 cutoff - today. \r\n\r\n@roywill:\r\n> As I have mentioned just a few times.  The role or job of validating the consistency of the data structure used is obvious, \r\n\r\nI agree with both sentiments, that we need log integrity/inclusion verification/auditing, and the ability to prove the data within the log was done properly. This PR didn't seem to get everyone to a point of consensus for what should be merged. \r\n\r\nAs noted [here](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/249#issuecomment-2214340955), suggesting we discuss at 120 to see if we can find some consensus and either re-open this PR or create a new one.\r\n\r\n@aj-stein-nist:\r\nAgree we should have more discussions, beyond the PRs. This will be an area I'll be looking to discuss at IETF. \r\n",
          "createdAt": "2024-07-08T23:59:30Z",
          "updatedAt": "2024-07-08T23:59:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Abh2W",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-02T19:35:48Z",
          "updatedAt": "2024-07-02T19:35:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "To date, it was my understanding we were referring to an Auditor as someone that verifies the correctness of the log, that no entries were added, modified or removed. \r\nThis sounds like an auditor would also be required to assure that any referenced registration policy was adhered to.\r\n",
              "createdAt": "2024-07-02T19:35:48Z",
              "updatedAt": "2024-07-02T19:35:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AiYdN",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T13:43:34Z",
          "updatedAt": "2024-07-03T13:43:35Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "In the current state of the draft around the capabilities of a TS to publish the registration policy and no structured mechanism for an Auditor to understand it, it is unclear how this ability recommended in this change is possible.\r\n\r\nHow would an Auditor perform registration policy enforcement in actuality?",
              "createdAt": "2024-07-03T13:43:35Z",
              "updatedAt": "2024-07-03T13:43:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Aiah6",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "1. The previous definition is more clear.\r\n2. I disagree with the decision cited in the editor's meeting summarized in https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/236#issuecomment-2176325125, but if that is the intent of this PR, it does not clearly define there are two separate classes of Auditor, and the document talks about one throughout despite this definition change. This adds further nuance to terminology to side-step the obvious: a registration policy is not actionable even if you say so in a definition.",
          "createdAt": "2024-07-03T13:46:55Z",
          "updatedAt": "2024-07-03T13:46:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6AjsXI",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T15:57:09Z",
          "updatedAt": "2024-07-03T15:57:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Actually, the information on the ledger is what the Auditor reviews.  The confusion of auditors checking the consistency of the \"Merkle tree\" is left as obvious functionality or in the RFC on Merkle or Blockchains.  The selection of which is left to the implementors.  I am fine with Steve's suggestion.\r\n\r\nAJ The structure of the data on the ledger is explicitly not covered as it varies based on identity technology used.  In a CA issued x.509 it will be different than in a DID-WebXYZ one.  \r\n\r\nThe mechanism to configure \"trusted roots\" (registration policy) is also not standardize and can be left out.  If there is no configured identity providers, then there should be no receipts handed out.  The interesting problem for the future is detecting in a possible federated world when that policy changes.  This is where we were hung up for months and decided to simply scale back.",
              "createdAt": "2024-07-03T15:57:09Z",
              "updatedAt": "2024-07-03T15:57:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AziUj",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I don't think this is an improvement.\r\n\r\nThe existing language has some wiggle room, correctness and consistency, can be interpreted as either cryptographic or policy layer checks.\r\n\r\n",
          "createdAt": "2024-07-05T16:16:54Z",
          "updatedAt": "2024-07-05T16:16:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6AzjMb",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T16:20:02Z",
          "updatedAt": "2024-07-05T16:20:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: an entity that confirms the correctness and consistency of the Transparency Service's Append-only Log, or that the Transparency Service policies have been applied consistently.\r\n```",
              "createdAt": "2024-07-05T16:20:02Z",
              "updatedAt": "2024-07-05T16:20:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AzjW2",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T16:20:37Z",
          "updatedAt": "2024-07-05T16:20:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Auditor checks proofs, and ensures business processes. Registration policies are a business process, and are out of scope.",
              "createdAt": "2024-07-05T16:20:37Z",
              "updatedAt": "2024-07-05T16:20:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AznzP",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T16:37:54Z",
          "updatedAt": "2024-07-05T16:37:55Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I agree with this description of the auditor role.\r\n\r\nThis is a very different role from the \"Gatekeeper\" role that approves materials to be included in the Registry, based on registration policies.",
              "createdAt": "2024-07-05T16:37:55Z",
              "updatedAt": "2024-07-05T16:37:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A1qKB",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-06T16:16:42Z",
          "updatedAt": "2024-07-06T16:16:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6A1qSN",
          "commit": {
            "abbreviatedOid": "437dda2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-06T16:22:12Z",
          "updatedAt": "2024-07-06T16:22:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6A22H8",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T13:28:48Z",
          "updatedAt": "2024-07-07T13:28:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This suggested change is acceptable",
              "createdAt": "2024-07-07T13:28:48Z",
              "updatedAt": "2024-07-07T13:28:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A22at",
          "commit": {
            "abbreviatedOid": "9f0eb29"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T13:33:39Z",
          "updatedAt": "2024-07-07T13:33:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This is also okay. Which one do we use?",
              "createdAt": "2024-07-07T13:33:39Z",
              "updatedAt": "2024-07-07T13:33:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A5ZTc",
          "commit": {
            "abbreviatedOid": "437dda2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T07:46:43Z",
          "updatedAt": "2024-07-08T07:46:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: an entity that confirms the correctness and consistency of the Transparency Service's Append-only Log, and that the Transparency Service policies have been applied consistently.\r\n```",
              "createdAt": "2024-07-08T07:46:44Z",
              "updatedAt": "2024-07-08T07:46:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 250,
      "id": "PR_kwDOIvmHss50PIYt",
      "title": "Update draft-ietf-scitt-architecture.md",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/250",
      "state": "MERGED",
      "author": "roywill",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify the terminology around expiry and refreshing receipts.",
      "createdAt": "2024-07-02T19:03:19Z",
      "updatedAt": "2024-10-15T16:05:34Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "issue-232",
      "baseRefOid": "3124f380f72de49d5a69c1f94524d01b4084f6af",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "patch-1",
      "headRefOid": "49917a351256abdb0e34a903163062ce8a8e1b56",
      "closedAt": "2024-07-02T19:04:19Z",
      "mergedAt": "2024-07-02T19:04:19Z",
      "mergedBy": "roywill",
      "mergeCommit": {
        "oid": "4eb962d2525f68aa3f740d4ed1e39713764e0aef"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 251,
      "id": "PR_kwDOIvmHss50PJKd",
      "title": "Add section for refreshing receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/251",
      "state": "MERGED",
      "author": "roywill",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #232 ",
      "createdAt": "2024-07-02T19:05:30Z",
      "updatedAt": "2024-10-15T16:04:43Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "55a11cdea971942e45101f125439294d30c88a5a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-232",
      "headRefOid": "2d7042f64a6191fba9e9b938e9fd6b9f28c56728",
      "closedAt": "2024-07-08T16:32:07Z",
      "mergedAt": "2024-07-08T16:32:07Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c37a0a9386dd21f6f160df059da4a1134d278aee"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "To facilitate this forward for submission on Monday, I'm going to merge a few changes for additional discussion/review.",
          "createdAt": "2024-07-05T17:54:56Z",
          "updatedAt": "2024-07-05T17:54:56Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> I think we should not constrain receipts to either have or not have an exp.\r\n> \r\n> We can consider if iat is mandatory\r\n\r\nFair, could you provide a suggested change?\r\n\r\n[edit] let me elaborate: not making iat mandatory! But about the fact that extension points in Receipts can render them with an expiration date and that only in the architecture's base definition they do not expire.",
          "createdAt": "2024-07-06T12:06:49Z",
          "updatedAt": "2024-07-06T12:09:09Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "After reviewing comments and the paragraph this change sits within, the merged suggestions make a minor improvement, and I don't believe rewinds any problems. \r\nWhile we can/should make additional improvements, can we adopt this change? \r\n@OR13, @aj-stein-nist, you have blocking requests. If the merged suggestions don't resolve your concerns, can you either make an additional suggestion or comment on why this shouldn't be merged?",
          "createdAt": "2024-07-06T16:18:38Z",
          "updatedAt": "2024-07-06T16:18:38Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz here you go: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/251#discussion_r1667697822",
          "createdAt": "2024-07-07T14:01:37Z",
          "updatedAt": "2024-07-07T14:01:37Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "body": "The changes that have been made to the pull request has lost somethings.  The logical receipt itself does not expire.  The evidence captured in the ledger is more than just the hash of the signed statement as it has to capture the tests done to the signature and the results.  That evidence and where it sits in the ledger establishes a time basis for the decision.  A new signature on top of that linkage to the evidence in the ledger is being equated as a whole as the receipt.  \r\n\r\nThe \"thing\" signed is the same (location into the ledger) and the only thing that has changed is possibly the identity key material and algorithm. \r\n\r\nIt is this concept of \"never\" expiring that is important to key.",
          "createdAt": "2024-07-08T16:08:14Z",
          "updatedAt": "2024-07-08T16:08:14Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6AbT9u",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-02T19:06:02Z",
          "updatedAt": "2024-07-02T19:06:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6AbfBn",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-02T19:30:58Z",
          "updatedAt": "2024-07-02T19:30:58Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Since the above  (line 300) refers to expired key material, should this line reflect an updated key material expiration?\r\n\r\n```suggestion\r\nReceipts do not have an expiration time, but the corresponding key material could.\r\nRequesting a refreshed receipt can result in a new receipt over the same signed statement, with an updated signature, signing algorithm and new key material expiration.\r\n```",
              "createdAt": "2024-07-02T19:30:58Z",
              "updatedAt": "2024-07-02T19:30:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AiQtk",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-07-03T13:31:34Z",
          "updatedAt": "2024-07-08T14:58:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This addition contradicts [draft-ietf-cose-merkle-tree-proofs](https://datatracker.ietf.org/doc/html/draft-ietf-cose-merkle-tree-proofs-05#name-validity-period), aka COSE Receipts, although that is an informative reference, it seems pretty important.\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-07-03T13:31:34Z",
              "updatedAt": "2024-07-03T13:32:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AiWKX",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T13:40:11Z",
          "updatedAt": "2024-07-03T13:40:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "How does a Client request a refreshed Receipt? Can it perform this operation without re-registering the same Signed Statement as before?",
              "createdAt": "2024-07-03T13:40:11Z",
              "updatedAt": "2024-07-03T13:40:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AjmYk",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T15:46:54Z",
          "updatedAt": "2024-07-03T15:46:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The details of how to request a receipt is and should be covered in SCRAPI.\r\n\r\nTo Steve's comment, I don't think this is what we want to say.  The content we are re-issuing is based on the entries in the Ledger and using the receipt to find that.  There is no presentation or look up of signed statement so this leads people to a wrong point of view.  Yes the signed statement is then indirectly covered by the re-issuance.  The important point that we lose with this proposal is the epoch we face with PQC.  We can generate new receipts with PQC algorithms without having to re-sign the original document.  Which goes to the signature is preserved and valid at the time we generated a receipt, the fact that there are stronger signing algorithms does not mean that old signatures are suspect.",
              "createdAt": "2024-07-03T15:46:54Z",
              "updatedAt": "2024-07-03T15:46:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ajnku",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T15:49:16Z",
          "updatedAt": "2024-07-03T15:49:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The content of the Merkle tree proof is immutable and does not expire.  The ability to ask CA's and such later the same questions becomes problematic and why that information should be part of the information on the Ledger.  This is immutable and like your kindergarten signature it is still you.  This is what the above reference is about.  The operation of signing the proof with a new signature does not diminish that statement. ",
              "createdAt": "2024-07-03T15:49:16Z",
              "updatedAt": "2024-07-03T15:49:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AjrWu",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T15:55:32Z",
          "updatedAt": "2024-07-03T15:55:32Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> The content of the Merkle tree proof is immutable and does not expire.\r\n\r\nThat is not what the referenced I-D says, so I will copy-paste the section I cited here for clarity.\r\n\r\n> In some cases, receipts MAY include strict validity periods, for example, activation not too far in the future, or expiration, not too far in the past. See the iat, nbf, and exp claims in [[RFC8392](https://www.rfc-editor.org/rfc/rfc8392)], for one way to accomplish this. The details of expressing validity periods are out of scope for this document.\r\n\r\nThe claims MAY include strict validity periods. That is not about the digital signature itself, but the claim properties signed. It not a MUST however.\r\n\r\nIf SCITT were to say that receipts MUST NOT have an expiration time (i.e. use those fields) and clarify how it takes the general capabilities of a COSE-wrapped CWT and strictly forbids the use of those, I would say that explanation is much clearer to implementers about what needs to be done and meet the requirement you want to add.\r\n\r\nI can propose wording to that effect, does that make sense?\r\n",
              "createdAt": "2024-07-03T15:55:32Z",
              "updatedAt": "2024-07-03T15:55:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AjwTQ",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T16:05:01Z",
          "updatedAt": "2024-07-03T16:05:01Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> The details of how to request a receipt is and should be covered in SCRAPI.\r\n\r\nI can agree to that, but the absent description of the mechanics of this are part of the problem with reviewing this addition. I would support rewording this sentence if it said specifically what a Client must do to refresh a Receipt or what it must do to look up the Signed Statement with a terse phrase. Otherwise, I would think it is best to leave this out. Is the ability to refresh a receipt a mandatory, essential feature of every TS that must conform to this architecture? It is hard for me to know, because what must be done.\r\n\r\n> The important point that we lose with this proposal is the epoch we face with PQC. We can generate new receipts with PQC algorithms without having to re-sign the original document. \r\n\r\nRe my previous point, that is why it is hard for me to understand the PQC implications and why it is essential all spec-conformant TS implementations need the ability to reissue receipts without the original document. This approach seems interesting but goes beyond the minimally viable architecture requirement _for everyone_, no?",
              "createdAt": "2024-07-03T16:05:01Z",
              "updatedAt": "2024-07-03T16:05:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6AtWKV",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T18:10:53Z",
          "updatedAt": "2024-07-04T18:10:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> The important point that we lose with this proposal is the epoch we face with PQC. We can generate new receipts with PQC algorithms without having to re-sign the original document. Which goes to the signature is preserved and valid at the time we generated a receipt, the fact that there are stronger signing algorithms does not mean that old signatures are suspect.\r\n\r\n@roywill, when you say \"re-issue receipts\", without re-signing the original document, I'm assuming this is a new receipt for the same registration of the signed statement (original document). Wouldn't that be a new notary signature from the TS, using new algorithms and a new expiration date on the notary signature? It would evaluate the signed statement against the same registration policy, not a new one. (I'm avoiding the counter-signature reference). \r\n\r\n ```suggestion\r\nReceipts do not have an expiration time, but the corresponding key material could.\r\nRequesting a refreshed receipt can result in a new receipt over the previously signed statement, with an updated signature, signing algorithm, and new key material expiration.\r\n```",
              "createdAt": "2024-07-04T18:10:53Z",
              "updatedAt": "2024-07-04T18:10:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Azgoh",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T16:10:35Z",
          "updatedAt": "2024-07-05T16:10:35Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I support applying this change",
              "createdAt": "2024-07-05T16:10:35Z",
              "updatedAt": "2024-07-05T16:10:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Azg_Q",
          "commit": {
            "abbreviatedOid": "4eb962d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "I think we should not constrain receipts to either have or not have an exp.\r\n\r\nWe can consider if iat is mandatory",
          "createdAt": "2024-07-05T16:11:57Z",
          "updatedAt": "2024-07-08T14:40:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Az5jD",
          "commit": {
            "abbreviatedOid": "429e8c7"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T17:56:48Z",
          "updatedAt": "2024-07-05T17:56:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nRequesting a refreshed receipt can result in a new receipt over the same signed statement, with an updated signature, signing algorithm, and new key material expiration.\r\n```",
              "createdAt": "2024-07-05T17:56:48Z",
              "updatedAt": "2024-07-05T17:56:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Az8go",
          "commit": {
            "abbreviatedOid": "ae007fc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T18:09:35Z",
          "updatedAt": "2024-07-05T18:09:35Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Suggestion, based on merged text consistency:\r\n```suggestion\r\nVerifiers can request refreshed receipts resulting in a new receipt over the previously signed statement, with an updated signature, signing algorithm, and new key material expiration.\r\n```\r\n\r\nWhile this wording is a bit more consistent, it does raise the question:\r\nIs the new, refreshed receipt persisted in the append-only log? Is the premise that anyone can request a refreshed receipt?\r\n\r\n- **Jan 1, 2025**: Registration of \"foo\" is done, and a receipt is issued\r\n- **Jan 2, 2025**: a request for the receipt is made, and it's still valid, so it's not \"refreshed\", rather the existing receipt is returned.\r\n- **Feb 1, 2025**: the key material of the original receipt expired, so the verifier requests a refreshed receipt with an updated signature expiration.\r\n- **Feb 2, 2025**:, another verifier requests the receipt. Do they get the originally signed and expired signature receipt, or the refreshed receipt generated the day prior? \r\n\r\nOr: \r\n\r\n1. Is the behavior that any request of an existing receipt is considered a READ scenario, and doesn't necessarily require RBAC? If it's expired, it's automatically refreshed, but not durable? \r\n1. Can verifiers request existing expired receipts, which stay expired until someone with permissions can refresh the signature of the receipt.\r\n1. If requesting a refreshed receipt is durable, this implies a set of permissions (RBAC) to write back.\r\n\r\nConceptually, I get the desired intent. In practice, this seems to require more discussion.",
              "createdAt": "2024-07-05T18:09:35Z",
              "updatedAt": "2024-07-05T18:09:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A1jcF",
          "commit": {
            "abbreviatedOid": "ae007fc"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T12:05:58Z",
          "updatedAt": "2024-07-06T12:05:59Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "We abstained from defining Verifier, right?",
              "createdAt": "2024-07-06T12:05:58Z",
              "updatedAt": "2024-07-06T12:05:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A1jef",
          "commit": {
            "abbreviatedOid": "429e8c7"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T12:07:31Z",
          "updatedAt": "2024-07-06T12:07:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "lgtm",
              "createdAt": "2024-07-06T12:07:31Z",
              "updatedAt": "2024-07-06T12:07:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A1pub",
          "commit": {
            "abbreviatedOid": "ae007fc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T15:58:05Z",
          "updatedAt": "2024-07-06T15:58:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Yeah, I was looking for a better way to make this sentence fit within the paragraph. They read as isolated bullets, rather than a paragraph. ",
              "createdAt": "2024-07-06T15:58:05Z",
              "updatedAt": "2024-07-06T15:58:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A1pwb",
          "commit": {
            "abbreviatedOid": "ae007fc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T15:59:28Z",
          "updatedAt": "2024-07-06T15:59:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "resolving this thread to propose an alternative",
              "createdAt": "2024-07-06T15:59:29Z",
              "updatedAt": "2024-07-06T15:59:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A1qHt",
          "commit": {
            "abbreviatedOid": "ae007fc"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-06T16:15:04Z",
          "updatedAt": "2024-07-06T16:15:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6A225H",
          "commit": {
            "abbreviatedOid": "ae007fc"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T13:44:18Z",
          "updatedAt": "2024-07-07T13:44:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nRequesting a receipt can result in the production of a new receipt for the same signed statement.\r\nA Receipt's verification key, signing algorithm, validity period, header parameters or other claims MAY change each time a Receipt is produced.\r\n```",
              "createdAt": "2024-07-07T13:44:19Z",
              "updatedAt": "2024-07-07T13:44:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6A9i_d",
          "commit": {
            "abbreviatedOid": "2d7042f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Referring to [persistence and re-issuing receipts](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/251#discussion_r1667038718), the latest changes provide the flexibility for Transparency Services to maintain previous receipts and re-issue them or generate new receipts which may not be persisted.\r\n\r\nAs such, I'm approving this PR as incremental progress.",
          "createdAt": "2024-07-08T15:03:11Z",
          "updatedAt": "2024-07-08T15:03:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6A-ANA",
          "commit": {
            "abbreviatedOid": "2d7042f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T15:48:10Z",
          "updatedAt": "2024-07-08T15:48:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 253,
      "id": "PR_kwDOIvmHss50jvcX",
      "title": "Update receipts header parameter references",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/253",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #226 ",
      "createdAt": "2024-07-05T18:16:21Z",
      "updatedAt": "2024-10-15T16:05:32Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "55a11cdea971942e45101f125439294d30c88a5a",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-226",
      "headRefOid": "b53f0961fd646b5e718fa89f47c28e85dda63716",
      "closedAt": "2024-07-08T14:34:36Z",
      "mergedAt": "2024-07-08T14:34:36Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "9db0d0eb4cbd9637ba3f6275bb4628687ede4e55"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6A0Hw3",
          "commit": {
            "abbreviatedOid": "b53f096"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I'd personally prefer to separate the mediatype exclusion (which I agree with removing) to a different PR, but would approve both anyway.\r\n\r\nLGTM",
          "createdAt": "2024-07-05T19:02:05Z",
          "updatedAt": "2024-07-05T19:02:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6A1qIz",
          "commit": {
            "abbreviatedOid": "b53f096"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-06T16:15:54Z",
          "updatedAt": "2024-07-06T16:15:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 254,
      "id": "PR_kwDOIvmHss50uDWs",
      "title": "Remove Unused References",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/254",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-08T16:38:30Z",
      "updatedAt": "2024-10-15T16:04:38Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c37a0a9386dd21f6f160df059da4a1134d278aee",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/ref-fixes",
      "headRefOid": "7e942fe5411c3505d9aab097a367f0d874231a1a",
      "closedAt": "2024-07-08T16:41:27Z",
      "mergedAt": "2024-07-08T16:41:27Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 255,
      "id": "PR_kwDOIvmHss51_cxf",
      "title": "Auditor is an example of a Relying Party.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/255",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T16:33:54Z",
      "updatedAt": "2024-10-15T16:04:33Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "d4f16f526b0ec238bbe3a65ae0840ebbfc75e1b7",
      "closedAt": "2024-07-21T23:06:07Z",
      "mergedAt": "2024-07-21T23:06:07Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "809e6d0a456675e5b922e272d8022a5c961b9a53"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker I'm concerned that this \"overloading\" of Auditor semantics is going to create ambiguities and confusion.\r\nI continue to believe we need to define two distinctive roles; A Gatekeeper that ensures only verified \"signed statements\" following registration policies are placed into the registry and a \"Relying Party\" that \"trusts\" the information contained in a Registry.\r\nIMO, an auditor is the \"checker\" making sure that policies are being followed, which adds integrity to the Registry processes and procedures and the Registry operator (Transparency Service) is properly following the SCITT protocol and registration policy processes and procedures. ",
          "createdAt": "2024-07-21T16:38:49Z",
          "updatedAt": "2024-07-21T16:38:49Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "body": "I am fine with this change.  The larger issue that Steve points out I believe can be left out.",
          "createdAt": "2024-07-21T16:49:53Z",
          "updatedAt": "2024-07-21T16:49:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CicjO",
          "commit": {
            "abbreviatedOid": "42a887a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:09:01Z",
          "updatedAt": "2024-07-20T22:09:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjlYP",
          "commit": {
            "abbreviatedOid": "42a887a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:30:00Z",
          "updatedAt": "2024-07-21T16:30:00Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: an entity that checks the correctness and consistency of all Transparent Statements issued by a Transparency Service.\r\nAn Auditor is an example of a Relying Party.\r\n```",
              "createdAt": "2024-07-21T16:30:00Z",
              "updatedAt": "2024-07-21T16:30:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjocr",
          "commit": {
            "abbreviatedOid": "4c81e1c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T18:12:37Z",
          "updatedAt": "2024-07-21T18:12:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtnB",
          "commit": {
            "abbreviatedOid": "4c81e1c"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:15:30Z",
          "updatedAt": "2024-07-21T21:15:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtrm",
          "commit": {
            "abbreviatedOid": "4c81e1c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:17:47Z",
          "updatedAt": "2024-07-21T21:17:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuZk",
          "commit": {
            "abbreviatedOid": "4c81e1c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:41:24Z",
          "updatedAt": "2024-07-21T21:41:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nAn Auditor is an example of a specialized Relying Party.\r\n```",
              "createdAt": "2024-07-21T21:41:24Z",
              "updatedAt": "2024-07-21T21:41:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjubU",
          "commit": {
            "abbreviatedOid": "4c81e1c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "not only an example, but also literally a specialization (narrower term)",
          "createdAt": "2024-07-21T21:42:15Z",
          "updatedAt": "2024-07-21T21:42:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjxRf",
          "commit": {
            "abbreviatedOid": "d4f16f5"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T23:05:44Z",
          "updatedAt": "2024-07-21T23:05:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 256,
      "id": "PR_kwDOIvmHss51_c4A",
      "title": "Align Abstract with Introduction",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/256",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T16:35:18Z",
      "updatedAt": "2024-10-15T16:04:36Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-2",
      "headRefOid": "bdf9ef3ca4a02a1aa2abc27a310bf13dc5501359",
      "closedAt": "2024-07-21T23:08:45Z",
      "mergedAt": "2024-07-21T23:08:45Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "c794bd1bffd559f64aa95b60356f0f8f8e84f374"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CidM9",
          "commit": {
            "abbreviatedOid": "f6a08e1"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:31:54Z",
          "updatedAt": "2024-07-20T22:32:18Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I could not determine if [RFC&322](https://www.rfc-editor.org/rfc/rfc7322#section-3.2) is the most current, but it recommends comma before last element in series.\r\n\r\nOverall, I still support this change.\r\n\r\n```suggestion\r\nThis document describes the generic, interoperable, and scalable SCITT architecture.\r\n```",
              "createdAt": "2024-07-20T22:31:54Z",
              "updatedAt": "2024-07-20T22:32:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CiefM",
          "commit": {
            "abbreviatedOid": "bdf9ef3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-20T23:10:41Z",
          "updatedAt": "2024-07-20T23:10:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CiueO",
          "commit": {
            "abbreviatedOid": "bdf9ef3"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:24:41Z",
          "updatedAt": "2024-07-21T00:24:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjmDn",
          "commit": {
            "abbreviatedOid": "bdf9ef3"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T16:51:17Z",
          "updatedAt": "2024-07-21T16:51:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtsU",
          "commit": {
            "abbreviatedOid": "bdf9ef3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:18:08Z",
          "updatedAt": "2024-07-21T21:18:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjunr",
          "commit": {
            "abbreviatedOid": "bdf9ef3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:48:56Z",
          "updatedAt": "2024-07-21T21:48:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 257,
      "id": "PR_kwDOIvmHss51_fIt",
      "title": "Replacing Verifier with Relying Party",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/257",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:07:05Z",
      "updatedAt": "2024-10-15T16:05:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-3",
      "headRefOid": "d949dd4c525b017d9d3e0ad44fc7c7be916b3fcc",
      "closedAt": "2024-07-21T23:09:06Z",
      "mergedAt": "2024-07-21T23:09:06Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "054bd3d8291a827fc6d596a84b00021e25e8440d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiclL",
          "commit": {
            "abbreviatedOid": "70baeea"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:10:12Z",
          "updatedAt": "2024-07-20T22:10:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CittN",
          "commit": {
            "abbreviatedOid": "70baeea"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:22:49Z",
          "updatedAt": "2024-07-21T00:22:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjmJI",
          "commit": {
            "abbreviatedOid": "70baeea"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "Slight text change suggested.",
          "createdAt": "2024-07-21T16:54:06Z",
          "updatedAt": "2024-07-21T18:11:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Suggest changing \"all Relying Parties\" to be \"any Relying Parties\".  As there is no requirement that it is an atomic operation.",
              "createdAt": "2024-07-21T16:54:06Z",
              "updatedAt": "2024-07-21T17:17:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjoMt",
          "commit": {
            "abbreviatedOid": "70baeea"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T18:04:29Z",
          "updatedAt": "2024-07-21T18:04:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "done",
              "createdAt": "2024-07-21T18:04:29Z",
              "updatedAt": "2024-07-21T18:04:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjobJ",
          "commit": {
            "abbreviatedOid": "d949dd4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T18:11:48Z",
          "updatedAt": "2024-07-21T18:11:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuKz",
          "commit": {
            "abbreviatedOid": "d949dd4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:34:14Z",
          "updatedAt": "2024-07-21T21:34:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuOH",
          "commit": {
            "abbreviatedOid": "d949dd4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:36:02Z",
          "updatedAt": "2024-07-21T21:36:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjuo_",
          "commit": {
            "abbreviatedOid": "d949dd4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:49:42Z",
          "updatedAt": "2024-07-21T21:49:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 258,
      "id": "PR_kwDOIvmHss51_feJ",
      "title": "Added \"Verifiable Data Structure\" Term",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/258",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:11:38Z",
      "updatedAt": "2024-10-15T16:05:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-4",
      "headRefOid": "d7d1216bdd48b583afd149c8668134010f5a2ee4",
      "closedAt": "2024-07-21T23:09:53Z",
      "mergedAt": "2024-07-21T23:09:53Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "039e6657a4feb7a44ac1b725914c38f51f29e691"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Added reference to {{I-D.ietf-cose-merkle-tree-proofs}}.",
          "createdAt": "2024-07-21T18:07:41Z",
          "updatedAt": "2024-07-21T18:07:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Cic9P",
          "commit": {
            "abbreviatedOid": "65deeb4"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:22:29Z",
          "updatedAt": "2024-07-20T22:22:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cit61",
          "commit": {
            "abbreviatedOid": "65deeb4"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:23:20Z",
          "updatedAt": "2024-07-21T00:23:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjnOA",
          "commit": {
            "abbreviatedOid": "65deeb4"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "The usage of Verifiable Data Structure down below points at a definition from another RFC.  We should import that instead of redefining.",
          "createdAt": "2024-07-21T17:30:40Z",
          "updatedAt": "2024-07-21T17:30:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtpZ",
          "commit": {
            "abbreviatedOid": "069aa06"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:16:42Z",
          "updatedAt": "2024-07-21T21:16:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtqT",
          "commit": {
            "abbreviatedOid": "069aa06"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:17:08Z",
          "updatedAt": "2024-07-21T21:17:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuLB",
          "commit": {
            "abbreviatedOid": "069aa06"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:34:19Z",
          "updatedAt": "2024-07-21T21:34:19Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n: a data structure which supports one or more proof types, such as \"inclusion proofs\" or \"consistency proofs\" (as defined in {{-COMETRE}}).\r\n```",
              "createdAt": "2024-07-21T21:34:19Z",
              "updatedAt": "2024-07-21T21:34:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 259,
      "id": "PR_kwDOIvmHss51_ftJ",
      "title": "Removed mentioning of \"Identity Document\"",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/259",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reason: Term was used only twice, not defined, and does not seem to play an important role.\r\n\r\n![image](https://github.com/user-attachments/assets/cf3816c1-a967-4b84-8fbd-e352d833abff)\r\n",
      "createdAt": "2024-07-20T17:15:09Z",
      "updatedAt": "2024-10-15T16:04:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-5",
      "headRefOid": "0ebaa5dd03e4a8b46fec614adefbdcf06be23df1",
      "closedAt": "2024-07-21T23:11:12Z",
      "mergedAt": "2024-07-21T23:11:12Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "13ab2a18227f07f84ad49938c7da0882bfd01982"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CidkX",
          "commit": {
            "abbreviatedOid": "ea7b110"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:42:21Z",
          "updatedAt": "2024-07-20T22:42:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjnXf",
          "commit": {
            "abbreviatedOid": "ea7b110"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I am fine with removing Identity Documents but replacing it with Credentials Trust Anchors is not correct.  A credential reference is what the \"signer\" supplies and the system builds the chain in the context of CA issued X.509.  ",
          "createdAt": "2024-07-21T17:36:11Z",
          "updatedAt": "2024-07-21T17:36:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjn58",
          "commit": {
            "abbreviatedOid": "ea7b110"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T17:54:15Z",
          "updatedAt": "2024-07-21T17:54:15Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n '-----+----'            .-------------.\r\n       v                |  Credentials  |\r\n  .----+----.           | Trust Anchors |\r\n | Statement |           '----+--+-----'\r\n```",
              "createdAt": "2024-07-21T17:54:15Z",
              "updatedAt": "2024-07-21T17:54:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtqr",
          "commit": {
            "abbreviatedOid": "7aee159"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:17:21Z",
          "updatedAt": "2024-07-21T21:17:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuJy",
          "commit": {
            "abbreviatedOid": "7aee159"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "yolo",
          "createdAt": "2024-07-21T21:33:39Z",
          "updatedAt": "2024-07-21T21:33:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuRU",
          "commit": {
            "abbreviatedOid": "7aee159"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:37:34Z",
          "updatedAt": "2024-07-21T21:37:35Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nAt least one identifier representing one credential MUST be included in the protected header of the COSE Envelope, as one of `x5t` or `kid`.\r\n```",
              "createdAt": "2024-07-21T21:37:35Z",
              "updatedAt": "2024-07-21T21:37:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjuTN",
          "commit": {
            "abbreviatedOid": "0ebaa5d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "fiddled with a phrasing nit. This approval is not about the diagram picture, but the content of md that substitutes Identity Documents with Credentials.",
          "createdAt": "2024-07-21T21:38:42Z",
          "updatedAt": "2024-07-21T21:38:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 260,
      "id": "PR_kwDOIvmHss51_fxL",
      "title": "Firmware Image as an example",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/260",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:16:05Z",
      "updatedAt": "2024-10-15T16:05:14Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-6",
      "headRefOid": "d980c13ecdc563739336df6556aaf86a455910fe",
      "closedAt": "2024-07-21T23:11:32Z",
      "mergedAt": "2024-07-21T23:11:32Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "7668e69e8e814e0a156cf905797ef25e167312f2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CicE6",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T21:55:36Z",
          "updatedAt": "2024-07-20T21:55:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CicN6",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:03:31Z",
          "updatedAt": "2024-07-20T22:03:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjnaT",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T17:37:35Z",
          "updatedAt": "2024-07-21T17:37:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjnyT",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T17:49:36Z",
          "updatedAt": "2024-07-21T17:49:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuIA",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:32:48Z",
          "updatedAt": "2024-07-21T21:32:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjus5",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:52:14Z",
          "updatedAt": "2024-07-21T21:52:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nBy extension, the Signed Statement may say an Artifact (for example, a firmware binary) is transparent if it comes with one or more Transparent Statements from its author or owner, though the context should make it clear what type of Signed Statements is expected for a given Artifact.\r\n```",
              "createdAt": "2024-07-21T21:52:14Z",
              "updatedAt": "2024-07-21T21:52:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjutO",
          "commit": {
            "abbreviatedOid": "9cec6e6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:52:31Z",
          "updatedAt": "2024-07-21T21:52:31Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Found a nit along the sides.",
              "createdAt": "2024-07-21T21:52:31Z",
              "updatedAt": "2024-07-21T21:52:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjuu3",
          "commit": {
            "abbreviatedOid": "d980c13"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "changes \"document\" to \"Signed Statement\" (was a weird nit close to the suggested change)",
          "createdAt": "2024-07-21T21:53:28Z",
          "updatedAt": "2024-07-21T21:53:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 261,
      "id": "PR_kwDOIvmHss51_gA9",
      "title": "Clarification of a sentence",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/261",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:20:01Z",
      "updatedAt": "2024-10-15T16:05:09Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "7668e69e8e814e0a156cf905797ef25e167312f2",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-7",
      "headRefOid": "f0d698c728c80d69e527c4ae23f606bd3cfdeaab",
      "closedAt": "2024-07-21T23:17:07Z",
      "mergedAt": "2024-07-21T23:17:07Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "83c4eb96221ea6f108bbfad9f170078f67db326f"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Is a Receipt also used to communicate rejections of Signed Statements or is the rejection a different type of communication?\r\n\r\nFor example, can a Receipt indicate \"receipt\" of a request and return the result of processing i.e. registered/rejected.",
          "createdAt": "2024-07-21T21:58:24Z",
          "updatedAt": "2024-07-21T22:02:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiuTN",
          "commit": {
            "abbreviatedOid": "b450c31"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:24:14Z",
          "updatedAt": "2024-07-21T00:24:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjnda",
          "commit": {
            "abbreviatedOid": "b450c31"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T17:39:23Z",
          "updatedAt": "2024-07-21T17:39:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuHT",
          "commit": {
            "abbreviatedOid": "b450c31"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:32:25Z",
          "updatedAt": "2024-07-21T21:32:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjuxh",
          "commit": {
            "abbreviatedOid": "b450c31"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:54:58Z",
          "updatedAt": "2024-07-21T21:54:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nSigned Statements can be made transparent by attaching a proof of Registration by a Transparency Service, in the form of a Receipt.\r\nReceipts demonstrate inclusion of Signed Statements in the Append-only Log of a Transparency Service.\r\n```",
              "createdAt": "2024-07-21T21:54:58Z",
              "updatedAt": "2024-07-21T21:54:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjuyP",
          "commit": {
            "abbreviatedOid": "b450c31"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:55:25Z",
          "updatedAt": "2024-07-21T21:55:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Registration should be capitalized. Fixed new line nit.",
              "createdAt": "2024-07-21T21:55:25Z",
              "updatedAt": "2024-07-21T21:55:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjuyr",
          "commit": {
            "abbreviatedOid": "b28b07e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:55:48Z",
          "updatedAt": "2024-07-21T21:55:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 265,
      "id": "PR_kwDOIvmHss51_hD1",
      "title": "Clarification regarding tbsCertificate",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/265",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:34:27Z",
      "updatedAt": "2024-10-15T16:05:10Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-8",
      "headRefOid": "1da7aafd87a5e68d68d09143fc4989f7770e426d",
      "closedAt": "2024-07-21T23:17:42Z",
      "mergedAt": "2024-07-21T23:17:42Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "f4d542b19a738a2795b838254d789bcb0b84f3cc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CicD7",
          "commit": {
            "abbreviatedOid": "ec9e6cc"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T21:54:43Z",
          "updatedAt": "2024-07-20T21:54:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjnkg",
          "commit": {
            "abbreviatedOid": "ec9e6cc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T17:42:17Z",
          "updatedAt": "2024-07-21T17:42:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjn-g",
          "commit": {
            "abbreviatedOid": "ec9e6cc"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-07-21T17:56:52Z",
          "updatedAt": "2024-07-21T17:56:59Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Change stucture -> structure.\r\n\r\nYou also changed this from plural to singular and then you need to remove the s on Statements.  Though since this is a generic flow, I think you need to instead move it back to plural",
              "createdAt": "2024-07-21T17:56:52Z",
              "updatedAt": "2024-07-21T17:56:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjuEY",
          "commit": {
            "abbreviatedOid": "ec9e6cc"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:30:43Z",
          "updatedAt": "2024-07-21T21:30:44Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n- CAs (Issuers) sign the ASN.1 DER encoded tbsCertificate structure (Artifact) to produce an X.509 certificate (Signed Statements)\r\n```",
              "createdAt": "2024-07-21T21:30:43Z",
              "updatedAt": "2024-07-21T21:30:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjuJ2",
          "commit": {
            "abbreviatedOid": "b626824"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:33:41Z",
          "updatedAt": "2024-07-21T21:33:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cju1i",
          "commit": {
            "abbreviatedOid": "b626824"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:57:18Z",
          "updatedAt": "2024-07-21T21:57:18Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n- CAs (Issuers) sign the ASN.1 DER encoded tbsCertificate structure to produce an X.509 certificate (Signed Statements)\r\n```",
              "createdAt": "2024-07-21T21:57:18Z",
              "updatedAt": "2024-07-21T21:57:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cju2V",
          "commit": {
            "abbreviatedOid": "b626824"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:57:42Z",
          "updatedAt": "2024-07-21T21:57:42Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "'(Atricfact)' seems to have been an artifact... removed",
              "createdAt": "2024-07-21T21:57:42Z",
              "updatedAt": "2024-07-21T21:57:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cju3k",
          "commit": {
            "abbreviatedOid": "1da7aaf"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "removed \"(Artifact)\" which seems to have been an artifact....",
          "createdAt": "2024-07-21T21:58:17Z",
          "updatedAt": "2024-07-21T21:58:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 266,
      "id": "PR_kwDOIvmHss51_hfP",
      "title": "Updated the first figure",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/266",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "![image](https://github.com/user-attachments/assets/bdb550e0-2d22-4256-9c02-cb308deaa11a)\r\n",
      "createdAt": "2024-07-20T17:39:52Z",
      "updatedAt": "2024-10-15T16:04:32Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "a96862f46333a2837529409fae04addb545d52eb",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-9",
      "headRefOid": "be1962374523437eb6ebf0ceaf6317a87a88760c",
      "closedAt": "2024-07-31T17:27:14Z",
      "mergedAt": "2024-07-31T17:27:14Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "af19eea348ef078370313072f739c47807d25f43"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "My biggest problem with the diagram is that it is not explained. It just falls out of the sky",
          "createdAt": "2024-07-22T17:24:58Z",
          "updatedAt": "2024-07-22T17:24:58Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I took on the task of fixing the markdown, testing it locally, posting an image, ...\r\nI was able to revert several of the changes through the \"resolve-conflicts\" UX, but I would like to check the \"services\" changes that it renders properly\r\nI didn't get to it today, but will on Wednesday. \r\n...please stand by... :) ",
          "createdAt": "2024-07-31T00:33:18Z",
          "updatedAt": "2024-07-31T00:39:44Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> My biggest problem with the diagram is that it is not explained. It just falls out of the sky\r\n\r\nThanks, Hannes, that's a valid point. We may have lost some of the descriptive text along with the edits.\r\nLet's keep the diagram as-is, and work on additional text if needed. ",
          "createdAt": "2024-07-31T00:37:51Z",
          "updatedAt": "2024-07-31T00:37:51Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Latest changes, incorporating the feedback to date, which includes some formatting changes to the diagram, and text updates.\r\n![image](https://github.com/user-attachments/assets/1b4baef2-c29c-4297-a201-25bc5c6eac99)\r\n",
          "createdAt": "2024-07-31T15:00:45Z",
          "updatedAt": "2024-07-31T15:00:45Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the diagram on the master/main is fine just needs some sentences of explanation text, around it.\r\n\r\nAlready the diagram is having quite a bit of components and flows. I would strictly request everyone to\r\n\r\n1. STOP editing the diagram\r\n2. Add text around it trying to explain the philosophy presented via a simple SCITT Architecture.",
          "createdAt": "2024-07-31T15:24:22Z",
          "updatedAt": "2024-07-31T15:24:22Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @yogeshbdeshpande, the diagram content has been reverted, only incorporating a few formatting changes. \r\nHannes, and subsequent merged suggestions, added some additional text. Can you comment, suggest, and/or approve the current state of this PR. It does add more context.",
          "createdAt": "2024-07-31T15:50:12Z",
          "updatedAt": "2024-07-31T15:50:12Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks Steve, looking now!",
          "createdAt": "2024-07-31T15:55:02Z",
          "updatedAt": "2024-07-31T15:55:02Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Done and Thanks again!",
          "createdAt": "2024-07-31T15:57:25Z",
          "updatedAt": "2024-07-31T15:57:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiTug",
          "commit": {
            "abbreviatedOid": "fb9ac61"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-20T17:42:45Z",
          "updatedAt": "2024-07-20T17:42:45Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nThis section describes at a high level, the three main roles and associated processes in SCITT:\r\n```",
              "createdAt": "2024-07-20T17:42:45Z",
              "updatedAt": "2024-07-20T17:42:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjnZs",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T17:37:18Z",
          "updatedAt": "2024-07-21T17:40:13Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "This current document reflects shifting from using \"envelope\" to referencing COSE_Sign1. See #245 \r\n\r\nPersonally, I'd like to keep the current state for the diagram\r\n",
              "createdAt": "2024-07-21T17:37:19Z",
              "updatedAt": "2024-07-21T17:40:13Z"
            },
            {
              "originalPosition": 34,
              "body": "\ud83d\udc4d for this section, lines 366-369.\r\nIf we could separate these changes from the architecture changes above, I'd LGTM these lines",
              "createdAt": "2024-07-21T17:40:03Z",
              "updatedAt": "2024-07-21T17:40:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt34",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:23:55Z",
          "updatedAt": "2024-07-21T21:23:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cju6s",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-07-21T22:00:04Z",
          "updatedAt": "2024-07-31T15:04:07Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Not a fan, please keep for now.",
              "createdAt": "2024-07-21T22:00:05Z",
              "updatedAt": "2024-07-21T22:00:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CpZYp",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I'm supportive of [368](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/266/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R368) through 369, but request the diagram remain as it rolls back the conversation in #245 ",
          "createdAt": "2024-07-22T15:24:44Z",
          "updatedAt": "2024-07-22T15:24:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cp_io",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-07-22T16:35:36Z",
          "updatedAt": "2024-07-31T15:03:57Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Agreed",
              "createdAt": "2024-07-22T16:35:36Z",
              "updatedAt": "2024-07-22T16:36:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmmNj",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:52:02Z",
          "updatedAt": "2024-07-30T14:52:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n'----+----' cose sign | | cose verify\r\n```",
              "createdAt": "2024-07-30T14:52:02Z",
              "updatedAt": "2024-07-30T14:52:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmmlM",
          "commit": {
            "abbreviatedOid": "9c8653c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:52:35Z",
          "updatedAt": "2024-07-30T14:52:35Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n '----+----' cose sign | | cose verify\r\n```",
              "createdAt": "2024-07-30T14:52:35Z",
              "updatedAt": "2024-07-30T14:52:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmmmZ",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:52:36Z",
          "updatedAt": "2024-07-30T14:52:36Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n* Issuers and Signed Statements\r\n* Transparency Service and the registration process\r\n* Relying Parties of the Transparent Statements and the Receipt validation process\r\n```",
              "createdAt": "2024-07-30T14:52:36Z",
              "updatedAt": "2024-07-30T14:55:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DnwDL",
          "commit": {
            "abbreviatedOid": "c746229"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T17:04:24Z",
          "updatedAt": "2024-07-30T17:04:24Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I agree with @SteveLasker : I would not overcomplicate the already cumbersome figure any more.\r\n\r\nLets drop this PR. We do not need it!",
              "createdAt": "2024-07-30T17:04:24Z",
              "updatedAt": "2024-07-30T17:04:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DnwuL",
          "commit": {
            "abbreviatedOid": "68493d6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "I think, the addition of `cose sign` and `cose verify` is superficial and not needed.\r\n\r\nPlease remove them!",
          "createdAt": "2024-07-30T17:05:44Z",
          "updatedAt": "2024-07-31T15:03:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Dn6WB",
          "commit": {
            "abbreviatedOid": "68493d6"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "Like @yogeshbdeshpande, I am willing to quickly approve if the labels are changed to simply `sign` and `verify`.",
          "createdAt": "2024-07-30T17:25:23Z",
          "updatedAt": "2024-07-31T15:03:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DwKW6",
          "commit": {
            "abbreviatedOid": "be19623"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM to https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/266/commits/be1962374523437eb6ebf0ceaf6317a87a88760c",
          "createdAt": "2024-07-31T15:02:37Z",
          "updatedAt": "2024-07-31T15:02:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DwqYw",
          "commit": {
            "abbreviatedOid": "be19623"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-07-31T15:57:11Z",
          "updatedAt": "2024-07-31T15:57:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 267,
      "id": "PR_kwDOIvmHss51_hrm",
      "title": "Update of sentence in architecture overview",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/267",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:42:13Z",
      "updatedAt": "2024-10-15T16:05:28Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-10",
      "headRefOid": "89775913348216524269023921cfbc44d9dfd4ef",
      "closedAt": "2024-07-21T23:19:58Z",
      "mergedAt": "2024-07-21T23:19:58Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "a8f8d56eeaa12b304f06390e2c57470905198dd2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Ciu79",
          "commit": {
            "abbreviatedOid": "8977591"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:25:50Z",
          "updatedAt": "2024-07-21T00:25:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjnHd",
          "commit": {
            "abbreviatedOid": "8977591"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nLess is more as the detail is below",
          "createdAt": "2024-07-21T17:26:46Z",
          "updatedAt": "2024-07-21T17:26:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjoFx",
          "commit": {
            "abbreviatedOid": "8977591"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T18:01:07Z",
          "updatedAt": "2024-07-21T18:01:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt40",
          "commit": {
            "abbreviatedOid": "8977591"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:24:30Z",
          "updatedAt": "2024-07-21T21:24:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cju9G",
          "commit": {
            "abbreviatedOid": "8977591"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T22:01:13Z",
          "updatedAt": "2024-07-21T22:01:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 271,
      "id": "PR_kwDOIvmHss51_ipi",
      "title": "Clarification of Trust Anchor Examples",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/271",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:56:32Z",
      "updatedAt": "2024-10-15T16:04:33Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-11",
      "headRefOid": "25739cf764a92b9c735fc178a291ea89b8dd7831",
      "closedAt": "2024-07-30T14:53:59Z",
      "mergedAt": "2024-07-30T14:53:59Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a96862f46333a2837529409fae04addb545d52eb"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't understand the motivation behind replacing \"any other COSE compatible PKI trust anchor.\" with \"a JSON Web Key Set\".\r\n\r\nIs there an issue with COSE compatible PKI trust anchors that is driving this change? ",
          "createdAt": "2024-07-21T21:33:35Z",
          "updatedAt": "2024-07-21T21:33:35Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards : What is an example of a \"any other COSE compatible PKI trust anchor.\" besides the JSON Web Key Set?",
          "createdAt": "2024-07-21T22:17:12Z",
          "updatedAt": "2024-07-21T22:17:12Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Good question @hannestschofenig; if JSON Web Key Set is indeed the only possible COSE compatible PKI trust anchor then I see no issues with this change. ",
          "createdAt": "2024-07-21T22:35:25Z",
          "updatedAt": "2024-07-21T22:35:25Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I support Steve's suggested change. ",
          "createdAt": "2024-07-22T16:51:07Z",
          "updatedAt": "2024-07-22T16:51:07Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the point here is to keep it open and not limit to what exists today.\n\nFrom: Hannes Tschofenig ***@***.***>\nSent: Monday, July 22, 2024 10:28 AM\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\nCc: Roy Williams (E+P) ***@***.***>; Comment ***@***.***>\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Clarification of Trust Anchor Examples (PR #271)\n\n\n@hannestschofenig commented on this pull request.\n\n________________________________\n\nIn draft-ietf-scitt-architecture.md<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/271#discussion_r1686893600>:\n\n> @@ -387,7 +387,7 @@ Registration Policies refer to additional checks over and above the Mandatory Re\n\n Transparency Services MUST maintain Registration Policies.\n\n\n\n Transparency Services MUST also maintain a list of trust anchors, which SHOULD be used by Relying Parties to authenticate Issuers, and which MAY be included in a Registration Policy statement.\n\n-For instance, a trust anchor could be an X.509 root certificate, the discovery URL of an OpenID Connect identity provider, or any other COSE compatible PKI trust anchor.\n\n+For instance, a trust anchor could be an X.509 root certificate, the URL pointing to an OpenID Connect identity provider combined with the use of the Web PKI, or a JSON Web Key Set containing the public keys of Issuers.\n\nGive me examples of \"any other COSE-compatible trust anchor\".\n\nWhen the sentence starts with \"for instance\" or \"for example\" it has to actually give specific examples rather than leaving the reader puzzled about what you actual mean.\n\nI have worked on COSE for years and I don't know what you are referring. How would any other reader know what you mean?\n\n-\nReply to this email directly, view it on GitHub<https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/271#discussion_r1686893600>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AJP7OQHSHLBL5Q6WWXCDZKDZNU6KTAVCNFSM6AAAAABLGDUD26VHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDCOJSGE2DMMJRHE>.\nYou are receiving this because you commented.Message ID: ***@***.******@***.***>>\n",
          "createdAt": "2024-07-22T17:33:51Z",
          "updatedAt": "2024-07-22T17:33:51Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "@hannestschofenig I have not worked on COSE for one minute, but I get the impression that a SCITT Transparency statement could include identities other than X.509, which seems to imply that another form of \"trust anchor\" is plausible, i.e. a PGP chain of Trust or even a SCITT trusted party - am I mistaken. ",
          "createdAt": "2024-07-22T17:39:26Z",
          "updatedAt": "2024-07-22T17:39:26Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the point here is to keep it open and not limit to what exists today.\r\n\r\nThese are just examples anyway and as such the list is unbounded. But if you give examples, as you do today, then it better might be good to give examples that are understandable by readers. That is what I have been trying to do. I listed the only COSE example I am aware of.",
          "createdAt": "2024-07-22T22:53:08Z",
          "updatedAt": "2024-07-22T22:53:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiUhb",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T18:02:19Z",
          "updatedAt": "2024-07-20T18:02:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjozv",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T18:24:46Z",
          "updatedAt": "2024-07-21T18:24:57Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Not sure what this improves.  The previous was more generic and does not get us into JSON debates.",
              "createdAt": "2024-07-21T18:24:46Z",
              "updatedAt": "2024-07-21T18:24:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjtyK",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Do not agree with changes for the reasons above.",
          "createdAt": "2024-07-21T21:21:05Z",
          "updatedAt": "2024-07-21T21:21:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt2W",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:23:10Z",
          "updatedAt": "2024-07-21T21:23:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjvcr",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T22:16:10Z",
          "updatedAt": "2024-07-21T22:16:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The reason for the change: Nobody knows what this means \"any other COSE compatible PKI trust anchor\".\r\n\r\nI tried to clarify this. \r\n\r\nThe statement about \"discovery URL of an OpenID Connect identity provider\" is also meaningless. ",
              "createdAt": "2024-07-21T22:16:10Z",
              "updatedAt": "2024-07-21T22:16:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CpIZh",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T14:55:41Z",
          "updatedAt": "2024-07-22T14:55:42Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nFor instance, a trust anchor could be an X.509 root certificate, pointing to an OpenID Connect identity provider, or any other COSE-compatible trust anchor.\r\n```",
              "createdAt": "2024-07-22T14:55:42Z",
              "updatedAt": "2024-07-22T14:55:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CpaKs",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "proposal [here](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/271/files#r1686696564)",
          "createdAt": "2024-07-22T15:26:09Z",
          "updatedAt": "2024-07-22T15:26:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cpqoo",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T15:55:56Z",
          "updatedAt": "2024-07-22T15:55:56Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I would be happy to approve if this change is integrated.",
              "createdAt": "2024-07-22T15:55:56Z",
              "updatedAt": "2024-07-22T15:55:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CqBlT",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T16:39:14Z",
          "updatedAt": "2024-07-22T16:39:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "So would I",
              "createdAt": "2024-07-22T16:39:14Z",
              "updatedAt": "2024-07-22T16:39:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CqBz_",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-22T16:39:44Z",
          "updatedAt": "2024-07-22T16:39:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CqCcw",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Please update with Steve's suggestion",
          "createdAt": "2024-07-22T16:41:08Z",
          "updatedAt": "2024-07-22T16:41:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CqX7H",
          "commit": {
            "abbreviatedOid": "dadf1e8"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T17:27:47Z",
          "updatedAt": "2024-07-22T17:27:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Give me examples of \"any other COSE-compatible trust anchor\". \r\n\r\nWhen the sentence starts with \"for instance\" or \"for example\" it has to actually give specific examples rather than leaving the reader puzzled about what you actual mean.\r\n\r\nI have worked on COSE for years and I don't know what you are referring. How would any other reader know what you mean?",
              "createdAt": "2024-07-22T17:27:47Z",
              "updatedAt": "2024-07-22T17:27:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmjS_",
          "commit": {
            "abbreviatedOid": "6d59491"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:47:53Z",
          "updatedAt": "2024-07-30T14:47:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nFor instance, a trust anchor could be an X.509 root certificate, a pointer to an OpenID Connect identity provider, or any other COSE-compatible trust anchor.\r\n```",
              "createdAt": "2024-07-30T14:47:53Z",
              "updatedAt": "2024-07-30T14:47:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmjyE",
          "commit": {
            "abbreviatedOid": "25739cf"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:48:38Z",
          "updatedAt": "2024-07-30T14:48:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmkMT",
          "commit": {
            "abbreviatedOid": "25739cf"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM to [latest](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/271/commits/25739cf764a92b9c735fc178a291ea89b8dd7831) changes",
          "createdAt": "2024-07-30T14:49:15Z",
          "updatedAt": "2024-07-30T14:49:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 272,
      "id": "PR_kwDOIvmHss51_iuy",
      "title": "Initialization and Bootstrapping",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/272",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T17:58:02Z",
      "updatedAt": "2024-10-15T16:05:28Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-12",
      "headRefOid": "5e7d0374ff85faa63db64becbede34cfbd717311",
      "closedAt": "2024-07-21T23:20:56Z",
      "mergedAt": "2024-07-21T23:20:56Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "46f1bf26bfcc1f144c7b616cf84c02491062e2f2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiuHu",
          "commit": {
            "abbreviatedOid": "5e7d037"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:23:48Z",
          "updatedAt": "2024-07-21T00:23:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjmzQ",
          "commit": {
            "abbreviatedOid": "5e7d037"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T17:16:28Z",
          "updatedAt": "2024-07-21T17:16:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjo40",
          "commit": {
            "abbreviatedOid": "5e7d037"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T18:26:55Z",
          "updatedAt": "2024-07-21T18:26:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt3A",
          "commit": {
            "abbreviatedOid": "5e7d037"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:23:30Z",
          "updatedAt": "2024-07-21T21:23:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjvBh",
          "commit": {
            "abbreviatedOid": "5e7d037"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T22:03:27Z",
          "updatedAt": "2024-07-21T22:03:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 274,
      "id": "PR_kwDOIvmHss51_jE_",
      "title": "Editorial changes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/274",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:02:52Z",
      "updatedAt": "2024-10-15T16:05:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-13",
      "headRefOid": "d6283d617392305c3781ad50c359e1a0f469fcbe",
      "closedAt": "2024-07-21T23:22:12Z",
      "mergedAt": "2024-07-21T23:22:12Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "102e636746efb7af721e7da609d902e6d712fcbb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiVdF",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T18:28:49Z",
          "updatedAt": "2024-07-20T18:28:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CisUQ",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:19:37Z",
          "updatedAt": "2024-07-21T00:19:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjmxy",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T17:15:47Z",
          "updatedAt": "2024-07-21T17:15:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjo9g",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T18:29:36Z",
          "updatedAt": "2024-07-21T18:29:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtq1",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:17:25Z",
          "updatedAt": "2024-07-21T21:17:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuiX",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:46:23Z",
          "updatedAt": "2024-07-21T21:46:23Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n- Support for `kid` in the protected header and `x5chain` in the unprotected header is OPTIONAL to implement.\r\n```",
              "createdAt": "2024-07-21T21:46:23Z",
              "updatedAt": "2024-07-21T21:46:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjujZ",
          "commit": {
            "abbreviatedOid": "cc8332b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:46:55Z",
          "updatedAt": "2024-07-21T21:46:55Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n- When using x.509 certificates, support for `x5t` is REQUIRED to implement.\r\n```",
              "createdAt": "2024-07-21T21:46:55Z",
              "updatedAt": "2024-07-21T21:46:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjuly",
          "commit": {
            "abbreviatedOid": "d6283d6"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "fiddled with the language that intended to be normative and made it normative language",
          "createdAt": "2024-07-21T21:47:56Z",
          "updatedAt": "2024-07-21T21:47:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 278,
      "id": "PR_kwDOIvmHss51_jro",
      "title": "Expand Acronym",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/278",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:11:02Z",
      "updatedAt": "2024-10-15T16:05:27Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-14",
      "headRefOid": "717b07b010a479138fafbf7bbc96097d9a497410",
      "closedAt": "2024-07-21T23:22:38Z",
      "mergedAt": "2024-07-21T23:22:38Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "30fddae56ba8033d9cd8d0f16f48409bc9cd092c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiWEc",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T18:43:36Z",
          "updatedAt": "2024-07-20T18:43:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cir-l",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:18:52Z",
          "updatedAt": "2024-07-21T00:18:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjmwX",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T17:15:00Z",
          "updatedAt": "2024-07-21T17:15:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjpDm",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T18:32:51Z",
          "updatedAt": "2024-07-21T18:32:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuDm",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:30:21Z",
          "updatedAt": "2024-07-21T21:30:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuIZ",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:33:02Z",
          "updatedAt": "2024-07-21T21:33:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuJi",
          "commit": {
            "abbreviatedOid": "717b07b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:33:32Z",
          "updatedAt": "2024-07-21T21:33:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 280,
      "id": "PR_kwDOIvmHss51_kIZ",
      "title": "Wording Improvement in Section 4.3 Registration",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/280",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:17:39Z",
      "updatedAt": "2024-10-15T16:04:24Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-15",
      "headRefOid": "b37dbb11977e8c5842ebfab613690a04b2815873",
      "closedAt": "2024-09-03T23:26:02Z",
      "mergedAt": "2024-09-03T23:26:02Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f50f227137b66e8f49a6a83aeb0bb9a05f7cc0d0"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "> Authentication and authorization is implementation-specific, and out of scope of the SCITT Architecture.\r\n\r\nThis is not correct if we also consider SCRAPI",
          "createdAt": "2024-07-22T22:54:34Z",
          "updatedAt": "2024-07-22T22:54:34Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Authentication and authorization is implementation-specific, and out of scope of the SCITT Architecture.\r\n> \r\n> This is not correct if we also consider SCRAPI\r\n\r\nSCRAPI says Auth is, may or isn\u2019t required on specific endpoints, but doesn\u2019t specify how it\u2019s implemented. Is that inconsistent?",
          "createdAt": "2024-07-23T04:12:37Z",
          "updatedAt": "2024-07-23T04:12:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Cirxd",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T00:18:25Z",
          "updatedAt": "2024-07-21T00:18:26Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "'syntactically' was a hard-fought compromise in a long discussion about how far down the stack of turtles an implementation should have to go in order to validate identity claims. For example, a signature should be well-formed and locally verify the signature against the protected public key, but whole chains, CRLs, OCSP etc checks do not need to be done (necessarily). ",
              "createdAt": "2024-07-21T00:18:25Z",
              "updatedAt": "2024-07-21T00:18:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjese",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T13:55:26Z",
          "updatedAt": "2024-07-21T13:55:26Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "If it means a lot to you then leave the syntactical term in there. I am just pointing out that the actual issuer verification is more than just a syntax check since it really requires cryptographic verification. ",
              "createdAt": "2024-07-21T13:55:26Z",
              "updatedAt": "2024-07-21T13:55:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjmis",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T17:07:17Z",
          "updatedAt": "2024-07-21T17:07:17Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Constraining the verification requirement to depend only on information available directly in-line with the claims was the desired effect. That principal means a lot, the specific word 'syntactic' does not.",
              "createdAt": "2024-07-21T17:07:17Z",
              "updatedAt": "2024-07-21T17:07:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjpNF",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-07-21T18:38:19Z",
          "updatedAt": "2024-07-21T18:50:08Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "This is a MAY.  The client does not HAVE to.  ",
              "createdAt": "2024-07-21T18:38:19Z",
              "updatedAt": "2024-07-21T18:50:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjrXM",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T19:57:50Z",
          "updatedAt": "2024-07-21T19:57:50Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "@robinbryce Using only information from the COSE headers is fine. Like you, I would not call this \"syntactic\"",
              "createdAt": "2024-07-21T19:57:50Z",
              "updatedAt": "2024-08-01T06:44:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjrfQ",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T20:02:23Z",
          "updatedAt": "2024-07-21T20:02:23Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "This is inconsistent with other text in the security consideration section where the assumption is made that TLS-based communication security is made.\r\n\r\nIf you use TLS then authentication of the TS to the client is mandatory, authentication of the client to the TS is optional.",
              "createdAt": "2024-07-21T20:02:23Z",
              "updatedAt": "2024-07-21T20:02:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt0T",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:22:09Z",
          "updatedAt": "2024-07-21T21:22:09Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "This is a good point.\r\n\r\nI think the intention here is that the server authenticates the client, not that the client authenticates the TS",
              "createdAt": "2024-07-21T21:22:09Z",
              "updatedAt": "2024-07-21T21:22:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt2P",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:23:05Z",
          "updatedAt": "2024-07-21T21:23:05Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Jon has made the change the other way in SCRAPI and thus this is out of sync.",
              "createdAt": "2024-07-21T21:23:05Z",
              "updatedAt": "2024-07-21T21:23:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjvYH",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T22:13:31Z",
          "updatedAt": "2024-07-21T22:13:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Any suggestion on how to improve the text based on the discussion? @OR13 @roywill ",
              "createdAt": "2024-07-21T22:13:32Z",
              "updatedAt": "2024-07-21T22:13:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjvZp",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T22:14:24Z",
          "updatedAt": "2024-07-21T22:14:24Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Any suggestion on what to do about the term 'syntactically' now? @robinbryce @JAG-UK ",
              "createdAt": "2024-07-21T22:14:24Z",
              "updatedAt": "2024-07-21T22:14:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CpK9f",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-07-22T14:59:31Z",
          "updatedAt": "2024-07-22T15:00:02Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "While other brevity edits make are helpful, this one loses key aspects. Would like to keep the original lines 550-552",
              "createdAt": "2024-07-22T14:59:31Z",
              "updatedAt": "2024-07-22T15:00:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmVXN",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:26:52Z",
          "updatedAt": "2024-07-30T14:26:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThe Transparency Service MAY validate the Signed Statement payload, in order to enforce domain specific registration policies that apply to specific content types.\r\n```",
              "createdAt": "2024-07-30T14:26:52Z",
              "updatedAt": "2024-07-30T14:26:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmWOQ",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:28:11Z",
          "updatedAt": "2024-07-30T14:28:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I think what is important is trusting the issuer's keys... the claims used to discover them are hints.",
              "createdAt": "2024-07-30T14:28:11Z",
              "updatedAt": "2024-07-30T14:28:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dmc_L",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:38:07Z",
          "updatedAt": "2024-07-30T14:38:08Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n1. **Client authentication:** A Client authenticates with the Transparency Service before registering Signed Statements on behalf of one or more Issuers.\r\n```",
              "createdAt": "2024-07-30T14:38:08Z",
              "updatedAt": "2024-07-30T14:38:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmeHd",
          "commit": {
            "abbreviatedOid": "0059466"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:39:50Z",
          "updatedAt": "2024-07-30T14:39:50Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nAuthentication and authorization are implementation-specific and out of scope of the SCITT architecture.\r\n```",
              "createdAt": "2024-07-30T14:39:50Z",
              "updatedAt": "2024-07-30T14:39:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dmete",
          "commit": {
            "abbreviatedOid": "0d4e26b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:40:43Z",
          "updatedAt": "2024-07-30T14:40:43Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "LGTM to latest changes",
              "createdAt": "2024-07-30T14:40:43Z",
              "updatedAt": "2024-07-30T14:40:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dmgdp",
          "commit": {
            "abbreviatedOid": "3af9a5f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:43:25Z",
          "updatedAt": "2024-07-30T14:43:26Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThe Transparency Service MAY validate the Signed Statement payload in order to enforce domain specific registration policies that apply to specific content types.\r\n```",
              "createdAt": "2024-07-30T14:43:26Z",
              "updatedAt": "2024-07-30T14:43:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dmgrd",
          "commit": {
            "abbreviatedOid": "3af9a5f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:43:47Z",
          "updatedAt": "2024-07-30T14:43:47Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "This line is redundant with 559:\r\n> 1. **Return the Receipt**, which MAY be asynchronous from Registration.",
              "createdAt": "2024-07-30T14:43:47Z",
              "updatedAt": "2024-07-30T14:43:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmhGx",
          "commit": {
            "abbreviatedOid": "cad6028"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM to latest changes",
          "createdAt": "2024-07-30T14:44:27Z",
          "updatedAt": "2024-07-30T14:44:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmiTN",
          "commit": {
            "abbreviatedOid": "cad6028"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:46:17Z",
          "updatedAt": "2024-07-30T14:46:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6EFhor",
          "commit": {
            "abbreviatedOid": "cad6028"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "requesting clarification on if we have a \"minum bar\" identity claim validation over and above what is intended on the ts specified registration policies",
          "createdAt": "2024-08-02T17:03:50Z",
          "updatedAt": "2024-08-02T17:04:44Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n1. **Issuer Verification:** The Transparency Service MUST syntactically verify the Issuer's identity Claims, which may be different than the Client identity. Only information local to the signed statement need be considered.\r\n```\r\n\r\n\"validate the Issuer's identity Claims\" remains ambiguous to me. I prefer that registration policies are the vehicle for ts's to express different, use case based, constraints on what is accepted on a ledger. If we must have a 'minimum' bar, verification of claims based exclusively on the local contents of the signed statement is what I support.",
              "createdAt": "2024-08-02T17:03:50Z",
              "updatedAt": "2024-08-02T17:04:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQlHZ",
          "commit": {
            "abbreviatedOid": "cad6028"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:23:14Z",
          "updatedAt": "2024-08-13T14:23:14Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n1. **Issuer Verification:** The Transparency Service MUST perform signature verification, as defined in [RFC 9052 4.4](https://datatracker.ietf.org/doc/html/rfc9052#section-4.4), and MAY perform additional checks as part of its Registration Policy.\r\n```",
              "createdAt": "2024-08-13T14:23:14Z",
              "updatedAt": "2024-08-13T14:23:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQl1T",
          "commit": {
            "abbreviatedOid": "a3c1aef"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:23:57Z",
          "updatedAt": "2024-08-13T14:23:57Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "That is much better. THanks",
              "createdAt": "2024-08-13T14:23:57Z",
              "updatedAt": "2024-08-13T14:23:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQq_5",
          "commit": {
            "abbreviatedOid": "cad6028"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "ok with changes to 4.3 step 2",
          "createdAt": "2024-08-13T14:31:11Z",
          "updatedAt": "2024-08-13T14:31:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6FQs3H",
          "commit": {
            "abbreviatedOid": "0cb8fbd"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-08-13T14:34:01Z",
          "updatedAt": "2024-08-13T14:34:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6FQtDL",
          "commit": {
            "abbreviatedOid": "0cb8fbd"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:34:18Z",
          "updatedAt": "2024-08-13T14:34:24Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "DNS domain? Domain as in expertise?",
              "createdAt": "2024-08-13T14:34:18Z",
              "updatedAt": "2024-08-13T14:34:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQtYD",
          "commit": {
            "abbreviatedOid": "0cb8fbd"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:34:49Z",
          "updatedAt": "2024-08-13T14:34:49Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n1. **Issuer Verification:** The Transparency Service MUST perform signature verification, as defined in {{Section 4.4 of RFC9052}}, and MAY perform additional checks as part of its Registration Policy.\r\n```",
              "createdAt": "2024-08-13T14:34:49Z",
              "updatedAt": "2024-08-13T14:34:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQvbY",
          "commit": {
            "abbreviatedOid": "0cb8fbd"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:37:44Z",
          "updatedAt": "2024-08-13T14:37:44Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "BCG supports the proposed changes at 555",
              "createdAt": "2024-08-13T14:37:44Z",
              "updatedAt": "2024-08-13T14:37:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FSJ4S",
          "commit": {
            "abbreviatedOid": "b37dbb1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T17:11:57Z",
          "updatedAt": "2024-08-13T17:11:57Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Apologies, some how my comment (earlier got lost)\r\n\r\nStrictly speaking Line 555 is not necessary.\r\n\r\nif at all one wishes to introduce this, I suggest it on the following lines.\r\n\r\n`A Transparency Services MAY choose to validate the Signed Statement payload for certain content types, based on its custom policy. However such validation is out of scope of this Architecture.`",
              "createdAt": "2024-08-13T17:11:57Z",
              "updatedAt": "2024-08-13T17:12:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FSKbX",
          "commit": {
            "abbreviatedOid": "b37dbb1"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "please check my suggested change",
          "createdAt": "2024-08-13T17:13:14Z",
          "updatedAt": "2024-08-13T17:13:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6FTQdA",
          "commit": {
            "abbreviatedOid": "b37dbb1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T19:39:07Z",
          "updatedAt": "2024-08-13T19:39:07Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Proposing removing line 555 as a SCITT Instance MAY do anything that's not explicitly called out as MUST NOT in the draft. \r\n@rjb4standards, this means your comment is still valid, without this sentence, and we can create more brevity.\r\n```suggestion\r\n1. **Signed Statement validation:** The Transparency Service MUST check that the Signed Statement includes the required protected headers.\r\n```",
              "createdAt": "2024-08-13T19:39:07Z",
              "updatedAt": "2024-08-13T19:39:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6HwoTX",
          "commit": {
            "abbreviatedOid": "0cb8fbd"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T14:43:01Z",
          "updatedAt": "2024-09-03T14:43:01Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@yogeshbdeshpande, the PR refers to content, meaning the content of a content-type, for instance, the contenttype could be applicaiton/json, which isn't enough. The current PR leaves this more flexible, and is shorter.\r\n\r\n",
              "createdAt": "2024-09-03T14:43:01Z",
              "updatedAt": "2024-09-03T14:43:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6HwpZd",
          "commit": {
            "abbreviatedOid": "b37dbb1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T14:44:43Z",
          "updatedAt": "2024-09-03T14:44:43Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@yogeshbdeshpande, on the editors call, we decided to move this PR forward. Please open a PR with some additional suggestions if needed. ",
              "createdAt": "2024-09-03T14:44:43Z",
              "updatedAt": "2024-09-03T14:44:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Hwqkn",
          "commit": {
            "abbreviatedOid": "b37dbb1"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-09-03T14:46:30Z",
          "updatedAt": "2024-09-03T14:46:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Hwst4",
          "commit": {
            "abbreviatedOid": "0cb8fbd"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T14:49:49Z",
          "updatedAt": "2024-09-03T14:49:49Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Would rather keep the current proposal as less is more in this case.",
              "createdAt": "2024-09-03T14:49:49Z",
              "updatedAt": "2024-09-03T14:49:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6HwsxG",
          "commit": {
            "abbreviatedOid": "b37dbb1"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-03T14:49:54Z",
          "updatedAt": "2024-09-03T14:49:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 281,
      "id": "PR_kwDOIvmHss51_kUd",
      "title": "Editorial Section 4.4 Transparent Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/281",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:20:18Z",
      "updatedAt": "2024-10-15T16:05:16Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-16",
      "headRefOid": "f3b5b88826d666885f7033024371cf80391113cf",
      "closedAt": "2024-07-21T23:05:11Z",
      "mergedAt": "2024-07-21T23:05:11Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "678b1c0861050a69e393117c324ad0ae1531fb5d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiqMl",
          "commit": {
            "abbreviatedOid": "cb6dab0"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:14:56Z",
          "updatedAt": "2024-07-21T00:14:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjmRD",
          "commit": {
            "abbreviatedOid": "cb6dab0"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T16:58:26Z",
          "updatedAt": "2024-07-21T16:58:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjprY",
          "commit": {
            "abbreviatedOid": "cb6dab0"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T18:53:36Z",
          "updatedAt": "2024-07-21T18:53:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtx6",
          "commit": {
            "abbreviatedOid": "cb6dab0"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:20:57Z",
          "updatedAt": "2024-07-21T21:20:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt9W",
          "commit": {
            "abbreviatedOid": "cb6dab0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:26:52Z",
          "updatedAt": "2024-07-21T21:26:53Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThe Registration time is recorded as the timestamp when the Transparency Service added this Signed Statement to its Append-only Log.\r\n```\r\n\r\nRegistration is defined in the Terminology",
              "createdAt": "2024-07-21T21:26:53Z",
              "updatedAt": "2024-07-21T21:26:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt-g",
          "commit": {
            "abbreviatedOid": "f3b5b88"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Registration is capitalized as it has special meaning defined in the terminology",
          "createdAt": "2024-07-21T21:27:32Z",
          "updatedAt": "2024-07-21T21:27:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 283,
      "id": "PR_kwDOIvmHss51_kx5",
      "title": "Security Considerations - Certification Path Validation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/283",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:26:10Z",
      "updatedAt": "2024-10-15T16:04:34Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-17",
      "headRefOid": "9cd61c89db3dcabfca6c4c39aea45e0ae8886585",
      "closedAt": "2024-07-21T23:24:08Z",
      "mergedAt": "2024-07-21T23:24:08Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "173dee5b2a24f2b219dcd97b2d6b65eb1ce24a2e"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Here is the status:\r\n\r\nI do not believe there is a security problem. Roy says that Antoine thinks there is a problem. Antoine is, however, not at the meeting.",
          "createdAt": "2024-07-21T22:12:37Z",
          "updatedAt": "2024-07-21T22:12:37Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Antoine can object in the next iteration or during WGLC",
          "createdAt": "2024-07-21T23:24:01Z",
          "updatedAt": "2024-07-21T23:24:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CiqBB",
          "commit": {
            "abbreviatedOid": "b96abcd"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:14:28Z",
          "updatedAt": "2024-07-21T00:14:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjmOm",
          "commit": {
            "abbreviatedOid": "b96abcd"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:56:54Z",
          "updatedAt": "2024-07-21T16:56:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis modification does, however, not allow an attacker to successfully launch a person-in-the-middle attack.\r\nA denial-of-service attack is, however, possible. \r\n```",
              "createdAt": "2024-07-21T16:56:54Z",
              "updatedAt": "2024-07-21T16:56:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjmPI",
          "commit": {
            "abbreviatedOid": "141d57b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T16:57:18Z",
          "updatedAt": "2024-07-21T16:57:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjp3y",
          "commit": {
            "abbreviatedOid": "141d57b"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "The replacement loses the security issue and adds a new one.  \r\n\r\nThe modification of removing the certificate chain, which will save space in the ledger, opens up a problem of building the chain dynamically may result in the wrong trust anchor.",
          "createdAt": "2024-07-21T19:00:38Z",
          "updatedAt": "2024-07-21T19:00:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjuCa",
          "commit": {
            "abbreviatedOid": "141d57b"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:29:40Z",
          "updatedAt": "2024-07-21T21:29:40Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThis modification helps protect against person-in-the-middle attacks, but not denial-of-service.\r\n```",
              "createdAt": "2024-07-21T21:29:40Z",
              "updatedAt": "2024-07-21T21:29:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjuC8",
          "commit": {
            "abbreviatedOid": "141d57b"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:29:58Z",
          "updatedAt": "2024-07-21T21:29:58Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "`,however` reads awk",
              "createdAt": "2024-07-21T21:29:58Z",
              "updatedAt": "2024-07-21T21:29:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 284,
      "id": "PR_kwDOIvmHss51_k5J",
      "title": "Key Rotation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/284",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I generalized the description. You need to rotate all keys.",
      "createdAt": "2024-07-20T18:28:15Z",
      "updatedAt": "2024-10-15T16:05:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-18",
      "headRefOid": "3443470aa12a1b0411c02d761159cc28649892bf",
      "closedAt": "2024-07-30T14:36:06Z",
      "mergedAt": "2024-07-30T14:36:06Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "93edd281dd40c46588d60e154dff74c6fe80e4e2"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't have strong opinions about the MUST vs. SHOULD requirement here. The group will have to sort this out",
          "createdAt": "2024-07-22T17:24:11Z",
          "updatedAt": "2024-07-22T17:24:11Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Was wondering whether the cases where keys are never rotated are actually valid. The implication is the following: if an end-entity certificate has an indefinite lifetime then the certificates of the subordinate and CA certificates also need to have an indefinite lifetime.\r\n\r\nIs this a realistic deployment? If so, can you describe this deployment?",
          "createdAt": "2024-07-22T22:59:21Z",
          "updatedAt": "2024-07-22T22:59:21Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Sitting in the SUITS meeting, the same question of MUST came up. \r\nSomeone made the comment that the MIST could be required in the doc, but the doesn\u2019t mean a service that doesn\u2019t follow the MIST guidance, can\u2019t physically operate or even interop with other services. It would mean it\u2019s not conformant to informative guidance, and a security review could seem it not as secure. Which might be fine for a locked down, IoT scenario. \r\nAfter the SUITS discussion, I\u2019m fine with a MUST for operational info, that enables a service to function as they deem fit",
          "createdAt": "2024-07-23T04:09:24Z",
          "updatedAt": "2024-07-23T04:09:24Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Keeping with MUST as it doesn't change the compatibility, and a service that doesn't rotate would still be interoperable, and be operationally not compliant. ",
          "createdAt": "2024-07-30T14:35:43Z",
          "updatedAt": "2024-07-30T14:35:43Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CipcR",
          "commit": {
            "abbreviatedOid": "822810b"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-07-21T00:13:08Z",
          "updatedAt": "2024-07-21T00:13:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIssuers and Transparency Services MUST rotate their keys, see {{KEY-MANAGEMENT}}.\r\n```",
              "createdAt": "2024-07-21T00:13:08Z",
              "updatedAt": "2024-07-21T00:13:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjmNT",
          "commit": {
            "abbreviatedOid": "599dd34"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T16:56:02Z",
          "updatedAt": "2024-07-21T16:56:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjqCu",
          "commit": {
            "abbreviatedOid": "599dd34"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T19:07:37Z",
          "updatedAt": "2024-07-21T19:07:38Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "NIST Special Publication 800-57 Part 3\r\nCryptoperiod is defined in \r\n\r\nRevision 1\r\nRecommendation for\r\nKey Management\r\nPart 3: Application-Specific Key \r\nManagement Guidance",
              "createdAt": "2024-07-21T19:07:37Z",
              "updatedAt": "2024-07-21T19:07:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjqGM",
          "commit": {
            "abbreviatedOid": "599dd34"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "A MUST is rotate, and a SHOULD would be to do it at a constant cryptoperiod.",
          "createdAt": "2024-07-21T19:09:44Z",
          "updatedAt": "2024-07-21T19:09:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjqPY",
          "commit": {
            "abbreviatedOid": "599dd34"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T19:15:18Z",
          "updatedAt": "2024-07-21T19:15:18Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIssuers and Transparency Services MUST rotate their keys in well-defined cryptoperiods, see {{KEY-MANAGEMENT}}.\r\n```",
              "createdAt": "2024-07-21T19:15:18Z",
              "updatedAt": "2024-07-21T19:15:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjqhc",
          "commit": {
            "abbreviatedOid": "a36122f"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T19:25:51Z",
          "updatedAt": "2024-07-21T19:25:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIssuers and Transparency Services MUST rotate their keys in well-defined crypto-periods, see {{KEY-MANAGEMENT}}.\r\n```",
              "createdAt": "2024-07-21T19:25:51Z",
              "updatedAt": "2024-07-21T19:25:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt2J",
          "commit": {
            "abbreviatedOid": "81e4c6e"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:23:03Z",
          "updatedAt": "2024-07-21T21:23:03Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIssuers and Transparency Services MUST rotate their keys in well-defined cryptoperiods, see {{KEY-MANAGEMENT}}.\r\n```",
              "createdAt": "2024-07-21T21:23:03Z",
              "updatedAt": "2024-07-21T21:23:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt3n",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "removed the hyphen from cryptoperiods",
          "createdAt": "2024-07-21T21:23:47Z",
          "updatedAt": "2024-07-21T21:23:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt7v",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:25:53Z",
          "updatedAt": "2024-07-21T21:25:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Might be better to make this a SHOULD, sometimes keys cannot be rotated.",
              "createdAt": "2024-07-21T21:25:53Z",
              "updatedAt": "2024-07-21T21:25:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt9j",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:26:59Z",
          "updatedAt": "2024-07-21T21:26:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CpbTO",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T15:28:11Z",
          "updatedAt": "2024-07-22T15:28:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "With this in the security section, not in the normative, I'm ok with this change as it doesn't change interop, but rather a quality judgment of a TS that doesn't rotate keys.\r\n```suggestion\r\nIssuers and Transparency Services SHOULD rotate their keys in well-defined cryptoperiods, see {{KEY-MANAGEMENT}}.\r\n```",
              "createdAt": "2024-07-22T15:28:11Z",
              "updatedAt": "2024-07-22T15:28:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cpbwh",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "ticking for the change @OR13 suggested",
          "createdAt": "2024-07-22T15:29:01Z",
          "updatedAt": "2024-07-22T15:29:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CpnQ9",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T15:50:25Z",
          "updatedAt": "2024-07-22T15:50:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'd be happy to approve with this change integrated.",
              "createdAt": "2024-07-22T15:50:25Z",
              "updatedAt": "2024-07-22T15:50:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cpq0n",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T15:56:15Z",
          "updatedAt": "2024-07-22T15:56:15Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Same here, I would merge this as it is:\r\n\r\nI am uncomfortable diluting MUST to SHOULD. Our Architecture, MUST require this at the base.\r\n\r\nin case, if any profile cannot implement this, they can state that in their implementation!",
              "createdAt": "2024-07-22T15:56:15Z",
              "updatedAt": "2024-07-22T15:56:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cpq-T",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2024-07-22T15:56:29Z",
          "updatedAt": "2024-07-22T15:56:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CqEzV",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-22T16:46:25Z",
          "updatedAt": "2024-07-22T16:46:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Orie's posits that there is a situation where keys can never be rotated, but is that a practical position?",
              "createdAt": "2024-07-22T16:46:25Z",
              "updatedAt": "2024-07-22T16:46:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CtYJu",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Approving the MUST text. \r\n",
          "createdAt": "2024-07-23T04:09:54Z",
          "updatedAt": "2024-07-23T04:09:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmTiN",
          "commit": {
            "abbreviatedOid": "3443470"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:24:29Z",
          "updatedAt": "2024-07-30T14:24:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "An example of a key that cannot be rotated is a burned in key that attests to things. @henkbirkholz \r\n\r\nWhen SHOULD is used, there needs to be an explanation of when the advice can be ignored, and when it is MUST.\r\n\r\nWhen possible, keys MUST be rotated, unless it is not possible to attribute new keys to the same issuer identity, etc...",
              "createdAt": "2024-07-30T14:24:29Z",
              "updatedAt": "2024-07-30T14:24:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 286,
      "id": "PR_kwDOIvmHss51_lQZ",
      "title": "Privacy Considerations: Editorial Improvements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/286",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:32:50Z",
      "updatedAt": "2024-10-15T16:04:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "87e995196dedf30a8c58508e51b93a9ea9e989fa",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-19",
      "headRefOid": "8430e7bcc3eeb6693ef3b3a256f0ba573957ed5e",
      "closedAt": "2024-09-03T14:46:30Z",
      "mergedAt": "2024-09-03T14:46:30Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c7982b6f86a51f8ae24637895a49bf976b391a5b"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, @henkbirkholz, PTAL at the latest if they resolve your requested changes.  ",
          "createdAt": "2024-08-13T19:32:26Z",
          "updatedAt": "2024-08-13T19:32:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CipMk",
          "commit": {
            "abbreviatedOid": "cc548d2"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T00:12:26Z",
          "updatedAt": "2024-07-21T00:13:48Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Strictly speaking the *highly* immutable / non-removable bit according to the tech stack we've defined is only a hash. There are plausible deniability arguments to be made for even not wanting a hash of embarrassing or incriminating content on an immutable append-only log but I don't think those are in scope of SCITT.",
              "createdAt": "2024-07-21T00:12:26Z",
              "updatedAt": "2024-07-21T00:13:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjewz",
          "commit": {
            "abbreviatedOid": "cc548d2"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T13:57:05Z",
          "updatedAt": "2024-07-21T13:57:05Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Good point. This should be noted in there.",
              "createdAt": "2024-07-21T13:57:05Z",
              "updatedAt": "2024-07-21T13:57:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cje7R",
          "commit": {
            "abbreviatedOid": "cc548d2"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T14:00:50Z",
          "updatedAt": "2024-07-21T14:00:50Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I have added text to clarify this aspect. ",
              "createdAt": "2024-07-21T14:00:50Z",
              "updatedAt": "2024-07-21T14:00:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjmBL",
          "commit": {
            "abbreviatedOid": "fb47f36"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:50:02Z",
          "updatedAt": "2024-07-21T16:50:03Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nTransparency Services may be publicly accessible and Issuers should in those cases treat Signed Statements (rendering them as Transparent Statements) as publicly accessible.\r\nIn this case, a Signed Statement Envelope and Statement payload should not carry any confidential information in the clear.\r\nOnce a Signed Statement is inserted into the Append-only Log maintained by a Transparency Service, it cannot be removed from the Log.\r\nNote, however, the Transparency Services only stores the hash values, which only leads to minimal information leakage.\r\nFor a practial deployment a Relaying Party, such as an Auditor, will have to get access also to the Signed Statements, which are made available through an adjacent system.\r\n```",
              "createdAt": "2024-07-21T16:50:02Z",
              "updatedAt": "2024-07-21T16:50:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjmCp",
          "commit": {
            "abbreviatedOid": "b682d21"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:50:46Z",
          "updatedAt": "2024-07-21T16:50:46Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nTransparency Services may enforce access control to the Append-only Log.\r\nWhile this can be used to limit who can read the Log, it may also reduce the usefulness of the system.\r\n```",
              "createdAt": "2024-07-21T16:50:46Z",
              "updatedAt": "2024-07-21T16:50:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjmJE",
          "commit": {
            "abbreviatedOid": "2e5b2b2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:54:04Z",
          "updatedAt": "2024-07-21T16:54:04Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I'd suggest removing this section as issuer may need to keep proprietary information private, but need to record statements demonstrating their adherence to compliance requirements. Auditors/verifiers can be given access to the private information if/when needed. \r\nStating it may reduce usefulness could discourage users from writing important information that would be needed to track their adhearance.\r\n```suggestion\r\n```",
              "createdAt": "2024-07-21T16:54:04Z",
              "updatedAt": "2024-07-21T16:54:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjsxd",
          "commit": {
            "abbreviatedOid": "2e5b2b2"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T20:42:29Z",
          "updatedAt": "2024-07-21T20:42:29Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This is one possible implementation, as a result this is not something we can require.  I think you are pointing out that auditing the log which only holds hashes has one concern, but if the signed statement is flowing across the network that whole remains.  This then gets into a discussion of COSE Hashed Envelope and whether this is used to mask artifacts.",
              "createdAt": "2024-07-21T20:42:29Z",
              "updatedAt": "2024-07-21T20:42:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjs08",
          "commit": {
            "abbreviatedOid": "2e5b2b2"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "See comment above.",
          "createdAt": "2024-07-21T20:44:27Z",
          "updatedAt": "2024-07-21T20:44:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtvw",
          "commit": {
            "abbreviatedOid": "c894a89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:19:46Z",
          "updatedAt": "2024-07-21T21:19:47Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-07-21T21:19:46Z",
              "updatedAt": "2024-07-21T21:19:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjtxX",
          "commit": {
            "abbreviatedOid": "c894a89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Lets not assert properties of verifiable data structures beyond append only and inclusion proofs",
          "createdAt": "2024-07-21T21:20:38Z",
          "updatedAt": "2024-07-21T21:20:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjt0Q",
          "commit": {
            "abbreviatedOid": "c894a89"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Orie's suggestion makes sense",
          "createdAt": "2024-07-21T21:22:08Z",
          "updatedAt": "2024-07-21T21:22:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjun1",
          "commit": {
            "abbreviatedOid": "2e5b2b2"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:49:03Z",
          "updatedAt": "2024-07-21T21:49:03Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "@roywill Please suggest text on how you want your feedback to be addressed.",
              "createdAt": "2024-07-21T21:49:03Z",
              "updatedAt": "2024-07-21T21:49:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjut8",
          "commit": {
            "abbreviatedOid": "b52d00e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:52:55Z",
          "updatedAt": "2024-07-21T21:52:55Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nTransparency Services MAY support anonymous access, Issuers MUST ensure Signed Statements submitted to public access services are acceptable for public disclosure.\r\n```",
              "createdAt": "2024-07-21T21:52:55Z",
              "updatedAt": "2024-07-21T21:56:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cju1v",
          "commit": {
            "abbreviatedOid": "b52d00e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:57:24Z",
          "updatedAt": "2024-07-21T21:57:24Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIn this case, Signed Statements MUST NOT carry confidential information.\r\n```",
              "createdAt": "2024-07-21T21:57:24Z",
              "updatedAt": "2024-07-21T21:57:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cju5t",
          "commit": {
            "abbreviatedOid": "b52d00e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:59:31Z",
          "updatedAt": "2024-07-21T21:59:31Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nIn some deployments, a Relaying Party, such as an Auditor, might require access to Signed Statements and Statements, which can be made available through adjacent services.\r\n```",
              "createdAt": "2024-07-21T21:59:31Z",
              "updatedAt": "2024-07-21T22:00:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cju8Z",
          "commit": {
            "abbreviatedOid": "b52d00e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T22:00:54Z",
          "updatedAt": "2024-07-21T22:00:54Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nTransparency Services MUST enforce access control to the Append-only Log.\r\n```",
              "createdAt": "2024-07-21T22:00:54Z",
              "updatedAt": "2024-07-21T22:00:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CpNeH",
          "commit": {
            "abbreviatedOid": "09cd9f3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Suggestion to leave this section and close.",
          "createdAt": "2024-07-22T15:03:46Z",
          "updatedAt": "2024-07-22T15:04:12Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "In _most_ scenarios, I'd agree writes should be gated, but there are scenarios where all events would be written. For reads, most scenarios likely don't require access control, other than a means to apply throttling. \r\nAs a result, I'm suggesting we do not adopt this change",
              "createdAt": "2024-07-22T15:03:46Z",
              "updatedAt": "2024-07-22T15:30:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CqG91",
          "commit": {
            "abbreviatedOid": "09cd9f3"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-22T16:51:21Z",
          "updatedAt": "2024-07-22T16:51:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmV53",
          "commit": {
            "abbreviatedOid": "09cd9f3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:27:41Z",
          "updatedAt": "2024-07-30T14:27:41Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nTransparency Services MAY support anonymous access. Issuers MUST ensure Signed Statements submitted to public access services are acceptable for public disclosure.\r\n```",
              "createdAt": "2024-07-30T14:27:41Z",
              "updatedAt": "2024-07-30T14:27:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmW_X",
          "commit": {
            "abbreviatedOid": "d6225e3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:29:18Z",
          "updatedAt": "2024-07-30T14:29:18Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nTransparency Services MAY support anonymous access.\r\nIssuers MUST ensure Signed Statements submitted to public access services are acceptable for public disclosure.\r\n```",
              "createdAt": "2024-07-30T14:29:18Z",
              "updatedAt": "2024-07-30T14:29:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmYg-",
          "commit": {
            "abbreviatedOid": "aaa8a84"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Lets merge https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/294 first, and then address conflicts and see if anything remains",
          "createdAt": "2024-07-30T14:31:15Z",
          "updatedAt": "2024-07-30T14:31:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Dmqhj",
          "commit": {
            "abbreviatedOid": "aaa8a84"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:58:36Z",
          "updatedAt": "2024-07-30T14:58:36Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Access control does not mean you cannot have anonymous read or write, just that you have means to control it. I have worked on many systems that a have notion of anonymous read or read for unauthenticated access scenarios. Does that mean those systems, writ large, don't have access control?\r\n\r\nThere also appears to be informative and useful context in the edits about the last requirement on line 692. Is your criticism about this requirement specifically or all the edits as a whole?",
              "createdAt": "2024-07-30T14:58:36Z",
              "updatedAt": "2024-07-30T14:58:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dmq9e",
          "commit": {
            "abbreviatedOid": "aaa8a84"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I see this change as constructive, I asked Steve for clarification on his comments too.",
          "createdAt": "2024-07-30T14:59:15Z",
          "updatedAt": "2024-07-30T14:59:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Dnt_q",
          "commit": {
            "abbreviatedOid": "aaa8a84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T16:59:54Z",
          "updatedAt": "2024-07-30T16:59:54Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nIn some deployments, a special role, such as an Auditor, might require access to Signed Statements.\r\n```",
              "createdAt": "2024-07-30T16:59:54Z",
              "updatedAt": "2024-07-30T16:59:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DnuU_",
          "commit": {
            "abbreviatedOid": "aaa8a84"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T17:00:36Z",
          "updatedAt": "2024-07-30T17:00:37Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "The statement about adjacent services is `ambigous` and I suggest we remove it!",
              "createdAt": "2024-07-30T17:00:36Z",
              "updatedAt": "2024-07-30T17:00:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6D1Qch",
          "commit": {
            "abbreviatedOid": "fba7ce6"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-01T06:42:16Z",
          "updatedAt": "2024-08-01T06:42:16Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nTransparency Services will typically enforce access control to the Append-only Log.\r\n```",
              "createdAt": "2024-08-01T06:42:16Z",
              "updatedAt": "2024-08-01T06:42:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6D1QrJ",
          "commit": {
            "abbreviatedOid": "fba7ce6"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-01T06:42:51Z",
          "updatedAt": "2024-08-01T06:42:51Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Agree with what AJ said regarding access control. Still updated the text to make it less controversial.",
              "createdAt": "2024-08-01T06:42:51Z",
              "updatedAt": "2024-08-01T06:42:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6D7Not",
          "commit": {
            "abbreviatedOid": "fba7ce6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-01T16:39:20Z",
          "updatedAt": "2024-08-01T16:39:20Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "If others +1, I'll commit the suggestion, or @hannestschofenig since this is your PR, feel free to commit yourself. ",
              "createdAt": "2024-08-01T16:39:20Z",
              "updatedAt": "2024-08-01T16:39:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6D7Nr2",
          "commit": {
            "abbreviatedOid": "fba7ce6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-01T16:39:27Z",
          "updatedAt": "2024-08-01T16:39:27Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "@aj-stein-nist, I agree access control does not mean it can't also support anonymity. However, as written with \"MUST\", it does imply this, which is what I'm basic my objection to this line, as written. However, you are also correct that I had concerns with the generality of the additions as we've worked hard to reduce the ledger to recording cryptographic hashes of the content (signed statements, statements/aka payload/aka content) directly on the ledger. ",
              "createdAt": "2024-08-01T16:39:27Z",
              "updatedAt": "2024-08-01T16:39:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6D7OBy",
          "commit": {
            "abbreviatedOid": "fba7ce6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-01T16:40:10Z",
          "updatedAt": "2024-08-01T16:40:10Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I would LGTM with this change, and the removal of the text below",
              "createdAt": "2024-08-01T16:40:10Z",
              "updatedAt": "2024-08-01T16:40:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQ79N",
          "commit": {
            "abbreviatedOid": "e1ea7b9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:57:12Z",
          "updatedAt": "2024-08-13T14:57:13Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIssuers SHOULD ensure Signed Statements submitted to public access services are acceptable for public disclosure.\r\n```",
              "createdAt": "2024-08-13T14:57:13Z",
              "updatedAt": "2024-08-13T14:57:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FQ9bk",
          "commit": {
            "abbreviatedOid": "e1ea7b9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T14:59:27Z",
          "updatedAt": "2024-08-13T14:59:27Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Option 2, changing should to SHOULD for the original text\r\n```suggestion\r\nIssuers SHOULD treat Signed Statements (rendering them as Transparent Statements) as publicly accessible.\r\n```",
              "createdAt": "2024-08-13T14:59:27Z",
              "updatedAt": "2024-08-13T14:59:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FSOQl",
          "commit": {
            "abbreviatedOid": "e1ea7b9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T17:21:38Z",
          "updatedAt": "2024-08-13T17:21:38Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I liked OPTION 1 from Steve, because only Transparency Service with  public access is allowed public disclosure.\r\n\r\nThere may be a specific deployment where only designated actors may have access, with one the designated actor is an Auditor. There the Privacy considerations may vastly differ from others!",
              "createdAt": "2024-08-13T17:21:38Z",
              "updatedAt": "2024-08-13T17:21:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FSOdq",
          "commit": {
            "abbreviatedOid": "e1ea7b9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Suggest we incorporate Option 1 suggestion from Steve!",
          "createdAt": "2024-08-13T17:22:03Z",
          "updatedAt": "2024-08-13T17:22:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6FTOQL",
          "commit": {
            "abbreviatedOid": "cdd13a4"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Changes as of https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/286/commits/cdd13a43598929b76070b7f3aa44770baaee3ade improve the previous text.\r\nLGTM",
          "createdAt": "2024-08-13T19:33:25Z",
          "updatedAt": "2024-08-13T19:33:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6FTlOC",
          "commit": {
            "abbreviatedOid": "cdd13a4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T20:20:42Z",
          "updatedAt": "2024-08-13T20:20:42Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nPublicly accessible Signed Statements MUST NOT carry confidential information.\r\n```",
              "createdAt": "2024-08-13T20:20:42Z",
              "updatedAt": "2024-08-13T20:20:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTlt5",
          "commit": {
            "abbreviatedOid": "cdd13a4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T20:21:58Z",
          "updatedAt": "2024-08-13T20:21:58Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "This is a strange way to say that Log integrity is tamper protected.",
              "createdAt": "2024-08-13T20:21:58Z",
              "updatedAt": "2024-08-13T20:21:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTlv1",
          "commit": {
            "abbreviatedOid": "cdd13a4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-13T20:22:02Z",
          "updatedAt": "2024-08-13T20:22:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Hwjps",
          "commit": {
            "abbreviatedOid": "8430e7b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-03T14:36:50Z",
          "updatedAt": "2024-09-03T14:36:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Hwkwz",
          "commit": {
            "abbreviatedOid": "8430e7b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T14:38:08Z",
          "updatedAt": "2024-09-03T14:38:09Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nOnce a Signed Statement is registered it cannot be removed from the Log.\r\n```\r\nOptional brevity",
              "createdAt": "2024-09-03T14:38:09Z",
              "updatedAt": "2024-09-03T14:38:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 288,
      "id": "PR_kwDOIvmHss51_lj-",
      "title": "Security Considerations Wording Changes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/288",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-20T18:37:19Z",
      "updatedAt": "2024-10-15T16:04:37Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-20",
      "headRefOid": "bac262122df3c061ed13b51216c670ca0a083cf0",
      "closedAt": "2024-07-21T23:03:03Z",
      "mergedAt": "2024-07-21T23:03:03Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "6f9d6f54c6ade2f482194b977c40944d718804a7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CidVy",
          "commit": {
            "abbreviatedOid": "daf5828"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T22:35:52Z",
          "updatedAt": "2024-07-20T22:37:19Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Minor grammar recommendation.\r\n\r\n```suggestion\r\nIn both cases, the SCITT architecture provides generic, universally-verifiable cryptographic proofs to individually blame Issuers or the Transparency Service.\r\n```",
              "createdAt": "2024-07-20T22:35:53Z",
              "updatedAt": "2024-07-20T22:37:19Z"
            },
            {
              "originalPosition": 8,
              "body": "Minor grammar fix.\r\n\r\n```suggestion\r\nThis threat model may need to be refined to account for specific supply chain use cases.\r\n```",
              "createdAt": "2024-07-20T22:37:15Z",
              "updatedAt": "2024-07-20T22:37:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CiliY",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:04:34Z",
          "updatedAt": "2024-07-21T00:04:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjl31",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T16:45:31Z",
          "updatedAt": "2024-07-21T16:45:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtEH",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "See above.",
          "createdAt": "2024-07-21T20:54:31Z",
          "updatedAt": "2024-07-21T20:55:18Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Proof should remain singular here.  Plural changes the intent,",
              "createdAt": "2024-07-21T20:54:31Z",
              "updatedAt": "2024-07-21T20:55:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtkn",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:14:00Z",
          "updatedAt": "2024-07-21T21:14:00Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I think proofs is probably ok.\r\n\r\nIn a transparent signed statement, there are 2 signatures and 1 transparency proof, we could consider that 3 proofs.",
              "createdAt": "2024-07-21T21:14:00Z",
              "updatedAt": "2024-07-21T21:14:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtky",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:14:06Z",
          "updatedAt": "2024-07-21T21:14:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtvM",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "proofs is not wrong",
          "createdAt": "2024-07-21T21:19:27Z",
          "updatedAt": "2024-07-21T21:19:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtvo",
          "commit": {
            "abbreviatedOid": "bac2621"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:19:44Z",
          "updatedAt": "2024-07-21T21:19:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 290,
      "id": "PR_kwDOIvmHss51_pPa",
      "title": "Removed reference to zero trust",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/290",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Zero trust is a meaningless marketing term",
      "createdAt": "2024-07-20T19:34:39Z",
      "updatedAt": "2024-10-15T16:05:18Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-21",
      "headRefOid": "a98a33234efc4dd2fd4cae133a21dc598330dffb",
      "closedAt": "2024-07-21T23:00:51Z",
      "mergedAt": "2024-07-21T23:00:51Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "43f9c76886758ec59ac1f88aade05f4bf4f67e9a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6CicCr",
          "commit": {
            "abbreviatedOid": "a98a332"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-20T21:53:34Z",
          "updatedAt": "2024-07-20T21:53:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CilN7",
          "commit": {
            "abbreviatedOid": "a98a332"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T00:03:56Z",
          "updatedAt": "2024-07-21T00:03:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjl1B",
          "commit": {
            "abbreviatedOid": "a98a332"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-21T16:44:15Z",
          "updatedAt": "2024-07-21T16:44:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtTS",
          "commit": {
            "abbreviatedOid": "a98a332"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:03:34Z",
          "updatedAt": "2024-07-21T21:03:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtr-",
          "commit": {
            "abbreviatedOid": "a98a332"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Sure",
          "createdAt": "2024-07-21T21:18:00Z",
          "updatedAt": "2024-07-21T21:18:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjts6",
          "commit": {
            "abbreviatedOid": "a98a332"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:18:27Z",
          "updatedAt": "2024-07-21T21:18:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 292,
      "id": "PR_kwDOIvmHss52A5e4",
      "title": "Clarification about OAuth",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/292",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-21T13:53:12Z",
      "updatedAt": "2024-10-15T16:04:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "cace85a85d6f898f81b2dde7af8f7a934ed694b4",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-22",
      "headRefOid": "db37a1903753cf8eb346c20a0b4533691dd26470",
      "closedAt": "2024-07-21T23:08:06Z",
      "mergedAt": "2024-07-21T23:08:06Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "64483f0b6d68fff010b8f23db3dc45c85d066855"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Cjlwq",
          "commit": {
            "abbreviatedOid": "e857d75"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:41:56Z",
          "updatedAt": "2024-07-21T16:41:57Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIn {{RFC7523}}, the Authorization Server (AS) verifies Private Key JWT client authentication requests, and issues access tokens to clients configured to use \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\". This means the AS initially acts as a \"verifier\" of the authentication credentials in form of a JWT, and then later as an \"Issuer\" of access and refresh tokens.\r\nThis mirrors how Signed Statements are verified before Receipts are issued by a Transparency Service.\r\nNote that the use of {{RFC7523}} is only one possible approach for client authentication in OAuth.\r\n```",
              "createdAt": "2024-07-21T16:41:56Z",
              "updatedAt": "2024-07-21T16:41:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjlzF",
          "commit": {
            "abbreviatedOid": "d3a4851"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T16:43:16Z",
          "updatedAt": "2024-07-21T16:43:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIn {{RFC7523}}, the Authorization Server (AS) verifies Private Key JWT client authentication requests, and issues access tokens to clients configured to use \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\".\r\nThis means the AS initially acts as a \"verifier\" of the authentication credentials in form of a JWT, and then later as an \"Issuer\" of access and refresh tokens.\r\n```",
              "createdAt": "2024-07-21T16:43:16Z",
              "updatedAt": "2024-07-21T16:43:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjtcO",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:08:56Z",
          "updatedAt": "2024-07-21T21:08:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CjtdF",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T21:09:28Z",
          "updatedAt": "2024-07-21T21:09:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjtmy",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:15:22Z",
          "updatedAt": "2024-07-21T21:15:22Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nHighlighting {{RFC7523}} is intended as an example for client authentication originating from OAuth. Other approaches may be applicable.\r\n```",
              "createdAt": "2024-07-21T21:15:22Z",
              "updatedAt": "2024-07-21T23:07:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjtrB",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Still using the term Verifier... but it is in quotes and used as an analogy. good enough, I hope.\r\n\r\nAdded a suggested change that emphasizes that the OAuth domain is really just an example.",
          "createdAt": "2024-07-21T21:17:30Z",
          "updatedAt": "2024-07-21T21:17:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Cjuy2",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:55:55Z",
          "updatedAt": "2024-07-21T21:55:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "\"Many other approaches are applicable.\" --> The reader will ask himself/herself \"which other approaches\"",
              "createdAt": "2024-07-21T21:55:55Z",
              "updatedAt": "2024-07-21T21:55:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Cju2d",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-21T21:57:46Z",
          "updatedAt": "2024-07-21T21:57:46Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "The example of OAuth is actually not so useful as you think. The JWT that is used for client authentication is really only valuable if the JWT has previously been obtained in a secure way. Just creating the JWT on the fly does not provide any useful authentication -- for obvious reason. \r\n\r\nIn that sense, the JWT for client authentication in OAuth should be seen as a substitute for a X.509 certificate",
              "createdAt": "2024-07-21T21:57:46Z",
              "updatedAt": "2024-07-21T21:57:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6CjxWp",
          "commit": {
            "abbreviatedOid": "db37a19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-21T23:07:55Z",
          "updatedAt": "2024-07-21T23:07:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 294,
      "id": "PR_kwDOIvmHss52JeFW",
      "title": "Right to be Forgotten",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/294",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "You have to explain what this means and include reference. Since you are likely not going to do this, I suggest to delete this sentence.",
      "createdAt": "2024-07-22T23:13:41Z",
      "updatedAt": "2024-10-15T16:05:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "173dee5b2a24f2b219dcd97b2d6b65eb1ce24a2e",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-23",
      "headRefOid": "cb98d98aa6392a0bf38c206309047baf63af7d96",
      "closedAt": "2024-08-01T16:41:43Z",
      "mergedAt": "2024-08-01T16:41:43Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c4b24da338673d3d41a83a93c77f49c150735120"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we should take @henkbirkholz 's change, and that the current text is problematic.",
          "createdAt": "2024-07-30T14:20:36Z",
          "updatedAt": "2024-07-30T14:20:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6DmJ19",
          "commit": {
            "abbreviatedOid": "bc9bd71"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Signed Statements, with their content, are not recorded on the log. Hashes and proof are included. A Transparency Service may store the Transparent Statement content in ancillary services, and they may be deleted/redacted or handled as needed. \r\n\r\nThe latest text is better, but still needs a bit more tweaking",
          "createdAt": "2024-07-30T14:12:26Z",
          "updatedAt": "2024-07-30T14:25:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmKA1",
          "commit": {
            "abbreviatedOid": "bc9bd71"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:12:42Z",
          "updatedAt": "2024-07-30T14:12:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmLQG",
          "commit": {
            "abbreviatedOid": "bc9bd71"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-30T14:14:35Z",
          "updatedAt": "2024-07-30T14:14:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nOnce a Signed Statement is registered on an Append-only Log maintained by a Transparency Service, the fact that a Signed Statement was registered cannot be removed from the Append-only Log.\r\n```",
              "createdAt": "2024-07-30T14:14:35Z",
              "updatedAt": "2024-07-30T14:22:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6DmUQZ",
          "commit": {
            "abbreviatedOid": "321be3a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:25:31Z",
          "updatedAt": "2024-07-30T14:25:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmoWq",
          "commit": {
            "abbreviatedOid": "321be3a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:55:22Z",
          "updatedAt": "2024-07-30T14:55:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DwiXn",
          "commit": {
            "abbreviatedOid": "321be3a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-31T15:42:59Z",
          "updatedAt": "2024-07-31T15:42:59Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nOnce a cryptographic digest of the Signed Statement is registered on the Append-only Log, the registration cannot be removed from the Append-only Log.\r\n```",
              "createdAt": "2024-07-31T15:42:59Z",
              "updatedAt": "2024-07-31T15:42:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dwj0u",
          "commit": {
            "abbreviatedOid": "321be3a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-31T15:45:38Z",
          "updatedAt": "2024-07-31T15:45:38Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The narrowed text in this section is better than what's currently in the draft. However, this section is problematic as it makes it appear the actual content of the signed statement is included in the log, which could detract users from registering important content. We need better text for this section as the original draft suggested the content of the Signed Statement was recorded, making this more problematic and concerning for PII. ",
              "createdAt": "2024-07-31T15:45:38Z",
              "updatedAt": "2024-07-31T15:45:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Dwxlj",
          "commit": {
            "abbreviatedOid": "321be3a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-31T16:11:17Z",
          "updatedAt": "2024-07-31T16:11:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "> The narrowed text in this section is better than what's currently in the draft. However, this section is problematic as it makes it appear the actual content of the signed statement is included in the log, which could detract users from registering important content.\r\n\r\nWhere in the architecture document does it mandate (MUST) that the payload of the Signed Statement is a hash and locator, not the content itself? I understand your perspective on this, and agree it is a better use of the TS for efficiency, but I thought the architecture _allows_ for either, and I think there are use cases where that is acceptable or preferred (instead of external looks up to external systems, even if in a properly secured network; our own uses cases document has examples with air-gapped networks).",
              "createdAt": "2024-07-31T16:11:17Z",
              "updatedAt": "2024-07-31T16:11:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6D7OiZ",
          "commit": {
            "abbreviatedOid": "cb98d98"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-08-01T16:41:15Z",
          "updatedAt": "2024-08-01T16:41:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 295,
      "id": "PR_kwDOIvmHss52JeoH",
      "title": "Transparency Services are Public",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/295",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I would not assume certain deployment situations. It is likely that there are many Transparency Services that are not necessarily publically accessible to everyone and the entire architecture would still be totally valid",
      "createdAt": "2024-07-22T23:16:10Z",
      "updatedAt": "2024-10-15T16:05:08Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "173dee5b2a24f2b219dcd97b2d6b65eb1ce24a2e",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "hannestschofenig-patch-24",
      "headRefOid": "6cf0698bf9299b58528033c9abac4ca71aa3b628",
      "closedAt": "2024-07-30T14:10:16Z",
      "mergedAt": "2024-07-30T14:10:16Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "4abc68737d9dc84fbcc7daadb8122acbd71024f5"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree @hannestschofenig I know of at least one registry (Transparency Service) that will not be publicly accessible.",
          "createdAt": "2024-07-22T23:45:05Z",
          "updatedAt": "2024-07-22T23:45:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Csuxp",
          "commit": {
            "abbreviatedOid": "6cf0698"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "@hannestschofenig, always public or not, should we not consider that as material for privacy considerations that follow the line your recommended deletion?",
          "createdAt": "2024-07-23T00:34:20Z",
          "updatedAt": "2024-07-23T00:34:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CtVD2",
          "commit": {
            "abbreviatedOid": "6cf0698"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "We\u2019ve refined the architecture to specify the ledger doesn\u2019t contain the contents of the signed statement or payload. Which makes this section largely moot. \r\nThe premise of a ledger is to record important moments, which likely contain important information which is often PII. Or, may need to be redacted, or \u201cdeleted\u201d at a future date. \r\nAs the append only log contains hashes, not the actual data, a service can choose to delete the signed statements of payloads, if they recorded them in the first place. \r\n\r\nTo say someone should be so concerned, suggests this important service can\u2019t be used for important data. \r\n\r\nI could see an informative section in the architecture which speaks to this guidance, however I\u2019m not supportive wording that effectively says, don\u2019t use this for important, or sensitive info. ",
          "createdAt": "2024-07-23T04:01:35Z",
          "updatedAt": "2024-07-23T04:01:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmHxc",
          "commit": {
            "abbreviatedOid": "6cf0698"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:09:28Z",
          "updatedAt": "2024-07-30T14:09:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmH6k",
          "commit": {
            "abbreviatedOid": "6cf0698"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:09:41Z",
          "updatedAt": "2024-07-30T14:09:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmICZ",
          "commit": {
            "abbreviatedOid": "6cf0698"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the updates\r\nLGTM",
          "createdAt": "2024-07-30T14:09:53Z",
          "updatedAt": "2024-07-30T14:09:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 296,
      "id": "PR_kwDOIvmHss52JzrK",
      "title": "Proposed resultion to Issue #293, consistent use of 'registered'",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/296",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-23T00:40:11Z",
      "updatedAt": "2024-10-15T16:05:07Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "173dee5b2a24f2b219dcd97b2d6b65eb1ce24a2e",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/issue-293",
      "headRefOid": "f338b56bbde8df6d5ee111d67f0efd368d2a1589",
      "closedAt": "2024-07-30T14:09:03Z",
      "mergedAt": "2024-07-30T14:09:03Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "b0b16ae310e02823ea5f5915c25cf898c752cc22"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Csw7B",
          "commit": {
            "abbreviatedOid": "f338b56"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-23T00:47:26Z",
          "updatedAt": "2024-07-23T00:47:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6CtEwf",
          "commit": {
            "abbreviatedOid": "f338b56"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-23T02:33:58Z",
          "updatedAt": "2024-07-23T02:33:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmG2G",
          "commit": {
            "abbreviatedOid": "f338b56"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:08:21Z",
          "updatedAt": "2024-07-30T14:08:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6DmHbw",
          "commit": {
            "abbreviatedOid": "f338b56"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-30T14:08:58Z",
          "updatedAt": "2024-07-30T14:08:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 297,
      "id": "PR_kwDOIvmHss53kqI_",
      "title": "Remove ambiguous explanation of x5t usage",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/297",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Remove ambiguous details reported in  (fixes #269).",
      "createdAt": "2024-08-06T13:30:59Z",
      "updatedAt": "2024-10-15T16:05:06Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c4b24da338673d3d41a83a93c77f49c150735120",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "269-x5t-supply-chain-scenarios",
      "headRefOid": "601c910f4a6a26a3db295e151c710c9bc5a7581d",
      "closedAt": "2024-08-06T14:38:34Z",
      "mergedAt": "2024-08-06T14:38:34Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "2d7d7c89e826549fb417ade7033db8b1f294a5da"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6EaXL7",
          "commit": {
            "abbreviatedOid": "601c910"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-08-06T14:36:25Z",
          "updatedAt": "2024-08-06T14:36:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6EaXxO",
          "commit": {
            "abbreviatedOid": "601c910"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-06T14:37:16Z",
          "updatedAt": "2024-08-06T14:37:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6EaYij",
          "commit": {
            "abbreviatedOid": "601c910"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-08-06T14:38:27Z",
          "updatedAt": "2024-08-06T14:38:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 298,
      "id": "PR_kwDOIvmHss53k_pT",
      "title": "Clarify COSE VDS registry explanation",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/298",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Address feedback from Hannes in #282.",
      "createdAt": "2024-08-06T14:13:00Z",
      "updatedAt": "2024-10-15T16:05:05Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c4b24da338673d3d41a83a93c77f49c150735120",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "282-cose-vds-registry",
      "headRefOid": "c37166a06605364d7eb490dbc717bfcdc4987219",
      "closedAt": "2024-08-06T14:43:18Z",
      "mergedAt": "2024-08-06T14:43:18Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "87e995196dedf30a8c58508e51b93a9ea9e989fa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6EaZml",
          "commit": {
            "abbreviatedOid": "c37166a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-08-06T14:40:02Z",
          "updatedAt": "2024-08-06T14:40:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6EabAh",
          "commit": {
            "abbreviatedOid": "c37166a"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Breaks circular relationship until one is completed.",
          "createdAt": "2024-08-06T14:41:53Z",
          "updatedAt": "2024-08-06T14:41:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Eab7Z",
          "commit": {
            "abbreviatedOid": "c37166a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-06T14:43:10Z",
          "updatedAt": "2024-08-06T14:43:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 299,
      "id": "PR_kwDOIvmHss53nCrQ",
      "title": "Adjust DN regex requirement to be URI requirement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/299",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Fixes #273 with unclear definition and regex requirements with DN currently in draft.",
      "createdAt": "2024-08-06T20:00:55Z",
      "updatedAt": "2024-10-15T16:05:03Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "87e995196dedf30a8c58508e51b93a9ea9e989fa",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "273-dn-regex",
      "headRefOid": "c48adfd8101011fc6d02776ba8260b4aa8cd966c",
      "closedAt": "2024-09-17T14:49:47Z",
      "mergedAt": "2024-09-17T14:49:47Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "7615e71467cb9cf8cd7ffbb19048e3eda6f1f3c2"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Calling @CBonnell for some \ud83d\udc40 ",
          "createdAt": "2024-08-06T20:08:27Z",
          "updatedAt": "2024-08-06T20:08:27Z"
        },
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Perhaps I missed it, but what is the motivation of changing to a URI?\r\n\r\n",
          "createdAt": "2024-08-06T20:22:50Z",
          "updatedAt": "2024-08-06T20:22:50Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> Perhaps I missed it, but what is the motivation of changing to a URI?\r\n\r\nWe are specifically customizing the usage of `iss` in CWT as defined in [RFC](https://www.rfc-editor.org/rfc/rfc8392). In that document, it is a `stringOrURI` type and it seems like we shifting away from the base usage of URI to something else and with a regex spec I couldn't find in a relevant I-D, RFC, or standards doc that we can normatively cite as a reference.\r\n\r\nIs there something I am missing, and is there a valid reference we could use? ",
          "createdAt": "2024-08-06T20:54:43Z",
          "updatedAt": "2024-08-06T20:55:17Z"
        },
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree the current text is not clear, as it doesn't define or reference any regex. However, stating that the `iss` must be a URI with no further specification is equally unsatisfying.\r\n\r\nHow about we drop any mandate to use a particular format of `iss` if the `x5t` protected header is present? The identity of the issuer will be sourced from the X.509 certificate, so the `iss` value is largely redundant.",
          "createdAt": "2024-08-06T21:14:29Z",
          "updatedAt": "2024-08-06T21:14:29Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> I agree the current text is not clear, as it doesn't define or reference any regex. However, stating that the `iss` must be a URI with no further specification is equally unsatisfying.\n\nThere is a little more detail in the CWT RFC and points to the JWT RFC which in turn points to the string representation of URIs RFC. Are those definitions equally unclear?\n\n> How about we drop any mandate to use a particular format of `iss` if the `x5t` protected header is present? The identity of the issuer will be sourced from the X.509 certificate, so the `iss` value is largely redundant.\n\nI don't mind that if others have that feedback I'll close this out and start over. That will obsolete the feedback from Hannes that triggered this PR at the same time.\n\nI can bring that on list and reference this discussion.\n",
          "createdAt": "2024-08-06T21:29:33Z",
          "updatedAt": "2024-08-06T21:29:49Z"
        },
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ah, yes, I forgot to mention: if we want to retain the use of the string representation of the subject DN of the X.509 certificate for the `iss` value, we can reference RFC 4514.",
          "createdAt": "2024-08-06T21:29:51Z",
          "updatedAt": "2024-08-06T21:29:51Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> Ah, yes, I forgot to mention: if we want to retain the use of the string representation of the subject DN of the X.509 certificate for the `iss` value, we can reference RFC 4514.\r\n\r\nI can also bring that up as an option on list and adjust accordingly if that is ok. ",
          "createdAt": "2024-08-06T21:45:58Z",
          "updatedAt": "2024-08-06T21:45:58Z"
        },
        {
          "author": "CBonnell",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> There is a little more detail in the CWT RFC and points to the JWT RFC which in turn points to the string representation of URIs RFC. Are those definitions equally unclear?\r\n\r\nI think it\u2019s unclear, as there is no guidance on the content of the iss, only that it is URI-shaped.",
          "createdAt": "2024-08-06T21:46:27Z",
          "updatedAt": "2024-08-06T21:46:27Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "> > There is a little more detail in the CWT RFC and points to the JWT RFC which in turn points to the string representation of URIs RFC. Are those definitions equally unclear?\r\n> \r\n> I think it\u2019s unclear, as there is no guidance on the content of the iss, only that it is URI-shaped.\r\n\r\nIt is similarly unclear to me in the architecture requirements what one should or must do with the DN. It is implied, but left to the implementer to decide for desired X.509 use cases. It is not clear what one should do with it to correctly validate the cert use per the claim, regardless of DN or URI is chosen. Can we both agree that is part of the problem?\r\n",
          "createdAt": "2024-08-12T04:00:38Z",
          "updatedAt": "2024-08-12T04:00:38Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "body": "In any event, I apologize for the delay, I have created the following thread on list to discuss before moving forward with the PR in any significant way. I may stand corrected and others will prefer your approach (which I dubbed Approach #2).\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/M7G7SrcqXb6P9jU-mLg5VdwvT_g/",
          "createdAt": "2024-08-12T04:01:32Z",
          "updatedAt": "2024-08-12T04:01:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Deferring 'till the week of 8/19 as some folks are on vacation.",
          "createdAt": "2024-08-13T19:42:04Z",
          "updatedAt": "2024-08-13T19:42:04Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "I support this change on behalf of the https://github.com/microsoft/CCF project.",
          "createdAt": "2024-09-17T14:43:41Z",
          "updatedAt": "2024-09-17T14:43:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6H0dtq",
          "commit": {
            "abbreviatedOid": "c48adfd"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-09-03T23:27:21Z",
          "updatedAt": "2024-09-03T23:27:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Jr4DT",
          "commit": {
            "abbreviatedOid": "c48adfd"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-09-17T14:42:36Z",
          "updatedAt": "2024-09-17T14:42:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Jr5v2",
          "commit": {
            "abbreviatedOid": "c48adfd"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-17T14:45:02Z",
          "updatedAt": "2024-09-17T14:45:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Jr7dU",
          "commit": {
            "abbreviatedOid": "c48adfd"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-17T14:47:26Z",
          "updatedAt": "2024-09-17T14:47:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 300,
      "id": "PR_kwDOIvmHss53pTBs",
      "title": "Improve description for Figure 1",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/300",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Closes #268.",
      "createdAt": "2024-08-07T03:45:51Z",
      "updatedAt": "2024-10-15T16:04:21Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "87e995196dedf30a8c58508e51b93a9ea9e989fa",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "268-figure-1-description",
      "headRefOid": "71a1ed2e8746e9a169486800116519fdbbbd4ac2",
      "closedAt": "2024-10-01T14:46:56Z",
      "mergedAt": "2024-10-01T14:46:56Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "af8a14c0ecf1daf6599371a2e43f0599f77fa250"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Editors call notes:\r\n- Moving above the diagram is good clarity\r\n- Changing from defining the roles to the overall diagram caused some confusion. \r\n\r\nIf the PR can maintain the roles, and add diagram clarity, that would be preferred.",
          "createdAt": "2024-09-03T15:17:07Z",
          "updatedAt": "2024-09-03T15:17:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6FTSNu",
          "commit": {
            "abbreviatedOid": "5a1d988"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T19:43:24Z",
          "updatedAt": "2024-08-13T19:43:25Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n{{fig-concept-relationship}} illustrates entities and processes that comprise a Transparency Service independent of any one use case.\r\nThere are three main entities and their associated processes in SCITT:\r\n```",
              "createdAt": "2024-08-13T19:43:24Z",
              "updatedAt": "2024-08-13T19:43:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTTJi",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T19:45:46Z",
          "updatedAt": "2024-08-13T19:45:47Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n* Issuers that use their credentials to create Signed Statements about Artifacts\r\n```",
              "createdAt": "2024-08-13T19:45:46Z",
              "updatedAt": "2024-10-01T14:18:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTUYI",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T19:48:34Z",
          "updatedAt": "2024-08-13T19:48:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Removed the reference to Transparent Statements as those are assembled on the client\r\n```suggestion\r\n* Transparency Services that evaluate Signed Statements against Registration Policies, producing Receipts upon successful Registration.\r\nThe returned Receipt may be combined with the Signed Statement to create a Transparent Statement.\r\n```",
              "createdAt": "2024-08-13T19:48:35Z",
              "updatedAt": "2024-09-30T23:18:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTrdq",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T20:36:07Z",
          "updatedAt": "2024-08-13T20:36:08Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I would prefer my edit. I specifically used those phrases to align with the different sections of the diagram because the request was to explain and reference it in the text, removing some of the words and terms misses the requirement.\r\n\r\nIf not, I would have been less wordy, believe you me. \ud83d\ude04 ",
              "createdAt": "2024-08-13T20:36:07Z",
              "updatedAt": "2024-08-13T20:36:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Hwxpf",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-03T14:57:22Z",
          "updatedAt": "2024-09-03T14:57:59Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I disagree with this loss of capabilities.  A ledger should be able to take a transparent statement from another ledger and handle it as well.",
              "createdAt": "2024-09-03T14:57:22Z",
              "updatedAt": "2024-09-03T14:57:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6H0PtJ",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Address the editors meeting feedback with some proposals to \r\n- Move the roles definition above the diagram\r\n- Reflect the current diagram capabilities",
          "createdAt": "2024-09-03T22:20:29Z",
          "updatedAt": "2024-09-03T23:21:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis section describes the three main roles and associated processes in SCITT:\r\n```",
              "createdAt": "2024-09-03T22:20:30Z",
              "updatedAt": "2024-09-03T23:21:39Z"
            },
            {
              "originalPosition": 7,
              "body": "I see you're trying to encompass Issers make a Statement about an Artifact, use their credentials to create a \"Signed Statement\", then register them. It just reads longer than needed. The sentence prior was trying to define the three roles. In the call, there was resistance to redefining roles as entities.\r\n\r\nI've updated the suggestion a bit, which acknowledges a statement becomes a signed statement, with minimal text. ",
              "createdAt": "2024-09-03T22:26:51Z",
              "updatedAt": "2024-09-03T23:21:39Z"
            },
            {
              "originalPosition": 8,
              "body": "While accurate, a Signed Statement can be a previously Signed Statement with an attached receipt (Transparent Statement), it's not what [the diagram currently shows](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-4).\r\n\r\nThe diagram shows a single signed statement being placed on one, two, or more Transparency Services. Each TS produces a receipt, which can be stapled into a single Signed Statement with two receipts. \r\n\r\nThe [current text](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-4), nor the diagram cover the scenario of a Transparent Statement being re-registered. That could be a separate PR if we want to load the diagram with more lines.\r\n\r\nThe other suggested change describes the Signed Statement must be first evaluated against a registration policy before it's successfully registered.",
              "createdAt": "2024-09-03T23:20:40Z",
              "updatedAt": "2024-09-03T23:21:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6H0dTv",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Requesting changes to lines\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/300#discussion_r1715837334\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/300#discussion_r1715840508\r\n- https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/300#discussion_r1742769615",
          "createdAt": "2024-09-03T23:25:12Z",
          "updatedAt": "2024-09-03T23:25:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6LZr9a",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T23:08:07Z",
          "updatedAt": "2024-09-30T23:08:07Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Can we get a vote for how to resolve this? \r\nIf the goal is to make the text describe the diagram, the above suggestion hits that mark. \r\nIf we're adding other, valid capabilities, but not reflected in the diagram, we're creating another hole we'll need to patch.",
              "createdAt": "2024-09-30T23:08:07Z",
              "updatedAt": "2024-09-30T23:08:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LZtfQ",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T23:10:19Z",
          "updatedAt": "2024-09-30T23:10:20Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Please review latest suggestion so we can resolve this PR.",
              "createdAt": "2024-09-30T23:10:20Z",
              "updatedAt": "2024-09-30T23:10:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LZveX",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T23:13:22Z",
          "updatedAt": "2024-09-30T23:13:22Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Formatting change, as this sentence should stand alone to introduce the bullets.\r\n```suggestion\r\n{{fig-concept-relationship}} illustrates entities and processes that comprise a Transparency Service independent of any one use case.\r\n\r\n```",
              "createdAt": "2024-09-30T23:13:22Z",
              "updatedAt": "2024-09-30T23:14:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LZxdc",
          "commit": {
            "abbreviatedOid": "b5a2c0f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T23:15:56Z",
          "updatedAt": "2024-09-30T23:15:56Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n* Relying Parties that:\r\n```",
              "createdAt": "2024-09-30T23:15:56Z",
              "updatedAt": "2024-09-30T23:15:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LaaU_",
          "commit": {
            "abbreviatedOid": "eb58640"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T01:26:58Z",
          "updatedAt": "2024-10-01T01:26:58Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I am not sure what I missed with the original request to add figure text and the diagram description, but I intended to resolve that. So I am willing to take in the suggestion.\r\n\r\nThat said, I have switched GitHub accounts as I terminated my account NIST, so I may need to reopen this PR and touch up accordingly. Should I proceed wit that?",
              "createdAt": "2024-10-01T01:26:58Z",
              "updatedAt": "2024-10-01T01:26:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LgfYy",
          "commit": {
            "abbreviatedOid": "ef07db7"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T14:31:00Z",
          "updatedAt": "2024-10-01T14:31:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6LggKD",
          "commit": {
            "abbreviatedOid": "71a1ed2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-01T14:32:07Z",
          "updatedAt": "2024-10-01T14:32:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Lggqp",
          "commit": {
            "abbreviatedOid": "71a1ed2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T14:32:54Z",
          "updatedAt": "2024-10-01T14:32:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 301,
      "id": "PR_kwDOIvmHss53pwEv",
      "title": "Further explain SCITT analogy to RFC9162 CT entities and processes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/301",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "Closes #263.",
      "createdAt": "2024-08-07T04:42:07Z",
      "updatedAt": "2024-10-15T16:05:02Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "87e995196dedf30a8c58508e51b93a9ea9e989fa",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "263-auditing-not-just-sct",
      "headRefOid": "a2d3934d4d3ea5cc8e6633deec9556495b19ffcb",
      "closedAt": "2024-10-01T16:29:10Z",
      "mergedAt": "2024-10-01T16:29:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "6a81fa82b5c6eef5a6b66bc3a36fc4615ac2dc56"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6H0ext",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Approve with minor nit on 319",
          "createdAt": "2024-09-03T23:31:31Z",
          "updatedAt": "2024-09-03T23:32:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The arch doc doesn't discuss Signed Tree Heads. Proposing:\r\n```suggestion\r\n- Signed Certificate Timestamps and their respective consistency proofs are checked by Relying Parties\r\n```",
              "createdAt": "2024-09-03T23:31:31Z",
              "updatedAt": "2024-09-03T23:32:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6H0fub",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T23:36:37Z",
          "updatedAt": "2024-09-03T23:36:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Steve, Does this mean a Transparency Service provider MUST check Signed Certificate Timestamps and their respective consistency proofs?",
              "createdAt": "2024-09-03T23:36:37Z",
              "updatedAt": "2024-09-03T23:36:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6H0hDH",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-03T23:44:14Z",
          "updatedAt": "2024-09-03T23:44:14Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Good catch, @rjb4standards:\r\n\r\n> consistency proofs are checked by Relying Parties\r\n\r\nquestions if \"are\" is a MUST, SHOULD, COULD, or just a passive reference.\r\n\r\nAs this is the [\"Definition of Transparency\"](https://ietf-wg-scitt.github.io/draft-ietf-scitt-architecture/draft-ietf-scitt-architecture.html#section-3) section, I would read this as an example and IMO, I'm ok with it not being more restrictive. For that matter, x.509 is not required, so I wouldn't take this further. ",
              "createdAt": "2024-09-03T23:44:14Z",
              "updatedAt": "2024-09-03T23:44:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LgyxC",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:59:35Z",
          "updatedAt": "2024-10-01T14:59:35Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Leaving Signed Tree Heads\r\nWe may want to add more information related to CT in the Definition of Transparency section. ...in another PR",
              "createdAt": "2024-10-01T14:59:35Z",
              "updatedAt": "2024-10-01T14:59:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Lgy-W",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-01T14:59:52Z",
          "updatedAt": "2024-10-01T14:59:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6LgzTI",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T15:00:22Z",
          "updatedAt": "2024-10-01T15:00:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Lhr5I",
          "commit": {
            "abbreviatedOid": "a2d3934"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-01T16:24:02Z",
          "updatedAt": "2024-10-01T16:24:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 302,
      "id": "PR_kwDOIvmHss53toO6",
      "title": "Use header instead of resolved key manifest for #275",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/302",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "There is no explanation in draft, GitHub, or mailing lists about resolved key manifest. This change proposes replacement with protected header like other portions of the document. Fixes #275.",
      "createdAt": "2024-08-07T13:26:05Z",
      "updatedAt": "2024-10-15T16:05:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "87e995196dedf30a8c58508e51b93a9ea9e989fa",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "275-resolved-key-manifest",
      "headRefOid": "17804359e3b0e6e56636b1ef6b580cf10b1d7c94",
      "closedAt": "2024-09-03T23:36:50Z",
      "mergedAt": "2024-09-03T23:36:50Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "068a3344412304335c49a56eb008fd80eacccc49"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6FTWHP",
          "commit": {
            "abbreviatedOid": "1780435"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-08-13T19:50:58Z",
          "updatedAt": "2024-08-13T19:50:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 303,
      "id": "PR_kwDOIvmHss53vh0d",
      "title": "Improve explanation of CDDL and registration policy customization",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/303",
      "state": "MERGED",
      "author": "aj-stein-nist",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [],
      "body": "These proposed changes, if accepted, fix #277.",
      "createdAt": "2024-08-07T18:00:17Z",
      "updatedAt": "2024-10-15T16:04:25Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "87e995196dedf30a8c58508e51b93a9ea9e989fa",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "277-cddl-explanations",
      "headRefOid": "123c8fca8a1f244bde8603a68d16b8dd4c51d465",
      "closedAt": "2024-09-03T23:35:54Z",
      "mergedAt": "2024-09-03T23:35:54Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "cdd71e76a84e074fe496c2401cdcd2a1f6170205"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Espn7",
          "commit": {
            "abbreviatedOid": "b72f240"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-07T22:26:11Z",
          "updatedAt": "2024-08-07T22:26:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThis definition specifies the minimally required keys and values as mandatory.\r\nMost keys and their respective values for the unprotected header, protected header, and the claims embedded therein are optional for Signed Statements and Receipts.\r\n```",
              "createdAt": "2024-08-07T22:26:11Z",
              "updatedAt": "2024-08-07T22:26:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Esp7D",
          "commit": {
            "abbreviatedOid": "a6a5862"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-07T22:27:17Z",
          "updatedAt": "2024-08-07T22:27:18Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFor customizing requirements in Signed Statements and Receipts, a Registration Policy MAY define keys and/or values that are mandatory for that Transparency Service instance.\r\nSuch a Transparency Service instance MUST reject any Signed Statements or Receipts that are invalid according to its current Registration Policy.\r\n```",
              "createdAt": "2024-08-07T22:27:18Z",
              "updatedAt": "2024-08-07T22:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6EtEMj",
          "commit": {
            "abbreviatedOid": "a73b5b3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-08T00:05:17Z",
          "updatedAt": "2024-08-08T00:05:17Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I struggle with this section as it defines examples, yet there's only one minimal example for x.509.\r\nAnother arbitrary example where label `foo` must be defined, with a value of `bar1` and `bar2` would be a combative example. \r\n\r\nTo build on A.J.'s suggestion of inlining the minimal registration policy requirements, I'd suggest\r\n```suggestion\r\nThis definition specifies the minimal mandatory labels.\r\nImplementation-specific Registration Policies may define additional mandatory labels.\r\nA Transparency Service implementation MUST reject registering Signed Statements that do not meet their current Registration Policy requirements.\r\nEach implementation SHOULD provide details for their registration policies through documentation or discovery APIs.\r\n```\r\n",
              "createdAt": "2024-08-08T00:05:17Z",
              "updatedAt": "2024-08-08T00:08:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6EuiTj",
          "commit": {
            "abbreviatedOid": "a73b5b3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-08T03:24:12Z",
          "updatedAt": "2024-08-08T03:24:13Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "This proposal is terser and more to the point, I prefer this over my original edit, I take this suggestion.",
              "createdAt": "2024-08-08T03:24:12Z",
              "updatedAt": "2024-08-08T03:24:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Eujdd",
          "commit": {
            "abbreviatedOid": "a73b5b3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-08T03:31:17Z",
          "updatedAt": "2024-08-08T03:31:17Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "> I struggle with this section as it defines examples, yet there's only one minimal example for x.509. Another arbitrary example where label `foo` must be defined, with a value of `bar1` and `bar2` would be a combative example.\r\n\r\nAlso I was fine with the edit you proposed, but I am not sure how this part of this specification, with or without my edit, would have a contradiction in terms for `foo` versus `bar1` and `bar2`. If we follow the base architecture requirement, none are required.\r\n\r\nI do like your simpler version, but I feel minimizing the use of precision using architecture and CDDL terminology is what makes this property less obvious, not more. Am I missing something?\r\n",
              "createdAt": "2024-08-08T03:31:17Z",
              "updatedAt": "2024-08-08T03:31:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTdus",
          "commit": {
            "abbreviatedOid": "a73b5b3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T20:02:32Z",
          "updatedAt": "2024-08-13T20:02:32Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "The foo/bar proposal was the beginning of a proposal to add different examples. The heading says Signed Statement Example**s**, yet we only have one, with X.509. \r\nSince we don't seem ready to \"endorse\" a different identity type, I was thinking we might show some additional headers that MAY be required by another TS.\r\n\r\nAll that said, I'm fine with https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/303/commits/123c8fca8a1f244bde8603a68d16b8dd4c51d465, and have LGTMd it.",
              "createdAt": "2024-08-13T20:02:32Z",
              "updatedAt": "2024-08-13T20:02:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6FTd1M",
          "commit": {
            "abbreviatedOid": "123c8fc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM of https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/303/commits/123c8fca8a1f244bde8603a68d16b8dd4c51d465",
          "createdAt": "2024-08-13T20:02:46Z",
          "updatedAt": "2024-08-13T20:02:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6FTqse",
          "commit": {
            "abbreviatedOid": "a73b5b3"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-13T20:34:12Z",
          "updatedAt": "2024-08-13T20:34:12Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I can consider adding other examples tracked by a new issue, but do we have other workable examples as an alternative to X.509?",
              "createdAt": "2024-08-13T20:34:12Z",
              "updatedAt": "2024-08-13T20:34:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 304,
      "id": "PR_kwDOIvmHss59L0hu",
      "title": "Trust anchor clarity in registration policies",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/304",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "OR13"
      ],
      "labels": [],
      "body": "Fixes #270 ",
      "createdAt": "2024-10-01T00:08:38Z",
      "updatedAt": "2024-10-15T16:04:18Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "7615e71467cb9cf8cd7ffbb19048e3eda6f1f3c2",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/resolves-270",
      "headRefOid": "a60ce61edbd276dbbd39c24ca85f1b39f318e7cf",
      "closedAt": "2024-10-08T15:03:29Z",
      "mergedAt": "2024-10-08T15:03:29Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "59c44dc1537e42aadf56cc1e20e9514f8af03497"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6MWSZ_",
          "commit": {
            "abbreviatedOid": "6bb7789"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T14:16:42Z",
          "updatedAt": "2024-10-08T14:16:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nTransparency Services MUST maintain Registration Policies.\r\nTransparency Services MUST maintain a list of trust anchors as described in _TBD_.\r\nTransparency Services MUST authenticate signed statements as part of a Registration Policy.\r\n```",
              "createdAt": "2024-10-08T14:16:42Z",
              "updatedAt": "2024-10-08T14:31:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6MWS0q",
          "commit": {
            "abbreviatedOid": "6bb7789"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "This MUST need to be split up.",
          "createdAt": "2024-10-08T14:17:18Z",
          "updatedAt": "2024-10-08T15:03:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6MWjYZ",
          "commit": {
            "abbreviatedOid": "f38f8bb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T14:40:11Z",
          "updatedAt": "2024-10-08T14:40:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Add reference to https://datatracker.ietf.org/doc/html/rfc4949\r\n> $ trust anchor",
              "createdAt": "2024-10-08T14:40:11Z",
              "updatedAt": "2024-10-08T14:40:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6MWyas",
          "commit": {
            "abbreviatedOid": "a60ce61"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-08T15:01:53Z",
          "updatedAt": "2024-10-08T15:01:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6MWynp",
          "commit": {
            "abbreviatedOid": "a60ce61"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-08T15:02:11Z",
          "updatedAt": "2024-10-08T15:02:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 305,
      "id": "PR_kwDOIvmHss59L9GC",
      "title": "Add clarity for lines and duplicate boxes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/305",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SteveLasker"
      ],
      "labels": [],
      "body": "Note: This PR assumes #300 is merged, and may need to be updated to fit within the context of #300's final text. \r\n\r\nFixes #268 \r\n\r\n",
      "createdAt": "2024-10-01T00:50:24Z",
      "updatedAt": "2024-10-15T16:03:49Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "af8a14c0ecf1daf6599371a2e43f0599f77fa250",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/268",
      "headRefOid": "fc71453b3ad61692baa7f468194f68265fa2b32b",
      "closedAt": "2024-10-15T15:58:34Z",
      "mergedAt": "2024-10-15T15:58:34Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e963de6c5a5c24f37543a6d014f836d9ae8b3ec1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6LaUWW",
          "commit": {
            "abbreviatedOid": "ebeb62b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T00:52:16Z",
          "updatedAt": "2024-10-01T00:52:16Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Based on the result of #300, this text may be at the bottom of that merged text.\r\nOr, if the text solves #268, this may make sense to move to the bottom of the diagram.",
              "createdAt": "2024-10-01T00:52:16Z",
              "updatedAt": "2024-10-01T00:52:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LgiNJ",
          "commit": {
            "abbreviatedOid": "ebeb62b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:35:04Z",
          "updatedAt": "2024-10-01T14:35:04Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nTo verify a Transparent Statement, credentials are required to authenticate the protected content of the Transparent Statement.\r\n```",
              "createdAt": "2024-10-01T14:35:04Z",
              "updatedAt": "2024-10-01T14:35:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LgjGL",
          "commit": {
            "abbreviatedOid": "ebeb62b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:36:23Z",
          "updatedAt": "2024-10-01T14:36:24Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe Transparency Service produces a Receipt.\r\nA Receipt combined with a Signed Statement creates a Transparent Statement.\r\n```",
              "createdAt": "2024-10-01T14:36:23Z",
              "updatedAt": "2024-10-01T14:36:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Lgj5l",
          "commit": {
            "abbreviatedOid": "ebeb62b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:37:37Z",
          "updatedAt": "2024-10-01T14:37:37Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Which implies that you actually checking the signature of the Signed Statement?\r\n\r\nWould \"verifying\" a Transparent Statement not mean to check Signed Statement signature and Receipt signature?",
              "createdAt": "2024-10-01T14:37:37Z",
              "updatedAt": "2024-10-01T14:37:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Lgk0i",
          "commit": {
            "abbreviatedOid": "ebeb62b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:39:04Z",
          "updatedAt": "2024-10-01T14:39:04Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFor example, Credentials are used to produce Signed Statements and the Transparency Service verifies the Signed Statements.\r\n```",
              "createdAt": "2024-10-01T14:39:04Z",
              "updatedAt": "2024-10-01T14:39:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LgnKp",
          "commit": {
            "abbreviatedOid": "482703d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:42:32Z",
          "updatedAt": "2024-10-01T14:42:32Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Wouldn't that mean that you are actually only checking the signature of the Signed Statement, as the \"unprotected content\" is not checked?",
              "createdAt": "2024-10-01T14:42:32Z",
              "updatedAt": "2024-10-01T14:42:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LgpM_",
          "commit": {
            "abbreviatedOid": "482703d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T14:45:34Z",
          "updatedAt": "2024-10-01T14:45:34Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nTo verify a Transparent Statement, credentials are required to authenticate the Signed Statement and the Receipts of the Transparent Statement.\r\n```",
              "createdAt": "2024-10-01T14:45:34Z",
              "updatedAt": "2024-10-01T14:45:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6LhDTS",
          "commit": {
            "abbreviatedOid": "482703d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T15:20:35Z",
          "updatedAt": "2024-10-01T15:20:35Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Resolved with committed suggestion",
              "createdAt": "2024-10-01T15:20:35Z",
              "updatedAt": "2024-10-01T15:20:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6MWS2W",
          "commit": {
            "abbreviatedOid": "bbd7102"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T14:17:20Z",
          "updatedAt": "2024-10-08T14:17:21Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIn addition, {{fig-concept-relationship}} illustrates two Transparency Services and two Receipts as a single Signed Statement MAY be registered with more than one Transparency Service.\r\nEach Transparency Service produces a Receipt.\r\nA Transparent Statement MAY contain multiple Receipts, for each Transparency Service it was successfully registered with.\r\n```",
              "createdAt": "2024-10-08T14:17:20Z",
              "updatedAt": "2024-10-08T14:17:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPlIh",
          "commit": {
            "abbreviatedOid": "5a83fde"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T15:04:42Z",
          "updatedAt": "2024-10-15T15:04:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPqyc",
          "commit": {
            "abbreviatedOid": "dba1ae0"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T15:10:03Z",
          "updatedAt": "2024-10-15T15:10:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPrJM",
          "commit": {
            "abbreviatedOid": "5a83fde"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T15:10:27Z",
          "updatedAt": "2024-10-15T15:10:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 306,
      "id": "PR_kwDOIvmHss599eL8",
      "title": "Remove sentence",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/306",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/285",
      "createdAt": "2024-10-08T14:32:35Z",
      "updatedAt": "2024-10-15T16:04:59Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6a81fa82b5c6eef5a6b66bc3a36fc4615ac2dc56",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "remove-unclear-text",
      "headRefOid": "a8653bde397f2b6a04f730957716c9c8fbb8c977",
      "closedAt": "2024-10-08T14:44:17Z",
      "mergedAt": "2024-10-08T14:44:17Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "b0348978a0bf52651a2dac7bf7922f44ee730650"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6MWkF2",
          "commit": {
            "abbreviatedOid": "a8653bd"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM to Danny ",
          "createdAt": "2024-10-08T14:41:12Z",
          "updatedAt": "2024-10-08T14:41:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6MWkwu",
          "commit": {
            "abbreviatedOid": "a8653bd"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-08T14:42:09Z",
          "updatedAt": "2024-10-08T14:42:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6MWl_k",
          "commit": {
            "abbreviatedOid": "a8653bd"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-08T14:43:56Z",
          "updatedAt": "2024-10-08T14:43:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 308,
      "id": "PR_kwDOIvmHss5-prcB",
      "title": "Update the definition of Receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/308",
      "state": "MERGED",
      "author": "robinbryce",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* Emphasise the role of Receipts in the abstract definition of Transparency\r\n* Specifically acknowlege that signed proofs for other purposes are not excluded.\r\n* Emphasise that the specific cryptographic proof is a transparency service implementation detail.\r\n\r\nThe effort to both reduce the definition and also foreshadow the role of receipts and non-exclusivity of the proof types, seems to be about a net 0 line count change.\r\n\r\nThis interpretation seems at odds with blocking on COSE-Receipts, but to me consistent with the definition of transparency in the document.",
      "createdAt": "2024-10-15T10:05:15Z",
      "updatedAt": "2024-10-15T15:01:26Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "59c44dc1537e42aadf56cc1e20e9514f8af03497",
      "headRepository": "robinbryce/draft-ietf-scitt-architecture",
      "headRefName": "robin/issue-276-receipts",
      "headRefOid": "ae24c9b660886fb11cac7f99c14a319de12e42d8",
      "closedAt": "2024-10-15T15:01:26Z",
      "mergedAt": "2024-10-15T15:01:26Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "b468e21f25cf4d00281473167a8f18ceb41346ae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6NMZS_",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T10:16:01Z",
          "updatedAt": "2024-10-15T10:16:02Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "A Receipt consists of a Transparency Service-specific inclusion proof for the Signed Statement, a signature by the Transparency Service of the state of the Append-only Log after the inclusion, and additional metadata (contained in the signature's protected headers) to assist in auditing.",
              "createdAt": "2024-10-15T10:16:01Z",
              "updatedAt": "2024-10-15T10:16:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NMZn5",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T10:16:39Z",
          "updatedAt": "2024-10-15T10:16:39Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I think, we should stick with the Original text here, which was much crisp and clear!\r\n\r\nCan i please ask, why the need for this re-alignment? What is the ask ?",
              "createdAt": "2024-10-15T10:16:39Z",
              "updatedAt": "2024-10-15T10:16:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NMaHr",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T10:17:37Z",
          "updatedAt": "2024-10-15T10:17:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I mean Line 232 can be replaced with the original text from left!\r\n\r\nRest all re-alignment can be taken from your PR",
              "createdAt": "2024-10-15T10:17:37Z",
              "updatedAt": "2024-10-15T10:17:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NMaQw",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See my comments please!",
          "createdAt": "2024-10-15T10:17:52Z",
          "updatedAt": "2024-10-15T10:17:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NNAqN",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T11:12:21Z",
          "updatedAt": "2024-10-15T11:12:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yep, the ask was this issue: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/276 it was specifically asking if a Receipt was just an inclusion proof or something else.\r\n\r\nOn that issue we discussed fore shadowing the definition of transprency, which defines receipts as, essentially, signed inclusion proofs.",
              "createdAt": "2024-10-15T11:12:21Z",
              "updatedAt": "2024-10-15T11:12:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NNBKj",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T11:13:23Z",
          "updatedAt": "2024-10-15T11:13:23Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I understand the concerne was that the lack of clarity on that made it unclear whether or how other proof types, specific to the implementation, should be described. In this pr I'm just saying 'not receipts'",
              "createdAt": "2024-10-15T11:13:23Z",
              "updatedAt": "2024-10-15T11:13:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NNDnX",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T11:17:58Z",
          "updatedAt": "2024-10-15T11:17:58Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I think reducing the entire defintion to just\r\n\r\n\"Receipts demonstrate the inclusion of Signed Statements in the Append-only Log of a Transparency Service and have a specific abstract role in Transparency as defined in this document.\"\r\n\r\nAnd nothing else, would address the original issue. Receipts can't both be an abstract notion and also a specific prescription imo",
              "createdAt": "2024-10-15T11:17:58Z",
              "updatedAt": "2024-10-15T11:17:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NOFes",
          "commit": {
            "abbreviatedOid": "5988859"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T13:03:29Z",
          "updatedAt": "2024-10-15T13:03:29Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@yogeshbdeshpande a \"less is more\" update based on your review I think",
              "createdAt": "2024-10-15T13:03:29Z",
              "updatedAt": "2024-10-15T13:03:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NOOR2",
          "commit": {
            "abbreviatedOid": "ad998d2"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "ok, LGTM!",
          "createdAt": "2024-10-15T13:16:13Z",
          "updatedAt": "2024-10-15T13:16:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NN_cS",
          "commit": {
            "abbreviatedOid": "ad998d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "My comment is nonblocking",
          "createdAt": "2024-10-15T12:54:34Z",
          "updatedAt": "2024-10-15T14:29:43Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "The draft referenced above says they are.\n\nIt defines receipt as a signed \"proof\" of some type for some verifiable data structure.\n\nIt provides specific examples for inclusion and consistency.\n\nIt doesn't prevent other verifiable data structures or other proof types (such as proofs of non inclusion) from being used or called receipts.\n\nI think it is fine for a SCITT Receipt to be only a signed inclusion proof, or only an inclusion proof in a specific verifiable data structure... Assuming that's what the SCITT WG wants SCITT Receipts to be.\n\nThis text closes the door to using the term SCITT Receipt to describe a signed consistency proof. Why is this the right thing to do for SCITT?",
              "createdAt": "2024-10-15T12:54:34Z",
              "updatedAt": "2024-10-15T14:29:43Z"
            },
            {
              "originalPosition": 10,
              "body": "The COSE proof types are verifiable data structure specific, I think you mean that the \"verifiable data structure\" is a transparency service specific detail, and that correspondingly there is no interoperability unless the same data structures are chosen.",
              "createdAt": "2024-10-15T12:57:16Z",
              "updatedAt": "2024-10-15T14:29:43Z"
            },
            {
              "originalPosition": 8,
              "body": "I agree with this comment.\nA SCITT Receipt is a specific data structure, defined in CDDL, that profiles a COSE Receipt.... But SCITT Receipts have never supported proof types other than inclusion.\n\nIf the goal is to make sure they never do, we can use MUST language, we don't need to redefine receipt.",
              "createdAt": "2024-10-15T13:00:27Z",
              "updatedAt": "2024-10-15T14:29:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPOk2",
          "commit": {
            "abbreviatedOid": "ad998d2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:36:59Z",
          "updatedAt": "2024-10-15T14:37:00Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nReceipts are signed proofs of verifiable data-structure properties.\r\nThe types of Receipts MUST support inclusion proofs and MAY support Receipts for other proof types, such as consistency proofs.\r\n```\r\n",
              "createdAt": "2024-10-15T14:37:00Z",
              "updatedAt": "2024-10-15T14:51:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPTiW",
          "commit": {
            "abbreviatedOid": "ad998d2"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:42:44Z",
          "updatedAt": "2024-10-15T14:42:44Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "IMO, Receipts are only returned as the result of a request to register a Signed Statement, as proof the registration is complete, or not. Inquiries submitted to Transparency Services will return \"proof\" of a registered Signed Statement, or a negative response - no statement found. These secondary transactions return proofs, not receipts. ",
              "createdAt": "2024-10-15T14:42:44Z",
              "updatedAt": "2024-10-15T14:42:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPcK5",
          "commit": {
            "abbreviatedOid": "b9382f3"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:53:08Z",
          "updatedAt": "2024-10-15T14:53:08Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe types of Receipts MUST support inclusion proofs and MAY support other proof types, such as consistency proofs.\r\n```",
              "createdAt": "2024-10-15T14:53:08Z",
              "updatedAt": "2024-10-15T14:53:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPcow",
          "commit": {
            "abbreviatedOid": "ae24c9b"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T14:53:48Z",
          "updatedAt": "2024-10-15T14:53:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPc2T",
          "commit": {
            "abbreviatedOid": "ae24c9b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "From discussion during editors meeting:\r\nLGTM\r\n",
          "createdAt": "2024-10-15T14:54:06Z",
          "updatedAt": "2024-10-15T14:54:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPaKt",
          "commit": {
            "abbreviatedOid": "b9382f3"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:50:37Z",
          "updatedAt": "2024-10-15T14:54:07Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "This feedback seems important. Is there a reason we want to close that door?",
              "createdAt": "2024-10-15T14:50:37Z",
              "updatedAt": "2024-10-15T14:54:07Z"
            },
            {
              "originalPosition": 7,
              "body": "By removing the reference to [the draft-ietf-cose-merkle-tree definition of receipti](https://www.ietf.org/archive/id/draft-ietf-cose-merkle-tree-proofs-06.html#name-terminology), are we separating the definition in SCITT as unique? If so, for what purpose?",
              "createdAt": "2024-10-15T14:54:01Z",
              "updatedAt": "2024-10-15T14:54:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPdzQ",
          "commit": {
            "abbreviatedOid": "ae24c9b"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T14:55:29Z",
          "updatedAt": "2024-10-15T14:55:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 309,
      "id": "PR_kwDOIvmHss5-qCXO",
      "title": "Allow protected x5chain",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/309",
      "state": "MERGED",
      "author": "achamayou",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #307, by allowing the use of a single, protected `x5chain` header parameter instead of a protected `x5t` and unprotected `x5chain` pair, for reasons described in the issue.\r\n\r\nThis allows implementations to avoid the risk highlighted at the end of [Security Considerations](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/blob/main/draft-ietf-scitt-architecture.md#security-considerations), at the expense of a slightly larger protected header.\r\n\r\nThis is not a purely theoretical concern, the most widely used signing service inside Microsoft has implemented this choice, and the separate [Open Source signing tool](https://github.com/microsoft/CoseSignTool) from Microsoft has too.",
      "createdAt": "2024-10-15T10:52:15Z",
      "updatedAt": "2024-10-15T14:58:58Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "59c44dc1537e42aadf56cc1e20e9514f8af03497",
      "headRepository": "achamayou/draft-ietf-scitt-architecture",
      "headRefName": "allow_protected_x5chain",
      "headRefOid": "72c324c51e43df66d2230f2f9b5bb7beee3d2385",
      "closedAt": "2024-10-15T14:58:58Z",
      "mergedAt": "2024-10-15T14:58:58Z",
      "mergedBy": "achamayou",
      "mergeCommit": {
        "oid": "523583c75cf979a3d3c7e6bb0bbd3c4927dd41e7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6NN137",
          "commit": {
            "abbreviatedOid": "04826a6"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM thanks.\r\n\r\nFor completeness of the record, I was previously against _mandatory_ x5chain and _mandatory_ deep, possibly online checks of the links in the chain. This PR looks eminently sensible for people who _want to_ rely on x5chain",
          "createdAt": "2024-10-15T12:40:55Z",
          "updatedAt": "2024-10-15T12:40:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NORR1",
          "commit": {
            "abbreviatedOid": "04826a6"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the fix. Seems quite valuable to the overall operation!\r\n\r\nLGTM!",
          "createdAt": "2024-10-15T13:20:37Z",
          "updatedAt": "2024-10-15T13:20:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NOwP7",
          "commit": {
            "abbreviatedOid": "04826a6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T13:59:32Z",
          "updatedAt": "2024-10-15T13:59:33Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe protected header of the COSE_Sign1 Envelope MUST include either the Issuer's certificate as `x5t` or the chain including the Issuer's certificate as `x5chain`.\r\nIf `x5t` is included in the protected header, an `x5chain` with a leaf certificate corresponding to the `x5t` value MAY be included in the unprotected header.\r\n```",
              "createdAt": "2024-10-15T13:59:32Z",
              "updatedAt": "2024-10-15T13:59:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPGjc",
          "commit": {
            "abbreviatedOid": "c30a16d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:26:25Z",
          "updatedAt": "2024-10-15T14:26:26Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "why would we encourage people to put the pull chain in a header?\r\nThey can still verify the full chain when its in an unprotected header.",
              "createdAt": "2024-10-15T14:26:26Z",
              "updatedAt": "2024-10-15T14:26:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPJzn",
          "commit": {
            "abbreviatedOid": "c30a16d"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:30:37Z",
          "updatedAt": "2024-10-15T14:30:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@OR13 this is covered in #307, they can indeed verify the full chain when it is an unprotected header, but the chain is not authenticated or integrity protected. Assuming perfect verifier implementations, this makes no difference.\r\n\r\nIn a world where x509 parsers sometimes contain (exploitable) bugs however, there is a tradeoff between the size increase and the exposure to those bugs. I am proposing that the spec allows implementations to decide that tradeoff for themselves, rather than mandate one particular choice.",
              "createdAt": "2024-10-15T14:30:37Z",
              "updatedAt": "2024-10-15T14:30:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPd6N",
          "commit": {
            "abbreviatedOid": "c30a16d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:55:39Z",
          "updatedAt": "2024-10-15T14:55:40Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIn essence, when using X.509 Signed Statements, the Transparency Service MUST build and validate a complete certification path from an Issuer's certificate to one of the root certificates most recently registered as a trust anchor by the Transparency Service.\r\n```",
              "createdAt": "2024-10-15T14:55:40Z",
              "updatedAt": "2024-10-15T14:55:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPfSF",
          "commit": {
            "abbreviatedOid": "72c324c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T14:56:57Z",
          "updatedAt": "2024-10-15T14:56:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPfkb",
          "commit": {
            "abbreviatedOid": "72c324c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Discussion at the editors meeting to approve.\r\nLGTM",
          "createdAt": "2024-10-15T14:57:17Z",
          "updatedAt": "2024-10-15T14:57:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 310,
      "id": "PR_kwDOIvmHss5-rngO",
      "title": "Condense items 2-4 in S4.3 registration section for #279",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/310",
      "state": "MERGED",
      "author": "aj-stein",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This editorial change attempts to close #279 per feedback from @hannestschofenig.",
      "createdAt": "2024-10-15T14:00:23Z",
      "updatedAt": "2024-10-15T15:10:41Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "59c44dc1537e42aadf56cc1e20e9514f8af03497",
      "headRepository": "aj-stein/draft-ietf-scitt-architecture",
      "headRefName": "279-condense-reg-section",
      "headRefOid": "1a6a9052ad56093ab0afa1d7cfed6c0459cc463c",
      "closedAt": "2024-10-15T15:10:41Z",
      "mergedAt": "2024-10-15T15:10:41Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0d86887aa3a0bbe964161d0e6bc17929076f8257"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6NOzBy",
          "commit": {
            "abbreviatedOid": "693c24a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:03:02Z",
          "updatedAt": "2024-10-15T14:03:03Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n1. **TS Signed Statement Verification and Validation:** The Transparency Service MUST perform signature verification per {{Section 4.4 of RFC9052}} and MUST verify the signature of the Signed Statement with the signature algorithm and verification key of the Issuer per {{RFC9360}}.\r\nIt MUST also check the Signed Statement includes the required protected headers.\r\n```",
              "createdAt": "2024-10-15T14:03:02Z",
              "updatedAt": "2024-10-15T14:03:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPhzD",
          "commit": {
            "abbreviatedOid": "9b4f891"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T14:59:56Z",
          "updatedAt": "2024-10-15T14:59:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe Transparency Service MUST also check the Signed Statement includes the required protected headers.\r\n```",
              "createdAt": "2024-10-15T14:59:56Z",
              "updatedAt": "2024-10-15T14:59:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6NPiaJ",
          "commit": {
            "abbreviatedOid": "1a6a905"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM for reduction and lack of duplicity",
          "createdAt": "2024-10-15T15:00:47Z",
          "updatedAt": "2024-10-15T15:00:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPibO",
          "commit": {
            "abbreviatedOid": "1a6a905"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T15:00:48Z",
          "updatedAt": "2024-10-15T15:00:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6NPi4I",
          "commit": {
            "abbreviatedOid": "1a6a905"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T15:01:28Z",
          "updatedAt": "2024-10-15T15:01:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 311,
      "id": "PR_kwDOIvmHss6AuPP0",
      "title": "Update arch diagram to match terminology",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/311",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Update Figure 1 to include components from the Terminology.\r\n\r\n* Credentials is owned by an Issuer\r\n* Collection of receipt is done by a Relying Party\r\n* Make of Transparency Statement is done by an Auditor, which is a special Relying Party\r\n\r\nThe newly generated diagram looks as follow\r\n![architecture difference](https://github.com/user-attachments/assets/aa521d21-eb29-420f-982b-63059b2cf686)\r\n\r\n\r\n",
      "createdAt": "2024-11-03T11:34:15Z",
      "updatedAt": "2024-11-07T10:34:48Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e963de6c5a5c24f37543a6d014f836d9ae8b3ec1",
      "headRepository": "thibmeu/draft-ietf-scitt-architecture",
      "headRefName": "update-arch-digram-to-match-terminology",
      "headRefOid": "fd4c581950656a6ca1abbefbffb6774cb571abaf",
      "closedAt": "2024-11-07T10:34:48Z",
      "mergedAt": "2024-11-07T10:34:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "c6a19caa3ddd27b406e76960b5ba8cd05fa262d8"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "@thibmeu I have a slight concern with the diagram. Normally Replay log is explicitly done by Auditor so Under Replay Log, if the role is Auditor that is a more correct representation than a Generic Relying Party what you have currently!\r\n\r\nAlso, Log Replay is a resource consuming operation and should be careful in promoting that to a generic relying parties.\r\n\r\nI suggest renaming that aspect to Auditor",
          "createdAt": "2024-11-04T09:29:44Z",
          "updatedAt": "2024-11-04T09:31:59Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Also I have a concern, Verify Transparent Statements is a job of any Relying Party, not specifically for the Auditor?\r\n\r\nDid you intend to attach, the Auditor role to Verify Transparent Statements?",
          "createdAt": "2024-11-04T09:33:53Z",
          "updatedAt": "2024-11-04T09:33:53Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Also I have a concern, Verify Transparent Statements is a job of any Relying Party, not specifically for the Auditor?\r\n\r\nFrom the terminology\r\n```\r\nAuditor: checks the correctness and consistency of all Transparent Statements issued by a Transparency Service\r\nRelying Party: consumes Transparent Statements, verifying their proofs and inspecting the Statement payload\r\n```\r\n\r\nI read this as the Auditor builds verified transparent statement, while the replay log is a specialised relying Party but not necessarily an auditor\r\n\r\nRemoving Auditor is also a possibility to not put too many entities, since it's relying parties anyway. What do you think? ",
          "createdAt": "2024-11-04T09:42:33Z",
          "updatedAt": "2024-11-04T09:42:33Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@yogeshbdeshpande I've addressed your comments following a discusion we had in person\r\nhere is the updated diagram\r\n\r\n![Screenshot from 2024-11-04 11-41-47](https://github.com/user-attachments/assets/ca0837ae-7b15-48da-9e56-9aea72e07078)\r\n",
          "createdAt": "2024-11-04T11:42:23Z",
          "updatedAt": "2024-11-04T11:42:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Pwf57",
          "commit": {
            "abbreviatedOid": "acb54ed"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-03T13:25:59Z",
          "updatedAt": "2024-11-03T13:25:59Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Fixes the gap in the line\r\n```suggestion\r\n              |                           |   |\r\n              V                           |   |\r\n```",
              "createdAt": "2024-11-03T13:25:59Z",
              "updatedAt": "2024-11-03T13:26:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6PwmL0",
          "commit": {
            "abbreviatedOid": "1aef2c1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-03T15:38:55Z",
          "updatedAt": "2024-11-03T15:38:56Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n       v             +--------------------+\r\n  .----+----.        | Issuer Credentials |\r\n | Statement |       +--------+--+--------+\r\n```",
              "createdAt": "2024-11-03T15:38:56Z",
              "updatedAt": "2024-11-03T15:38:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6PwmPW",
          "commit": {
            "abbreviatedOid": "a82f63f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-03T15:40:02Z",
          "updatedAt": "2024-11-03T15:40:03Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n              | '----------+---------+    |\r\n              |            | Auditor |    |\r\n              |            +---------+    |\r\n```",
              "createdAt": "2024-11-03T15:40:03Z",
              "updatedAt": "2024-11-03T15:40:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6PwmTD",
          "commit": {
            "abbreviatedOid": "7e1b2ff"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-03T15:40:56Z",
          "updatedAt": "2024-11-03T15:40:56Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n  .-----------+----------.    .-----------+------.\r\n /  Collecting Receipt  /    /    Replay Log    /\r\n'------+---------------+    '--+---------------+\r\n       | Relying Party |       | Relying Party |\r\n       +---------------+       +---------------+\r\n```",
              "createdAt": "2024-11-03T15:40:56Z",
              "updatedAt": "2024-11-03T15:40:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6PwmZQ",
          "commit": {
            "abbreviatedOid": "73a4ce9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks, @thibmeu \r\nLGTM\r\n\r\nMinor tweaks to fix the aasvg corners:\r\n![image](https://github.com/user-attachments/assets/3252563d-78e3-4d32-bb94-90c39699db23)\r\n",
          "createdAt": "2024-11-03T15:42:59Z",
          "updatedAt": "2024-11-03T15:44:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6PwnR3",
          "commit": {
            "abbreviatedOid": "73a4ce9"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-03T16:04:16Z",
          "updatedAt": "2024-11-03T16:04:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Py5lp",
          "commit": {
            "abbreviatedOid": "73a4ce9"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Lgtm",
          "createdAt": "2024-11-04T08:49:46Z",
          "updatedAt": "2024-11-04T08:49:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6PzQc2",
          "commit": {
            "abbreviatedOid": "73a4ce9"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Kindly answer these questions please before I can approve, happy to discuss face to face!",
          "createdAt": "2024-11-04T09:35:26Z",
          "updatedAt": "2024-11-04T09:35:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6P07X6",
          "commit": {
            "abbreviatedOid": "fd4c581"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you for making this important change!\r\nLooks Good to Me",
          "createdAt": "2024-11-04T13:06:24Z",
          "updatedAt": "2024-11-04T13:06:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 312,
      "id": "PR_kwDOIvmHss6BqwKK",
      "title": "Separate roles from actions",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/312",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From the editors call on 11/12/24\r\n- With the addition of the relying party roles, make the top consistent\r\n- Change the hanging text for sign/verify to actions\r\n- Move Issuer as the entity that performs the actions\r\n- Cleanup overly detailed row for COSE_SIGN1\r\n- Narrow the diagram to avoid make warnings\r\n\r\n![image](https://github.com/user-attachments/assets/32dcc791-3e42-40bb-bf8f-429e77d5372c)\r\n",
      "createdAt": "2024-11-12T18:04:08Z",
      "updatedAt": "2024-12-10T16:23:06Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c6a19caa3ddd27b406e76960b5ba8cd05fa262d8",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/diagram-seperate-roles",
      "headRefOid": "5f2a6beb93a794ed3a9f93f975207dff73254cb5",
      "closedAt": "2024-11-13T17:52:58Z",
      "mergedAt": "2024-11-13T17:52:58Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "3ca40678aabd8040a812d92884f72922d7794c38"
      },
      "comments": [
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "> in general the concept LGTM! For future: Just a word of caution: We should make every effort to make the Architecture, look simple. Too many boxes, complicate the diagram.\r\n\r\nAlso, any reason why you removed `cose_sign1` It was super helpful to understand that the Signed Statement was `cose_sign1`",
          "createdAt": "2024-11-12T18:12:03Z",
          "updatedAt": "2024-11-12T18:12:03Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@yogeshbdeshpande the reason was to keep the diagram high level, and leave details to spec text",
          "createdAt": "2024-11-12T18:14:52Z",
          "updatedAt": "2024-11-12T18:14:52Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> Also, any reason why you removed `cose_sign1` It was super helpful to understand that the Signed Statement was `cose_sign1`\r\n\r\nAs expected, but I would like to amplify Yogesh's question.",
          "createdAt": "2024-11-13T17:31:40Z",
          "updatedAt": "2024-11-13T17:31:40Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "> As expected, but I would like to amplify Yogesh's question.\r\n\r\nWe did discuss this on the call, and [@OR13 's comment](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/312#issuecomment-2471246968) sums up our conversation:\r\n\r\n@henkbirkholz, are you blocking, or are you ok if we merge the current simplified version?\r\n",
          "createdAt": "2024-11-13T17:38:47Z",
          "updatedAt": "2024-11-13T17:38:47Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am okay with the new version. We might apply of different meaning to the term \"simplified\" \u263a\ufe0f",
          "createdAt": "2024-11-13T17:52:14Z",
          "updatedAt": "2024-11-13T17:52:14Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Q3En_",
          "commit": {
            "abbreviatedOid": "5f2a6be"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "in general the concept LGTM! For future: Just a word of caution: We should make every effort to make the Architecture, look simple. Too many boxes, complicate the diagram. \r\n",
          "createdAt": "2024-11-12T18:10:18Z",
          "updatedAt": "2024-11-12T18:10:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Q3GdY",
          "commit": {
            "abbreviatedOid": "5f2a6be"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-12T18:14:15Z",
          "updatedAt": "2024-11-12T18:14:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6RFHnS",
          "commit": {
            "abbreviatedOid": "5f2a6be"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-13T17:52:25Z",
          "updatedAt": "2024-11-13T17:52:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 313,
      "id": "PR_kwDOIvmHss6BrpeK",
      "title": "Nit formats and kramdown fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/313",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "no content changes, just formatting",
      "createdAt": "2024-11-12T20:36:18Z",
      "updatedAt": "2024-12-10T16:23:02Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "c6a19caa3ddd27b406e76960b5ba8cd05fa262d8",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/nits",
      "headRefOid": "741f28c26677839745ead0305d0fb94ce0ce1d7b",
      "closedAt": "2024-11-12T20:40:35Z",
      "mergedAt": "2024-11-12T20:40:35Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1313f33525c6772f0296ce51ea432b891c39ee63"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 314,
      "id": "PR_kwDOIvmHss6EsNzI",
      "title": "markdown minutiae",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/314",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-10T11:24:42Z",
      "updatedAt": "2024-12-10T11:34:42Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "tiny-structure",
      "baseRefOid": "f15ff9fc003b06ce4d9f11bdd57f38a14e93bfb8",
      "headRepository": "cabo/draft-ietf-scitt-architecture",
      "headRefName": "minutiae",
      "headRefOid": "15f4cecbe9b67ee7e858183db733cb3a5908be86",
      "closedAt": "2024-12-10T11:34:42Z",
      "mergedAt": "2024-12-10T11:34:42Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "34c2a67eda0945ed3f84fcdda0f849885c8620ed"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "non-invasive useful\r\n\r\nthx!",
          "createdAt": "2024-12-10T11:34:35Z",
          "updatedAt": "2024-12-10T11:34:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6UiQuJ",
          "commit": {
            "abbreviatedOid": "15f4cec"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-10T11:29:15Z",
          "updatedAt": "2024-12-10T11:29:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 315,
      "id": "PR_kwDOIvmHss6EsXSA",
      "title": "a minuscule structure mod proposal",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/315",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "* moving `Signed Statement` and `Transparent Statement` to top tier (and cabo fixed some header nesting)\r\n* fixed some references (and cabo fixed some more)\r\n* adapted heading",
      "createdAt": "2024-12-10T11:43:26Z",
      "updatedAt": "2024-12-10T16:23:00Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "3ca40678aabd8040a812d92884f72922d7794c38",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "tiny-structure",
      "headRefOid": "d1796ac3807bc4dccb42be04ff83ea2ba6d2dee2",
      "closedAt": "2024-12-10T16:03:24Z",
      "mergedAt": "2024-12-10T16:03:24Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "a1ddffee13d3892de352eb6f99f1a9646f66ca10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Ukjz3",
          "commit": {
            "abbreviatedOid": "34c2a67"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T14:58:55Z",
          "updatedAt": "2024-12-10T14:58:56Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\n{{fig-transparent-statement-cddl}} illustrates a normative CDDL definition of Transparent Statements.\r\nSee {{fig-signed-statement-cddl}} for the CDDL rule that defines 'COSE_Sign1' as specified in {{Section 4.2 of -COSE}}\r\n```",
              "createdAt": "2024-12-10T14:58:56Z",
              "updatedAt": "2024-12-10T14:58:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ukqb2",
          "commit": {
            "abbreviatedOid": "6291600"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-12-10T15:05:59Z",
          "updatedAt": "2024-12-10T15:05:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6UkzR3",
          "commit": {
            "abbreviatedOid": "6291600"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-12-10T15:18:20Z",
          "updatedAt": "2024-12-10T15:18:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Uk2XF",
          "commit": {
            "abbreviatedOid": "6291600"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:22:22Z",
          "updatedAt": "2024-12-10T15:22:22Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nA Receipt is a Signed Statement, (COSE_Sign1), with additional Claims in its protected header related to verifying the inclusion proof in its unprotected header.\r\n```",
              "createdAt": "2024-12-10T15:22:22Z",
              "updatedAt": "2024-12-10T15:22:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 316,
      "id": "PR_kwDOIvmHss6Es-hY",
      "title": "an attempt to add three eclectic use cases",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/316",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "After staring at them for a while, this first draft is now simply copying over the generic problem statement and three of the use cases found in https://datatracker.ietf.org/doc/html/draft-ietf-scitt-software-use-cases.\r\n\r\nPlease bash mercilessly.",
      "createdAt": "2024-12-10T12:59:34Z",
      "updatedAt": "2024-12-17T16:54:55Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "3ca40678aabd8040a812d92884f72922d7794c38",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "add-usecases",
      "headRefOid": "d7a382530cc272356b5e398903cee2f845e9b887",
      "closedAt": "2024-12-10T16:04:05Z",
      "mergedAt": "2024-12-10T16:04:05Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "7fa60b3922509061be2524a8a795bfd9c3790159"
      },
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm in general a little concerned how this large addition affects our target of WGLC, but this can be discussed by the authors.\r\n\r\nInteresting that one of the biggest results of putting something on a ledger - accountability - isn't in here at all.",
          "createdAt": "2024-12-10T14:15:52Z",
          "updatedAt": "2024-12-10T14:15:52Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK I believe the use cases should be free of implementation information, such as use of a ledger object. The specifics of \"how to implement\" a Registry are assumed to come from the architecture and SCRAPI specs, IMO. Others may see it differently. USe cases are purposely abstract and free of implementation expectations.",
          "createdAt": "2024-12-10T14:48:33Z",
          "updatedAt": "2024-12-10T14:48:33Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Question: Please clarify; Will these changes deprecate the existing Use Case document OR will these changes propagate to the Use Case document? ",
          "createdAt": "2024-12-10T16:13:32Z",
          "updatedAt": "2024-12-10T16:13:32Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "These changes bring forward text from the [expired use cases document](https://datatracker.ietf.org/doc/draft-ietf-scitt-software-use-cases/).",
          "createdAt": "2024-12-10T16:26:39Z",
          "updatedAt": "2024-12-10T16:26:39Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @SteveLasker \r\n\r\nWill this merger of use cases into the architecture document result in updates to the architecture document when more use cases are added, that don't affect or impact the actual architecture materials? \r\n\r\nI'm not seeing the benefits of merging the use cases into the architecture document when a functional use case document is already available. Why not just update the use cases document with the new use cases? ",
          "createdAt": "2024-12-15T12:29:12Z",
          "updatedAt": "2024-12-15T12:29:12Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi, Dick,\r\nWhile Use cases help frame the beginning of a working group, the latest guidance from the IETF is not to submit use cases as drafts. For this reason, we let the Use Case document expire. We did feel there was enough value to incorporate a subset into the Architecture document. \r\nThat said, reviewing the feedback from Michael is the next step to consider the overall state of the architecture. \r\n\r\n**_Edit_**: Adding a link to: [Support Documents in IETF Working Groups](https://datatracker.ietf.org/doc/statement-iesg-support-documents-in-ietf-working-groups-20230824/)\r\n\r\n> While they (use cases) can therefore be important to the operation of a working group, finalizing them to the point where they are suitable for publication as RFCs can consume scarce community resources that might be better spent on solutions documents.\r\n\r\n",
          "createdAt": "2024-12-16T02:56:52Z",
          "updatedAt": "2024-12-17T16:14:52Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for clarifying, Steve.\r\n\r\nI'm certainly available to assist with the Use Cases materials, if the team needs more help with this. Fell free to reach out if you would like me to take on updates to the independent Use Cases document, external to the Architecture document.\r\nI can help with this, but I'm not going to make any changes to the architecture document, there are already plenty of hands contributing to that doc. \r\n\r\nPlease let me know how to proceed.\r\n",
          "createdAt": "2024-12-17T16:29:01Z",
          "updatedAt": "2024-12-17T16:29:01Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I can do a pull request for the Use Cases Document, if the group consensus is to update the independent use cases document.",
          "createdAt": "2024-12-17T16:31:57Z",
          "updatedAt": "2024-12-17T16:31:57Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Steve, where can I find the discussion regarding the consensus decision to pull use cases into the architecture document instead of updating the existing Use Cases document? @henkbirkholz  mentions there were pros/cons discussed when reaching this decision. I just want to understand this better.",
          "createdAt": "2024-12-17T16:54:53Z",
          "updatedAt": "2024-12-17T16:54:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Uj6lC",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-12-10T14:09:11Z",
          "updatedAt": "2024-12-10T14:14:27Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nA released software product is often accompanied by a set of complementary statements about its security compliance.\r\n```",
              "createdAt": "2024-12-10T14:09:11Z",
              "updatedAt": "2024-12-10T14:14:27Z"
            },
            {
              "originalPosition": 112,
              "body": "\"would be\" -> \"is\" ?",
              "createdAt": "2024-12-10T14:10:50Z",
              "updatedAt": "2024-12-10T14:14:27Z"
            },
            {
              "originalPosition": 145,
              "body": "```suggestion\r\n### Software Integrator Assembling a Software Product for an Autonomous Vehicle\r\n```\r\n\r\nSmart Car is a brnad name. Better avoided.",
              "createdAt": "2024-12-10T14:13:39Z",
              "updatedAt": "2024-12-10T15:14:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ukrfb",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:07:29Z",
          "updatedAt": "2024-12-10T15:07:29Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n     |           |        Use bad packages;\r\n```",
              "createdAt": "2024-12-10T15:07:29Z",
              "updatedAt": "2024-12-10T15:07:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UksH4",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:08:24Z",
          "updatedAt": "2024-12-10T15:08:24Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n     |  Commit   |        Malicious commit\r\n```",
              "createdAt": "2024-12-10T15:08:24Z",
              "updatedAt": "2024-12-10T15:08:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ukt0d",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:10:51Z",
          "updatedAt": "2024-12-10T15:10:52Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nThis gives enough confidence to both producers and consumers that the released software meets expected security standards and is suitable to use.\r\n```\r\n\r\nProbably best to think in terms of expectations, rather than good/bad.",
              "createdAt": "2024-12-10T15:10:52Z",
              "updatedAt": "2024-12-10T15:10:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UkuXZ",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:11:39Z",
          "updatedAt": "2024-12-10T15:11:40Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "```suggestion\r\nThe producer of the software product provides a statement that confirms the linking of a software component vulnerability with the software product and also issues an advisory statement on how to mitigate the vulnerability.\r\n```",
              "createdAt": "2024-12-10T15:11:39Z",
              "updatedAt": "2024-12-10T15:11:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ukvt6",
          "commit": {
            "abbreviatedOid": "40af1a2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:13:40Z",
          "updatedAt": "2024-12-10T15:13:40Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "Good catch. I hid this change in plain sight to see if anyone is stumbling over it.\r\nI was uncertain, so I used the \"unconventional\" phrasing first.",
              "createdAt": "2024-12-10T15:13:40Z",
              "updatedAt": "2024-12-10T15:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UkwIU",
          "commit": {
            "abbreviatedOid": "40af1a2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:14:16Z",
          "updatedAt": "2024-12-10T15:14:16Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "okay, I'll edit your change to capitalize \"autonomous vehicle\"",
              "createdAt": "2024-12-10T15:14:16Z",
              "updatedAt": "2024-12-10T15:14:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UkwnH",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:14:58Z",
          "updatedAt": "2024-12-10T15:14:59Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n* check that the statement comes from a source with authority to issue that statement\r\n* confirm that sources provide a complete history of statements related to a given component\r\n```\r\nSuggest adding something about completeness",
              "createdAt": "2024-12-10T15:14:58Z",
              "updatedAt": "2024-12-10T15:14:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ukx5m",
          "commit": {
            "abbreviatedOid": "1e7be33"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:16:40Z",
          "updatedAt": "2024-12-10T15:16:40Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "perhaps just \"connected\", but the example works either way",
              "createdAt": "2024-12-10T15:16:40Z",
              "updatedAt": "2024-12-10T15:16:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Uk5pw",
          "commit": {
            "abbreviatedOid": "40af1a2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:26:52Z",
          "updatedAt": "2024-12-10T15:26:52Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "```suggestion\r\nSCITT provides a standardized way to:\r\n```",
              "createdAt": "2024-12-10T15:26:52Z",
              "updatedAt": "2024-12-10T15:26:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Uk9iO",
          "commit": {
            "abbreviatedOid": "7563ccf"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:32:07Z",
          "updatedAt": "2024-12-10T15:32:08Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "```suggestion\r\nSCITT provides a standardized way to:\r\n```",
              "createdAt": "2024-12-10T15:32:07Z",
              "updatedAt": "2024-12-10T15:32:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlBAA",
          "commit": {
            "abbreviatedOid": "b2ffb42"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:37:08Z",
          "updatedAt": "2024-12-10T15:37:08Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "modify the reference to the specifc versioned draft",
              "createdAt": "2024-12-10T15:37:08Z",
              "updatedAt": "2024-12-10T15:37:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlD_2",
          "commit": {
            "abbreviatedOid": "b2ffb42"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:41:05Z",
          "updatedAt": "2024-12-10T15:41:06Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n  I-D.ietf-scitt-software-use-cases: all-scitt-use-cases-03\r\n```",
              "createdAt": "2024-12-10T15:41:05Z",
              "updatedAt": "2024-12-10T15:41:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlEFM",
          "commit": {
            "abbreviatedOid": "40af1a2"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "My comments addressed, thanks",
          "createdAt": "2024-12-10T15:41:12Z",
          "updatedAt": "2024-12-10T15:41:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6UlF5X",
          "commit": {
            "abbreviatedOid": "5c45605"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:43:45Z",
          "updatedAt": "2024-12-10T15:43:46Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n  I-D.ietf-scitt-software-use-cases: all-scitt-use-cases\r\n```",
              "createdAt": "2024-12-10T15:43:45Z",
              "updatedAt": "2024-12-10T15:43:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlGvO",
          "commit": {
            "abbreviatedOid": "61d950c"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:45:01Z",
          "updatedAt": "2024-12-10T15:45:02Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nThreats and practical issues can also arise from unintended side-effects of using security techniques outside their proper bounds.\r\nFor instance digital signatures may fail to verify past their expiry date even though the signed item itself remains completely valid.\r\nOr a signature may verify even though the information it is securing is now found unreliable but fine-grained revocation is too hard.\r\n\r\nLastly, where data exchange underpins serious business decision-making it is important to hold the producers of those data to a higher standard of accountability.\r\nSCITT architecture provides mechanisms and structures for ensuring that the makers of authoritative statements can be held accountable and not hide or shred the evidence when it becomes inconvenient later.\r\n\r\nThe following use cases illustrate the scope of SCITT and elaborate on the generic problem statement above.\r\n```",
              "createdAt": "2024-12-10T15:45:01Z",
              "updatedAt": "2024-12-10T15:53:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlNOE",
          "commit": {
            "abbreviatedOid": "61d950c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:54:10Z",
          "updatedAt": "2024-12-10T15:54:10Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-12-10T15:54:10Z",
              "updatedAt": "2024-12-10T15:54:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlNYO",
          "commit": {
            "abbreviatedOid": "0d75e7c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:54:25Z",
          "updatedAt": "2024-12-10T15:54:26Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-12-10T15:54:25Z",
              "updatedAt": "2024-12-10T15:54:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlNdv",
          "commit": {
            "abbreviatedOid": "0d75e7c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:54:33Z",
          "updatedAt": "2024-12-10T15:54:33Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-12-10T15:54:33Z",
              "updatedAt": "2024-12-10T15:54:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlOBZ",
          "commit": {
            "abbreviatedOid": "e7193e3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:55:00Z",
          "updatedAt": "2024-12-10T15:55:01Z",
          "comments": [
            {
              "originalPosition": 78,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-12-10T15:55:00Z",
              "updatedAt": "2024-12-10T15:55:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlPpo",
          "commit": {
            "abbreviatedOid": "5a224be"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T15:57:08Z",
          "updatedAt": "2024-12-10T15:57:08Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nSCITT provides a standardized way to:\r\n```",
              "createdAt": "2024-12-10T15:57:08Z",
              "updatedAt": "2024-12-10T15:57:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6UlQXh",
          "commit": {
            "abbreviatedOid": "d7a3825"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-12-10T15:58:10Z",
          "updatedAt": "2024-12-10T15:58:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6UlQbZ",
          "commit": {
            "abbreviatedOid": "5a224be"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-10T15:58:16Z",
          "updatedAt": "2024-12-10T15:58:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 317,
      "id": "PR_kwDOIvmHss6Euu1b",
      "title": "Spelling fix",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/317",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-10T16:17:09Z",
      "updatedAt": "2024-12-10T16:22:48Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "7fa60b3922509061be2524a8a795bfd9c3790159",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/spelling",
      "headRefOid": "b97ffb0208badcd0c21b17c0c2f9fc0e62ecfce6",
      "closedAt": "2024-12-10T16:17:26Z",
      "mergedAt": "2024-12-10T16:17:26Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "d9460bbd223afaef053bb6269400114961854419"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 324,
      "id": "PR_kwDOIvmHss6FgWKP",
      "title": "Changing ISO reference to NIST reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/324",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "fixes #318 ",
      "createdAt": "2024-12-17T14:56:41Z",
      "updatedAt": "2024-12-17T16:05:43Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "d9460bbd223afaef053bb6269400114961854419",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "iso-2-nist",
      "headRefOid": "92753605b9c43225dfa149fde62959c62d9f006e",
      "closedAt": "2024-12-17T16:05:37Z",
      "mergedAt": "2024-12-17T16:05:37Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Reviewed in the editors call for merging.",
          "createdAt": "2024-12-17T16:05:32Z",
          "updatedAt": "2024-12-17T16:05:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6VjkfI",
          "commit": {
            "abbreviatedOid": "3898bbc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-17T15:03:18Z",
          "updatedAt": "2024-12-17T15:03:19Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "It says NIST, but still points to iso?",
              "createdAt": "2024-12-17T15:03:19Z",
              "updatedAt": "2024-12-17T15:03:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6VjyWB",
          "commit": {
            "abbreviatedOid": "9275360"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-12-17T15:21:34Z",
          "updatedAt": "2024-12-17T15:21:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6VjzVI",
          "commit": {
            "abbreviatedOid": "3898bbc"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-17T15:22:58Z",
          "updatedAt": "2024-12-17T15:22:58Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "what? where? :innocent: :wink: ",
              "createdAt": "2024-12-17T15:22:58Z",
              "updatedAt": "2024-12-17T15:22:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 328,
      "id": "PR_kwDOIvmHss6F8RjK",
      "title": "Add use case from original use case document to address issue 325",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/328",
      "state": "MERGED",
      "author": "rjb4standards",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added one use case from original use case document: Signing certificate authenticity use case",
      "createdAt": "2024-12-20T18:27:04Z",
      "updatedAt": "2025-01-29T15:36:27Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "rjb4standards/draft-ietf-scitt-architecture",
      "headRefName": "main",
      "headRefOid": "b67ff15176d653b3b2a94cb62e64337c823dc213",
      "closedAt": "2025-01-29T15:23:11Z",
      "mergedAt": "2025-01-29T15:23:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1e1125a03a375bfeee2c4cf4845827463ccda708"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "AJ, I'm open to other terminology that will emphasize the need to confirm a trusted party as producer and signer of digital objects. Perhaps the term legitimate could replace authorized.",
          "createdAt": "2024-12-31T13:38:07Z",
          "updatedAt": "2024-12-31T13:38:07Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM @SteveLasker \r\nThanks for leading us through this update.",
          "createdAt": "2025-01-22T18:57:25Z",
          "updatedAt": "2025-01-22T18:57:25Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "One minor suggestion:\r\n\r\nA software component (e.g., a library or software product) released by a trusted producer is an **essential practic**e for both open-source and commercial offerings.",
          "createdAt": "2025-01-29T15:35:36Z",
          "updatedAt": "2025-01-29T15:35:36Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "replaced common with \"essential\"",
          "createdAt": "2025-01-29T15:36:26Z",
          "updatedAt": "2025-01-29T15:36:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Wkg6q",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-31T04:28:39Z",
          "updatedAt": "2024-12-31T04:28:39Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "What does authorized mean in the context of all possible subjects of a statement by an issuer? For freely and openly licensed software, there are little or no restrictions on a producer of software, not to speak of public domain work.\n\nIs there alternative wording for authorized? I have thought of it for a little while, but have yet to find alternative wording I could propose. I will think about it some more though.",
              "createdAt": "2024-12-31T04:28:39Z",
              "updatedAt": "2024-12-31T04:28:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Wkg_G",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-31T04:29:45Z",
          "updatedAt": "2024-12-31T04:29:45Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Like my previous comment, are there more neutral and perhaps less loaded terms than illegitimate?",
              "createdAt": "2024-12-31T04:29:45Z",
              "updatedAt": "2024-12-31T04:29:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6WkhFd",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I added some comments because it seems we are adding subjective descriptions that do not make the draft more crisp and clear. Can we consider alternatives?",
          "createdAt": "2024-12-31T04:31:21Z",
          "updatedAt": "2024-12-31T04:31:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Wwhqo",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T15:43:33Z",
          "updatedAt": "2025-01-03T15:43:33Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "SCITT doesn't support embedded signatures, as they don't support the multi-party/post-build processes.\r\nRemoving the suggestion, and leaving it as a comment\r\n``` \r\nThe released software component is accompanied by a statement of authenticity (e.g., a detached signature).\r\n```",
              "createdAt": "2025-01-03T15:43:33Z",
              "updatedAt": "2025-01-03T17:03:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Wwh7-",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T15:44:19Z",
          "updatedAt": "2025-01-03T15:44:19Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nSome providers include this particular software component as part of their release product/package bundle and provide the package with proof of authenticity using their issuer authority.\r\n```",
              "createdAt": "2025-01-03T15:44:19Z",
              "updatedAt": "2025-01-03T15:44:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Wwjjd",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T15:48:56Z",
          "updatedAt": "2025-01-03T15:48:56Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "@SteveLasker  you suggest removing embedded signatures. Does this mean that embedded signatures on artifacts are not supported in SCITT? ",
              "createdAt": "2025-01-03T15:48:56Z",
              "updatedAt": "2025-01-03T15:48:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6WwnLw",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T15:58:47Z",
          "updatedAt": "2025-01-03T15:58:47Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "I struggle with Authorized as well, as it's also not clear who is stating who should be \"authorized\" and to whom?\r\n\r\nA consuming company may authorize EntityA, but not EntityB, while another may require a different Entity to produce the same package, such as RedHat or a specific Industry \"authorized\" endorsement.\r\n\r\nOriginating could also be questioned. \r\nAt the end of the day, the verifier makes a decision which issuers they trust, for a given environment. \r\n```suggestion\r\n* understand if a particular provider is a trusted originating producer or an alternative party\r\n```",
              "createdAt": "2025-01-03T15:58:47Z",
              "updatedAt": "2025-01-03T16:15:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6WwqT2",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T16:06:31Z",
          "updatedAt": "2025-01-03T16:06:32Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "@SteveLasker would it help to replace \"authorized\" with \"legitimate\".\r\n\r\nPeople need to be able to determine if an artifact is to be trusted, or not, based on a verifiable method. I'm asserting that the presence of an artifact in a SCITT registry is sufficient to make it trustworthy, but the process used to register an artifact in a SCITT trust registry needs to be able to discern a trustworthy artifact and one that is false, or not trustworthy.\r\n\r\nSomehow, the SCITT \"solution\" needs to be able to discern trusted artifacts from untrusted artifacts and the ability to establish trust in the artifacts supply chain is key to this process. Only trusted artifacts, submitted by trusted parties make their way into a SCITT trust registry, IMO.",
              "createdAt": "2025-01-03T16:06:32Z",
              "updatedAt": "2025-01-03T16:06:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ww-fU",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T17:02:44Z",
          "updatedAt": "2025-01-03T17:02:45Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I'm suggesting we remove references to embedded signatures as SCITT doesn't know about them.\r\nThe content also conflates a few different concepts of attached/detached payloads, referencing an artifact the statement is about, and attached signatures that are not part of the SCITT Architecture. \r\n\r\nI'm going to suggest the following change.\r\n\r\nSCITT doesn't support embedded signatures, as they don't support the multi-party/post-build processes.\r\n```suggestion\r\nThe released software component is accompanied by a statement of authenticity.\r\n```",
              "createdAt": "2025-01-03T17:02:45Z",
              "updatedAt": "2025-01-03T17:02:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ww_dZ",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T17:05:53Z",
          "updatedAt": "2025-01-03T17:05:53Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "How does an entity determine trust? \r\n\r\n",
              "createdAt": "2025-01-03T17:05:53Z",
              "updatedAt": "2025-01-03T17:05:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6WxANE",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T17:08:09Z",
          "updatedAt": "2025-01-03T17:08:09Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "@SteveLasker Many post build artifacts, like MSI installation packages contain embedded digital signatures. This change seems to allow either/or embedded/detached authenticity evidence.",
              "createdAt": "2025-01-03T17:08:09Z",
              "updatedAt": "2025-01-03T17:08:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6WxBVG",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-03T17:11:50Z",
          "updatedAt": "2025-01-03T17:11:51Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "@SteveLasker I'm hoping the SCITT spec will describe how trust is ascertained before an item is placed into the registry. Then parties can simply trust an artifact because it is in the registry, and has been properly vetted as trustworthy. This is how a \"Registry of Deeds\" works, which IMO is a good model for a SCITT Trust Registry. Only trusted artifacts can be placed into the registry.",
              "createdAt": "2025-01-03T17:11:50Z",
              "updatedAt": "2025-01-03T17:11:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6XE18A",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-07T15:26:03Z",
          "updatedAt": "2025-01-07T15:26:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6X8Eqb",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T08:45:51Z",
          "updatedAt": "2025-01-14T08:45:52Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "harmless, editorial",
              "createdAt": "2025-01-14T08:45:52Z",
              "updatedAt": "2025-01-14T08:45:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X8E9Z",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T08:46:29Z",
          "updatedAt": "2025-01-14T08:46:29Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Let's make this (item 1) in a corresponding consensus-building discussion.",
              "createdAt": "2025-01-14T08:46:29Z",
              "updatedAt": "2025-01-14T08:46:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X8FDd",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T08:46:39Z",
          "updatedAt": "2025-01-14T08:46:40Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Let's make this (item 2) in a corresponding consensus-building discussion.",
              "createdAt": "2025-01-14T08:46:39Z",
              "updatedAt": "2025-01-14T08:46:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X8FqU",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T08:47:12Z",
          "updatedAt": "2025-01-14T08:47:13Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "part of (item 2)",
              "createdAt": "2025-01-14T08:47:12Z",
              "updatedAt": "2025-01-14T08:47:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X-Hte",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T13:03:02Z",
          "updatedAt": "2025-01-14T13:03:03Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "> Let's make this (item 2) in a corresponding consensus-building discussion.\r\n\r\nWhat's the venue or media for that discussion, the mailing list?",
              "createdAt": "2025-01-14T13:03:02Z",
              "updatedAt": "2025-01-14T13:03:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X-Lj3",
          "commit": {
            "abbreviatedOid": "1b5e5ec"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T13:10:58Z",
          "updatedAt": "2025-01-14T13:10:58Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Good idea, Henk. No objection.\r\nThe SCITT protocol must exhibit a process is indeed designed to ensure trust, as best as possible. We should try to remove as much uncertainty as possible from the protocol so that people will know a SCITT registry is genuinely a source of trustworthy materials",
              "createdAt": "2025-01-14T13:10:58Z",
              "updatedAt": "2025-01-14T13:10:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X-PQQ",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-14T13:17:31Z",
          "updatedAt": "2025-01-14T13:17:32Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nA software component (e.g., a library or software product) released by a legitimate producer is common practice for both open-source and commercial offerings.\r\n```",
              "createdAt": "2025-01-14T13:17:31Z",
              "updatedAt": "2025-01-14T13:17:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6X-Pj5",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Lets discuss more about the change, as suggested by Henk!",
          "createdAt": "2025-01-14T13:18:08Z",
          "updatedAt": "2025-01-14T13:18:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6YLByQ",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-15T15:03:24Z",
          "updatedAt": "2025-01-15T15:03:24Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I'm fine with this change, in the context of this use case.\r\n",
              "createdAt": "2025-01-15T15:03:24Z",
              "updatedAt": "2025-01-15T15:03:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YLKLP",
          "commit": {
            "abbreviatedOid": "22cb227"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-15T15:14:16Z",
          "updatedAt": "2025-01-15T15:14:17Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I support these enhancements.",
              "createdAt": "2025-01-15T15:14:17Z",
              "updatedAt": "2025-01-15T15:14:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YXQIj",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-16T13:57:18Z",
          "updatedAt": "2025-01-16T13:57:18Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I like the @SteveLasker suggestion of terminating sentence at authenticity.",
              "createdAt": "2025-01-16T13:57:18Z",
              "updatedAt": "2025-01-16T13:57:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YXQ3n",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-16T13:58:29Z",
          "updatedAt": "2025-01-16T13:58:29Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n* understand if a particular provider is actually a legitimate producer or an alternative party\r\n```",
              "createdAt": "2025-01-16T13:58:29Z",
              "updatedAt": "2025-01-16T13:58:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YXRTO",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-16T13:59:05Z",
          "updatedAt": "2025-01-16T13:59:05Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\n* reliably discern if a provider is the original, legitimate producer or is a trustworthy alternative provider or is an illegitimate provider\r\n```",
              "createdAt": "2025-01-16T13:59:05Z",
              "updatedAt": "2025-01-16T13:59:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YXRxT",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "@henkbirkholz I made few more suggestions inline with what you just commited, to make the PR more compelete. Please have a look and take the changes, if you agree!",
          "createdAt": "2025-01-16T13:59:51Z",
          "updatedAt": "2025-01-16T13:59:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6YXVo5",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-16T14:04:30Z",
          "updatedAt": "2025-01-16T14:04:31Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "I can support this enhancement on line 320.",
              "createdAt": "2025-01-16T14:04:31Z",
              "updatedAt": "2025-01-16T14:04:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YarT4",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-16T19:38:38Z",
          "updatedAt": "2025-01-16T19:40:30Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I also like the approach of terminating the sentence early. Cut early, cut often!\r\n\r\nMore seriously, it's an (eg) so...",
              "createdAt": "2025-01-16T19:38:38Z",
              "updatedAt": "2025-01-16T19:40:30Z"
            },
            {
              "originalPosition": 44,
              "body": "It's probably fair to take that to the mailing list since it will read into what non-SCITT WGs might want to do with SCITT. Making sure we have the meaning of an Issuer signature really understood is no bad thing",
              "createdAt": "2025-01-16T19:40:27Z",
              "updatedAt": "2025-01-16T19:40:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Ywrqe",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-20T17:20:55Z",
          "updatedAt": "2025-01-20T17:20:55Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Does using \"legitimate\" require the definition of what makes an issuer \"legitimate\"? \r\n\"Trusted\" is the choice of the verifier, or the TS when notarizing the signed statements. This seems more well-understood and less controversial.",
              "createdAt": "2025-01-20T17:20:55Z",
              "updatedAt": "2025-01-20T17:20:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YwtjZ",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-20T17:26:42Z",
          "updatedAt": "2025-01-20T17:26:42Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "No objection to this enhancement.",
              "createdAt": "2025-01-20T17:26:42Z",
              "updatedAt": "2025-01-20T17:26:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y47Yc",
          "commit": {
            "abbreviatedOid": "25ef884"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T15:56:45Z",
          "updatedAt": "2025-01-21T15:56:46Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nA software component (e.g., a library or software product) released by a trusted producer is common practice for both open-source and commercial offerings.\r\n```",
              "createdAt": "2025-01-21T15:56:45Z",
              "updatedAt": "2025-01-21T15:56:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y49Mu",
          "commit": {
            "abbreviatedOid": "3b88a26"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T15:59:23Z",
          "updatedAt": "2025-01-21T15:59:24Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Based on the call 1/21/25, we've settled on \"trusted\" for line 301 and 320. \r\nPlease reactivate if you feel strongly",
              "createdAt": "2025-01-21T15:59:23Z",
              "updatedAt": "2025-01-21T15:59:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y5ADq",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T16:03:48Z",
          "updatedAt": "2025-01-21T16:03:48Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "No objections to this consensus position. Good compromise. I presume that someone will make this change and I don't have to make this change - correct?",
              "createdAt": "2025-01-21T16:03:48Z",
              "updatedAt": "2025-01-21T16:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y6oNh",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T19:19:50Z",
          "updatedAt": "2025-01-21T19:19:50Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Hi, @rjb4standards, yes the changes were committed to this PR. Please review: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/328/files ",
              "createdAt": "2025-01-21T19:19:50Z",
              "updatedAt": "2025-01-21T19:19:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y6o7M",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T19:21:31Z",
          "updatedAt": "2025-01-21T19:21:31Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Reducing the text a bit to focus on the IETF doc content.\r\n```suggestion\r\n      Dick contributed to the software supply chain use cases.\r\n```",
              "createdAt": "2025-01-21T19:21:31Z",
              "updatedAt": "2025-01-21T19:21:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y6puj",
          "commit": {
            "abbreviatedOid": "3b88a26"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This is making good progress. I'd like to recognize the other [authors of the use-cases doc](https://datatracker.ietf.org/doc/draft-ietf-scitt-software-use-cases/) before merging this PR, however I need to confirm with them prior to merging. ",
          "createdAt": "2025-01-21T19:23:19Z",
          "updatedAt": "2025-01-21T19:23:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Y6r9x",
          "commit": {
            "abbreviatedOid": "3b88a26"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Perfect, thanks @SteveLasker  and @henkbirkholz  for your help in resolving this matter.",
          "createdAt": "2025-01-21T19:28:29Z",
          "updatedAt": "2025-01-21T19:28:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Y61Pr",
          "commit": {
            "abbreviatedOid": "3ccb8ce"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T19:49:38Z",
          "updatedAt": "2025-01-21T19:49:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "No objection Steve.",
              "createdAt": "2025-01-21T19:49:38Z",
              "updatedAt": "2025-01-21T19:49:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y62mY",
          "commit": {
            "abbreviatedOid": "3b88a26"
          },
          "author": "knight-brian",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "@SteveLasker: Thank you for your note on use case recognition.  The data requested are below.\r\n\r\n- ins: B. Knight\r\n  name: Brian Knight\r\n  org: Microsoft\r\n  email: brianknight@microsoft.com\r\n  country: United States",
          "createdAt": "2025-01-21T19:52:44Z",
          "updatedAt": "2025-01-21T19:52:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Y7Co0",
          "commit": {
            "abbreviatedOid": "4e0d0b9"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T20:19:24Z",
          "updatedAt": "2025-01-21T20:19:24Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n\r\n- ins: B. Knight\r\n    name: Brian Knight\r\n    organization: Microsoft\r\n    email: brianknight@microsoft.com\r\n    country: United States\r\n    contribution: >\r\n      Brian contributed to the software supply chain use cases.\r\n```",
              "createdAt": "2025-01-21T20:19:24Z",
              "updatedAt": "2025-01-21T20:21:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y7DR2",
          "commit": {
            "abbreviatedOid": "4e0d0b9"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T20:20:59Z",
          "updatedAt": "2025-01-21T20:20:59Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "No objection",
              "createdAt": "2025-01-21T20:20:59Z",
              "updatedAt": "2025-01-21T20:20:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y7DzX",
          "commit": {
            "abbreviatedOid": "afb330d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T20:22:11Z",
          "updatedAt": "2025-01-21T20:22:12Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-01-21T20:22:11Z",
              "updatedAt": "2025-01-21T20:22:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Y7D5H",
          "commit": {
            "abbreviatedOid": "51109c1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-21T20:22:24Z",
          "updatedAt": "2025-01-21T20:22:24Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-01-21T20:22:24Z",
              "updatedAt": "2025-01-21T20:22:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ZENPf",
          "commit": {
            "abbreviatedOid": "b67ff15"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Additional Use Case contributors are now added. LGTM",
          "createdAt": "2025-01-22T18:47:30Z",
          "updatedAt": "2025-01-22T18:47:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6ZvD61",
          "commit": {
            "abbreviatedOid": "b67ff15"
          },
          "author": "knight-brian",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Changes approved.  Thanks!",
          "createdAt": "2025-01-28T19:40:45Z",
          "updatedAt": "2025-01-28T19:40:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Zy9kp",
          "commit": {
            "abbreviatedOid": "b67ff15"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-29T08:07:59Z",
          "updatedAt": "2025-01-29T08:07:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Zzkxk",
          "commit": {
            "abbreviatedOid": "b67ff15"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "One minor nit but it's fine.",
          "createdAt": "2025-01-29T09:22:06Z",
          "updatedAt": "2025-01-29T09:22:23Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "I had to read this about 5 times before I could convince myself it makes grammatical sense, but I'm OK with it now. Won't risk resetting all the other ticks to request a clarification.",
              "createdAt": "2025-01-29T09:22:07Z",
              "updatedAt": "2025-01-29T09:22:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Z0cqb",
          "commit": {
            "abbreviatedOid": "b67ff15"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2025-01-29T10:51:46Z",
          "updatedAt": "2025-01-29T10:51:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Z3RMC",
          "commit": {
            "abbreviatedOid": "b67ff15"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-29T15:22:43Z",
          "updatedAt": "2025-01-29T15:22:43Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "nod. If we can come up with a suggestion, we can merge in an editorial update.",
              "createdAt": "2025-01-29T15:22:43Z",
              "updatedAt": "2025-01-29T15:22:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 331,
      "id": "PR_kwDOIvmHss6F9x9j",
      "title": "Editorial Review",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/331",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Removed content now tracked in separate PRs",
      "createdAt": "2024-12-21T01:39:12Z",
      "updatedAt": "2025-01-21T19:51:01Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/editoral-review",
      "headRefOid": "d6e6e672d0be1ac858689b25b77d36ec7655a48e",
      "closedAt": "2025-01-21T19:51:01Z",
      "mergedAt": "2025-01-21T19:51:01Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "fbd114984744207b04eadfb2f9f23280fae1e63d"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I moved the items covered in issues to separate PR\r\nThis PR now focused on general editorial changes.\r\nA larger change will come once we address larger review feedback.",
          "createdAt": "2024-12-24T00:18:38Z",
          "updatedAt": "2024-12-24T00:18:38Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13, @JAG-UK, I merged the requested change: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/331#discussion_r1905674188\r\n\r\nPlease LGTM to merge.  ",
          "createdAt": "2025-01-20T17:17:00Z",
          "updatedAt": "2025-01-20T17:17:00Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I've confirmed with @JAG-UK that he's ok with this change. ",
          "createdAt": "2025-01-21T19:50:55Z",
          "updatedAt": "2025-01-21T19:50:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6XFKuC",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-01-07T15:56:30Z",
          "updatedAt": "2025-01-07T15:56:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XFKwO",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-07T15:56:33Z",
          "updatedAt": "2025-01-07T15:56:33Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "```suggestion\r\nReceipts are based on Signed Inclusion Proofs as described in COSE Receipts {{-COMETRE}} that also provides the COSE header parameter semantics for label 394.\r\n```",
              "createdAt": "2025-01-07T15:56:33Z",
              "updatedAt": "2025-01-07T15:56:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6XFLHC",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-07T15:57:11Z",
          "updatedAt": "2025-01-07T15:57:12Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-01-07T15:57:12Z",
              "updatedAt": "2025-01-07T15:57:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6XFLRz",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Please remove the registration policy requirement.",
          "createdAt": "2025-01-07T15:57:27Z",
          "updatedAt": "2025-01-07T15:57:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XFLNJ",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-01-07T15:57:20Z",
          "updatedAt": "2025-01-07T15:57:36Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-01-07T15:57:21Z",
              "updatedAt": "2025-01-07T15:57:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6XFNpK",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-07T16:01:12Z",
          "updatedAt": "2025-01-07T16:01:12Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "This topic has been discussed at length over the years and the group decided to tackle this detail later. Introducing this opens a huge can of worms and additional dependencies with COSE and so on, including the IPR disclosure on CCF receipts.",
              "createdAt": "2025-01-07T16:01:12Z",
              "updatedAt": "2025-01-07T16:01:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6XFNs8",
          "commit": {
            "abbreviatedOid": "bc21f3c"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-07T16:01:18Z",
          "updatedAt": "2025-01-07T16:01:19Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "+1 for this change, the registration policy is already committed to via the tree + the requirement for transparency, this is a denormalisation tradeoff that makes receipts a little larger but adds to the audit burden.",
              "createdAt": "2025-01-07T16:01:18Z",
              "updatedAt": "2025-01-07T16:01:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Yws7w",
          "commit": {
            "abbreviatedOid": "d6e6e67"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-20T17:24:49Z",
          "updatedAt": "2025-01-20T17:24:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6Ywt6K",
          "commit": {
            "abbreviatedOid": "d6e6e67"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-20T17:27:47Z",
          "updatedAt": "2025-01-20T17:27:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 332,
      "id": "PR_kwDOIvmHss6GH6Es",
      "title": "Change receipts 394 to a TBD with IANA Considerations",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/332",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #326 ",
      "createdAt": "2024-12-23T23:17:17Z",
      "updatedAt": "2025-02-18T15:08:35Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "fbd114984744207b04eadfb2f9f23280fae1e63d",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-326",
      "headRefOid": "6dc5bf3c2bcb5101fa1e20148ddfa0a133d3741b",
      "closedAt": "2025-02-18T15:08:23Z",
      "mergedAt": "2025-02-18T15:08:23Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "0239a90c6f0222e9faa881bbcf7ed81e6acab374"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6X-HL2",
          "commit": {
            "abbreviatedOid": "5baa3d1"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-01-14T13:01:57Z",
          "updatedAt": "2025-01-14T13:02:01Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "If the authors of that spec are requesting it for that draft, why are we doubling that request here? Do we not need to specify we want to replace the values later once that is formalized with an explanation between this section and the previous header?",
              "createdAt": "2025-01-14T13:01:57Z",
              "updatedAt": "2025-01-14T13:02:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6YwtXD",
          "commit": {
            "abbreviatedOid": "5baa3d1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-20T17:26:05Z",
          "updatedAt": "2025-01-20T17:26:05Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "It's a little repetitive. We must change 394, as it creates confusion for implementors. This section was copy/pasted over for completeness. Either way, when TBD_0 is assigned, this will get cleaned up, so I felt it was helpful to provide a pointer.",
              "createdAt": "2025-01-20T17:26:05Z",
              "updatedAt": "2025-01-20T17:26:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ZEPVp",
          "commit": {
            "abbreviatedOid": "5baa3d1"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-22T18:51:41Z",
          "updatedAt": "2025-01-22T18:51:41Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "@aj-stein, do still feel strongly? I'd like to merge to get to #341 ",
              "createdAt": "2025-01-22T18:51:41Z",
              "updatedAt": "2025-01-22T18:51:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bgyob",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-11T15:10:48Z",
          "updatedAt": "2025-02-11T15:10:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6bg_WH",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, although we should go and try to get allocation ASAP",
          "createdAt": "2025-02-11T15:26:41Z",
          "updatedAt": "2025-02-11T15:26:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6bhHPg",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-11T15:37:46Z",
          "updatedAt": "2025-02-11T15:37:46Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Normally you would request IANA with definitive number ranges for your work!\r\n\r\nPlease check with @henkbirkholz how best we can handle this ?\r\n\r\nAdding IANA Considerations is a great start!",
              "createdAt": "2025-02-11T15:37:46Z",
              "updatedAt": "2025-02-11T15:37:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bhHW7",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See my suggestions!",
          "createdAt": "2025-02-11T15:37:56Z",
          "updatedAt": "2025-02-11T15:37:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6bhJGT",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-11T15:40:23Z",
          "updatedAt": "2025-02-11T15:40:23Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "This is weird... you are duplicating the registration request from an existing draft:\r\n\r\nhttps://datatracker.ietf.org/doc/html/draft-ietf-cose-merkle-tree-proofs-07#name-new-entries-to-the-cose-hea",
              "createdAt": "2025-02-11T15:40:23Z",
              "updatedAt": "2025-02-11T15:40:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bhKZ0",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-11T15:42:08Z",
          "updatedAt": "2025-02-11T15:42:09Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nTBD_0 is requested in {{-COMETRE}}.\r\n```",
              "createdAt": "2025-02-11T15:42:09Z",
              "updatedAt": "2025-02-11T15:42:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bhRZp",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-11T15:51:13Z",
          "updatedAt": "2025-02-11T15:51:13Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Good catch @OR13 : I think, then we do not need this PR??",
              "createdAt": "2025-02-11T15:51:13Z",
              "updatedAt": "2025-02-11T15:51:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bhShL",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "If this is the ONLY tag, then we can drop this PR, as suggested by @OR13 ",
          "createdAt": "2025-02-11T15:52:37Z",
          "updatedAt": "2025-02-11T15:52:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cPonq",
          "commit": {
            "abbreviatedOid": "fbf7c73"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:15:40Z",
          "updatedAt": "2025-02-17T15:15:40Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "This PR is to avoid readers implementing numbers that are not assigned.\r\nWhile we're pursuing assignment, we should merge this PR to indicate the numbers are not yet assigned.",
              "createdAt": "2025-02-17T15:15:40Z",
              "updatedAt": "2025-02-17T15:15:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP9-2",
          "commit": {
            "abbreviatedOid": "6dc5bf3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T15:53:34Z",
          "updatedAt": "2025-02-17T15:53:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 334,
      "id": "PR_kwDOIvmHss6GH8HR",
      "title": "Include COSE HASH Envelope reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/334",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #333 ",
      "createdAt": "2024-12-23T23:28:19Z",
      "updatedAt": "2025-02-17T15:11:21Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-333",
      "headRefOid": "c5f14733a728e0a3105c6754e485c9512233d513",
      "closedAt": "2025-02-17T15:11:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we want to cover in SCRAPI: https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/43\r\n",
          "createdAt": "2025-01-20T17:32:40Z",
          "updatedAt": "2025-01-20T17:32:47Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Wkhn_",
          "commit": {
            "abbreviatedOid": "c5f1473"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-31T04:38:38Z",
          "updatedAt": "2024-12-31T04:38:38Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Should may not be MAY per BCP14 or was it an intentional choice to cap it lowercase?",
              "createdAt": "2024-12-31T04:38:38Z",
              "updatedAt": "2025-01-14T12:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6Wkhvc",
          "commit": {
            "abbreviatedOid": "c5f1473"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Some preliminary questions on keywords ",
          "createdAt": "2024-12-31T04:39:59Z",
          "updatedAt": "2024-12-31T04:39:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6YcYCC",
          "commit": {
            "abbreviatedOid": "c5f1473"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This is just tangling drafts together for no real benefit.\r\n\r\nA signed statement is a cose sign1, we don't need to say more than that.",
          "createdAt": "2025-01-16T22:56:34Z",
          "updatedAt": "2025-01-16T22:56:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 335,
      "id": "PR_kwDOIvmHss6GH9_2",
      "title": "Address what is stored on the ledger",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/335",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #329 ",
      "createdAt": "2024-12-23T23:39:40Z",
      "updatedAt": "2025-02-19T14:25:13Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-329",
      "headRefOid": "cec91f4c3627985a77ab9c9442f19388b6cc3622",
      "closedAt": "2025-02-18T15:36:40Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in lieu of #348 ",
          "createdAt": "2025-02-18T15:36:30Z",
          "updatedAt": "2025-02-18T15:36:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6X-DDk",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-01-14T12:53:36Z",
          "updatedAt": "2025-01-14T12:53:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I hope this is constructive, I apologize, it will be a longer comment and I cannot recommend surgical edits. I would hope that the WG, if we want to address #329, should be able to break down the requirements into the following, for clarity.\r\n\r\n- What MUST a TS store in the ledger?\r\n- What MAY at TS store in the ledger?\r\n- What MUST NOT a TS store in the ledger?\r\n\r\nAs it stands, we are making progress in that direction, but it is written in prose form that is not liek the specification style we would need here in my opinion. Doing so would improve the ability for implementers to act on it.\r\n\r\nAdditionally, regarding \"does not store the Signed Statement contents avoiding concerns of persisting personally identifiable information,\" it does not follow logically to me without further explanation, but that is probably best to avoid. Can it only be in the Signed Statement? Is PII the only concern, and not other forms of confidential information, why? (I recall some of the backstory here, but it is not explained at all in the text and I think that detracts from the value of writing it there in the first place.)\r\n\r\nAnd a final concluding remark: \"storing on ledger\" is a murky concept and this change at the present time does not actually define what is being stored or how beyond the notion of VDS. To go back to my original 3-part question, I would argue we need to address that in this part or I am not sure if this addition will be constructive to implementers. I hope that feedback is helpful.",
              "createdAt": "2025-01-14T12:53:36Z",
              "updatedAt": "2025-01-14T12:53:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bgviA",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-11T15:06:36Z",
          "updatedAt": "2025-02-11T15:06:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6bg1zm",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "See my comment",
          "createdAt": "2025-02-11T15:15:08Z",
          "updatedAt": "2025-02-11T15:15:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6bg23N",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-11T15:16:32Z",
          "updatedAt": "2025-02-11T15:16:32Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I agree with AJ, line 562 is not very helpful, the language and style needs to be carefully written. I cannot approve this PR, perhaps not clear what is the original intention for this?",
              "createdAt": "2025-02-11T15:16:32Z",
              "updatedAt": "2025-02-11T15:16:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6bg26Y",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "See my comment",
          "createdAt": "2025-02-11T15:16:36Z",
          "updatedAt": "2025-02-11T15:16:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cP9Ih",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:52:10Z",
          "updatedAt": "2025-02-17T15:52:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "You could make this a reference directly to the cose receipts draft.\r\nhttps://datatracker.ietf.org/doc/html/draft-ietf-cose-merkle-tree-proofs-07#section-3-1.6.1\r\n\r\nI know its probably a bit late to get rid of \"append only log\",... but COSE Receipts calls these \"Verifiable Data Structures\" and establishes a register for different flavors of them. having both terms (append only log & verifiable data structure) is perhaps confusing.",
              "createdAt": "2025-02-17T15:52:10Z",
              "updatedAt": "2025-02-17T15:52:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP9nr",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This PR mixes Adjacent service definition with Transparency Service definition and should be closed.",
          "createdAt": "2025-02-17T15:53:02Z",
          "updatedAt": "2025-02-17T15:53:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cQT96",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T16:31:28Z",
          "updatedAt": "2025-02-17T16:31:28Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nTransparency Services may provide ancillary services to store the contents of the Signed Statement. The Append-only Log MUST store a one-way commitment binding the statement to the log. The commitment MAY also be hiding.\r\n```\r\nA sha256 hash, for example, satisfies the MUST, but is not hiding (proving the statement is on the log reveals the statement to the prover). A pedersen commitment would be both binding and hiding. A commitment is probably a general enough concept that this does not limit the possible implementations ?",
              "createdAt": "2025-02-17T16:31:28Z",
              "updatedAt": "2025-02-17T16:32:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cQ35Q",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T17:35:24Z",
          "updatedAt": "2025-02-17T17:35:24Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This architecture is limited to \"signed statements\", the payload can be whatever you want it to be, but the signed statement is a cose sign1.\r\n\r\nI don't think normative language belongs in this document beyond:\r\n\r\nA signed statement is a cose-sign1, ... the verification procedure is define in ....\r\n\r\nand\r\n\r\nA receipt is a cose-sign1, ... the verification precedure is defined in ...\r\n\r\nThese are normative statements, they just don't use MUST.\r\n\r\nI don't think we can get consensus to say \"payload of a signed statement MUST/MAY/SHOULD ....\"",
              "createdAt": "2025-02-17T17:35:24Z",
              "updatedAt": "2025-02-17T17:35:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6clKD7",
          "commit": {
            "abbreviatedOid": "cec91f4"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T14:25:13Z",
          "updatedAt": "2025-02-19T14:25:13Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "To be clear: I support removal of line 562 all together. My edit was an effort to state the relationship between signed statement and the vds as a positive requirement in the spirit of the OP. I personally think this is covered sufficiently in the receipts draft and profiles.",
              "createdAt": "2025-02-19T14:25:13Z",
              "updatedAt": "2025-02-19T14:25:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 336,
      "id": "PR_kwDOIvmHss6GIERF",
      "title": "Start refactoring x.509 profile",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/336",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #330 \r\n",
      "createdAt": "2024-12-24T00:15:22Z",
      "updatedAt": "2025-02-25T15:53:19Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-330",
      "headRefOid": "9699d93b40ee2d07a6cb399d967db223fbcd607e",
      "closedAt": "2025-02-25T15:53:19Z",
      "mergedAt": "2025-02-25T15:53:19Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "b05619a5a5f38ae9f3e4acf6620c25f36c558964"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6akNkQ",
          "commit": {
            "abbreviatedOid": "c4ce0b8"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-04T15:11:24Z",
          "updatedAt": "2025-02-04T15:11:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Why do we most recently?",
              "createdAt": "2025-02-04T15:11:25Z",
              "updatedAt": "2025-02-04T15:11:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ak2-o",
          "commit": {
            "abbreviatedOid": "c4ce0b8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-04T16:07:52Z",
          "updatedAt": "2025-02-04T16:07:52Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-02-04T16:07:52Z",
              "updatedAt": "2025-02-04T16:07:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ak3yD",
          "commit": {
            "abbreviatedOid": "c4ce0b8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-04T16:08:15Z",
          "updatedAt": "2025-02-04T16:08:16Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n- When using x.509 certificates, support for either `x5t` or `x5chain` in the protected header is REQUIRED to implement.\r\n```\r\n\r\n^ This is all that is needed.",
              "createdAt": "2025-02-04T16:08:16Z",
              "updatedAt": "2025-02-04T16:08:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPjXp",
          "commit": {
            "abbreviatedOid": "c4ce0b8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:06:44Z",
          "updatedAt": "2025-02-17T15:06:44Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Why the deletion? Is this a deferral to the COSE spec?",
              "createdAt": "2025-02-17T15:06:44Z",
              "updatedAt": "2025-02-17T15:06:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP7Pa",
          "commit": {
            "abbreviatedOid": "c4ce0b8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:48:42Z",
          "updatedAt": "2025-02-17T15:48:42Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": " https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/336#discussion_r1941469555",
              "createdAt": "2025-02-17T15:48:42Z",
              "updatedAt": "2025-02-17T15:48:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cZcpY",
          "commit": {
            "abbreviatedOid": "4616abc"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:12:17Z",
          "updatedAt": "2025-02-18T15:12:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think that should be \"currently\"",
              "createdAt": "2025-02-18T15:12:17Z",
              "updatedAt": "2025-02-18T15:12:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cZy3v",
          "commit": {
            "abbreviatedOid": "4616abc"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:33:21Z",
          "updatedAt": "2025-02-18T15:33:22Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nWhen using X.509 Signed Statements, the Transparency Service MUST build and validate a complete certification path from an Issuer's certificate to one of the root certificates currently registered as a trust anchor by the Transparency Service.\r\n```",
              "createdAt": "2025-02-18T15:33:22Z",
              "updatedAt": "2025-02-18T15:33:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c17gT",
          "commit": {
            "abbreviatedOid": "9699d93"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-20T23:03:20Z",
          "updatedAt": "2025-02-20T23:03:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dc6E-",
          "commit": {
            "abbreviatedOid": "9699d93"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T15:53:08Z",
          "updatedAt": "2025-02-25T15:53:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 338,
      "id": "PR_kwDOIvmHss6GcoLk",
      "title": "Add SCRAPI reference",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/338",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #327 \r\n",
      "createdAt": "2024-12-30T16:49:23Z",
      "updatedAt": "2025-01-07T15:52:00Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issue-327",
      "headRefOid": "3e1307f127a71d91bb694cdb786eb31f73bfff14",
      "closedAt": "2025-01-07T15:52:00Z",
      "mergedAt": "2025-01-07T15:51:59Z",
      "mergedBy": "JAG-UK",
      "mergeCommit": {
        "oid": "ede1d64b72cbb7228edb31b3e3cc1aaf6ffcef0a"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm on the fence whether we should merge this PR, or decouple SCRAPI dependency:\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/327#issuecomment-2565734728\r\n",
          "createdAt": "2024-12-30T17:19:21Z",
          "updatedAt": "2024-12-30T17:19:21Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "Steve,\r\n\r\n \r\n\r\nIn our own Trust Registry (SAG-CTR) implementation experiences, the API\u2019s used for submittal of a \u201ctrust declaration\u201d (signed statement) and the ability to retrieve trusted artifacts from the registry are integral to make everything work.\r\n\r\n \r\n\r\nJust my .02\r\n\r\n \r\n\r\nThanks,\r\n\r\n \r\n\r\nDick Brooks\r\n\r\n   \r\n\r\nActive Member of the CISA Critical Manufacturing Sector, \r\n\r\nSector Coordinating Council \u2013 A Public-Private Partnership\r\n\r\n \r\n\r\n <https://reliableenergyanalytics.com/products> Never trust software, always verify and report! \u2122\r\n\r\nRisk always exists, but trust must be earned and awarded.\u2122 \r\n\r\nhttps://businesscyberguardian.com/ \r\n\r\nEmail: ***@***.***\r\n\r\nTel: +1 978-696-1788\r\n\r\n \r\n\r\n \r\n\r\nFrom: Steve Lasker ***@***.***> \r\nSent: Monday, December 30, 2024 12:20 PM\r\nTo: ietf-wg-scitt/draft-ietf-scitt-architecture ***@***.***>\r\nCc: Subscribed ***@***.***>\r\nSubject: Re: [ietf-wg-scitt/draft-ietf-scitt-architecture] Add SCRAPI reference (PR #338)\r\n\r\n \r\n\r\nI'm on the fence whether we should merge this PR, or decouple SCRAPI dependency:\r\n#327 (comment) <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/327#issuecomment-2565734728> \r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub <https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/338#issuecomment-2565735601> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABFI3NF7RF777U3UANBDH6D2IF6C7AVCNFSM6AAAAABUMJTUSWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDKNRVG4ZTKNRQGE> .\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\r\n\r\n",
          "createdAt": "2024-12-30T17:24:27Z",
          "updatedAt": "2024-12-30T17:24:27Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding @mcr notes from the alias:\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/9aXulLRIcB0H_JqpTHz8040Ne-4/",
          "createdAt": "2024-12-30T23:27:59Z",
          "updatedAt": "2024-12-30T23:27:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Wkgjn",
          "commit": {
            "abbreviatedOid": "3e1307f"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-31T04:23:35Z",
          "updatedAt": "2024-12-31T04:23:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XEpcy",
          "commit": {
            "abbreviatedOid": "3e1307f"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-07T15:06:01Z",
          "updatedAt": "2025-01-07T15:06:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XFHmV",
          "commit": {
            "abbreviatedOid": "3e1307f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-07T15:51:44Z",
          "updatedAt": "2025-01-07T15:51:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 339,
      "id": "PR_kwDOIvmHss6Gdv49",
      "title": "Compress Architecture Diagram",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/339",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From @mcr,\r\nhttps://mailarchive.ietf.org/arch/msg/scitt/sOGI7xcUaOJx5Zag8uqsygooLrc/\r\n> The diagram is very tall and skiny.  The SVG is lovely mind.\r\n> Maybe use more of the horizontal space, then \"Signed-Statement->Transparency\r\n> Statement\" wouldn't have to weave around.\r\n\r\nWhich saves some vertical scrolling and a wee bit of compute and network bytes:\r\n![image](https://github.com/user-attachments/assets/a3ca4114-beba-40cf-88fa-fc4bd26f919b)\r\n\r\nThere's no change in content or flow, just a repositioning of the boxes.",
      "createdAt": "2024-12-30T23:16:55Z",
      "updatedAt": "2025-01-20T17:13:42Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "764883ffa96088f8ae5bd8916660bdd63c2bfdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/diagram-compression",
      "headRefOid": "33cab1ccfffcd6003e342dc7f30a50ae23364d5e",
      "closedAt": "2025-01-20T17:13:38Z",
      "mergedAt": "2025-01-20T17:13:38Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1a80d601de80a00410055e1c96c22493ac08b891"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6Wkbs3",
          "commit": {
            "abbreviatedOid": "33cab1c"
          },
          "author": "mcr",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "have you tried \"asciio\"?",
          "createdAt": "2024-12-31T03:11:01Z",
          "updatedAt": "2024-12-31T03:11:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6WkhJX",
          "commit": {
            "abbreviatedOid": "33cab1c"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-31T04:32:11Z",
          "updatedAt": "2024-12-31T04:32:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XEok3",
          "commit": {
            "abbreviatedOid": "33cab1c"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-07T15:04:27Z",
          "updatedAt": "2025-01-07T15:04:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XFIJY",
          "commit": {
            "abbreviatedOid": "33cab1c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-07T15:52:29Z",
          "updatedAt": "2025-01-07T15:52:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6XFK0W",
          "commit": {
            "abbreviatedOid": "33cab1c"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-01-07T15:56:40Z",
          "updatedAt": "2025-01-07T15:56:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 343,
      "id": "PR_kwDOIvmHss6KABiF",
      "title": "Remove URNs",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/343",
      "state": "MERGED",
      "author": "achamayou",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #342",
      "createdAt": "2025-02-04T13:43:01Z",
      "updatedAt": "2025-02-04T15:17:10Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "e28c036264333ba458f869e480dc816bfc155fcb",
      "headRepository": "achamayou/draft-ietf-scitt-architecture",
      "headRefName": "remove_urns",
      "headRefOid": "df63b74ac3e17b742fe97d3a2acccf9443f4b685",
      "closedAt": "2025-02-04T15:17:10Z",
      "mergedAt": "2025-02-04T15:17:10Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "6e5646b3a2da6183c820949d4143f1de8ff64e95"
      },
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@JAG-UK this is blocked behind https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/344",
          "createdAt": "2025-02-04T14:05:27Z",
          "updatedAt": "2025-02-04T14:05:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6ajPMF",
          "commit": {
            "abbreviatedOid": "df63b74"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, as discussed",
          "createdAt": "2025-02-04T13:54:06Z",
          "updatedAt": "2025-02-04T15:13:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6akL9V",
          "commit": {
            "abbreviatedOid": "df63b74"
          },
          "author": "roywill",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I agree.",
          "createdAt": "2025-02-04T15:09:09Z",
          "updatedAt": "2025-02-04T15:13:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6akME0",
          "commit": {
            "abbreviatedOid": "df63b74"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-04T15:09:19Z",
          "updatedAt": "2025-02-04T15:13:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6akMOF",
          "commit": {
            "abbreviatedOid": "df63b74"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-04T15:09:31Z",
          "updatedAt": "2025-02-04T15:13:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 344,
      "id": "PR_kwDOIvmHss6KALYi",
      "title": "Update GitHub actions versions to fix CI",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/344",
      "state": "MERGED",
      "author": "achamayou",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The update editor's copy is currently broken with:\r\n\r\n```\r\nError: This request has been automatically failed because it uses a deprecated version of `actions/upload-artifact: v3`. Learn more: https://github.blog/changelog/2024-04-16-deprecation-notice-v3-of-the-artifact-actions/\r\n```\r\n\r\nSee https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/actions/runs/13136814149/job/36654025399?pr=343",
      "createdAt": "2025-02-04T13:59:42Z",
      "updatedAt": "2025-02-04T15:06:58Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "1e1125a03a375bfeee2c4cf4845827463ccda708",
      "headRepository": "achamayou/draft-ietf-scitt-architecture",
      "headRefName": "github_actions_updates",
      "headRefOid": "2d721bf45fe258e20e3e0901fa32dddaca11285b",
      "closedAt": "2025-02-04T15:06:58Z",
      "mergedAt": "2025-02-04T15:06:58Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e28c036264333ba458f869e480dc816bfc155fcb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6ajrzT",
          "commit": {
            "abbreviatedOid": "2d721bf"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-04T14:30:31Z",
          "updatedAt": "2025-02-04T14:30:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6akKDH",
          "commit": {
            "abbreviatedOid": "2d721bf"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-04T15:06:47Z",
          "updatedAt": "2025-02-04T15:06:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 345,
      "id": "PR_kwDOIvmHss6LGupf",
      "title": "Clarify trust anchor wording",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/345",
      "state": "MERGED",
      "author": "achamayou",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addressing a concern raised by @briankr-ms, to clarify that the registration policies can contain trust anchors. To give a concrete example, scitt-ccf-ledger policies can contain one or more trust anchors in the following way:\r\n\r\n```\r\nexport function apply(profile, phdr) {\r\nif (phdr.cwt.iss.startsWith(\"did:x509:0:sha256:HnwZ4lezuxq_GVcl_Sk7YWW170qAD0DZBLXilXet0jg::eku::...\"))\r\n{\r\n...\r\n```\r\n\r\nWhich encodes the thumbprint of a trust anchor, and the constraint that the leaf of x5chain must have certain EKU bits set. More detail can be found if desired at https://github.com/microsoft/did-x509\r\n\r\nFor the avoidance of doubt, this is _not_ trying to mention `did` in the draft. This is just clarifying that roots of trust can be encoded in policy. One could also imagine a `did`-free policy along of the lines of:\r\n\r\n```\r\nexport function apply(profile, phdr) {\r\nif (thumbprint(phdr.x5chain[0]) == \"f5ceec3fd104994da13b32e8bdc21bd864e4e7f579ecd157c38c15c1b2390c9f\"))\r\n{\r\n...\r\n```\r\n\r\nHaving them inline is not just a convenience, some use cases will have a non-trivial mapping between acceptable statements and trust anchors, and the set of anchors alone will not be sufficient for a complete audit in that case.",
      "createdAt": "2025-02-13T13:26:43Z",
      "updatedAt": "2025-02-18T15:23:23Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6e5646b3a2da6183c820949d4143f1de8ff64e95",
      "headRepository": "achamayou/draft-ietf-scitt-architecture",
      "headRefName": "clarify_trust_anchors",
      "headRefOid": "6c898bc4b01645739214adc2e4dd4d0068184618",
      "closedAt": "2025-02-18T15:23:23Z",
      "mergedAt": "2025-02-18T15:23:23Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "711bb2ccf3f470655f7ebd636b69af5725985d84"
      },
      "comments": [
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "@achamayou Having identified trust anchors is certainly a requirement. Equally important is to have the list of known \"trusted keys\" that a Transparency Service will trust for any submitted signed statements. The Transparency Service will need to identify the specific key fingerprints/thumbprints assigned to signing parties that are allowed to register a signed statement, which must be verified as part of the registration process for new \"trusted signers\" that allowed to submit signed statements for placement in the registry. \r\nThe signing parties in a signed statement MUST be verified as an authorized party using a recognized/authorized signing key fingerprint/thumbprint when verifying signed statements that go into the registry, otherwise there will be doubt about the trustworthiness of the SCITT process to ensure integrity.",
          "createdAt": "2025-02-13T16:30:30Z",
          "updatedAt": "2025-02-13T16:45:46Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> The signing parties in a signed statement MUST be verified as an authorized party using a recognized/authorized signing key fingerprint/thumbprint when verifying signed statements that go into the registry, otherwise there will be doubt about the trustworthiness of the SCITT process to ensure integrity.\r\n\r\n@rjb4standards I completely agree with this, but what I am saying (and it sounds like you perhaps disagree with?) is that the policy can pick these keys at registration time, depending on context. There may not be a single list, materialised anywhere, and used unconditionally. Instead the list may be decided programmatically, as the pseudo-code in the description shows.",
          "createdAt": "2025-02-17T16:46:08Z",
          "updatedAt": "2025-02-17T16:46:08Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "@achamayou I think we are very close on this point. I'm suggesting that a party must be authorized/approved to submit signed statements with a Transparency Service as part of Registration Policy doctrine before being allowed to submit a signed statement. Each approved signing party must provide identification of the key they will use to represent themselves in a signed statement, so that a Transparency Service can validate that a signed statement came from an authorized, trusted signer identified by the signing key fingerprint/thumbprint on file for that party, before a signed statement will be recorded in the Registry. ",
          "createdAt": "2025-02-17T16:53:39Z",
          "updatedAt": "2025-02-17T16:53:39Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@rjb4standards agreed, let's see if we can meet completely :)\r\n\r\n> Each approved signing party must provide identification of the key they will use to represent themselves in a signed statement, so that a Transparency Service can validate that a signed statement came from an authorized, trusted signer identified by the signing key fingerprint/thumbprint on file for that party, before a signed statement will be recorded in the Registry.\r\n\r\nIdentification sounds too strong to me, it sounds like the statement must contain the fingerprint of the key itself. We use a `did:x509` (but we could do this with separate claims, the did format is a distraction here, as explained in the PR description) to express the following:\r\n\r\n\"Whatever key signed this, it must be the leaf in a certificate chain rooted in a certificate with _this_ fingerprint, _and_, it must have the following bits set in its EKU section\".\r\n\r\nThat does not identify a single key. It purposefully allows easy key rotation, and trusts the signer to assign different EKU bits to different Issuers, and to do a good job of that. It is not practical, nor desirable for the signer to burden the ledger with constant updates about key rotations, instead this is kept track of separately. The ledger is content with a looser binding that a fingerprint, but one that has a clear trust anchor (the policy), and can be replayed/verified by any party with access to the ledger alone.",
          "createdAt": "2025-02-17T17:15:05Z",
          "updatedAt": "2025-02-17T17:15:05Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "@achamayou this approach would allow \"any\" key issued by a trusted CA/trust anchor to sign a statement, and it would be considered valid, even if they key belonged to a party that was not authorized to sign a specific artifact, like an SBOM. You and I can both hold valid keys from the same CA, but only my key should be considered authoritative on my SBOM artifact. Your key used to sign my SBOM should be rejected as \"not authorized\".",
          "createdAt": "2025-02-17T17:23:49Z",
          "updatedAt": "2025-02-17T17:23:49Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> @achamayou this approach would allow \"any\" key issued by a trusted CA/trust anchor to sign a statement, and it would be considered valid, even if they key belonged to a party that was not authorized to sign a specific artifact, like an SBOM. You and I can both hold valid keys from the same CA, but only my key should be considered authoritative on my SBOM artifact. Your key used to sign my SBOM should be rejected as \"not authorized\".\r\n\r\nI don't think it does, here is why:\r\n\r\n1. If you think only a single (Signed Statement) issuer should ever be able to publish for a subject on a single ledger, it's trivial for the policy to enforce it:\r\n```\r\nif (thumbprint(x5chain[0]) == \"...\" && eku(x5chain[-1]) == 1.... && cwt.sub == \"sbom_foo\")\r\n{\r\n// accept\r\n}\r\nelse\r\n{\r\n// reject\r\n}\r\n```\r\n\r\n2. But that's not necessary really, because a relying party should identify an SBOM not through subject alone, but through a ((Signed Statement) issuer, subject) pair. It's not subject: \"Product Foo\" that I trust, it's subject: \"Product Foo\" from issuer (Signed Statement Issuer): \"Issuer Bar\" that matters.",
          "createdAt": "2025-02-18T15:13:33Z",
          "updatedAt": "2025-02-18T15:21:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6cP6fH",
          "commit": {
            "abbreviatedOid": "1a85168"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:47:22Z",
          "updatedAt": "2025-02-17T15:47:23Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nTransparency Services MUST maintain a list of trust anchors (see definition of trust anchor in {{-Glossary}}) in order to check the signatures of Signed Statements, either separately, or inside Registration Policies.\r\n```",
              "createdAt": "2025-02-17T15:47:22Z",
              "updatedAt": "2025-02-17T15:47:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP6vu",
          "commit": {
            "abbreviatedOid": "1a85168"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-17T15:47:47Z",
          "updatedAt": "2025-02-17T15:47:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cP9TJ",
          "commit": {
            "abbreviatedOid": "1a85168"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:52:27Z",
          "updatedAt": "2025-02-17T15:52:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@OR13 \r\nI would also add: \r\nTransparency Services MUST maintain a list of trusted keys that are valid for submitting signed statements.",
              "createdAt": "2025-02-17T15:52:27Z",
              "updatedAt": "2025-02-17T15:52:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cQXhp",
          "commit": {
            "abbreviatedOid": "1a85168"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T16:38:40Z",
          "updatedAt": "2025-02-17T16:38:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The purpose of this change is to clarify that maintaining a standalone list of keys is not necessary, because a policy can fulfill the same role, with more nuance.",
              "createdAt": "2025-02-17T16:38:40Z",
              "updatedAt": "2025-02-17T16:38:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cQyp2",
          "commit": {
            "abbreviatedOid": "1a85168"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T17:28:47Z",
          "updatedAt": "2025-02-17T17:28:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The purpose of my proposed change is to eliminate confusion regarding interpretation of what 'verify Issuers' might mean.",
              "createdAt": "2025-02-17T17:28:47Z",
              "updatedAt": "2025-02-17T17:28:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cZlFM",
          "commit": {
            "abbreviatedOid": "6c898bc"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-18T15:20:31Z",
          "updatedAt": "2025-02-18T15:20:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cZnpV",
          "commit": {
            "abbreviatedOid": "6c898bc"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-18T15:23:15Z",
          "updatedAt": "2025-02-18T15:23:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 346,
      "id": "PR_kwDOIvmHss6LdLfF",
      "title": "Update PII handling advice in security section",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/346",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses Issue #322",
      "createdAt": "2025-02-17T12:52:39Z",
      "updatedAt": "2025-02-25T15:56:31Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "6e5646b3a2da6183c820949d4143f1de8ff64e95",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "jag-uk/322-clarify-privacy-layering",
      "headRefOid": "706a6d3aa5de67109b287a3326afe84dfbdb90db",
      "closedAt": "2025-02-25T15:56:31Z",
      "mergedAt": "2025-02-25T15:56:31Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "ef4bcd3115598b3b6d11b27bf1e2a98fc0a975bb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6cPFV8",
          "commit": {
            "abbreviatedOid": "de88fee"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2025-02-17T14:17:33Z",
          "updatedAt": "2025-02-17T14:17:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cPYPE",
          "commit": {
            "abbreviatedOid": "de88fee"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T14:48:43Z",
          "updatedAt": "2025-02-17T14:48:43Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nIssuers are responsible for verifying that the privacy and security posture of the Transparency Service is suitable for the contents of their Signed Statements prior to Registration.\r\nIn particular, Issuers must carefully review the inclusion of private, confidential, or personally identifiable information (PII) in their Statements against the privacy posture of the Transparency Service.\r\n```",
              "createdAt": "2025-02-17T14:48:43Z",
              "updatedAt": "2025-02-17T14:48:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPZsE",
          "commit": {
            "abbreviatedOid": "3f8817c"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-17T14:50:53Z",
          "updatedAt": "2025-02-17T14:50:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6cPrXf",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:20:27Z",
          "updatedAt": "2025-02-17T15:20:27Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nInteractions with Transparency Services MUST use appropriately strong encryption and authorization technologies.\r\n```",
              "createdAt": "2025-02-17T15:20:27Z",
              "updatedAt": "2025-02-17T15:20:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPr3g",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:21:20Z",
          "updatedAt": "2025-02-17T15:21:20Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Not attached to this language, but we may not need to talk about traffic analysis here, given that the architecture does not specific a network protocol.",
              "createdAt": "2025-02-17T15:21:20Z",
              "updatedAt": "2025-02-17T15:21:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPvuE",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:28:02Z",
          "updatedAt": "2025-02-17T15:28:02Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nUsing a hash as the statement about an artifact, supports cases where information needs to be included on the append-only log whilst remaining opaque to the transparency service.\r\n```",
              "createdAt": "2025-02-17T15:28:02Z",
              "updatedAt": "2025-02-17T15:28:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPxrv",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:31:28Z",
          "updatedAt": "2025-02-17T15:31:28Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Not sure if we are trying to talk about hash envelope here, and we should avoid a direct reference.\r\n\r\nObviously a registration policy for accepting signed hashes, might need some way to look them up (in a registry for example), before deciding to accept them... at that point, they would not be secret.\r\n\r\nI would prefer to not conflate privacy issues with adjacent services and registration policies, with the generic privacy considerations of a transparency service.",
              "createdAt": "2025-02-17T15:31:28Z",
              "updatedAt": "2025-02-17T15:31:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPyE4",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:32:10Z",
          "updatedAt": "2025-02-17T15:32:11Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nWhile not strictly required for interoperability of Receipts and Signed Statement Registration, most Transparency Services are expected to keep copies of Registered Signed Statements in an adjacent service and make them available to authorized users for ease of indexing, auditing or similar activities.\r\n```",
              "createdAt": "2025-02-17T15:32:11Z",
              "updatedAt": "2025-02-17T15:32:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cPzcg",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:34:36Z",
          "updatedAt": "2025-02-17T15:34:36Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://datatracker.ietf.org/doc/html/draft-ietf-scitt-architecture-10#section-4.1.4 \r\n\r\nNot sure what this sentence is trying to say, perhaps:\r\n\r\nThe privacy considerations of adjacent services, such as artifact repositories, are out of scope for this document.\r\n",
              "createdAt": "2025-02-17T15:34:36Z",
              "updatedAt": "2025-02-17T15:34:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP0bt",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:36:25Z",
          "updatedAt": "2025-02-17T15:36:25Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Are we talking about submitted a signed statement to an artifact repository here?\r\n\r\nOr submitting a signed statement to public transparency service?",
              "createdAt": "2025-02-17T15:36:25Z",
              "updatedAt": "2025-02-17T15:36:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP083",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:37:23Z",
          "updatedAt": "2025-02-17T15:37:24Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nIn some deployments a special role such as an Auditor might require and be given access to both the Transparency Service and related Adjacent Services.\r\n```",
              "createdAt": "2025-02-17T15:37:23Z",
              "updatedAt": "2025-02-17T15:37:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP3Kx",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:41:16Z",
          "updatedAt": "2025-02-17T15:41:17Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nIn most Transparency Service implementations the append-only log only carries cryptographic metadata (eg a hash) rather than the complete Signed Statement and so does not raise immediate privacy concerns. \r\nBy analyzing the relationship between data stored in the Transparency Service and data stored in Adjacent Services, it is possible to perform metadata analysis, which could reveal the order in which artifacts were built, signed and uploaded.\r\n```",
              "createdAt": "2025-02-17T15:41:16Z",
              "updatedAt": "2025-02-17T15:41:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP3gZ",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:41:53Z",
          "updatedAt": "2025-02-17T15:41:53Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-02-17T15:41:53Z",
              "updatedAt": "2025-02-17T15:41:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP3vS",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:42:18Z",
          "updatedAt": "2025-02-17T15:42:18Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I think this is covered by the comment on linking TS and AS (adjacent service) data.",
              "createdAt": "2025-02-17T15:42:18Z",
              "updatedAt": "2025-02-17T15:42:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP4kK",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:43:46Z",
          "updatedAt": "2025-02-17T15:43:46Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n```\r\n\r\nThe architecture does not specify a query interface... SCRAPI does though.",
              "createdAt": "2025-02-17T15:43:46Z",
              "updatedAt": "2025-02-17T15:43:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cP5nQ",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:45:44Z",
          "updatedAt": "2025-02-17T15:45:44Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n```\r\n\r\nI think this is covered by the comment regarding metadata analysis.\r\n\r\nThis sentence might be more appropriate in SCRAPI.\r\n\r\n",
              "createdAt": "2025-02-17T15:45:44Z",
              "updatedAt": "2025-02-17T15:45:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cQAfd",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T15:57:31Z",
          "updatedAt": "2025-02-17T15:58:36Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "What in the architecture and specification require a TS \"be trusted with\" confidentiality? I can understand integrity, but not confidentiality. Secondly, is that a directly relevant concern to privacy claims, and not security?",
              "createdAt": "2025-02-17T15:57:31Z",
              "updatedAt": "2025-02-17T15:58:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cQLgd",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-17T16:14:35Z",
          "updatedAt": "2025-02-17T16:14:35Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "The architecture says that the signed statement is processed by the transparency service.\r\nYou could imagine various forms of processing that might breach the expected confidentiality.\r\nAlthough you might also expect this all to be handled in a public git repo, with comments and discussions on the signed statement and related policies.",
              "createdAt": "2025-02-17T16:14:35Z",
              "updatedAt": "2025-02-17T16:14:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXHCY",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T11:53:56Z",
          "updatedAt": "2025-02-18T11:53:57Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Not a reference to Hash Envelope specifically, just pointing out that people can commit to data with disclosing it.\r\n\r\nI like your suggestion and will commit it.",
              "createdAt": "2025-02-18T11:53:56Z",
              "updatedAt": "2025-02-18T11:53:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXHoc",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T11:54:47Z",
          "updatedAt": "2025-02-18T11:54:47Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "These were not my original words, I'm happy to remove altogether",
              "createdAt": "2025-02-18T11:54:47Z",
              "updatedAt": "2025-02-18T11:54:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXIHm",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T11:55:42Z",
          "updatedAt": "2025-02-18T11:55:43Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Good idea should add that out-of-scope comment",
              "createdAt": "2025-02-18T11:55:43Z",
              "updatedAt": "2025-02-18T11:55:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXJdF",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T11:57:27Z",
          "updatedAt": "2025-02-18T11:57:27Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Either / both? Not sure it matters. I think these were Hannes' words originally, I'm just trying to tidy up the Considerations section so moved things around. \r\n\r\nTBH the public reference is just really over-explaining the point above it, we could consider removing, but I'm sure others would insist on putting it back again",
              "createdAt": "2025-02-18T11:57:27Z",
              "updatedAt": "2025-02-18T11:57:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXMQT",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T12:00:38Z",
          "updatedAt": "2025-02-18T12:00:38Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I like this change, but the original text that I ws working with specifically wanted to very clearly spell out that you can't remove data from an append-only log (IKR \ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f) so I stuck with that angle. \r\n\r\nLet's discuss in the group how naive a reader we expect here.",
              "createdAt": "2025-02-18T12:00:38Z",
              "updatedAt": "2025-02-18T12:00:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXMwE",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T12:01:25Z",
          "updatedAt": "2025-02-18T12:01:26Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Agreed, will remove",
              "createdAt": "2025-02-18T12:01:25Z",
              "updatedAt": "2025-02-18T12:01:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXNMc",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T12:02:12Z",
          "updatedAt": "2025-02-18T12:02:12Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Should discuss, as the append-on-log itself is also valid here",
              "createdAt": "2025-02-18T12:02:12Z",
              "updatedAt": "2025-02-18T12:02:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cXNyp",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T12:03:20Z",
          "updatedAt": "2025-02-18T12:03:20Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I'd be happy to remove the first sentence. They're not my original words and I think the following text covers the whole topic better than that headline.",
              "createdAt": "2025-02-18T12:03:20Z",
              "updatedAt": "2025-02-18T12:03:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cZL-t",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T14:51:30Z",
          "updatedAt": "2025-02-18T14:51:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Agreed to make out of scope. I also noticed the wording says \"...expected to keep copies...\" which is also not necessarily true. \"...may keep copies...\"",
              "createdAt": "2025-02-18T14:51:30Z",
              "updatedAt": "2025-02-18T14:51:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cZWTb",
          "commit": {
            "abbreviatedOid": "55c54e0"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:04:15Z",
          "updatedAt": "2025-02-18T15:04:16Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nThe Transparency Service is trusted with the confidentiality of the Signed Statements presented for Registration.\r\nIssuers are responsible for verifying that the Transparency Service's privacy and security posture is suitable for the contents of their Signed Statements prior to Registration.\r\nIn particular, Issuers must carefully review the inclusion of private, confidential, or personally identifiable information (PII) in their Statements against the Transparency Service's privacy posture.\r\n```",
              "createdAt": "2025-02-18T15:04:15Z",
              "updatedAt": "2025-02-18T15:04:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cZ578",
          "commit": {
            "abbreviatedOid": "08cf340"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:40:49Z",
          "updatedAt": "2025-02-18T15:40:49Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nInteractions with Transparency Services are expected to use appropriately strong encryption and authorization technologies.\r\n```",
              "createdAt": "2025-02-18T15:40:49Z",
              "updatedAt": "2025-02-18T15:40:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6caH5A",
          "commit": {
            "abbreviatedOid": "d315e63"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T15:52:50Z",
          "updatedAt": "2025-02-18T15:52:51Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-02-18T15:52:50Z",
              "updatedAt": "2025-02-18T15:52:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cl5VH",
          "commit": {
            "abbreviatedOid": "35c5f5e"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T15:26:59Z",
          "updatedAt": "2025-02-19T15:26:59Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "resolving as updates were applied",
              "createdAt": "2025-02-19T15:26:59Z",
              "updatedAt": "2025-02-19T15:26:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c0gaK",
          "commit": {
            "abbreviatedOid": "b191f0a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-20T20:02:59Z",
          "updatedAt": "2025-02-20T20:02:59Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-02-20T20:02:59Z",
              "updatedAt": "2025-02-20T20:02:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c18tI",
          "commit": {
            "abbreviatedOid": "30286ab"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-20T23:07:22Z",
          "updatedAt": "2025-02-20T23:07:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6c28f8",
          "commit": {
            "abbreviatedOid": "30286ab"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-21T02:04:42Z",
          "updatedAt": "2025-02-21T02:04:47Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Since we do not have so many instances and implementations, can we stipulate \"In most...\"? I don't have a strong objection, but maybe use specification language?\r\n\r\n```suggestion\r\nTransparency Services' append-only logs MAY carry only cryptographic metadata (e.g. a hash), rather than the complete Signed Statement, which does not raise immediate privacy concerns.\r\n```",
              "createdAt": "2025-02-21T02:04:42Z",
              "updatedAt": "2025-02-21T02:04:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c6QQz",
          "commit": {
            "abbreviatedOid": "30286ab"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T09:38:53Z",
          "updatedAt": "2025-02-21T09:38:53Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nIssuers and Clients are responsible for verifying that the Transparency Service's privacy and security posture is suitable for the contents of the Signed Statements they submit prior to Registration.\r\n```\r\n\r\nWe draw a distinction between Clients and Issuers elsewhere, and even clarify \"The Client (which is not necessarily the Issuer)\", and the submission performed by the Client.\r\n\r\nI don't think we say anything about the Client always acting faithfully/honestly on behalf of the Issuer. If that's always the case, then the current wording is fine. If not, perhaps this paragraph and the next ought to be reworded slightly, and a comment added to clarify that the Client is trusted in this process?\r\n\r\nOr maybe I am overthinking this, and this is in fact clear to everyone :)",
              "createdAt": "2025-02-21T09:38:53Z",
              "updatedAt": "2025-02-25T13:53:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dNTII",
          "commit": {
            "abbreviatedOid": "30286ab"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T15:23:56Z",
          "updatedAt": "2025-02-24T15:23:56Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "There is a nuance between them, but I agree that Clients interact with the Transparency Service, and Issuers sign statements. Or, rather an Issuers signing material is used to sign statements, which \"Clients\" may operate upon.",
              "createdAt": "2025-02-24T15:23:56Z",
              "updatedAt": "2025-02-24T15:23:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dbFiJ",
          "commit": {
            "abbreviatedOid": "90a55b2"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T13:45:55Z",
          "updatedAt": "2025-02-25T13:46:12Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "This introduces a 'turtles' situation where \"Issuers are responsible for verifying that Clients that submit Signed Statements on their behalf are capable to evaluate the Transparency Service's privacy and security posture and only submit where such posture is suitable for the contents of the Signed Statements.\"\r\n",
              "createdAt": "2025-02-25T13:45:55Z",
              "updatedAt": "2025-02-25T13:46:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dbM1j",
          "commit": {
            "abbreviatedOid": "30286ab"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T13:55:08Z",
          "updatedAt": "2025-02-25T13:55:08Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@JAG-UK quite right, I have amended the proposed wording very slightly to say \"Turtles\", rather than \"the top-most turtle\". I am also happy to see this closed without further action.",
              "createdAt": "2025-02-25T13:55:08Z",
              "updatedAt": "2025-02-25T13:55:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dc7mI",
          "commit": {
            "abbreviatedOid": "90a55b2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Lets make it clear that a client needs to accept the TS policy",
          "createdAt": "2025-02-25T15:54:22Z",
          "updatedAt": "2025-02-25T15:55:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dc8nM",
          "commit": {
            "abbreviatedOid": "90a55b2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T15:55:15Z",
          "updatedAt": "2025-02-25T15:55:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dc8ny",
          "commit": {
            "abbreviatedOid": "706a6d3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T15:55:15Z",
          "updatedAt": "2025-02-25T15:55:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 349,
      "id": "PR_kwDOIvmHss6LxT0y",
      "title": "Clarify that the unprotected header MUST be empty before a Signed Statement is included in the Append-only log",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/349",
      "state": "MERGED",
      "author": "achamayou",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #321.",
      "createdAt": "2025-02-19T15:41:20Z",
      "updatedAt": "2025-02-26T19:59:10Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "711bb2ccf3f470655f7ebd636b69af5725985d84",
      "headRepository": "achamayou/draft-ietf-scitt-architecture",
      "headRefName": "clarify_what_is_notarized_on_the_ledger",
      "headRefOid": "00d75d2de22533221a12fe0717fb351944c444cd",
      "closedAt": "2025-02-25T15:57:57Z",
      "mergedAt": "2025-02-25T15:57:57Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "8c12eaa4811f66d03769669a6d7e10725925fdb7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6cmHss",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T15:44:41Z",
          "updatedAt": "2025-02-19T15:44:41Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Is this a SHOULD or MUST? I thought I remembered we decided MUST.",
              "createdAt": "2025-02-19T15:44:41Z",
              "updatedAt": "2025-02-19T15:44:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cmf2L",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T16:19:30Z",
          "updatedAt": "2025-02-19T16:19:30Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I would love MUST, I am [all for it](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/321#issuecomment-2663606794), but that means taking off the stuff about protected `x5t` and unprotected `x5chain`. Are you, @JAG-UK and @robinbryce happy with that?\r\n\r\nI'm good to go, I am firmly in the protected `x5chain` camp! :)",
              "createdAt": "2025-02-19T16:19:30Z",
              "updatedAt": "2025-02-19T16:19:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cmrwf",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T16:37:20Z",
          "updatedAt": "2025-02-19T16:37:20Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "IMO, leaving it a should, with the ability for some implementations to reject registration, defeats the interop goals. \r\nI realize this unwinds some other decisions, but we had \"punted\" decisions like the x5t to be in the unprotected header to move forward.\r\nThe signed statement isn't stored within the VDS (consolidated term for Append-only ledger), so the service can still store the receipt or other content in the unprotected header in the ancillary service. Unless I'm missing something, the notarized receipt doesn't cover the unprotected header, so I don't see the value of leaving this open-ended.\r\n",
              "createdAt": "2025-02-19T16:37:20Z",
              "updatedAt": "2025-02-19T16:37:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cmuvp",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T16:41:53Z",
          "updatedAt": "2025-02-19T16:41:53Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "for the x5chain, I'm not suggesting it MUST be in the protected header, it can still be in the unprotected header. However, it MUST be stripped before submitting.\r\nThinking further, if the TS does store the signed statement, and the unprotected header MUST be stripped before submission, the TS would require a different API to upload the signed statement with the unprotected header to be stored in the ancillary service.\r\nSo, I'm a little torn here. I want to remove the SHOULD, as it's a hole in interop.\r\nI would like to support storing the signed statement in the TS ancillary services, and would NOT like to provide yet another API.\r\n\r\nThe alternative is to say the Transparency Service MUST ignore the unprotected header...\r\nI need to read through #321 again to remember why we chose to not allow the unprotected header from being submitted, but ignored. \ud83e\udd37 ",
              "createdAt": "2025-02-19T16:41:53Z",
              "updatedAt": "2025-02-19T16:41:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cm1ii",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T16:52:44Z",
          "updatedAt": "2025-02-19T16:52:44Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@SteveLasker welcome (again) to the loop :) I think I prefer stripping to this, because it's clearer and more interoperable. But really I am fine with either. I am also fine with going full protected.\r\n\r\nEdit: I think [this](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/321#issuecomment-2554399899) is where the mood turned against stripping, although to be fair I suggested it just above.",
              "createdAt": "2025-02-19T16:52:44Z",
              "updatedAt": "2025-02-19T16:55:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cnowp",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T18:19:40Z",
          "updatedAt": "2025-02-19T18:19:40Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@achamayou checking I am keeping up with this one :-)\r\n\r\nif this is a MUST remove, then we are saying TS's that support x5t/x5tchain are then required to put that in the protected header ? I am basically ok with that because x5 support is not mandatory. this only affects people that want x5 based identities.\r\n\r\nx5t is already in protected headers so thats not a problem.\r\n\r\nI never understood the need to put x5chain in the protected headers if x5t was there, but I'm not the person to make or disupute the case for that.\r\n\r\nThe original problem with un protected headers is producing the pre-image based on some aribitrary transparent statement - how can you know which un protected headers were part of the statement when it was registered ? If you can't know that, you cant work out the correct input for the inclusion proofs and the receipts attached to your transparent statement are useless to everyone who isn't aware of the details of registration on that particular TS.\r\n\r\nBy far the simplest resolution was requiring that the registering client removed all the un protected headers before registration. Then there is zero ambiguity. This only works if this is a MUST strip unprotected. SHOULD would be like saying \"receipts SHOULD be verifiable without knowlege external to the transparent statement\" :-/\r\n\r\nSo, tl;dr I'm currently in favour of MUST. And I don't want to personaly revisit the \"do we need to put x6chain in protected headers\" conversation, and don't feel our implementation is particularly impacted either way.",
              "createdAt": "2025-02-19T18:19:40Z",
              "updatedAt": "2025-02-19T18:19:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6coCok",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T19:10:45Z",
          "updatedAt": "2025-02-19T19:10:46Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@robinbryce and I just talked through this. I believe we're having a layering discussion that's causing confusion.\r\nThe \"Registration Process\" is a sub-system of the Transparency Service. \r\nThe Transparency Service, as defined through SCRAPI, CAN ingest a signed statement with content in the unprotected header. It's very useful to have a property bag to enable sharing additional information, even if there's now way to prove when/how/where that data was added. It clearly is defined as \"**Unprotected**\"\r\n\r\nBy allowing a Signed Statement to be submitted to the TS, would enable the Transparency Service to save the unprotected header, as it was submitted. \r\nAnd, it would allow the Transparency Service to strip the unprotected header when doing the registration on the VDS.\r\nI believe we agreed it's a MUST to remove the Unprotected Header when creating a VDS, and the unprotected header MUST be stripped when verifying a VDS to the signed statement.  It's not a MUST that the unprotected header must be stripped on submission to the Transparency Service. \r\n\r\nI'm going to draw a quick picture...",
              "createdAt": "2025-02-19T19:10:45Z",
              "updatedAt": "2025-02-19T19:10:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6colut",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T20:15:50Z",
          "updatedAt": "2025-02-19T20:15:51Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "> I believe we agreed it's a MUST to remove the Unprotected Header when creating a VDS, and the unprotected header MUST be stripped when verifying a VDS to the signed statement. It's not a MUST that the unprotected header must be stripped on submission to the Transparency Service.\r\n\r\nI think that is this what I meant when I proposed stripping the unprotected header in the first place: it can be sent, it can even be used as supporting evidence in the registration (unprotected `x5chain` with binding for example), _but_ it is stripped before creation of the VDS.\r\n\r\nThis is a slight complication for a sender, because what the receipt binds to is not always exactly what is sent. But the stripping is easy enough to perform?\r\nI will have another go at a PR tomorrow, unless someone else objects :)",
              "createdAt": "2025-02-19T20:15:50Z",
              "updatedAt": "2025-02-19T20:15:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6co6AZ",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T21:00:00Z",
          "updatedAt": "2025-02-19T21:00:00Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "\r\n![image](https://github.com/user-attachments/assets/f5bedfea-c2b9-45e4-ab08-520e596153ea)\r\n\r\nAn Implementation of a Transparency Service\r\n1. The Signed Envelope, with optional content in the unprotected header submitted to SCRAPI\r\n2. The Signed Statement is accepted and optionally stored in an Ancillary Service, providing indexing, querying, and retrieval of the submitted Signed Statement\r\n3. Within the Transparency Service, the Unprotected Header MAY contain an x5chain used to verify the issuer\r\n4. The Unprotected Header MUST be stripped before creation of the Verfiable Data Structure, placed on the Immutable Ledger.\r\n5. The notarized Receipt of Registration is returned through SCRAPI\r\n6. A Transparent Statement MAY be created, adding the Receipt to the unprotected header of the Signed Statement",
              "createdAt": "2025-02-19T21:00:00Z",
              "updatedAt": "2025-02-19T21:00:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cpc0C",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-19T22:23:58Z",
          "updatedAt": "2025-02-19T22:23:59Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "+1 to removing this. Registering signed statements across multiple transparency services are independent actions. While it's possible to attach multiple receipts, the VDS does nothing with the receipts in the unprotected headers. \r\nA TS can store the signed statement, with the receipts, but they're \"unprotected\". ",
              "createdAt": "2025-02-19T22:23:59Z",
              "updatedAt": "2025-02-19T22:23:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6cyu3t",
          "commit": {
            "abbreviatedOid": "d117854"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-20T16:45:39Z",
          "updatedAt": "2025-02-20T16:45:39Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Ok, I have amended the wording now, and I am doing a scan to make sure I didn't miss anything. Please check.",
              "createdAt": "2025-02-20T16:45:39Z",
              "updatedAt": "2025-02-20T16:45:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c0e0h",
          "commit": {
            "abbreviatedOid": "c747e3a"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-20T19:59:54Z",
          "updatedAt": "2025-02-20T19:59:54Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nA Transparency Service may receive a Signed Statement with content in the unprotected header; however, when writing the Verifiable Data Structure, the unprotected header of the Signed Statement MUST replaced with an empty unprotected header.\r\n```",
              "createdAt": "2025-02-20T19:59:54Z",
              "updatedAt": "2025-02-20T19:59:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c29e7",
          "commit": {
            "abbreviatedOid": "c747e3a"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T02:08:52Z",
          "updatedAt": "2025-02-21T02:08:53Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Doesn't it have to be MAY?\r\n\r\n",
              "createdAt": "2025-02-21T02:08:52Z",
              "updatedAt": "2025-02-21T02:08:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c5_ac",
          "commit": {
            "abbreviatedOid": "c747e3a"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T09:09:34Z",
          "updatedAt": "2025-02-21T09:09:34Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "The rewrite is hopefully clearer, if a bit heavy. I was a little thrown off by the discussion earlier this week, but realised by skimming through that the document largely talks about \"Append-only log\" as a logical concept, and only briefly mentions VDS (from the COSE receipts draft) as an implementation mechanism. So I've aligned with that here for consistency.",
              "createdAt": "2025-02-21T09:09:34Z",
              "updatedAt": "2025-02-21T09:09:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c6Jg5",
          "commit": {
            "abbreviatedOid": "c747e3a"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T09:27:20Z",
          "updatedAt": "2025-02-21T09:27:20Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "@aj-stein my sense is that \"A Transparency Service MAY receive\" is not ideal, because it feels descriptive rather than prescriptive, and so I have rewritten this to be \"The TS MAY accept\".\r\n\r\n@aj-stein @SteveLasker can you check you are happy with the wording?",
              "createdAt": "2025-02-21T09:27:20Z",
              "updatedAt": "2025-02-21T09:27:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c8rk_",
          "commit": {
            "abbreviatedOid": "99a89c6"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T14:11:29Z",
          "updatedAt": "2025-02-21T14:11:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nHowever, the unprotected header of all Signed Statements in the Append-only log MUST be empty.\r\nA Transparency Service MUST replace the unprotected header with an empty unprotected header before inclusion in the Append-only log.\r\n```",
              "createdAt": "2025-02-21T14:11:29Z",
              "updatedAt": "2025-02-21T14:11:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6c8urr",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nWe'll address the Append-only --> VDS reference in #348 ",
          "createdAt": "2025-02-21T14:16:22Z",
          "updatedAt": "2025-02-21T14:16:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dK_Im",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-24T12:14:38Z",
          "updatedAt": "2025-02-24T12:14:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dc_YT",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T15:57:37Z",
          "updatedAt": "2025-02-25T15:57:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dc_0z",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:58:10Z",
          "updatedAt": "2025-02-25T15:58:11Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "this prevents registering receipts.... but it seems that use case is not a concern.",
              "createdAt": "2025-02-25T15:58:10Z",
              "updatedAt": "2025-02-25T15:58:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddA-Y",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T15:59:27Z",
          "updatedAt": "2025-02-25T15:59:28Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "This would eliminate verification material in the case that the MAY above was used.",
              "createdAt": "2025-02-25T15:59:27Z",
              "updatedAt": "2025-02-25T15:59:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dk0VT",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T09:03:31Z",
          "updatedAt": "2025-02-26T09:03:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Yes, this was discussed a couple of times in #321. The alternatives are:\r\n\r\n1. Include all the unprotected header in VDS, which is unappealing because its provenance and authenticity are unknown.\r\n2. Special-case individual unprotected header parameters, and/or authenticate them against separate trust anchors. There was also no appetite for going there.\r\n\r\nConversely, it is possible to support registering receipts by emitting a new signed statement that includes them in its protected header. This is obviously an extra burden, but it is perhaps acceptable considering the unknown importance of this scenario in actual usage.\r\n\r\nI think it would be nice to let the registration policy perform separate authentication/verification of unprotected header parameters, and mark them for selective inclusion in the VDS, along with what's authenticated against the issuer identity. But it's something we prototyped, and it's fiddly with existing CBOR implementations, because of canonical encoding issues, and it does complicate the user story for proof verification a fair bit too. This seems like a good baseline, which we can revisit when we have solid implementations of something better.",
              "createdAt": "2025-02-26T09:03:31Z",
              "updatedAt": "2025-02-26T09:03:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dk270",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T09:06:56Z",
          "updatedAt": "2025-02-26T09:06:56Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Eliminate is a strong word, but it definitely prevents their inclusion in the VDS. Implementers have two options though: store the full Signed Statement in an Adjacent Service (which is what @robinbryce @JAG-UK and @SteveLasker are doing, as I understand it), or refuse to consider the unprotected header during verification/registration (the route we are taking for now).",
              "createdAt": "2025-02-26T09:06:56Z",
              "updatedAt": "2025-02-26T09:06:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dstTI",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T19:58:18Z",
          "updatedAt": "2025-02-26T19:58:19Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Yes, DataTrails does provide an \"Ancillary Evidentiary Store\", which stores the signed statement, as submitted. This was the point highlighted [here](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/349#discussion_r1962366224).\r\nI don't really see this as a problem, as the unprotected header, clearly states its unprotected. It's a property bag for extra stuff, that must not be trusted. But, it can be useful to find trustworthy stuff, that must be verified. \r\nI think we've discussed this in a loop. The important aspect is the \"Service\" through SCRAPI MUST be able to accept a signed statement with an unprotected header, so that it can be saved. \r\nFor consistency of creating proofs and verifying them, the unprotected header MUST be nill, otherwise there's no stability. ",
              "createdAt": "2025-02-26T19:58:18Z",
              "updatedAt": "2025-02-26T19:58:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dstuI",
          "commit": {
            "abbreviatedOid": "00d75d2"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T19:59:10Z",
          "updatedAt": "2025-02-26T19:59:10Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "This is also a closed PR. If someone believes this needs to be revised, please open a new issue or PR as continued comments on closed PRs/Issues are isolated audiences. ",
              "createdAt": "2025-02-26T19:59:10Z",
              "updatedAt": "2025-02-26T19:59:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 350,
      "id": "PR_kwDOIvmHss6MVPvC",
      "title": "Reference Cleanup",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/350",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Remove dangling references, left behind from updated PRs",
      "createdAt": "2025-02-24T18:01:50Z",
      "updatedAt": "2025-02-25T15:51:38Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "711bb2ccf3f470655f7ebd636b69af5725985d84",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/ref-cleanup",
      "headRefOid": "eaf438bbc33348a5e0ef9e9b130e49c201f82088",
      "closedAt": "2025-02-25T15:51:38Z",
      "mergedAt": "2025-02-25T15:51:38Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "496087dda7926f079bad92294bf5953f29fde42f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6dXN77",
          "commit": {
            "abbreviatedOid": "eaf438b"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T08:38:11Z",
          "updatedAt": "2025-02-25T08:38:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 351,
      "id": "PR_kwDOIvmHss6MVly3",
      "title": "Replace Append-only with Verifiable Data Structure",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/351",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #348 ",
      "createdAt": "2025-02-24T18:49:55Z",
      "updatedAt": "2025-02-28T16:51:34Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "8c12eaa4811f66d03769669a6d7e10725925fdb7",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "issure-348",
      "headRefOid": "d4f9e719bd00705e2734d3d9251443638e4b6296",
      "closedAt": "2025-02-28T16:47:17Z",
      "mergedAt": "2025-02-28T16:47:17Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "4172484fc6ed2aa10de263da9c8f718601acbb87"
      },
      "comments": [
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "I disagree with this change, the central artefact that a TS constructs and maintains is an Append-only Log, with full entries including Signed Statements and Registration Policies.\r\n\r\nThe VDS/Merkle Tree used to ensure the integrity of the Log and issue proofs of inclusion/consistency is only a mechanism, and is not a substitute for the Log itself. An auditor with only the Log can typically reconstruct the VDS, and perform a full audit of the service.\r\n\r\nAn auditor with only the tree can only check inclusion/consistency of their own entries, but nothing more. It cannot know what else was included, nor replay registration decision to confirm their validity. I don't oppose mentioning the VDS where appropriate, but I oppose this wholesale replacement.",
          "createdAt": "2025-02-25T08:59:25Z",
          "updatedAt": "2025-02-25T08:59:25Z"
        },
        {
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "body": "Not sure why are we tinkering with basic terminologies at this stage, what is the need for this change???",
          "createdAt": "2025-02-25T09:42:07Z",
          "updatedAt": "2025-02-25T09:42:07Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree with the introduction of VDS as an explicit item. I think this directly addresses confusion about \"what is in the log\", by isolating the component that supports proofs of inclusion and consistency.\r\n\r\n> I disagree with this change, the central artefact that a TS constructs and maintains is an Append-only Log, with full entries including Signed Statements and Registration Policies.\r\n\r\nI have, until this point seen things that are not in the VDS as being in just \"log data\" held in adjacent services. Not necessarily public, and potentially contaning *more* that signed statement.\r\n\r\nHow the TS makes statements available after registration for audit is its business isn't it ? The arch has an opinion about what statements are and that they are auditable once obtained. I did not think it had an opinion about how those were made available for auditors.\r\n\r\n> The VDS/Merkle Tree used to ensure the integrity of the Log and issue proofs of inclusion/consistency is only a mechanism, and is not a substitute for the Log itself. An auditor with only the Log can typically reconstruct the VDS, and perform a full audit of the service.\r\n\r\nI don't think that follows.\r\n\r\nThe VDS/Merkle tree is authorative with respect to the data. If its not commited by the vds it is not in the log. The \"append only log\" as discussed is just another private database without it.\r\n\r\nThings I think are un-controversial:\r\n\r\n1. How data is made availabile for audit is not in scope. Mainly because use cases for transparency logs, particularly general public vs private are so diverse.\r\n3. What we have now, with signed statements and transparent statements is sufficient to satisfy \"interoperable auditability\" *to parties that can legitemately obtain the data*.\r\n\r\nTHis is possibly controversial ?\r\n\r\n3. Separating VDS from \"append only log\"/\"adjacent services\" makes it clear the TS can deal separately with availability of auditable material  committed by the VDS.\r\n\r\n\r\n> I don't oppose mentioning the VDS where appropriate, but I oppose this wholesale replacement.\r\n\r\nYeah I agree with that, I think whole sale replacement just keeps the original confusion under a different name.\r\n",
          "createdAt": "2025-02-25T11:20:47Z",
          "updatedAt": "2025-02-25T11:21:50Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@robinbryce:\r\n> I agree with the introduction of VDS as an explicit item. \r\n\r\nas I mentioned above:\r\n\r\n> I don't oppose mentioning the VDS where appropriate, but I oppose this wholesale replacement.\r\n\r\nI think we agree in principle, let's try to find the places where it's useful to mention the VDS?\r\n\r\n@robinbryce:\r\n> The VDS/Merkle tree is authoritative with respect to the data. If its not commited by the vds it is not in the log. The \"append only log\" as discussed is just another private database without it.\r\n\r\nI (mostly) agree with that (not sure why private), but I do believe it is possible to recreate the VDS from the log, and not the other way around. If I am an auditor with the log and some receipts, I can verify a lot more things that if I just have the VDS and some receipts, because other than checking if forks took place, I can check if entries were *legitimately* registered.\r\n\r\nIt's certainly possible to keep log entries separately from the VDS, and as you rightly say, how they are provided to auditors is out of scope. But it's equally possible to implement a service that never materialises the full VDS either, and only constructs and signs what's necessary on demand.\r\n\r\nCan we identify the locations in the document where mentioning the VDS explicitly creates clarity and adds value?",
          "createdAt": "2025-02-25T13:09:37Z",
          "updatedAt": "2025-02-25T13:09:37Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> I (mostly) agree with that (not sure why private),\r\n\r\nWhen I say public or private here I mean with respect to the signed statements registered on the TS. For a system like certificate transprancy, then all signed statements would be available to the general public. For other systems, the signed statements may be confidential and it is the responsibility of the TS to keep them so. How auditors get material for auditing is then different.\r\n\r\n> but I do believe it is possible to recreate the VDS from the log, and not the other way around. \r\n\r\nYep.\r\n\r\n> If I am an auditor with the log and some receipts, I can verify a lot more things that if I just have the VDS and some receipts, because other than checking if forks took place, I can check if entries were _legitimately_ registered.\r\n> \r\n> It's certainly possible to keep log entries separately from the VDS, and as you rightly say, how they are provided to auditors is out of scope. \r\n\r\nYep, I don't think we disagree here at all. \r\n\r\n> But it's equally possible to implement a service that never materialises the full VDS either, and only constructs and signs what's necessary on demand.\r\n\r\nYes, and this changes the choices with respect to split view protection, trusted hardware, consensus etc. And thats fine, horses/courses\r\n\r\n\r\n> Can we identify the locations in the document where mentioning the VDS explicitly creates clarity and adds value?\r\n\r\nthumbs up",
          "createdAt": "2025-02-25T16:54:53Z",
          "updatedAt": "2025-02-25T17:53:39Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\nIn case it helps, how we have done it:\r\n\r\n> - Is an Append Only Log defined as a VDS + Adjacent Storage? \r\n\r\nOurs is built that way.\r\n\r\n> - Where is registration time recorded (in VDS or Append Only Log? ). \r\n\r\nThe VDS [1]\r\n\r\n> - Is time based linearity a property that all VDS must have in order for SCITT to be applicable?\r\n\r\n We provide this [1]\r\n\r\n> - Is immutability a property that all VDS must have in order for SCITT to be applicable?. \r\n\r\nWe call this tamper evident in our technical material - see next.\r\n\r\n> - Is consistency  / non equivocation a property of the TS / Log or the VDS, or specific implementations of VDS?\r\n\r\nWe think so, but we have found there is legitemate nuance in precisely how this is accomlished that don't seem to be absoloutely better/worse. \r\n\r\n1. on time, we record what the cloud vendor clocks say. We do \"pause\" operations if the clock massively changes",
          "createdAt": "2025-02-25T17:13:05Z",
          "updatedAt": "2025-02-25T17:13:05Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I've reviewed and committed many of the suggestions. Thank you @achamayou and @robinbryce. The remaining aren't as clear how resolve. Please see the comments, make suggestive text, or we can defer to our next call. \r\n\r\n> Why did we move forward with this PR, which captures issue #351?\r\n\r\nIn the editors call (either this week or prior), it was proposed to replace Append-only Log with Verifiable Data Structure. It was intended to be a replacement of the term, while maintaining a reference to Append-only as it speaks to a higher level concept.\r\n\r\nAside from the debate of Append-only compared to VDS, what's really surfaced in the PR discussion is a separation of an additional concept.\r\n\r\nWe have been discussing two layers:\r\n1. An implementation accepts Signed Statements, and MAY store the complete contents of the Signed Statement in an adjacent Evidenturary store. \r\n2. SCITT Defines storing cryptographic proofs of that statement on \"the Append-only Log\", which stores a \"Verifiable Data Structure\". \r\n\r\nI don't believe it was well understood the Append-only Log is two things, rather the log is made up of verifiable data structure(s).\r\nOr, there's confusion where the Signed Statement is stored, in relation to the Append-only Log/VDS.\r\nSee: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/349#discussion_r1962366224 for discussion on the layering\r\n<img src=\"https://private-user-images.githubusercontent.com/7647382/414901840-f5bedfea-c2b9-45e4-ab08-520e596153ea.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDA2MTM5MzYsIm5iZiI6MTc0MDYxMzYzNiwicGF0aCI6Ii83NjQ3MzgyLzQxNDkwMTg0MC1mNWJlZGZlYS1jMmI5LTQ1ZTQtYWIwOC01MjBlNTk2MTUzZWEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDIyNiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAyMjZUMjM0NzE2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTQwMTg5Y2M3NjNlMWYxMGU3NmE5MzFiZTBjYjBlMWNmYzg1NGY3MGY0MzlmMmI2NGU4OTE3NzdmN2EyMTk4ZCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.QoYZbRUzTfehs-zCujMQg_k3hzb1BwNWZVM7iEgSc9o\">\r\n\r\nThe PR comments suggest we should articulate these as separate concepts. \r\nWhile we're trying to focus on \"less is more\", it may be important to explain these, as this was the intent of #335, which we closed. However, we still have #329 \r\n\r\nWe should agree if we're:\r\n1. Replacing the term Append-only with Verifiable Data Structure\r\n2. Leaving it as Append-only Log, and ignoring the questions of separation in #329 \r\n3. Expand on the Append-only Log and Verifiable Data Structures as defined in [COSE Receipts](https://datatracker.ietf.org/doc/draft-ietf-cose-merkle-tree-proofs/)\r\n",
          "createdAt": "2025-02-26T23:59:20Z",
          "updatedAt": "2025-02-26T23:59:20Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "If we can't replace append only log with verifiable data structure, we should adjust the text anywhere that is a problem, since it indicates that the receipt is coming from a system which is not fully described in COSE receipts.\n\nAfter we've solved that problem, the terms VDS and append only log are interchangable... And I don't care which we use.\n\nAs a side note:\n\nThe details of the internal storage of VDS are out of scope for the architecture, since we don't require a specific VDS.\n\nAll we need to do is talk about what goes in (signed statements) and what comes out (receipts).\n\nAdjacent services are not a requirement.\n\nThis means that it's perfectly valid to only store tiles (and call the set of tiles stored the log).\n\nAnyone with the tiles can prove the log is constructed correctly, and anyone with a signed statement, can tell if that statement is in the log.\n\nBut storing signed statements or receipts is not required to implement a transparency service.\n\nThe only thing a TS needs to operate is:\n\n1. The VDS it uses to produce receipts.\n2. A registration policy\n3. Verification keys for issuers \n4. Signing capability to issue receipts \n\n\n\n\n\n\n\n\n\n",
          "createdAt": "2025-02-27T02:26:38Z",
          "updatedAt": "2025-02-27T02:33:43Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I would add:\r\n5. An agent to enforce registration policy rules",
          "createdAt": "2025-02-27T12:06:42Z",
          "updatedAt": "2025-02-27T12:06:42Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> But storing signed statements or receipts is not required to implement a transparency service.\r\n\r\nI particularly support this point\r\n\r\n> If we can't replace append only log with verifiable data structure, we should adjust the text anywhere that is a problem, since it indicates that the receipt is coming from a system which is not fully described in COSE receipts.\r\n\r\nIf we replace \"append only\" with \"verifiable data structure\", do we actually require the \"append only\" property of the VDS in CoMETER ? I thought not. If we need that property where is it asserted ?\r\n\r\nIf we don't require it of the VDS its not provable in any meaningful sense I can see OR the bit of the arch that has \"append only\" is underspecified.",
          "createdAt": "2025-02-27T12:36:41Z",
          "updatedAt": "2025-02-27T12:36:41Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "The evidence stored in an immutable data store needs to be sufficient to prove that registration policies were followed in order to be a trustworthy registration/transparency service in the eyes of consumers of registration data/signed statements and their accompanying payloads, i.e. SBOM's VDR's etc.",
          "createdAt": "2025-02-27T12:48:23Z",
          "updatedAt": "2025-02-27T12:48:23Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> The evidence stored in an immutable data store needs to be sufficient to prove that registration policies were followed in order to be a trustworthy registration/transparency service in the eyes of consumers of registration data/signed statements and their accompanying payloads, i.e. SBOM's VDR's etc.\r\n\r\nI am close to this point, but I see no reason to require the TS to store the evidence. What matters is that it can be available to auditors and that they can handle it interoperably.\r\n\r\nThis ensures that widely distributed, potentially fully decentralized, storage of the evidentiary data remains a natural fit. And it also admits more prosaic cases where a log has just been replicated by some 3rd party and so remains useful and provable even if the TS vendor has gone away.\r\n\r\n> be sufficient to prove that registration policies were followed in order to be a trustworthy registration/transparency service in the eyes of consumers\r\n\r\nI don't think this hair split is at odds with this ?",
          "createdAt": "2025-02-27T13:05:04Z",
          "updatedAt": "2025-02-27T13:05:04Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13:\r\n\r\n> Anyone with the tiles can prove the log is constructed correctly, and anyone with a signed statement, can tell if that statement is in the log.\r\n> [...]\r\n> The only thing a TS needs to operate is:\r\n> [...]\r\n> A registration policy\r\n> [...] Verification keys for issuers\r\n\r\nThese statements are incompatible, there is no way to check if the log is constructed correctly with just tiles of digests, because _correctly_ includes checking the verification and registration policy passed. And there is no checking that without the signed statements.\r\n\r\nThe notion that it's quite alright for the TS to act maliciously so long as it is self-consistent is not acceptable to me. Neither is the complete exclusion of storage of that evidence, which _must_ be there if a useful audit is to be performed, _particularly_ in the case when an inconsistency is detected!\r\n\r\nThe operator of the TS must store the evidence and it make available to auditors for the TS to be completely useful, one way or another. No meaningful audit can be conducted without it.",
          "createdAt": "2025-02-27T13:59:01Z",
          "updatedAt": "2025-02-27T13:59:01Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "100% agree with @achamayou \"The operator of the TS must store the evidence and it make available to auditors for the TS to be completely useful, one way or another. No meaningful audit can be conducted without it.\"\r\n\r\nAND, the evidence that is stored enables a party, such as an auditor, to verify that the TS Operator is following Registration Policies declared by the Registry operator.",
          "createdAt": "2025-02-27T14:03:07Z",
          "updatedAt": "2025-02-27T14:03:07Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> 100% agree with @achamayou \"The operator of the TS must store the evidence and it make available to auditors for the TS to be completely useful, one way or another. No meaningful audit can be conducted without it.\"\r\n> \r\n> AND, the evidence that is stored enables a party, such as an auditor, to verify that the TS Operator is following Registration Policies declared by the Registry operator.\r\n\r\nWe are conflating availability with storage locality and responsibility. They are not the same thing.",
          "createdAt": "2025-02-27T14:10:28Z",
          "updatedAt": "2025-02-27T14:10:28Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not concerned with modularity of functions or implementation practices.\r\n\r\nI'm asserting that SCITT MUST have a verifiable, high integrity process that ensure trustworthiness of the materials available within the \"Trust Registry\". Do whatever it takes to ensure that the SCITT process implements policies and practices that will ensure the data contained in the registry is trustworthy and auditable/verifiable as trustworthy.",
          "createdAt": "2025-02-27T14:16:20Z",
          "updatedAt": "2025-02-27T14:16:20Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> We are conflating availability with storage locality and responsibility. They are not the same thing.\r\n\r\nI am not conflating them, I understand they are different things. I am saying that the operator must do _both_ to provide a full implementation of SCITT. An operator that does not do that provides a log-consistency service certainly, but I falls substantially short of the Integrity and Trust components of SCITT in my view.\r\n\r\nExactly how the operator stores and makes enough information available for an audit is an implementation choice, naturally.",
          "createdAt": "2025-02-27T14:29:37Z",
          "updatedAt": "2025-02-27T14:29:37Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm not concerned with modularity of functions or implementation practices.\r\n> \r\n> I'm asserting that SCITT MUST have a verifiable, high integrity process that ensure trustworthiness of the materials available within the \"Trust Registry\". Do whatever it takes to ensure that the SCITT process implements policies and practices that will ensure the data contained in the registry is trustworthy and auditable/verifiable as trustworthy.\r\n\r\nThere is no reason whatsover for SCITT to require the Trust Registry to retain or store the data.\r\n\r\nI can completely get behind this:\r\n\r\nSCITT MUST have a verifiable, high integrity process that ensure trustworthiness of the materials regsitered with the \"Trust Registry\"\r\n\r\nIf the process is verifiable, then where the data provided to the auditors comes from is irelevant. I believe this strengthens scitt and also does not prevent TS's that *want* to couple data storage and verifiability from doing their thing.",
          "createdAt": "2025-02-27T14:34:25Z",
          "updatedAt": "2025-02-27T14:34:25Z"
        },
        {
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "body": "100% agree with this \"Exactly how the operator stores and makes enough information available for an audit is an implementation choice, naturally.\"\r\n\r\nOur job is to ensure that SCITT represents an implementable and verifiable \"Trust Registry\" capability so that people using data supplied from a SCITT Trust Registry can be assured that the information is trustworthy, just like a \"Registry of Deeds\" or Land Records data are considered trustworthy when provided by the Registry. .",
          "createdAt": "2025-02-27T14:47:07Z",
          "updatedAt": "2025-02-27T14:47:07Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@robinbryce I think we are stuck on _verifiable_, and specifically over what is verifiable :)\r\n\r\nOne could argue that only non-equivocation is in scope, it's the thing that's easiest to make verifiable in a distributed manner, and so that's what the TS should do, no more, no less. This my understanding of your position, please forgive and correct any mistake here.\r\n\r\nOne could also argue that the correctness of entry registration is also in scope. I think that's been the spirit of the draft so far. Registration is not just a DoS mitigation measure, it's a valuable step that TS can perform to authenticate certain claims (issuer, subject etc) and upon which Relying Parties may depend ultimately depend on. A TS that dishonestly registers a statement about a subject may cause greater damage than a TS that accidentally but honestly forks. And so that needs to be verifiable as well, at least to auditors. That is my view, and if I understand correctly, @rjb4standards's too.\r\n\r\nHave I got this right?",
          "createdAt": "2025-02-27T15:00:15Z",
          "updatedAt": "2025-02-27T15:00:15Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "If \"consistency\" means \"checking that a registration policy has been applied correctly\"... then... you needs the VDS and all the signed statements, and the registration policy, and the issuer verification keys.\r\n\r\nThen, you can go back to the beginning of time, and check that each statement was registered in accordance with the registration policy, from the beginning of time to the head of the log (assuming the log is a VDS that supports linear ordering of records).\r\n\r\nIn order to apply a registration policy, you need the policy, any keys it requires for any signed statements it covers, and a VDS to use to produce a receipt.\r\n\r\nIf consistency means \"ensuring that 2 VDS are equivalent when they contain the same records\", you only need the VDS algorithm \"CCF / CT Log\", and the input set of records... additionally, some VDS might enable you to prove the append only property of the VDS (this is what the consistency proof in COSE Receipts does).\r\n\r\nIn my mental model, proving consistency of a VDS does not require anything other than the VDS and the algorithm used to produce it.\r\n\r\nIf folks have a mental model where the \"Append Only Log\" can only be shown to be consistent with the availability of information that is not in the VDS, then the \"Append Only Log\" is not a VDS.... and we need to make sure it is defined sufficiently well, to ensure interop.\r\n\r\nTo date, SCITT has not had a \"well formed\" definition of consistency, for example we don't define any meaningful use of the consistency proof receipt type which is defined in COSE Receipts.\r\n\r\nInstead, we have relied mostly on \"consistency properties that an insider would have\", such as \"full read access to adjacent services, issuer verification keys, registration policies (and their update order)\", etc...\r\n\r\nI think thats why this PR has been triggering.\r\n\r\nIf consistency of an append only log, is different than consistency of a verifiable data structure, we do have a terminology problem that needs to be addressed, because the ambiguity has an impact on both interop and security.\r\n\r\nI don't think its hard to solve though... If we can't replace append only log with VDS, we only need to define append only log in terms of VDS + adjacent services, and we should be good.\r\n\r\n",
          "createdAt": "2025-02-27T15:24:17Z",
          "updatedAt": "2025-02-27T15:24:17Z"
        },
        {
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "body": "> Registration is not just a DoS mitigation measure, it's a valuable step that TS can perform to authenticate certain claims (issuer, subject etc) and upon which Relying Parties may depend ultimately depend on\r\n\r\nI'm totally fine with this\r\n\r\nMy understanding of how people intend to use sophisticated registration statements is that they would themselves be signed statements and also registered. \r\n\r\nThis makes them verifiably \"in the log\" by the implementation selected VDS\r\n\r\nThey are auditably *included in the VDS* by anyone with the statement that encodes the policy\r\n\r\nThis leaves the very TS/registration policy specific matter of \"asuring the policy was applied faithfully\". If the Auditor can do that independently then the policy statements and receipts and so on must be sufficient to do this. And such auditors would have to fetch any remote material and reconcile the various problems that entails.\r\n\r\nFor TS's based on simple (or empty) registration policies the Auditor just needs them to be available\r\n\r\nIn either case, if the registration is verifiable (by the VDS) I don't understand why SCITT would care where those statements were sourced from.\r\n\r\nBy taking care to exclude implications of storage location and retention from the arcitecture and focusing on \"verifiable registration\" I believe we enable better answers *for some implementations* to questions like:\r\n\r\n* What happens when data goes end of life ?\r\n* What happens to the relying parties if the TS goes of line ?\r\n* How do you get scalability of audit if a full audit requires interaction with the TS ?\r\n\r\nAnd I agree with @OR13 I don't think we are really super far appart. My slight re-wording of @rjb4standards statement\r\n\r\n\"SCITT MUST have a verifiable, high integrity process that ensure trustworthiness of the materials regsitered with the \"Trust Registry\"\"\r\n\r\nWas meant to show all thats triggering me are mentions of \"storage\" and \"data supplied\".\r\n\r\nFor my part, if we can focus on verifiable registration in the bigger picture statements whilst avoiding implication that security assumptions require the TS to store and retain data I am fine",
          "createdAt": "2025-02-27T15:35:16Z",
          "updatedAt": "2025-02-27T15:35:16Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Something to consider:\r\nIs there an option to split this up:\r\n\r\n1. Rename Append-only Log to Verifiable Data Structure (view the changes with comments off to see how this looks)\r\n2. Complete #329 as a separate PR?",
          "createdAt": "2025-02-27T20:16:05Z",
          "updatedAt": "2025-02-27T20:16:05Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "@SteveLasker I did one more pass, following a very constructive discussion with @robinbryce, please review. I think there may be instances of \"Append-only Log\" left though, and I have a proposed a way to talk about what some of us understood to be the log as the \"Registered Sequence of Signed Statement\", which I think we can use instead, for example when describing audit.",
          "createdAt": "2025-02-28T13:29:15Z",
          "updatedAt": "2025-02-28T13:29:24Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> My understanding of how people intend to use sophisticated registration statements is that they would themselves be signed statements and also registered.\r\n> \r\n> This makes them verifiably \"in the log\" by the implementation selected VDS\r\n> \r\n> They are auditably _included in the VDS_ by anyone with the statement that encodes the policy\r\n\r\n100% yes. I think this detail is at the root of all the difficult parts of this PR discussion.\r\n\r\nFor regular data, including Signed Statements or the Artifacts to which they refer, there is no need to maintain any distinction between an amend-only log in this document as any different to any of the options for VDS implementations in COSE Receipts. \r\n\r\nWhile I very strongly agree with Dick that a whole system that makes use of SCITT and SCRAPI needs to usefully connect real-world data with their provable origins, the discussion on the layer at hand is irrelevant to that. Indeed it's _helpful_ to not address such storage directly here because for some use cases it'll be ideal for an adjacent service of the TS to also store the inputs, decorate them, provide audit capabilities etc...but down at the level of registration we must not make that *required* as it breaks other equally useful configurations, such as the case where the TS NEVER gets to see the actual Artefact, and doesn't keep the Signed Statements, but it's still very useful for detecting tampering or avoiding non-repudiation in supply chains where someone already has the thing in their hands and needs to check that what they have refers to the right thing and it stood behind by whoever they got it from. Or the case where auditors keep hold of copies of things for added independence. And as Robin says, with distributed copies of the VDS this can be achieved long after the original log operator and all its adjacent services goes away.\r\n\r\nSo then, why cling to the Registration Policy as the major point of contention? Because that\u2019s the one case under discussion where the actual data to be verified necessary originates with and comes from the Transparency Service. And then also because proving complete application of these nebulous policy-layer configurations was actually done\u2026but that\u2019s by the by and not for this PR (or any any time soon IMO).\r\n\r\nWe came up with an elegant* solution to this way back at IETF 118. It supported querying of current and past registration policies, holds the TS accountable to such policies by also registering them on the VDS, and explicitly recorded which policy had been applied to a given Registered Signed Statement in the Transparent Statement itself. And because the Registration Policies are cacheable and distributable, they then get to benefit from the same flexible distributed, surviving-the-TS-going-away-or-becoming-hostile properties that regular Signed Statements do. \r\n\r\nThis is what Robin is referring to and I think it\u2019s absolutely right.\r\n\r\n * I am not ruling out the possibility that the solution is also simple and wrong. But that\u2019s not been demonstrated so far. I do fear however that the streamlining of definitions the area of \u2018Transparent Statement\u2019 may have trespassed against this.\r\n",
          "createdAt": "2025-02-28T14:33:00Z",
          "updatedAt": "2025-02-28T14:38:17Z"
        },
        {
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "body": "> We came up with an elegant* solution to this way back at IETF 118. It supported querying of current and past registration policies, holds the TS accountable to such policies by also registering them on the VDS, and explicitly recorded which policy had been applied to a given Registered Signed Statement in the Transparent Statement itself. And because the Registration Policies are cacheable and distributable, they then get to benefit from the same flexible distributed, surviving-the-TS-going-away-or-becoming-hostile properties that regular Signed Statements do.\r\n\r\nI am not sure how this allows checking that the TS applied the _right_ policy, as opposed any _transparent and past_ policy, to a statement. But I suspect this PR is entirely the wrong place to have this discussion :)",
          "createdAt": "2025-02-28T14:48:54Z",
          "updatedAt": "2025-02-28T14:48:54Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> the right policy, as opposed any transparent and past policy\r\n\r\nThere are answers to that but...\r\n\r\n> I suspect this PR is entirely the wrong place to have this discussion :)\r\n\r\nAs ever your suspicions are well founded :-)",
          "createdAt": "2025-02-28T14:55:48Z",
          "updatedAt": "2025-02-28T14:55:48Z"
        },
        {
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> As ever your suspicions are well founded :-)\r\n\r\nI have been quietly watching this PR and have been a little confused as to where it is going. I actually intended to start a thread on the mailing list. \r\n\r\nNot to pile on, but I don't want to be wordy repeat other meaningful explanations from others. This one sticks out to me.\r\n\r\nhttps://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/351#discussion_r1970114280\r\n\r\nWhat is the goal we are trying to solve with this edit? It seems we want to discuss micro-level details in a macro-level architecture document. Others have, rightfully on that front, pushed back on proposals I made (can't speak for others) about the right level of granularity, and I appreciated not having such a proposal merged.\r\n\r\nHas anyone posted to the list to ask if anyone in the WG outside the editors of this PR see the changes as valuable and clarifying the mechanics of a TS?\r\n",
          "createdAt": "2025-02-28T16:30:52Z",
          "updatedAt": "2025-02-28T16:31:06Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> > As ever your suspicions are well founded :-)\r\n> \r\n> I have been quietly watching this PR and have been a little confused as to where it is going. I actually intended to start a thread on the mailing list.\r\n> \r\n> Not to pile on, but I don't want to be wordy repeat other meaningful explanations from others. This one sticks out to me.\r\n> \r\n> [#351 (comment)](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/351#discussion_r1970114280)\r\n> \r\n> What is the goal we are trying to solve with this edit? It seems we want to discuss micro-level details in a macro-level architecture document. Others have, rightfully on that front, pushed back on proposals I made (can't speak for others) about the right level of granularity, and I appreciated not having such a proposal merged.\r\n> \r\n> Has anyone posted to the list to ask if anyone in the WG outside the editors of this PR see the changes as valuable and clarifying the mechanics of a TS?\r\n\r\nThe base intent was to highlight that:\r\n* there is no \"content of logged statement\" in the \"log\" so maybe we should not call it log\r\n* a VDS is not necessarily an append-only structure\r\n\r\nSo we need a set of named words that stage terms to the extend of (this is not good enough yet): VDS -> append-only VDS AND have to make clear this is not a log of statements.",
          "createdAt": "2025-02-28T16:51:33Z",
          "updatedAt": "2025-02-28T16:51:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6dQg4c",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:20:16Z",
          "updatedAt": "2025-02-24T20:20:17Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n: a state where it is possible for a Transparency Service to provide different Verifiable Data Structures to Relying Parties about the same Artifact {{EQUIVOCATION}}.\r\n```",
              "createdAt": "2025-02-24T20:20:17Z",
              "updatedAt": "2025-02-24T20:20:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQhX5",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:21:23Z",
          "updatedAt": "2025-02-24T20:21:24Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "\"A sequence of entries captured by a Verifiable Data Structure\"? The log isn't itself a VDS, right?",
              "createdAt": "2025-02-24T20:21:23Z",
              "updatedAt": "2025-02-24T20:21:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQhom",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:21:58Z",
          "updatedAt": "2025-02-24T20:21:59Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "see Verifiable Data Proof? Link to the COSE receipt draft?",
              "createdAt": "2025-02-24T20:21:58Z",
              "updatedAt": "2025-02-24T20:21:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQhwf",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:22:15Z",
          "updatedAt": "2025-02-24T20:22:15Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n: a state where it is impossible for a Transparency Service to provide different Verifiable Data Structures to Relying Parties about the same Artifact.\r\n```",
              "createdAt": "2025-02-24T20:22:15Z",
              "updatedAt": "2025-02-24T20:22:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQiLO",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:23:13Z",
          "updatedAt": "2025-02-24T20:23:13Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I think this should be Signed Statement rather than Artifact?",
              "createdAt": "2025-02-24T20:23:13Z",
              "updatedAt": "2025-02-24T20:23:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQirz",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:24:21Z",
          "updatedAt": "2025-02-24T20:24:21Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n: an entity that decides a Registered Sequence of Signed Statements by committing them to a Verifiable Data Structure, and endorses the state of that Structure.\r\n```\r\n\r\nAnother attempt, a bit heavy maybe, but with a hopefully clearer distinction between the statements and the VDS?",
              "createdAt": "2025-02-24T20:24:21Z",
              "updatedAt": "2025-02-28T12:55:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQjKO",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:25:23Z",
          "updatedAt": "2025-02-24T20:25:23Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nA Transparency Service can be a complex system, requiring the Transparency Service to provide many security guarantees about its Append-only Log.\r\n```\r\n\r\nI think the useful end guarantee is about the log and its entries, the VDS is the mechanism used to implement the guarantees.",
              "createdAt": "2025-02-24T20:25:23Z",
              "updatedAt": "2025-02-24T20:25:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQj3m",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:26:50Z",
          "updatedAt": "2025-02-24T20:26:50Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nMay be referenced as an Append-only log, indicating its immutable nature.\r\n```\r\n\r\nI don't think this is right, VDS != log.",
              "createdAt": "2025-02-24T20:26:50Z",
              "updatedAt": "2025-02-24T20:26:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dQkEc",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-24T20:27:17Z",
          "updatedAt": "2025-02-24T20:27:18Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "```suggestion\r\nReceipts demonstrate inclusion of Signed Statements in the Append-only Log of a Transparency Service.\r\n```",
              "createdAt": "2025-02-24T20:27:17Z",
              "updatedAt": "2025-02-24T20:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dS_45",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T02:43:52Z",
          "updatedAt": "2025-02-25T02:43:52Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "@achamayou, Could you make a suggestion? ",
              "createdAt": "2025-02-25T02:43:52Z",
              "updatedAt": "2025-02-25T02:43:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dTAPL",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T02:45:18Z",
          "updatedAt": "2025-02-25T02:45:19Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n: a cryptographic proof that a Signed Statement is included in the Verifiable Data Structure.\r\nSee {{-COMETRE}} for implementations",
              "createdAt": "2025-02-25T02:45:18Z",
              "updatedAt": "2025-02-25T02:45:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXQlA",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:40:43Z",
          "updatedAt": "2025-02-25T08:40:44Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nA sequence of Signed Statements captured by a Verifiable Data Structure.\r\n\r\n: see Verifiable Data Structure\r\n```",
              "createdAt": "2025-02-25T08:40:44Z",
              "updatedAt": "2025-02-25T08:40:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXVw4",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:47:16Z",
          "updatedAt": "2025-02-25T08:47:17Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "```suggestion\r\nImplementations of Transparency Services may protect their Append-only Log and Verifiable Data Structure using a combination of trusted hardware, consensus protocols, and cryptographic evidence.\r\n```\r\n\r\nReplication is a kind of consensus, TS implementation that provide for example the ability to fetch Transparent Statements and not just receipts will want to protect the whole log, not just a VDS. Even implementations that don't may simply derive the VDS from a protected log.",
              "createdAt": "2025-02-25T08:47:16Z",
              "updatedAt": "2025-02-25T08:47:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXX4c",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:49:40Z",
          "updatedAt": "2025-02-25T08:49:40Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "```suggestion\r\nThe Transparency Service MUST apply the Registration Policy that was most recently committed to the Verifiable Data Structure at the time of Registration.\r\n```\r\n\r\nThe VDS records only digests of entries in the log, it will contain a commitment to, but not the policy itself.",
              "createdAt": "2025-02-25T08:49:40Z",
              "updatedAt": "2025-02-26T11:27:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXYm0",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:50:50Z",
          "updatedAt": "2025-02-25T08:50:50Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "```suggestion\r\nTransparency Services MUST ensure that for any Signed Statement they register, enough information is made available to Auditors (either in the Verifiable Data Structure and the sequence of Signed Statements it captures, retrievable through audit APIs, or included in the Receipt) to reproduce the Registration checks that were defined by the Registration Policies at the time of Registration.\r\n```\r\n\r\nThe VDS is just a tree of digests in most cases, it does not directly contain the information required for audit, only commitments to that information. The log is what contains the information. ",
              "createdAt": "2025-02-25T08:50:50Z",
              "updatedAt": "2025-02-26T15:21:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXZIs",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:51:39Z",
          "updatedAt": "2025-02-25T08:51:40Z",
          "comments": [
            {
              "originalPosition": 204,
              "body": "```suggestion\r\n: there is no fork in the Registered Sequence of Signed Statements accepted by the Transparency Service and committed to the Verifiable Data Structure.\r\n```\r\n\r\nEdited yet again :)",
              "createdAt": "2025-02-25T08:51:40Z",
              "updatedAt": "2025-02-28T16:35:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXZ9F",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:52:57Z",
          "updatedAt": "2025-02-25T08:52:58Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "```suggestion\r\n: the Registered Sequence of Signed Statements includes sufficient information to enable authorized actors with access to its content to check that each data structure representing each Signed Statement has been correctly registered.\r\n```\r\n\r\nThe VDS only has digests, it does not contain enough information for an auditor to get roots of trust, registration policies etc. It's only enough to check consistency, not registration.\r\n\r\nEdited again :)",
              "createdAt": "2025-02-25T08:52:57Z",
              "updatedAt": "2025-02-28T13:04:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXaOs",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:53:27Z",
          "updatedAt": "2025-02-25T08:53:27Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "```suggestion\r\n1. **Register the Signed Statement**\r\n```",
              "createdAt": "2025-02-25T08:53:27Z",
              "updatedAt": "2025-02-28T14:45:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXaVp",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:53:39Z",
          "updatedAt": "2025-02-25T08:53:39Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "```suggestion\r\nThe last two steps may be shared between a batch of Signed Statements registered in the Append-only Log.\r\n```",
              "createdAt": "2025-02-25T08:53:39Z",
              "updatedAt": "2025-02-25T08:53:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dXaib",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T08:54:04Z",
          "updatedAt": "2025-02-25T08:54:05Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "```suggestion\r\nThe Registration time is recorded as the timestamp when the Transparency Service added the Signed Statement to its Append-only Log.\r\n```",
              "createdAt": "2025-02-25T08:54:04Z",
              "updatedAt": "2025-02-25T08:54:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddB-A",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:00:46Z",
          "updatedAt": "2025-02-25T16:00:46Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "in the context of \"COSE Receipts\"... the thing that records the entries is the. \"Verifiable Data Structure\".",
              "createdAt": "2025-02-25T16:00:46Z",
              "updatedAt": "2025-02-25T16:00:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddDGe",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:02:16Z",
          "updatedAt": "2025-02-25T16:02:16Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Not sure about this, lets discuss",
              "createdAt": "2025-02-25T16:02:16Z",
              "updatedAt": "2025-02-25T16:02:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddDWk",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:02:38Z",
          "updatedAt": "2025-02-25T16:02:38Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "I don't like this.",
              "createdAt": "2025-02-25T16:02:38Z",
              "updatedAt": "2025-02-25T16:02:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddFc9",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:05:20Z",
          "updatedAt": "2025-02-25T16:05:20Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "I don't like this change, it confuses the security mechanism for receipts, with securing mechanisms for storing VDS.",
              "createdAt": "2025-02-25T16:05:20Z",
              "updatedAt": "2025-02-25T16:05:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddHTO",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:07:57Z",
          "updatedAt": "2025-02-25T16:07:57Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "Merkle trees only store digests... other stuff might store the full signed statement.\r\nDon't assume merkle trees would be my recommendation.\r\nThe important part is that the client accepts the security mechanism used by the TS... submission to a TS implies the desire to have a receipt produced from the VDS... regardless of if the VDS is a log or not.",
              "createdAt": "2025-02-25T16:07:57Z",
              "updatedAt": "2025-02-25T16:07:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddIG-",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:08:55Z",
          "updatedAt": "2025-02-25T16:08:56Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "If we want to restrict the architecture to specific VDS (CT / CCF logs), that seems like a better solution than using the word \"append only log\".",
              "createdAt": "2025-02-25T16:08:55Z",
              "updatedAt": "2025-02-25T16:08:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddJmi",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:10:23Z",
          "updatedAt": "2025-02-25T16:10:23Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "yeah, I agree the sentence is problematic.\r\n\r\nusing the word append only log does not improve it though.\r\n\r\nAn auditor needs access to adjacent storage and the VDS to perform certain security related checks (like proving correct construction).",
              "createdAt": "2025-02-25T16:10:23Z",
              "updatedAt": "2025-02-25T16:10:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddNf0",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:15:41Z",
          "updatedAt": "2025-02-25T16:15:41Z",
          "comments": [
            {
              "originalPosition": 204,
              "body": "A fork does not even make sense in the context of non linear VDS, so I agree that some change is needed here.\r\n\r\nI think a better solution would be to frame \"Non-equivocation\" in terms of the VDS that does not assume a linear log... for example:\r\n\r\nA property of certain implementations of VDS preventing conflicting statements between different processes.\r\nIn Byzantine fault tolerant systems, this property can be achieved with trusted hardware.\r\n\r\n\r\n",
              "createdAt": "2025-02-25T16:15:41Z",
              "updatedAt": "2025-02-25T16:15:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddP0w",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:17:54Z",
          "updatedAt": "2025-02-25T16:17:54Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "> It's only enough to check consistency, not registration.\r\n\r\nYou mean that in order to enforce registration policy, you need more than the VDS? \r\nYou need an adjacent service?",
              "createdAt": "2025-02-25T16:17:54Z",
              "updatedAt": "2025-02-25T16:17:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddQ29",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:18:45Z",
          "updatedAt": "2025-02-25T16:18:45Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Really don't like this.\r\nTo register a signed statement is to obtain a receipt from a VDS.... some VDS are append only log.\r\nSCITT can assert that only certain VDS are suitable for this use case.",
              "createdAt": "2025-02-25T16:18:45Z",
              "updatedAt": "2025-02-25T16:18:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddRIz",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:19:10Z",
          "updatedAt": "2025-02-25T16:19:10Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "Don't think we need this change",
              "createdAt": "2025-02-25T16:19:10Z",
              "updatedAt": "2025-02-25T16:19:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddSm2",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T16:20:34Z",
          "updatedAt": "2025-02-25T16:20:34Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "This would introduce the possibility of the VDS time and append only log time being different?\r\n... also begs the question of \"where is registration time\" recorded.",
              "createdAt": "2025-02-25T16:20:34Z",
              "updatedAt": "2025-02-25T16:20:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ddUov",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "I think overall this PR uncovered a lot of confusing terminology (so its been very helpful).\r\n\r\nWe seem to still have confusion on:\r\n\r\n- Is an Append Only Log defined as a VDS + Adjacent Storage?\r\n- Where is registration time recorded (in VDS or Append Only Log? )\r\n- Is time based linearity a property that all VDS must have in order for SCITT to be applicable?\r\n- Is immutability a property that all VDS must have in order for SCITT to be applicable?\r\n\r\nIs consistency / non equivocation a property of the TS / Log or the VDS, or specific implementations of VDS?",
          "createdAt": "2025-02-25T16:23:30Z",
          "updatedAt": "2025-02-28T16:46:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dfyFC",
          "commit": {
            "abbreviatedOid": "30de7bf"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T20:10:40Z",
          "updatedAt": "2025-02-25T20:10:41Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "@OR13, can you clarify if you support the current PR, or the suggested change?",
              "createdAt": "2025-02-25T20:10:40Z",
              "updatedAt": "2025-02-25T20:10:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dfyz3",
          "commit": {
            "abbreviatedOid": "30de7bf"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T20:12:22Z",
          "updatedAt": "2025-02-25T20:12:22Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "@OR13, please clarify which change, the PR or the suggestion. ",
              "createdAt": "2025-02-25T20:12:22Z",
              "updatedAt": "2025-02-25T20:12:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dhO7u",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T00:12:50Z",
          "updatedAt": "2025-02-26T00:12:50Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "@OR13, Can you elaborate on which you don't like? The PR change or the Suggestion?",
              "createdAt": "2025-02-26T00:12:50Z",
              "updatedAt": "2025-02-26T20:20:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dhP9m",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T00:17:15Z",
          "updatedAt": "2025-02-26T00:17:15Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "> The log is what contains the information.\r\n\r\nWhat information is on each element? For the average reader, it's not clear whether the contents of the signed statement are included in the log, within the VDS, or a cryptographic proof of the signed statement is recorded.\r\nRelated to the PII discussion, if someone stores a name or a phone number in the payload or in a header, what would it take to \"redact\" that information?\r\nIf the log only stores hashes or other cryptographic proof of the signed statement, which contains a payload, then there's nothing to actually redact.\r\nIf the TS stores the signed statements in an ancillary service, they can delete the signed statement from that external storage, and the log/vds remains intact.\r\n\r\nThe purpose of defining what actually goes into the log was meant to clarify this. ",
              "createdAt": "2025-02-26T00:17:15Z",
              "updatedAt": "2025-02-26T00:17:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dhQOZ",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T00:18:19Z",
          "updatedAt": "2025-02-26T00:18:20Z",
          "comments": [
            {
              "originalPosition": 204,
              "body": "If the existing PR or Suggestion isn't good enough, please make an alternative suggestion.",
              "createdAt": "2025-02-26T00:18:19Z",
              "updatedAt": "2025-02-26T00:18:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dhQds",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T00:19:18Z",
          "updatedAt": "2025-02-26T00:19:18Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "Is this question going beyond the change from `Append-only Log` to `Verifiable Data Structure`?",
              "createdAt": "2025-02-26T00:19:18Z",
              "updatedAt": "2025-02-26T00:19:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dhQoC",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T00:19:56Z",
          "updatedAt": "2025-02-26T00:19:56Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "@OR13, Can you please provide an alternative suggestion?",
              "createdAt": "2025-02-26T00:19:56Z",
              "updatedAt": "2025-02-26T21:11:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dlRGF",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "yogeshbdeshpande",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "This PR seems un-necessary to me! We should NOT tinker with existing terminologies and re-invent the wheel, when the Draft is going for WGLC! \r\n\r\nI checked multiple places and the concept of Verifiable Data Structure has no bearing on Transparency Services which had Append ONLY as the basic concept.\r\n\r\nWe should simply drop this PR! ",
          "createdAt": "2025-02-26T09:36:32Z",
          "updatedAt": "2025-02-28T16:46:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6dlyrk",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T10:18:06Z",
          "updatedAt": "2025-02-26T10:18:06Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n: a state where a Transparency Service provides incompatible Verifiable Data Proofs to Relying Parties, containing conflicting claims about the Signed Statement bound at a given position in the Verifiable Data Structure {{EQUIVOCATION}}.\r\n```\r\n\r\nThe service wouldn't provide the whole VDS in general, only VDPs/proofs extracted from it, so I think the practical manifestation of equivocation for observers is the presence of incompatible VPDs (which are certainly evidence of incompatible VDSs existing somewhere, but which the service will not usually provide wholesale).",
              "createdAt": "2025-02-26T10:18:06Z",
              "updatedAt": "2025-02-26T10:20:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dl2zj",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T10:23:33Z",
          "updatedAt": "2025-02-26T10:23:33Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n: a state where all Verifiable Data Proofs provided by the Transparency Service to Relying Parties are produced from a Single Verifiable Data Structure describing a unique sequence of Signed Statements, and are therefore compatible.\r\n```\r\n\r\nSimilar to the clarification above, probably a bit heavy handed, but trying to avoid stating that the VDS is provided to RPs.",
              "createdAt": "2025-02-26T10:23:33Z",
              "updatedAt": "2025-02-26T10:23:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dl4L9",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T10:25:23Z",
          "updatedAt": "2025-02-26T10:25:23Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Are we saying that the log may be maintaining by the TS itself, or by an Adjacent Service? I think that's fine, but seems like its own PR.",
              "createdAt": "2025-02-26T10:25:23Z",
              "updatedAt": "2025-02-26T10:25:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dl5y9",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T10:27:20Z",
          "updatedAt": "2025-02-26T10:27:20Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "```suggestion\r\n```\r\n\r\nThe log is the sequence of full entries, the VDS captures their digest and can be used to emit VDPs, but is not the same thing as the log itself.",
              "createdAt": "2025-02-26T10:27:20Z",
              "updatedAt": "2025-02-26T10:27:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dl6kl",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T10:28:09Z",
          "updatedAt": "2025-02-26T10:28:10Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nSCITT supports multiple Verifiable Data Structures, as defined in {{-COMETRE}}.\r\n```",
              "createdAt": "2025-02-26T10:28:09Z",
              "updatedAt": "2025-02-26T10:28:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dl8NM",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T10:30:16Z",
          "updatedAt": "2025-02-26T10:30:16Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Is Receipt just an alias for a VDP as defined in COMETRE? Should we update the definition accordingly and drop this line altogether?",
              "createdAt": "2025-02-26T10:30:16Z",
              "updatedAt": "2025-02-26T10:30:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dmdr8",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T11:16:19Z",
          "updatedAt": "2025-02-26T11:16:20Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n: a state where a Transparency Service provides inconsistent proofs to Relying Parties, containing conflicting claims about the Signed Statement bound at a given position in the Verifiable Data Structure {{EQUIVOCATION}}.\r\n```\r\nMaybe avoid introducing Verifiable Data Proofs ? I think we can reasonably just say \"proofs\" if the context is a Verifiable Data Structure\r\n\r\nAlso a nit: I think inconsistent is more accurate than \"incompatible\" especially given the other contexts interoperability and compatibility are used\r\n",
              "createdAt": "2025-02-26T11:16:19Z",
              "updatedAt": "2025-02-26T11:16:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dmfEH",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T11:18:22Z",
          "updatedAt": "2025-02-26T11:18:22Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n: a state where all proofs provided by the Transparency Service to Relying Parties are produced from a Single Verifiable Data Structure describing a unique sequence of Signed Statements, and are therefore consistent.\r\n```\r\n\r\navoid adding \"Verifiable Data Proofs\" and just rely on mention of VDS for context ?\r\nAlso the nit: compatible/consistent",
              "createdAt": "2025-02-26T11:18:22Z",
              "updatedAt": "2025-02-26T11:18:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dmj3W",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T11:25:23Z",
          "updatedAt": "2025-02-26T11:25:23Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Is a VDP defined in CoMETER? I cant find Verifiable Data Proof here https://github.com/ietf-scitt/draft-birkholz-cose-cometre-ccf-profile/blob/main/draft-birkholz-cose-receipts-ccf-profile.md\r\n\r\nI think Receipt is not an alias of VDP. It is a container for proof material that is verified against a VDS and is described by a profile of https://cose-wg.github.io/draft-ietf-cose-merkle-tree-proofs/draft-ietf-cose-merkle-tree-proofs.html such as COMETER. Should this be a reference to that instead ?",
              "createdAt": "2025-02-26T11:25:23Z",
              "updatedAt": "2025-02-26T11:25:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dmq8Z",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T11:35:58Z",
          "updatedAt": "2025-02-26T11:35:58Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "I've re-written the suggestion to use VDS, but use the word \"commit\" rather than \"add\". The VDS produces commitments to entries, but not entries themselves.\r\n\r\nI don't know what the other stuff is, CT, CCF and the MMR all use Merkle Trees. The only \"example\" ever mentioned in the COMETRE spec is Merkle Trees also. I am always happy to learn (I mean this), but at the moment I do not believe that confusing the VDS and the log of full entries is net positive.",
              "createdAt": "2025-02-26T11:35:58Z",
              "updatedAt": "2025-02-26T11:36:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnD7w",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T12:13:16Z",
          "updatedAt": "2025-02-26T12:13:16Z",
          "comments": [
            {
              "originalPosition": 176,
              "body": "@achamayou there exist production systems which use mathematical objects, rather than hashes, for the commitment scheme. \"trees of math\" can be built out of these just fine and can offer advantages in size and privacy. \r\n\r\nA more readily comparible approach to merkle trees is this one - https://math.mit.edu/research/highschool/primes/materials/2018/Kuszmaul.pdf \r\n\r\nThe minima blockchain uses a clever recursive proof to provide a constant size commitment to the entire state of their chain.\r\n\r\nThere is quite a lot of overlap with the verifiable compute and zk spaces. Nova and Halo. See this eprint for a starting example. https://eprint.iacr.org/2023/969.pdf \r\n\r\nThe intent has always been to avoid excluding these sorts of things, and we prototyped verkle's in 2023. \r\n\r\n",
              "createdAt": "2025-02-26T12:13:16Z",
              "updatedAt": "2025-02-26T12:13:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnHcd",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T12:18:51Z",
          "updatedAt": "2025-02-26T12:18:51Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "Yes. we specicically included a record of time in the VDS so that it can be authorative. We do record a time at which the ts first recieves the registration request. But we see that firmly as part of the \"adjacent service\" data schema (not scitt). \r\n\r\nWe ensure that \"time of comitment to the vds\" is consistent with the order of statements in the log and see this as very much the business of the TS and its VDS\r\n\r\nOR remove the requirement for the registration time to be recorded altogether",
              "createdAt": "2025-02-26T12:18:51Z",
              "updatedAt": "2025-02-26T12:18:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnrXo",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:07:49Z",
          "updatedAt": "2025-02-26T13:07:49Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "> If the TS stores the signed statements in an ancillary service, they can delete the signed statement from that external storage, and the log/vds remains intact.\r\n\r\nDepending on how registration policies/trust anchors are recorded, this potentially affects auditability.\r\n\r\n> the log/vds remains intact.\r\n\r\nMaybe this is a terminology issue, I see the log as the sequence of Signed Statements, and the VDS as the datastructure over their identities/digests. I don't want to get stuck on this, I am happy to talk about VDSs, and to use another name for the sequence of Signed Statements that's committed in the VDS.\r\n\r\nIf I am an auditor, and I am trying to figure out if a set of entries were legitimately registered, I need to be able to get the applicable trust anchors/policies at the time. I can't do that from a TS that only has a Merkle Tree. I think this is really important, it's not just a secondary concern, I am not happy with a TS that produces a consistent but arbitrary sequence full of unauthenticated/incorrectly registered entries.\r\nA TS that can arbitrarily elide the contents of policy-updating statements can trivially hide mis-behaviour, and claim to have been enforcing an older policy for example.\r\n\r\nAnyway, that's a long winded way to explain why I think it's important that the full sequence of entries/log is not completely written out and replaced by the VDS :)",
              "createdAt": "2025-02-26T13:07:49Z",
              "updatedAt": "2025-02-26T13:07:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dntD2",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:09:51Z",
          "updatedAt": "2025-02-26T13:09:51Z",
          "comments": [
            {
              "originalPosition": 204,
              "body": "I have tried once more, with \"sequence of Signed Statements\", which is the log in my mind but is hopefully a more widely acceptable term. Does that work?",
              "createdAt": "2025-02-26T13:09:51Z",
              "updatedAt": "2025-02-26T13:09:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnv6T",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:13:35Z",
          "updatedAt": "2025-02-26T13:13:35Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "@OR13 not necessarily an adjacent service, but the TS needs access in a form or another to the current applicable policy/trust anchors. We say that those are defined/updated through Signed Statements that are part of the log/total sequence, and so yes I think you need access to those. If your VDS is a Merkle Tree, that's not enough?\r\n\r\n@SteveLasker I am objecting to this change, because I don't think it's accurate. My VDS doesn't contain that information, neither does the CT VDS. My understanding of the MMR VDS is that it also doesn't. Perhaps I have this wrong though?",
              "createdAt": "2025-02-26T13:13:35Z",
              "updatedAt": "2025-02-26T13:13:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnxm7",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:15:53Z",
          "updatedAt": "2025-02-26T13:15:54Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "CCF records it in the CWT_Claims.iat of the Receipt, because it seemed like the right place for it. I think what we are saying is that the VDS inclusion is what matters (that's where the proofs come from), and how the sequence of Signed Statements/log is stored is the business of an Adjacent service and comparatively less important, so it's not obvious that it deserves its own timestamp?",
              "createdAt": "2025-02-26T13:15:53Z",
              "updatedAt": "2025-02-26T13:15:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnyAH",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:16:21Z",
          "updatedAt": "2025-02-26T13:16:21Z",
          "comments": [
            {
              "originalPosition": 254,
              "body": "```suggestion\r\nOnce a Signed Statement is committed to the Verifiable Data Structure maintained by a Transparency Service, it cannot be removed.\r\n```",
              "createdAt": "2025-02-26T13:16:21Z",
              "updatedAt": "2025-02-26T13:16:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dnzl6",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:18:30Z",
          "updatedAt": "2025-02-26T13:18:30Z",
          "comments": [
            {
              "originalPosition": 284,
              "body": "```suggestion\r\nThe second guarantee is achieved by committing the Signed Statement to a Verifiable Data Structure.\r\n```",
              "createdAt": "2025-02-26T13:18:30Z",
              "updatedAt": "2025-02-26T13:18:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dn0Bd",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:19:01Z",
          "updatedAt": "2025-02-26T13:19:01Z",
          "comments": [
            {
              "originalPosition": 285,
              "body": "That feels a bit redundant with the line above?",
              "createdAt": "2025-02-26T13:19:01Z",
              "updatedAt": "2025-02-26T13:19:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dn1YT",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:20:46Z",
          "updatedAt": "2025-02-26T13:20:46Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "```suggestion\r\nIn contrast, Transparency Services can be held accountable and blamed by an Auditor that replays the Sequence of Signed Statements captured in their Verifiable Data Structure to confirm that a contested Receipt is valid and was correctly registered.\r\n\r\nTransparency Services can provide consistency proofs allowing Auditors to check if a set of Receipts were issued from a single Verifiable Data Structure, without replaying individual Signed Statements.\r\n```\r\n\r\nI don't think it's possible to do a full replay with just the digests, a replay from Signed Statements is necessary. As in other comments, I am perhaps being insufficiently imaginative when thinking about the VDS (which is a Merkle Tree in my mind).\r\n\r\nEdited once more, @robinbryce is this better?",
              "createdAt": "2025-02-26T13:20:46Z",
              "updatedAt": "2025-02-28T13:24:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6doK5D",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:45:44Z",
          "updatedAt": "2025-02-26T13:45:44Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "> Anyway, that's a long winded way to explain why I think it's important that the full sequence of entries/log is not completely written out and replaced by the VDS :)\r\n\r\nMaybe this is a terminology thing. We took the view that \"append only\" must be verifiable and therefore the ability to prove this is intrinsic to the VDS. Having *both* append only and also a VDS is causing even more confusion because append only is just a property that is provable by the VDS (imo).\r\n\r\nWe also took the view that provability of position and sequence also must be verifiable and so required this of our VDS.\r\n\r\nMy perspective is that what we are discussing here as \"append only log\" is just a database. Its not \"append only\" in any verifiable sense on its own. Even if the database tech is some storage system that enforces append only on clients, this cant be proven without a suitable VDS.\r\n\r\nI think I'm back to the original intent of this pr which I believe was to first replace \"Append Only\" entirely with VDS and then take the issue of clarifying how the storage of statements during registration relates to the vds as a separate issue ?",
              "createdAt": "2025-02-26T13:45:44Z",
              "updatedAt": "2025-02-26T13:45:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6doPdN",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:50:42Z",
          "updatedAt": "2025-02-26T13:50:42Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "are we mixing up sequence of storage with sequence of registration ? I thought you were saying that provability of the sequence of registration was important ? \r\n\r\nBy \"sequence of registration\" I mean that all clients of the log see the same attested total ordering of statements. The realities of distributed systems mean there is no such thing as \"real\" order of course. Just that there is one commonly agreed record once things have settled.\r\n\r\nI'm belabouring this becuase if a total order is at all important or in scope, it needs to be attestable and that attestation needs to be verifiable (consistency proofs and non-equivocation)",
              "createdAt": "2025-02-26T13:50:42Z",
              "updatedAt": "2025-02-26T13:50:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6doSNw",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T13:53:34Z",
          "updatedAt": "2025-02-26T13:53:34Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "Yeah this one change I think captures my earlier point. A VDS proves append only, the storage can not do this. So it is reasonable to say \"the vds assures an append only log\", and maybe also shorthand that as \"referenced as an  Append-only log\"",
              "createdAt": "2025-02-26T13:53:34Z",
              "updatedAt": "2025-02-26T13:53:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6doY0W",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:00:53Z",
          "updatedAt": "2025-02-26T14:00:54Z",
          "comments": [
            {
              "originalPosition": 285,
              "body": "Remove or\r\n\r\n```suggestion\r\nThe third guarantee is achieved by the combination of both of these acts\r\n```",
              "createdAt": "2025-02-26T14:00:54Z",
              "updatedAt": "2025-02-26T14:00:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dohir",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:11:03Z",
          "updatedAt": "2025-02-26T14:11:03Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "@robinbryce this helps a lot, what I would like not to lose here is \"Log\" as in \"Sequence of Signed Statements\", I am happy to see \"Append-only\" go. It's not confusing to me (I think we implement a VDS to make it effectively Append-only, or more modestly \"tamper-evident\" as you say), but it's also not necessary so long as it's clarified elsewhere (which it is, quite a bit).\r\n\r\nI am hesitant to start discussing whether it is possible to ever \"prove\" that a log is \"append-only\" at all. I think the best thing you can prove is \"all these statements (I am seeing) are part of the same log\". It's definitely possible for a party to establish \"I have always seen a single history\", but whether that matches what's served to other parties require communication between them. Beyond consistency, there's also the question of whether the content was legitimately registered in the first place.\r\n\r\nDifferent mechanisms are more or less useful depending on the nature of the actors interacting with the TS, and the operations they are willing to perform. In the end though \"Append-only\" is an aspiration, there's never a positive proof that a forked history will never turn up somewhere. There can only be proof that there definitively were forked histories, and there can be an absence of that for a long time, which is a very good sign.\r\n\r\nCan we agree a term for \"Sequence of Signed Statements\" and use that where appropriate in conjunction with the VDS (\"Sequence/Log/Ordered collection of Signed Statements committed to the VDS\"?).",
              "createdAt": "2025-02-26T14:11:03Z",
              "updatedAt": "2025-02-26T14:11:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6doilC",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:12:03Z",
          "updatedAt": "2025-02-26T14:12:03Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "This is actually suggesting \"full audit\" of the log material is the only way to hold the TS to account. Its true that this can be done, i don't think its true that this is the only or best way to accomplish this. \r\n\r\n```suggestion\r\nIn contrast, Transparency Services can be held accountable, and they can be called by Auditors for any contested Receipt.\r\nAn Auditor in possession of a complete sequence of registered, signed statements can perform a full audit.\r\nAuditors who have verified the state of the log prior to the Receipts issuance, can use consistency proofs from that state to more efficiently resolve the dispute.\r\n```",
              "createdAt": "2025-02-26T14:12:03Z",
              "updatedAt": "2025-02-26T22:52:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6doqkU",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:20:46Z",
          "updatedAt": "2025-02-26T14:20:46Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "> Can we agree a term for \"Sequence of Signed Statements\" and use that where appropriate in conjunction with the VDS (\"Sequence/Log/Ordered collection of Signed Statements committed to the VDS\"?).\r\n\r\nYeah, I think that is the right angle here, no matter the position on provability.\r\n\r\nIdeally, I would delegate all notions of provability to the VDS, which is the merkle proofs draft and its profiles. But do we want to make a concious choice on what is *required* of the VDS in this document ? I believe the current position is that the VDS is minimally required to prove inclusion and MAY provide other proofs such as append only/consistency. I am fine with that. \r\n\r\n*But* the discusion of sequence and timestamps in this discussion makes be uneasy about precisely where the arch stands on provability of those things: MUST/SHOULD/MAY ?\r\n\r\n",
              "createdAt": "2025-02-26T14:20:46Z",
              "updatedAt": "2025-02-26T14:20:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dor-B",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:22:15Z",
          "updatedAt": "2025-02-26T14:22:15Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "I am definitely mixing them up because they are the same in my implementation, but you are right that they don't have to be!\r\n\r\n> By \"sequence of registration\" I mean that all clients of the log see the same attested total ordering of statements. The realities of distributed systems mean there is no such thing as \"real\" order of course. Just that there is one commonly agreed record once things have settled.\r\n\r\nAbsolutely.\r\n\r\n> it needs to be attestable and that attestation needs to be verifiable (consistency proofs and non-equivocation)\r\n\r\nOne could argue that correct execution of registration policies also needs to be verifiable, and therefore attested :) An inclusion proof from the VDS, in conjunction with access to the sequence of Signed Statements, is sufficient for a relying party to verify the order independently of the TS implementation. I hear what you are saying: consistency proofs are more efficient! They're not required though, and they don't help with correctness.",
              "createdAt": "2025-02-26T14:22:15Z",
              "updatedAt": "2025-02-26T14:22:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6do4w4",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:37:22Z",
          "updatedAt": "2025-02-26T14:37:23Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "I am a little confused, because it seems to me that Receipts with an inclusion proof _are_ a commitment to a specific position, and that it _is_ possible for an auditor to verify that against a VDS/Sequence of Signed Statements if desired.\r\nIt is also true that consistency proof are an excellent optimisation to achieve the same result across a set of inclusion proofs, in cases where only consistency is desired, as opposed to verifying both order and correct/legitimate inclusion.\r\n\r\nFor that reason, I don't think being more restrictive would change security guarantees here, I suspect it runs the risk of overfitting to a specific use case. Similarly, the draft mentions distributed consensus and trusted execution environments as examples, but nothing more.",
              "createdAt": "2025-02-26T14:37:22Z",
              "updatedAt": "2025-02-26T14:37:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dpNo9",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T14:58:54Z",
          "updatedAt": "2025-02-26T14:58:55Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "> I am a little confused, because it seems to me that Receipts with an inclusion proof _are_ a commitment to a specific position, and that it _is_ possible for an auditor to verify that against a VDS/Sequence of Signed Statements if desired. \r\n\r\nI don't think Receipts are required to commit the position in the current drafts. (Ours do though).\r\n\r\nI believe what Receipts commit is currently defined by CoMETER and it doesn't specify this, it just uses RFC 9162 as an *example* of a conforming registration. I believe it is silent on notions of sequence and timestamps. And yet both seem important to the arch.\r\n\r\nI also don't think Receipts are required to uniquely bind a signed statement to a location. It's entirely possible to register the same signed statement twice. At least in terms strictly of the proof material, both proofs would be verifiable and \"correct\", tho consumers may be confused and dispute the \"sequence\". \r\n\r\nAnd yes, a full audit shows the log is consistent with both receipts.\r\n\r\n> It is also true that consistency proof are an excellent optimisation\r\n\r\nOh sure, I'm fine with the implication that \"full audit\" is the basic guarantee of worst case work. \r\n\r\n",
              "createdAt": "2025-02-26T14:58:54Z",
              "updatedAt": "2025-02-26T15:02:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dpPaW",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T15:01:11Z",
          "updatedAt": "2025-02-26T15:01:11Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "to be super clear: if the answer here to my remark \"But the discusion of sequence and timestamps in this discussion makes be uneasy\" is \"lets leave well enough alone\" I am totally fine with this being the business of the VDS and the TS. I'm just surprised. ",
              "createdAt": "2025-02-26T15:01:11Z",
              "updatedAt": "2025-02-26T15:01:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dpbPb",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T15:14:12Z",
          "updatedAt": "2025-02-26T15:14:12Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "How about we just remove the parenthetical ?\r\n\r\n```suggestion\r\nTransparency Services MUST ensure that for any Signed Statement they register, enough information is made available to Auditors to reproduce the Registration checks that were defined by the Registration Policies at the time of Registration.\r\n```\r\n\r\n",
              "createdAt": "2025-02-26T15:14:12Z",
              "updatedAt": "2025-02-26T15:14:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dpg-l",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T15:19:46Z",
          "updatedAt": "2025-02-26T15:19:46Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "> I also don't think Receipts are required to uniquely bind a signed statement to a location. It's entirely possible to register the same signed statement twice.\r\n\r\nTrue, and while opinions differ, I think they are separate registration events, potentially under different registration policies, will have different signatures, and therefore be different Receipts arguably.\r\n\r\n> I don't think Receipts are required to commit the position in the current drafts. (Ours do though).\r\n\r\nIt's possible that there is a way to build a (secure) VDS/Inclusion VDP without including the position at all, but I don't know how it goes and I'd be curious to see it. You are right that CoMETER mentions RFC9162 as an example, and that does mention index-leaf in 5.2.\r\nI think the position is important to decide what trust anchors and what registration policies are applicable for a given registration.\r\n\r\nI am going to attempt a re-wording on the suggestion in the hope of landing somewhere that is compatible with our discussion :)",
              "createdAt": "2025-02-26T15:19:46Z",
              "updatedAt": "2025-02-26T15:19:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dpy4U",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T15:43:21Z",
          "updatedAt": "2025-02-26T15:43:22Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "@robinbryce I think removing that is even better. If @SteveLasker is happy with, let's apply it?",
              "createdAt": "2025-02-26T15:43:21Z",
              "updatedAt": "2025-02-26T15:43:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dp2uI",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T15:48:22Z",
          "updatedAt": "2025-02-26T15:48:22Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "Consistency proofs only work if what's disputed is consistency though, not correct registration checks. Should we separate the two kinds of audit?",
              "createdAt": "2025-02-26T15:48:22Z",
              "updatedAt": "2025-02-26T15:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dp5gP",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T15:52:12Z",
          "updatedAt": "2025-02-26T15:52:13Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "This may be easier said than done. A registration authority will need to perform a \"Legal Person\" check in some cases. How would this activity be \"replayed\"? ",
              "createdAt": "2025-02-26T15:52:12Z",
              "updatedAt": "2025-02-26T15:52:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dtm4H",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T21:25:59Z",
          "updatedAt": "2025-02-26T21:25:59Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "I'm committing Robin's change as I beleive it summarizes both suggestions. We can certainly revisit.",
              "createdAt": "2025-02-26T21:25:59Z",
              "updatedAt": "2025-02-26T21:25:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6duNwU",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T22:52:56Z",
          "updatedAt": "2025-02-26T22:52:56Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "@achamayou, are you ok to commit the above change, and tweak? Or, do you have an alternative suggestion that we can commit? ",
              "createdAt": "2025-02-26T22:52:56Z",
              "updatedAt": "2025-02-26T22:52:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6duOMM",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T22:54:20Z",
          "updatedAt": "2025-02-26T22:54:21Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "Leaving this open for discussion as I'm not hearing convergence to remove, or alter the line.",
              "createdAt": "2025-02-26T22:54:20Z",
              "updatedAt": "2025-02-26T22:54:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6dubO1",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-26T23:31:55Z",
          "updatedAt": "2025-02-26T23:31:55Z",
          "comments": [
            {
              "originalPosition": 204,
              "body": "Note: Without weighing in on the suggestion, I've updated the suggestion from TS --> Transparency Service.\r\n",
              "createdAt": "2025-02-26T23:31:55Z",
              "updatedAt": "2025-02-26T23:31:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d0-u6",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:12:52Z",
          "updatedAt": "2025-02-27T14:12:52Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "I am not ok with the second change, because it claims that consistency proofs are sufficient to resolve a dispute. This is not true, they cannot confirm whether registration was performed correctly, and although they can be used to detect forks, they cannot be used to decide which fork(s) contain malicious content. I have amended my proposed change to remove the mention of \"Append-only log\" and use the term \"Verifiable Data Structure\", in an effort to find common ground.",
              "createdAt": "2025-02-27T14:12:52Z",
              "updatedAt": "2025-02-27T14:12:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1FHu",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:20:29Z",
          "updatedAt": "2025-02-27T14:20:29Z",
          "comments": [
            {
              "originalPosition": 296,
              "body": "954 and 955 are meant to be combined. I can perform an audit of a range, and use consistency proofs to asure that the range starts from a known good state, and then subsequent to the range, the log remains consistent.\r\n\r\nI am not trying to undermine the checks available to the auditor. I am trying to ensure the auditor isn't forced to always do a full audit when the area of interest is bounded.",
              "createdAt": "2025-02-27T14:20:29Z",
              "updatedAt": "2025-02-27T14:20:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1XHz",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:41:28Z",
          "updatedAt": "2025-02-27T14:41:28Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "The definition would have to come from https://cose-wg.github.io/draft-ietf-cose-merkle-tree-proofs/draft-ietf-cose-merkle-tree-proofs.html, and bizarrely, despite a buch of mentions of Verifiable Data Proof starting in 1. Introduction, the Terminology defines VDP to be Verifiable Data Structure Parameters (!): https://cose-wg.github.io/draft-ietf-cose-merkle-tree-proofs/draft-ietf-cose-merkle-tree-proofs.html#name-terminology\r\n\r\nThat's the only place where it's expanded to that, it's expanded to Proof in every other usage in the document. Having said that, you are right that the usage of VDP is otherwise consistently for the proof material _without_ the signature, and so they are not aliases, instead a Receipt can embed one or more VDPs.",
              "createdAt": "2025-02-27T14:41:28Z",
              "updatedAt": "2025-02-27T14:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1Yzz",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:43:45Z",
          "updatedAt": "2025-02-27T14:43:45Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nA Receipt is a signature over one or more Verifiable Data Structure Proofs that an entry is registered in the Verifiable Data Structure.\r\nIt is universally verifiable without online access to the TS.\r\n```\r\n\r\nSplit for clarity?",
              "createdAt": "2025-02-27T14:43:45Z",
              "updatedAt": "2025-02-27T20:00:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1Zzh",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:45:01Z",
          "updatedAt": "2025-02-27T14:45:01Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I particularly like \"It is universally verifiable without online access to the TS\"",
              "createdAt": "2025-02-27T14:45:01Z",
              "updatedAt": "2025-02-27T14:45:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1aKc",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:45:29Z",
          "updatedAt": "2025-02-27T14:45:29Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "That has a stronger privacy posture than CT I think",
              "createdAt": "2025-02-27T14:45:29Z",
              "updatedAt": "2025-02-27T14:45:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1dun",
          "commit": {
            "abbreviatedOid": "2ede3a5"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T14:50:06Z",
          "updatedAt": "2025-02-27T14:50:06Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "agree. we already utilise the multiple proofs so its not just a theoritical thing. we found it actively useful",
              "createdAt": "2025-02-27T14:50:06Z",
              "updatedAt": "2025-02-27T14:50:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d1tjM",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T15:05:17Z",
          "updatedAt": "2025-02-27T15:05:18Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "Because I don't know what an \"append only log is\"... if it is a normative dependency, and it is not a VDS, what are its requirements beyond the requirements of a VDS?",
              "createdAt": "2025-02-27T15:05:18Z",
              "updatedAt": "2025-02-27T15:05:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d2Fdj",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T15:32:06Z",
          "updatedAt": "2025-02-27T15:32:06Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "A Receipt proves a signed statement has been registered with a TS, if and only if the signature checker trusts the key used by the TS to sign the receipt.",
              "createdAt": "2025-02-27T15:32:06Z",
              "updatedAt": "2025-02-27T15:32:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d4c8Z",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T19:11:59Z",
          "updatedAt": "2025-02-27T19:11:59Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "We really need to decide if we're going to define the Append-only Log/ Verifiable Data Structure as two distinct things.",
              "createdAt": "2025-02-27T19:11:59Z",
              "updatedAt": "2025-02-27T19:11:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d4gQm",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T19:15:59Z",
          "updatedAt": "2025-02-27T19:15:59Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "Calling @robinbryce for \u2b06\ufe0f ",
              "createdAt": "2025-02-27T19:15:59Z",
              "updatedAt": "2025-02-27T19:15:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d4lpn",
          "commit": {
            "abbreviatedOid": "0a09271"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T19:24:00Z",
          "updatedAt": "2025-02-27T19:24:00Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "@SteveLasker does \"Verifiable Data Structure\" mean it contains immutable data? \r\nIf so, it's not obvious to me.",
              "createdAt": "2025-02-27T19:24:00Z",
              "updatedAt": "2025-02-27T19:24:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d4-Ht",
          "commit": {
            "abbreviatedOid": "a3ee63b"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-27T20:00:38Z",
          "updatedAt": "2025-02-27T20:00:38Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I'm committing the suggestion, we can review in totality.",
              "createdAt": "2025-02-27T20:00:38Z",
              "updatedAt": "2025-02-27T20:00:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_Cik",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:01:11Z",
          "updatedAt": "2025-02-28T12:01:13Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nRegistered Sequence of Signed Statements:\r\n\r\nA sequence of Signed Statements submitted by Clients that meet applicable registration policies and are captured by a Verifiable Data Structure.\r\n```\r\n\r\nProposal for a term to designate the sequence of signed statements committed to the VDS, as opposed to the VDS itself, and hopefully move away from the controversial \"Append-only Log\". It's useful to have a term for this, when discussing audit.\r\n",
              "createdAt": "2025-02-28T12:01:12Z",
              "updatedAt": "2025-02-28T12:01:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_PTZ",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:23:43Z",
          "updatedAt": "2025-02-28T12:23:43Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "The MMR does not contain that information. My objection is to the implication that the TS must be responsible for making the information available to auditors. This is inherently centralizing and makes verifiabilty depend on the continued good operations of the TS.\r\n\r\nA requirement that the TS must *define* how the information is available to auditors is fine by me. Its a one line change to make that work I think.\r\n\r\nI beleive the move to replace \"append only log\" as a term with a \"Registered Sequence of Signed Statements\" helps a lot here - see https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/351/files#r1975294713",
              "createdAt": "2025-02-28T12:23:43Z",
              "updatedAt": "2025-02-28T12:24:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_jbQ",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:57:43Z",
          "updatedAt": "2025-02-28T12:57:44Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "My preference would be to drop the line, and clearly distinguish the \"Register Sequence of Signed Statements\" (*) and the \"VDS\" elsewhere too. (*) I am not hung up on the particularly name, but something that describes the Signed Statements themselves in the order in which they are committed to the VDS.",
              "createdAt": "2025-02-28T12:57:44Z",
              "updatedAt": "2025-02-28T12:57:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_kqd",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T12:59:56Z",
          "updatedAt": "2025-02-28T12:59:56Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "There's a logical sequence of statements, which is not a normative dependency but is important when discussing audit. I think we can keep this line that way though.",
              "createdAt": "2025-02-28T12:59:56Z",
              "updatedAt": "2025-02-28T12:59:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_lCV",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:00:39Z",
          "updatedAt": "2025-02-28T13:00:39Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "```suggestion\r\nImplementations of Transparency Services may protect their Registered Sequence of Signed Statements and Verifiable Data Structure using a combination of trusted hardware, consensus protocols, and cryptographic evidence.\r\n```",
              "createdAt": "2025-02-28T13:00:39Z",
              "updatedAt": "2025-02-28T13:00:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_lM8",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:00:58Z",
          "updatedAt": "2025-02-28T13:00:59Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "```suggestion\r\nA Receipt is a signature over one or more Verifiable Data Structure Proofs that a Signed Statement is registered in the Verifiable Data Structure.\r\n```",
              "createdAt": "2025-02-28T13:00:58Z",
              "updatedAt": "2025-02-28T13:00:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_l3a",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:02:19Z",
          "updatedAt": "2025-02-28T13:02:19Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "```suggestion\r\n  - or replay all the Transparent Statements to check for the consistency and correctness of the Transparency Service's Verifiable Data Structure (e.g. auditing)\r\n```",
              "createdAt": "2025-02-28T13:02:19Z",
              "updatedAt": "2025-02-28T13:02:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_mcF",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:03:23Z",
          "updatedAt": "2025-02-28T13:03:23Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "I'm ok with \"\"Registered Sequence of Signed Statements\"\"\r\n\r\nThis does not dictate implementation expectations the way that logs do.",
              "createdAt": "2025-02-28T13:03:23Z",
              "updatedAt": "2025-02-28T13:03:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_mwt",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:04:01Z",
          "updatedAt": "2025-02-28T13:04:01Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "> A requirement that the TS must define how the information is available to auditors is fine by me. Its a one line change to make that work I think.\r\n\r\nAgreed!",
              "createdAt": "2025-02-28T13:04:01Z",
              "updatedAt": "2025-02-28T13:04:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_nka",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:05:34Z",
          "updatedAt": "2025-02-28T13:05:34Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Not sure what to do about @OR13's comment, but I would like to drop this particular suggestion.",
              "createdAt": "2025-02-28T13:05:34Z",
              "updatedAt": "2025-02-28T13:05:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_nrJ",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:05:42Z",
          "updatedAt": "2025-02-28T13:05:42Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "+1",
              "createdAt": "2025-02-28T13:05:42Z",
              "updatedAt": "2025-02-28T13:05:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_n0R",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:05:53Z",
          "updatedAt": "2025-02-28T13:05:53Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "Agreed",
              "createdAt": "2025-02-28T13:05:53Z",
              "updatedAt": "2025-02-28T13:05:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_obK",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:07:03Z",
          "updatedAt": "2025-02-28T13:07:04Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "Following discussion, I agree this change is not helpful.",
              "createdAt": "2025-02-28T13:07:03Z",
              "updatedAt": "2025-02-28T13:07:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_o9W",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:08:08Z",
          "updatedAt": "2025-02-28T13:08:08Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Maybe just stop at \"Register the Signed Statement\"?\r\n\r\nAs Orie says above, the production of a receipt necessarily involves the use of one of the VDS options provided for in COSE Receipts, so removing words reduces redundancy, reduces opportunities for conflicts between references, and enables COSE Receipts to evolve usefully and independently.",
              "createdAt": "2025-02-28T13:08:08Z",
              "updatedAt": "2025-02-28T13:08:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_pvF",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "rjb4standards",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:09:39Z",
          "updatedAt": "2025-02-28T13:09:39Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "+1 Maybe just stop at \"Register the Signed Statement\"",
              "createdAt": "2025-02-28T13:09:39Z",
              "updatedAt": "2025-02-28T13:09:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6d_y9H",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T13:26:59Z",
          "updatedAt": "2025-02-28T13:27:00Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "```suggestion\r\n```\r\n\r\nI was going to do edit this sentence, but I think it's actually almost information-free, and so I propose we drop it.",
              "createdAt": "2025-02-28T13:27:00Z",
              "updatedAt": "2025-02-28T13:27:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eAmvb",
          "commit": {
            "abbreviatedOid": "cdc4d80"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T14:45:17Z",
          "updatedAt": "2025-02-28T14:45:17Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Amended the amendment accordingly.",
              "createdAt": "2025-02-28T14:45:17Z",
              "updatedAt": "2025-02-28T14:45:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eBlar",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:20:42Z",
          "updatedAt": "2025-02-28T16:20:42Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Append-only VDS?",
              "createdAt": "2025-02-28T16:20:42Z",
              "updatedAt": "2025-02-28T16:20:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eBo4E",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:26:46Z",
          "updatedAt": "2025-02-28T16:26:46Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Resolving, with Issue #352 ",
              "createdAt": "2025-02-28T16:26:46Z",
              "updatedAt": "2025-02-28T16:26:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eBqBD",
          "commit": {
            "abbreviatedOid": "0138d47"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:28:43Z",
          "updatedAt": "2025-02-28T16:28:44Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "deferring to #352 ",
              "createdAt": "2025-02-28T16:28:43Z",
              "updatedAt": "2025-02-28T16:28:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eBwVi",
          "commit": {
            "abbreviatedOid": "9bcc12f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:39:05Z",
          "updatedAt": "2025-02-28T16:39:05Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "Deferring to #348 ",
              "createdAt": "2025-02-28T16:39:05Z",
              "updatedAt": "2025-02-28T16:39:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eByXo",
          "commit": {
            "abbreviatedOid": "eaccceb"
          },
          "author": "aj-stein",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:42:42Z",
          "updatedAt": "2025-02-28T16:42:46Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "If we are deleting the references to Merkle trees, which are likely foundational, and we will start talking about VDS, should we not explain where that notion comes from? It is built up in IETF specs and standards, but we do mean to cite the origin of the idea?\r\n\r\n```suggestion\r\n VDS: https://github.com/google/trillian/blob/master/docs/papers/VerifiableDataStructures.pdf\r\n```\r\nThat said, I am not attached to this change and think this path is not constructive for the I-D.",
              "createdAt": "2025-02-28T16:42:42Z",
              "updatedAt": "2025-02-28T16:42:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eB0ed",
          "commit": {
            "abbreviatedOid": "d4f9e71"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T16:46:02Z",
          "updatedAt": "2025-02-28T16:46:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eB01b",
          "commit": {
            "abbreviatedOid": "d4f9e71"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-02-28T16:46:43Z",
          "updatedAt": "2025-02-28T16:46:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eB1Cw",
          "commit": {
            "abbreviatedOid": "d4f9e71"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T16:47:07Z",
          "updatedAt": "2025-02-28T16:47:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eB1sV",
          "commit": {
            "abbreviatedOid": "eaccceb"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:48:16Z",
          "updatedAt": "2025-02-28T16:48:16Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "@aj-stein  We just saw this. Can you please open a new PR?",
              "createdAt": "2025-02-28T16:48:16Z",
              "updatedAt": "2025-02-28T16:48:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eB1-s",
          "commit": {
            "abbreviatedOid": "eaccceb"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-28T16:48:48Z",
          "updatedAt": "2025-02-28T16:48:48Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "vds is defined in cose receipts",
              "createdAt": "2025-02-28T16:48:48Z",
              "updatedAt": "2025-02-28T16:48:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 353,
      "id": "PR_kwDOIvmHss6NBcSz",
      "title": "re 351 retain the link to the macro concept of append only log",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/353",
      "state": "MERGED",
      "author": "robinbryce",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The introduction of \"Statement Sequence \" is intended to make it clear that Auditors can verify an entire series of statements \"in whole\", thus verifying \"append only\", without regard to how the transparent statements were made available for checking.\r\n\r\nNote: I had not previosly spotted the requirement in Verifiable Data Structure that the VDS beable to prove the append only property if used for a scitt TS. Because of this, I would support droping Append-only in all other places *except* that one. And could live without \"Statement Sequence \". That said, I believe for systems concerned with provenance, the story told by an ordered collection of statements, is important and useful",
      "createdAt": "2025-03-01T07:49:34Z",
      "updatedAt": "2025-03-03T18:03:49Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "4172484fc6ed2aa10de263da9c8f718601acbb87",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "robin/351-append-only-or-vds",
      "headRefOid": "4dc69cd79678a33a017899977808f47d297c8cff",
      "closedAt": "2025-03-03T18:03:48Z",
      "mergedAt": "2025-03-03T18:03:48Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "f5388c0e741d00dbca1b2410c05c029bdab19e88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIvmHss6eF7vx",
          "commit": {
            "abbreviatedOid": "ac2bc7f"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-01T08:53:46Z",
          "updatedAt": "2025-03-01T08:53:47Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nTo make the append-only property verifiable and transparent, the Transparency Service defines how Signed Statements are made available to Auditors.\r\n```\r\n\r\nFeels a bit clearer to me, but happy to follow native speaker advice here :)",
              "createdAt": "2025-03-01T08:53:46Z",
              "updatedAt": "2025-03-01T08:53:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eF77i",
          "commit": {
            "abbreviatedOid": "ac2bc7f"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "@robinbryce thank you, this is a really good clarification that role of the VDS is to implement the Append-only property over the Statement Sequence.\r\n\r\nStatement Sequence has the benefit of being only two words too :)",
          "createdAt": "2025-03-01T08:58:31Z",
          "updatedAt": "2025-03-01T08:58:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eGETH",
          "commit": {
            "abbreviatedOid": "ac2bc7f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-01T11:09:43Z",
          "updatedAt": "2025-03-01T11:09:43Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Ah, yes your change is better",
              "createdAt": "2025-03-01T11:09:43Z",
              "updatedAt": "2025-03-01T11:09:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eGsDW",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Good clarifications, LGTM",
          "createdAt": "2025-03-01T18:11:02Z",
          "updatedAt": "2025-03-01T18:11:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eGszd",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM\r\nGreat cleanup, thanks @robinbryce, @achamayou ",
          "createdAt": "2025-03-01T18:29:01Z",
          "updatedAt": "2025-03-01T18:29:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eN8rk",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T15:21:44Z",
          "updatedAt": "2025-03-03T15:21:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eN_Gp",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:25:23Z",
          "updatedAt": "2025-03-03T15:25:23Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\n: A property required for a verifiable data structure to be applicable to SCITT, ensuring the Statement Sequence cannot be modified, deleted or reordered.\r\n```",
              "createdAt": "2025-03-03T15:25:23Z",
              "updatedAt": "2025-03-03T17:22:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eN_Y4",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:25:48Z",
          "updatedAt": "2025-03-03T15:25:48Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "consider moving this definition above \"Append-Only Log\" ",
              "createdAt": "2025-03-03T15:25:48Z",
              "updatedAt": "2025-03-03T15:25:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOBpj",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:28:55Z",
          "updatedAt": "2025-03-03T15:28:56Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nHowever, the unprotected header of a Signed Statement MUST be set to an empty map, before the Signed Statement can be included in a Statement Sequence.\r\n```",
              "createdAt": "2025-03-03T15:28:55Z",
              "updatedAt": "2025-03-03T17:26:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOB8i",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:29:21Z",
          "updatedAt": "2025-03-03T15:29:22Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-03-03T15:29:22Z",
              "updatedAt": "2025-03-03T15:29:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOCEO",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:29:31Z",
          "updatedAt": "2025-03-03T15:29:32Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Duplicate?",
              "createdAt": "2025-03-03T15:29:32Z",
              "updatedAt": "2025-03-03T15:29:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOC5g",
          "commit": {
            "abbreviatedOid": "85814ac"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:30:44Z",
          "updatedAt": "2025-03-03T15:30:44Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "ah yeah, but also, I was replacing \"included\" with committed elsewhere. In the context of a Statement Sequence though, I am fine with included",
              "createdAt": "2025-03-03T15:30:44Z",
              "updatedAt": "2025-03-03T15:30:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOD9k",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:32:20Z",
          "updatedAt": "2025-03-03T15:32:21Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nTransparency Services can leverage Verifiable Data Structures which only retain cryptographic metadata (e.g. a hash), rather than the complete Signed Statement, as part of a defense in depth approach to maintaining confidentiality.\r\n```",
              "createdAt": "2025-03-03T15:32:21Z",
              "updatedAt": "2025-03-03T15:36:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOEMG",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:32:41Z",
          "updatedAt": "2025-03-03T15:32:41Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "No reason for MAY, but I'm not attached to this change",
              "createdAt": "2025-03-03T15:32:41Z",
              "updatedAt": "2025-03-03T15:32:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOE2H",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "achamayou",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:33:42Z",
          "updatedAt": "2025-03-03T15:33:42Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "@OR13 \"Transparency Services\" then?",
              "createdAt": "2025-03-03T15:33:42Z",
              "updatedAt": "2025-03-03T15:33:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOGId",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:35:41Z",
          "updatedAt": "2025-03-03T15:35:42Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nCertain Verifiable Data Structures enable a Transparency Service to prove properties of it's Statement Sequence.\r\nFor example, proving a specific signed statement is included in the sequence, or that the sequence has only been extended (append only property) since the last time such a proof was created.\r\n```",
              "createdAt": "2025-03-03T15:35:42Z",
              "updatedAt": "2025-03-03T15:35:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOGS4",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:35:55Z",
          "updatedAt": "2025-03-03T15:35:55Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "happy for that to be committed",
              "createdAt": "2025-03-03T15:35:55Z",
              "updatedAt": "2025-03-03T15:35:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6eOG9w",
          "commit": {
            "abbreviatedOid": "88405dc"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Overall an improvement, I mostly have nits.",
          "createdAt": "2025-03-03T15:36:57Z",
          "updatedAt": "2025-03-03T15:36:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIvmHss6eOHkE",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "robinbryce",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T15:37:53Z",
          "updatedAt": "2025-03-03T15:37:54Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I am fine with, and like, this change",
              "createdAt": "2025-03-03T15:37:54Z",
              "updatedAt": "2025-03-03T15:37:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ePKll",
          "commit": {
            "abbreviatedOid": "2e32e8f"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T17:23:28Z",
          "updatedAt": "2025-03-03T17:23:28Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Note: I've tweaked a bit to add \"...be modified...\"",
              "createdAt": "2025-03-03T17:23:28Z",
              "updatedAt": "2025-03-03T17:23:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ePOEE",
          "commit": {
            "abbreviatedOid": "61d1ad8"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T17:29:53Z",
          "updatedAt": "2025-03-03T17:29:54Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nTo make the Append-only property verifiable and transparent, the Transparency Service defines how Signed Statements are made available to Auditors.\r\n```",
              "createdAt": "2025-03-03T17:29:54Z",
              "updatedAt": "2025-03-03T17:29:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIvmHss6ePOwD",
          "commit": {
            "abbreviatedOid": "7e7e84d"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T17:31:06Z",
          "updatedAt": "2025-03-03T17:31:07Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\n: a property required for a verifiable data structure to be applicable to SCITT, ensuring that the Statement Sequence cannot be modified, deleted or reordered.\r\n```",
              "createdAt": "2025-03-03T17:31:06Z",
              "updatedAt": "2025-03-03T17:31:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 354,
      "id": "PR_kwDOIvmHss6NMTHe",
      "title": "nit formatting & grammar",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/354",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T18:29:46Z",
      "updatedAt": "2025-03-03T18:30:00Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "baseRefName": "main",
      "baseRefOid": "f5388c0e741d00dbca1b2410c05c029bdab19e88",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-architecture",
      "headRefName": "steve/draft11-cleanup",
      "headRefOid": "c0f3ddc69922d7ad27551bcb893c9ce189ae9e32",
      "closedAt": "2025-03-03T18:29:53Z",
      "mergedAt": "2025-03-03T18:29:53Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "4ad18b4a86b4741b569989ebca94bc815dbd6055"
      },
      "comments": [],
      "reviews": []
    }
  ]
}